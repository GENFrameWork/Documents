<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__postgre_s_q_l___query_8cpp_source" xml:lang="en-US">
<title>PostgreSQL_Query.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Databases/SQL/PostgreSQL/PostgreSQL_Query.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00001"/>00001 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00031"/>00031 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00033"/>00033 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00035"/>00035 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00036"/>00036 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#if&#32;defined(DB_SQL_ACTIVE)&#32;&amp;&amp;&#32;defined(DB_POSTGRESQL_ACTIVE)</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00038"/>00038 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00039"/>00039 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00042"/>00042 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__postgre_s_q_l___query_8h">PostgreSQL_Query.h</link>&quot;</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00044"/>00044 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00046"/>00046 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__postgre_s_q_l___database_8h">PostgreSQL_Database.h</link>&quot;</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__postgre_s_q_l___result_8h">PostgreSQL_Result.h</link>&quot;</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__postgre_s_q_l___connection_8h">PostgreSQL_Connection.h</link>&quot;</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00050"/>00050 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00052"/>00052 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00054"/>00054 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00055"/>00055 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00058"/>00058 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00059"/>00059 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00060"/>00060 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00061"/>00061 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00062"/>00062 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00063"/>00063 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00064"/>00064 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00065"/>00065 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00066"/>00066 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00076"/>00076 POSTGRESQL_QUERY::POSTGRESQL_QUERY(<link linkend="_class_d_b___s_q_l___d_a_t_a_b_a_s_e">DB_SQL_DATABASE</link>*&#32;database):&#32;<link linkend="_class_d_b___s_q_l___q_u_e_r_y">DB_SQL_QUERY</link>(database)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00077"/>00077 {
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00078"/>00078 &#32;&#32;Clean();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00079"/>00079 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00080"/>00080 &#32;&#32;conn&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_p_o_s_t_g_r_e_s_q_l___c_o_n_n_e_c_t_i_o_n">POSTGRESQL_CONNECTION</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_p_o_s_t_g_r_e_s_q_l___d_a_t_a_b_a_s_e">POSTGRESQL_DATABASE</link>*<emphasis role="keyword">&gt;</emphasis>(database)-&gt;connection)-&gt;connection;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00081"/>00081 }
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00082"/>00082 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00083"/>00083 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00092"/>00092 POSTGRESQL_QUERY::~POSTGRESQL_QUERY()
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00093"/>00093 {
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00094"/>00094 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(result)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(result);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00099"/>00099 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00100"/>00100 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(paramformats)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;paramformats;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;paramformats&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00105"/>00105 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00106"/>00106 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(paramvalues)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;paramvalues;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;paramvalues&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00111"/>00111 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00112"/>00112 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(paramlengths)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;paramlengths;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;paramlengths&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00117"/>00117 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00118"/>00118 &#32;&#32;ClearBuffers();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00119"/>00119 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00120"/>00120 &#32;&#32;UnbindAll();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00121"/>00121 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00122"/>00122 &#32;&#32;Clean();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00123"/>00123 }
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00124"/>00124 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00125"/>00125 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00135"/>00135 <emphasis role="keywordtype">bool</emphasis>&#32;POSTGRESQL_QUERY::Execute()
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00136"/>00136 {
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!database)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00138"/>00138 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!database-&gt;Lock())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00139"/>00139 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00140"/>00140 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;statement</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00141"/>00141 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00142"/>00142 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size&#32;=&#32;value.GetSize();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>*&#32;error&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>(DB_SQL_ERROR_TYPE_STATEMENT_ERROR);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!error)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00147"/>00147 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;error-&gt;description.Set(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;void&#32;statement&quot;</emphasis>));
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;database-&gt;GetErrorList()-&gt;Add(error);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00150"/>00150 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(database-&gt;IsTransactionStarted())&#32;&#32;database-&gt;Rollback();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00152"/>00152 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;value.FindCharacter(<link linkend="__x_string_8h_1ab483f167129a5d1941ea1d30f3df8d8a">__C</link>(<emphasis role="charliteral">&apos;*&apos;</emphasis>))&#32;&#32;&#32;&#32;&#32;!=&#32;&#32;<link linkend="__x_base_8h_1ad96490cc68537c8d1797ed2a62489836">NOTFOUND</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value.Find(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;COUNT(*)&quot;</emphasis>),<emphasis role="keyword">true</emphasis>)&#32;&#32;==&#32;&#32;<link linkend="__x_string_8h_1aee1ccda748b3ca0a483afb84276e3fc6">XSTRING_NOTFOUND</link>)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DB_SQL_STRING&#32;error;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;ClearPreviousErrors();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error.Set(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;Wildcard&#32;*&#32;is&#32;discouraged&#32;and&#32;therefore&#32;disabled&#32;in&#32;this&#32;implementation&quot;</emphasis>));
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;Error(error.Get());
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00164"/>00164 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00167"/>00167 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;DB_SQL_STRING&#32;cursordeclare;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;DB_SQL_STRING&#32;query;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;success&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00171"/>00171 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(database-&gt;IsTransactionStarted()&#32;&amp;&amp;&#32;hascursor&#32;&amp;&amp;&#32;cursorname.GetSize())
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursordeclare.Format(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;DECLARE&#32;%s&#32;CURSOR&#32;FOR&#32;&quot;</emphasis>),&#32;cursorname.Get());
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00176"/>00176 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;query.Add(cursordeclare);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;query.Add(value);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00179"/>00179 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;querystringbuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!querystringbuffer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00182"/>00182 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;query.ConvertToUTF8(*querystringbuffer&#32;);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;buffers.Add(querystringbuffer&#32;&#32;);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00185"/>00185 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!BindParametersToQuery())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00187"/>00187 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;PGresult*&#32;res&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;nparams&#32;=&#32;statementbindings.GetSize();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00190"/>00190 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;PQexecParams(conn,(<emphasis role="keywordtype">char</emphasis>*)querystringbuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),nparams,<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,paramvalues,<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,1);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;ExecStatusType&#32;exec=PQresultStatus(res);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00193"/>00193 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((exec&#32;!=&#32;PGRES_COMMAND_OK)&#32;&amp;&amp;&#32;(exec&#32;!=&#32;PGRES_TUPLES_OK))
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;ClearPreviousErrors();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;Error(PQerrorMessage(conn));
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;success&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00200"/>00200 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Clear&#32;previous&#32;statement</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00202"/>00202 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;UnbindAll();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00204"/>00204 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(result)&#32;<emphasis role="keyword">delete</emphasis>(result);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00206"/>00206 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00208"/>00208 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Has&#32;tuples?</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00210"/>00210 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;&#32;&#32;cmdstatus&#32;=&#32;PQcmdStatus(res);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;statementtype;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00213"/>00213 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;statementtype.<link linkend="_group___x_u_t_i_l_s_1ga4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(cmdstatus);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00215"/>00215 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prepare&#32;result</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(statementtype.<link linkend="_group___x_u_t_i_l_s_1gaa5d59b7b88102beb4def8fe054449653">Find</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;select&quot;</emphasis>),&#32;<emphasis role="keyword">true</emphasis>)&#32;!=&#32;<link linkend="__x_base_8h_1ad96490cc68537c8d1797ed2a62489836">NOTFOUND</link>)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(result)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(result);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00224"/>00224 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!result)&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Prepare&#32;resultset</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;ConstructResult();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00228"/>00228 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!result)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>*&#32;error&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>(DB_SQL_ERROR_TYPE_MEMORY_ERROR);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!error)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00233"/>00233 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error-&gt;description.Set(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;not&#32;enought&#32;memory&#32;for&#32;result&quot;</emphasis>));
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;GetErrorList()-&gt;Add(error);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00236"/>00236 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(database-&gt;IsTransactionStarted())&#32;database-&gt;Rollback();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00238"/>00238 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ClearBuffers();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;Unlock();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PQclear(res);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00242"/>00242 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00246"/>00246 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_class_p_o_s_t_g_r_e_s_q_l___r_e_s_u_l_t">POSTGRESQL_RESULT</link>*<emphasis role="keyword">&gt;</emphasis>(result)-&gt;resultset&#32;=&#32;res;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(result)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(result);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00256"/>00256 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PQclear(res);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00259"/>00259 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(paramvalues)&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(paramvalues);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(paramlengths)&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(paramlengths);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(paramformats)&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(paramformats);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00263"/>00263 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;ClearBuffers();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00265"/>00265 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;database-&gt;Unlock();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00267"/>00267 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;success;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00270"/>00270 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00271"/>00271 &#32;&#32;database-&gt;Unlock();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00272"/>00272 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00273"/>00273 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00274"/>00274 }
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00275"/>00275 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00276"/>00276 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00286"/>00286 <emphasis role="keywordtype">bool</emphasis>&#32;POSTGRESQL_QUERY::ClearCursor()
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00287"/>00287 {
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00288"/>00288 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;success&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00289"/>00289 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00290"/>00290 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(hascursor&#32;&amp;&amp;&#32;cursorname.GetSize()&gt;0)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;DB_SQL_STRING&#32;close;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;close.Format(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;CLOSE&#32;%s&quot;</emphasis>),this-&gt;cursorname.Get());
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00294"/>00294 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;oem;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;close.ConvertToASCII(oem);&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;PGresult*&#32;res&#32;=&#32;PQexec(conn,&#32;oem.<link linkend="_group___x_u_t_i_l_s_1ga66e2dbd897e717ce38e395d6ad87b754">GetPtrChar</link>());
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(PQresultStatus(res)&#32;!=&#32;PGRES_COMMAND_OK)&#32;success=<emphasis role="keyword">false</emphasis>;&#32;<emphasis role="keywordflow">else</emphasis>&#32;success=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;PQclear(res);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00302"/>00302 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00303"/>00303 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;success;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00304"/>00304 };
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00305"/>00305 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00306"/>00306 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00316"/>00316 <link linkend="_class_d_b___s_q_l___r_e_s_u_l_t">DB_SQL_RESULT</link>*&#32;POSTGRESQL_QUERY::ConstructResult()
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00317"/>00317 {
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00318"/>00318 &#32;&#32;<link linkend="_class_p_o_s_t_g_r_e_s_q_l___r_e_s_u_l_t">POSTGRESQL_RESULT</link>*&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_p_o_s_t_g_r_e_s_q_l___r_e_s_u_l_t">POSTGRESQL_RESULT</link>();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00319"/>00319 &#32;&#32;result-&gt;query&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00320"/>00320 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00321"/>00321 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00322"/>00322 }
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00323"/>00323 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00324"/>00324 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00334"/>00334 <emphasis role="keywordtype">bool</emphasis>&#32;POSTGRESQL_QUERY::BindParametersToQuery()
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00335"/>00335 {
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00336"/>00336 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;nparams&#32;=&#32;value.CountCharacter(<link linkend="__x_string_8h_1ab483f167129a5d1941ea1d30f3df8d8a">__C</link>(<emphasis role="charliteral">&apos;$&apos;</emphasis>));
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00337"/>00337 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00338"/>00338 &#32;&#32;paramvalues&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00339"/>00339 &#32;&#32;paramlengths&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00340"/>00340 &#32;&#32;paramformats&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00341"/>00341 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00342"/>00342 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(nparams&#32;&gt;&#32;0)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;paramvalues=(<emphasis role="keywordtype">char</emphasis>**)<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*[nparams];
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!paramvalues)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>*&#32;error&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>(DB_SQL_ERROR_TYPE_MEMORY_ERROR);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!error)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00349"/>00349 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error-&gt;description.Set(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;not&#32;enought&#32;memory&#32;for&#32;statements&quot;</emphasis>));
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;GetErrorList()-&gt;Add(error);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00352"/>00352 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(database-&gt;IsTransactionStarted())&#32;&#32;database-&gt;Rollback();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00354"/>00354 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00357"/>00357 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-----------</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00359"/>00359 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;paramlengths&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[nparams];
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!paramlengths)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>*&#32;error=<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>(DB_SQL_ERROR_TYPE_MEMORY_ERROR);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!error)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00365"/>00365 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error-&gt;description.Set(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;not&#32;enought&#32;memory&#32;for&#32;statements&quot;</emphasis>));
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;GetErrorList()-&gt;Add(error);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00368"/>00368 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(database-&gt;IsTransactionStarted())&#32;&#32;database-&gt;Rollback();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00370"/>00370 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(paramvalues);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00372"/>00372 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00375"/>00375 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//-----------</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00377"/>00377 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;paramformats&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[nparams];
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!paramformats)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>*&#32;error&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>(DB_SQL_ERROR_TYPE_MEMORY_ERROR);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!error)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00383"/>00383 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error-&gt;description.Set(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;not&#32;enought&#32;memory&#32;for&#32;statements&quot;</emphasis>));
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;GetErrorList()-&gt;Add(error);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00386"/>00386 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(database-&gt;IsTransactionStarted())&#32;database-&gt;Rollback();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00388"/>00388 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(paramvalues);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(paramlengths);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00391"/>00391 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00394"/>00394 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//------------</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00396"/>00396 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;e=0;(e&lt;nparams)&#32;&amp;&amp;&#32;(e&lt;this-&gt;statementbindings.GetSize());e++)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;bindstr;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!statementbindings.Get(e)-&gt;ToString(bindstr))
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>*&#32;error&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_b___s_q_l___e_r_r_o_r">DB_SQL_ERROR</link>(DB_SQL_ERROR_TYPE_UNKNOWN);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!error)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00404"/>00404 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error-&gt;description.Set(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;unknown&#32;type&#32;for&#32;binding&quot;</emphasis>));
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;GetErrorList()-&gt;Add(error);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00407"/>00407 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(database-&gt;IsTransactionStarted())
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;database-&gt;Rollback();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00412"/>00412 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;buf&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(buf)
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bindstr.<link linkend="_group___x_u_t_i_l_s_1ga13b691e56cfd5c48184c2ae6cf607914">ConvertToUTF8</link>(*buf);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00417"/>00417 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paramvalues&#32;[e]&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>*)buf-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>();
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00419"/>00419 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffers.Add(buf);
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;}
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00424"/>00424 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00425"/>00425 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00426"/>00426 }
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00427"/>00427 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00428"/>00428 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00438"/>00438 <emphasis role="keywordtype">bool</emphasis>&#32;POSTGRESQL_QUERY::BindParametersToResult()
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00439"/>00439 {
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00440"/>00440 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00441"/>00441 }
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00442"/>00442 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00443"/>00443 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00452"/>00452 <emphasis role="keywordtype">void</emphasis>&#32;POSTGRESQL_QUERY::Clean()
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00453"/>00453 {
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00454"/>00454 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00455"/>00455 }
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00456"/>00456 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00457"/>00457 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00458"/>00458 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00459"/>00459 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00460"/>00460 
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00461"/>00461 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__postgre_s_q_l___query_8cpp_source_1l00462"/>00462 
</programlisting></section>
