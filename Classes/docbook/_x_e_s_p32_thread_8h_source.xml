<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_e_s_p32_thread_8h_source" xml:lang="en-US">
<title>XESP32Thread.h</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/ESP32/XESP32Thread.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_e_s_p32_thread_8h_source_1l00001"/>00001 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00029"/>00029 <emphasis role="preprocessor">#ifndef&#32;_XESP32THREAD_H_</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00030"/>00030 <emphasis role="preprocessor">#define&#32;_XESP32THREAD_H_</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00031"/>00031 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00032"/>00032 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00033"/>00033 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00034"/>00034 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00035"/>00035 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_thread_8h">XThread.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00036"/>00036 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00037"/>00037 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00038"/>00038 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00039"/>00039 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;DEFINES&#32;&amp;&#32;ENUMS&#32;&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00041"/>00041 <emphasis role="preprocessor">#pragma&#32;region&#32;DEFINES_ENUMS</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00042"/>00042 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00043"/>00043 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00044"/>00044 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00045"/>00045 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00046"/>00046 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00047"/>00047 <emphasis role="comment">/*----&#32;CLASS&#32;---------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00048"/>00048 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00049"/>00049 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00050"/><link linkend="_class_x_e_s_p32_m_u_t_e_x">00050</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_x_e_s_p32_m_u_t_e_x">XESP32MUTEX</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_x_m_u_t_e_x">XMUTEX</link>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00051"/>00051 {
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00052"/>00052 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00053"/>00053 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1gabc91f1c195616a0852f7aaef17c82818">XESP32MUTEX</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1ga4f8bbd9667c2e6580dfe91c20c80cc7a">~XESP32MUTEX</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00056"/>00056 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1ga1d18947602a5dda1a5e5c8207e2dafd2">Lock</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1ga76ed39b887ac103387eae54689820266">UnLock</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00059"/>00059 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00060"/>00060 &#32;&#32;<emphasis role="keyword">protected</emphasis>:
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00061"/>00061 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1ga81675a8133a755f8af9200876094db3a">Clean</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00063"/>00063 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00064"/><link linkend="_class_x_e_s_p32_m_u_t_e_x_1a9b665812190779f715c901997aac6940">00064</link> &#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_e_s_p32_m_u_t_e_x_1a9b665812190779f715c901997aac6940">counterlock</link>;
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00065"/>00065 };
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00066"/>00066 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00067"/>00067 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00068"/><link linkend="_class_x_e_s_p32_t_h_r_e_a_d">00068</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_x_e_s_p32_t_h_r_e_a_d">XESP32THREAD</link>&#32;&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_x_t_h_r_e_a_d">XTHREAD</link>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00069"/>00069 {
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00070"/>00070 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1ga4eaef44f180663d34787cac810971447">XESP32THREAD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6">XTHREADGROUPID</link>&#32;<link linkend="_class_x_t_h_r_e_a_d_1ad1f193fdbd75b09b37899a1e55c64807">groupID</link>,&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;<link linkend="_class_x_t_h_r_e_a_d_1a104828763e0e4d0664d4ad9d2d0716d0">ID</link>,<link linkend="__x_thread_8h_1a75cd5e654ca0f2255ae2473172af98d6">XTHREADFUNCTION</link>&#32;<link linkend="_class_x_t_h_r_e_a_d_1a0a65973669b74163b380696c5fd41bae">function</link>&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,<emphasis role="keywordtype">void</emphasis>*&#32;data&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1gaf669a96608e4e9a712e0ece63e6dcd58">~XESP32THREAD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00073"/>00073 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1ga8fb0e89f6c6f02d00e0784938e9b96db">Ini</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">bool</emphasis>&#32;run&#32;=&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1gaa6b710313e9d21e76109da2331a0d6c0">Wait</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keywordtype">int</emphasis>&#32;miliseconds&#32;=&#32;<link linkend="__x_thread_8h_1abc7512ca71aa3c705da3806b4f6672bc">XTHREAD_DEFAULTWAITYIELD</link>);
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1ga0fcb59e400e5f1296860ff2aa5c71138">End</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00077"/>00077 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00078"/>00078 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00079"/>00079 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00080"/>00080 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Clean&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00082"/>00082 };
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00083"/>00083 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00084"/>00084 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00085"/>00085 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00086"/>00086 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00087"/>00087 <emphasis role="comment">/*----&#32;INLINE&#32;FUNCTIONS&#32;+&#32;PROTOTYPES&#32;---------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00088"/>00088 <emphasis role="preprocessor">#pragma&#32;region&#32;FUNCTIONS_PROTOTYPES</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00089"/>00089 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00090"/>00090 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00091"/>00091 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00092"/>00092 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00093"/>00093 
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00094"/>00094 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__x_e_s_p32_thread_8h_source_1l00095"/>00095 
</programlisting></section>
