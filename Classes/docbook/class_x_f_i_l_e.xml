<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_x_f_i_l_e" xml:lang="en-US">
<title>XFILE Class Reference</title>
<indexterm><primary>XFILE</primary></indexterm>
<para>

<para>eXtended Utils File class </para>
 
</para>
<para>
<computeroutput>#include &lt;XFile.h&gt;</computeroutput>
</para>
Inheritance diagram for XFILE:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for XFILE:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_group___x_u_t_i_l_s_1ga086dd80403c58325ba07c65ce60bff66">XFILE</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>virtual <link linkend="_group___x_u_t_i_l_s_1gaab153dc678350f8783a2355e6cd9be84">~XFILE</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a84a131f05e84da14df618acbee4d343c">Exist</link> (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *xpath)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a43349ac3160e391c95164fe83825fdfc">Open</link> (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *xpath, bool <link linkend="_class_x_f_i_l_e_1af1e2ddc3f6f199069a38df4ca60cc69c">isreadonly</link>=true)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a6a208808c185e4a7f6cad154f99cca41">Create</link> (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *xpath)=0</para>
</listitem>
            <listitem><para><link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> <link linkend="_group___x_u_t_i_l_s_1ga3d5b9c0020c23ffb0ded5aeb105a6fb1">GetSize</link> ()</para>

<para>GetSize. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a539e026a8e249e3b128b4bfd76621855">SetSize</link> (<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> size)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1ad8b82877267eec8cc024ae02b7c7eef8">GetPosition</link> (<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> &amp;position)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link> (<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> position)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> *buffer, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> size, <link linkend="_class_c_i_p_h_e_r">CIPHER</link> *cipher=<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a8084352d535b5fa9fccfef1e918960b9">Read</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> *buffer, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> *size, <link linkend="_class_c_i_p_h_e_r">CIPHER</link> *cipher=<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a11b53fb5e02808927df9d01236e84eb9">Write</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> *buffer, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> size, <link linkend="_class_c_i_p_h_e_r">CIPHER</link> *cipher=<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)=0</para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1gaf3b50d4b2ed2a2acf824ca9cf88fef69">Write</link> (<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link> &amp;xbuffer)</para>

<para>Write. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a58ca14cb4349b5cdadcff7145ef6a6e9">Flush</link> ()=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_group___x_u_t_i_l_s_1gaf7d78f174cb8eeb52cafe94524d3885b">Close</link> ()</para>

<para>Close. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a64cf1645b151126221d35654520b97fb">Erase</link> (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *xpath, bool overwrite=false)=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a24332ab821d9f5059e0812374b8cb08d">Rename</link> (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *xpathold, <link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *xpathnew)=0</para>
</listitem>
            <listitem><para>virtual FILE * <link linkend="_class_x_f_i_l_e_1a4953b004d4fc8fc838133ece9996f600">CreateStructHandle</link> ()=0</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a1feba33f46f930b7e8b7c1dc44199a3a">DeleteStructHandle</link> ()=0</para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1ga73b54d3273f500b6e410ea3ed3ca4cdf">Exist</link> (<link linkend="_class_x_p_a_t_h">XPATH</link> &amp;xpath)</para>

<para>Exist. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1ga35d48f1586906b38fbfa0f0e30caea14">Open</link> (<link linkend="_class_x_p_a_t_h">XPATH</link> &amp;xpath, bool readonly=true)</para>

<para>Open. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1gae30a70b983e255d47b32c8958c432eb3">Create</link> (<link linkend="_class_x_p_a_t_h">XPATH</link> &amp;xpath)</para>

<para>Create. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1ga35c851bd17e3c348ce230d423336514c">Erase</link> (<link linkend="_class_x_p_a_t_h">XPATH</link> &amp;xpath, bool overwrite=false)</para>

<para>Erase. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1gab2f5948b79a0acca0bf092c73d5e8499">Rename</link> (<link linkend="_class_x_p_a_t_h">XPATH</link> &amp;xpathold, <link linkend="_class_x_p_a_t_h">XPATH</link> &amp;xpathnew)</para>

<para>Rename. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1ga8d9732c7c26b964ca0bcbaee46f2f68e">Rename</link> (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *xpathold, <link linkend="_class_x_p_a_t_h">XPATH</link> &amp;xpathnew)</para>

<para>Rename. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1ga8e8edea0cb08e0fbae5c0ad2ec80f0d9">Rename</link> (<link linkend="_class_x_p_a_t_h">XPATH</link> &amp;xpathold, <link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *xpathnew)</para>

<para>Rename. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1ga20d1c37c3a66f2b5044c340293cbf8ec">IsOpen</link> ()</para>

<para>IsOpen. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1ga8169be7d36ee00805b383cbd3161f6dc">IsReadOnly</link> ()</para>

<para>IsReadOnly. </para>
</listitem>
            <listitem><para><link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> * <link linkend="_group___x_u_t_i_l_s_1gadac33fb0441fd782299db33437c74a44">GetPathNameFile</link> ()</para>

<para>GetPathNameFile. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1gabf1a38966c4b778b24044d20c734d06b">EraseBlock</link> (<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> size)</para>

<para>EraseBlock. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1ga21331fbdc6cc4f9ab217fb96d446d38d">InsertBlock</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> *buffer, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> size)</para>

<para>InsertBlock. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_group___x_u_t_i_l_s_1gac090c23b9ee2b5bb05900637e7411a5d">ChangeAttributes</link> (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *attributes)</para>

<para>ChangeAttributes. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual bool <link linkend="_class_x_f_i_l_e_1a821a36aaa7ffcb05d6455cbdbffcb91f">ActualizeSize</link> ()=0</para>
</listitem>
            <listitem><para>bool <link linkend="_group___x_u_t_i_l_s_1ga8e86902115c96bb3404de5c2f8506984">OverwriteContent</link> (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> *xpath)</para>

<para>OverwriteContent. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_x_f_i_l_e_1a25a6f73c50fb4b848fc725688e3ff977">isopen</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_x_f_i_l_e_1af1e2ddc3f6f199069a38df4ca60cc69c">isreadonly</link></para>
</listitem>
            <listitem><para><link linkend="_class_x_p_a_t_h">XPATH</link> <link linkend="_class_x_f_i_l_e_1a294add2df94973ab032c4b42c00ccc0b">xpathnamefile</link></para>
</listitem>
            <listitem><para><link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> <link linkend="_class_x_f_i_l_e_1a308f8e8f12d4d365550068b2049687d5">cachesize</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>eXtended Utils File class </para>



<para><formalpara><title>Copyright</title>

<para>GEN Group. All rights reserved. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__x_file_8h_source_1l00086">86</link> of file <link linkend="__x_file_8h_source">XFile.h</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_x_f_i_l_e_1a821a36aaa7ffcb05d6455cbdbffcb91f"/><section>
    <title>ActualizeSize()</title>
<indexterm><primary>ActualizeSize</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>ActualizeSize</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::ActualizeSize ( )<computeroutput>[protected]</computeroutput>, <computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga4f58ddda2684a5e6d1af94580eddcc85">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1gaa6dbe492bf46cadf680f771f0ec978ff">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga8461e08f9456aefe2b355cfd4638b3f4">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga18bf0d5d458e4816ff996eff1ccf32a8">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga56df3e748cc8c4e92a926efabda730ff">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga14745a0bcc7ac08fd0c535f515f6cae1">XWINDOWSFILEBORLAND</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_a821a36aaa7ffcb05d6455cbdbffcb91f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a6a208808c185e4a7f6cad154f99cca41"/><section>
    <title>Create()</title>
<indexterm><primary>Create</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>Create</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::Create (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> * xpath)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga4c7bf373396f9787a38ecf5f7328deee">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga5b21bd46dddb31a0c29386607baa4401">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga8df1ac8f52a9082b6b40c98af5f2cb64">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga35108a164630bd8389cb4f5766863dec">XWINDOWSFILEBORLAND</link>, <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gabb0ad8392068bc4204a6f8448040e2be">XLINUXFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gabe1463612d715c6d2e7288a8aa52aaa5">XWINDOWSFILE</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_a6a208808c185e4a7f6cad154f99cca41_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a4953b004d4fc8fc838133ece9996f600"/><section>
    <title>CreateStructHandle()</title>
<indexterm><primary>CreateStructHandle</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>CreateStructHandle</secondary></indexterm>
<para><computeroutput>virtual FILE * XFILE::CreateStructHandle ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga084d86ce3ebf84180218f1dc91a597f3">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1ga75f9cb139064a69a14df423ae14f2622">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga671cb52dc09360133472b06466e95c69">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gaeb9ad0dd014995d750f460e99d6f6078">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gadacb1a1cb1b855ef08db7d56b62c5d8c">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga29b34ea06c5aaac109a2c55a0c7290cc">XWINDOWSFILEBORLAND</link>.</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a1feba33f46f930b7e8b7c1dc44199a3a"/><section>
    <title>DeleteStructHandle()</title>
<indexterm><primary>DeleteStructHandle</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>DeleteStructHandle</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::DeleteStructHandle ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga7135ced10f61875f4ffc86983e0f4b8c">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___e_s_p32_1gad9a3300d27d9bccf191cc7a1f5c95031">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga08547cf38cb1dbe1b961237024cd7d51">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gac84bc1b1e27b41d6821e7162f0efc3eb">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga86695b1ca17297c83c2fe0b11c392acb">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga54bf9fc171cbbeecebc9cbfaf764dc01">XWINDOWSFILEBORLAND</link>.</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a64cf1645b151126221d35654520b97fb"/><section>
    <title>Erase()</title>
<indexterm><primary>Erase</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>Erase</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::Erase (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> * xpath, bool overwrite = <computeroutput>false</computeroutput>
)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gac247ca0dd69aba6a003fa6d16a259eda">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gad1e8162425c4b840e12b46c70917f278">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga0614e149ea9d5be6c04d04fecb7a2f3d">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga1abdd361d6d3cdf1c44923bcea96332c">XWINDOWSFILEBORLAND</link>, <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga102aaa3a465ad2bcaee2171b0c10b141">XLINUXFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga13068395169204d1a20353b7c6caf864">XWINDOWSFILE</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_a64cf1645b151126221d35654520b97fb_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a84a131f05e84da14df618acbee4d343c"/><section>
    <title>Exist()</title>
<indexterm><primary>Exist</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>Exist</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::Exist (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> * xpath)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gadc106e46d3b8cd50c9feb8a346ae999e">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gad2f62bce78dd81a81030f71c84c39240">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga5cf19cc1ab1c75d0f8234b504f8539ae">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gaa9c74e0f5e5cb9f0c38a5d7fa1ad5307">XWINDOWSFILEBORLAND</link>, <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga8dc6a0b7bb2e1a2319ca5c76d7ca4ff4">XLINUXFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gac4e6f1e36fbd86451ef92cc7b0d97481">XWINDOWSFILE</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_a84a131f05e84da14df618acbee4d343c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a58ca14cb4349b5cdadcff7145ef6a6e9"/><section>
    <title>Flush()</title>
<indexterm><primary>Flush</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>Flush</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::Flush ( )<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gabd2887093f9c961e2ad08f99a1acb731">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gae5b17648db09d141e205120fe3737e8d">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga042db5bf166b71a4f101d9752439f840">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga64d5546a556c144c46328e8a1d3b63c4">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga7375532c9720320cac5d87353293d219">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gac286e2fc7c0e20d91066964b8c37b4ee">XWINDOWSFILEBORLAND</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_a58ca14cb4349b5cdadcff7145ef6a6e9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1ad8b82877267eec8cc024ae02b7c7eef8"/><section>
    <title>GetPosition()</title>
<indexterm><primary>GetPosition</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>GetPosition</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::GetPosition (<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> &amp; position)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga534165cee803145308bf32fa7c792136">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gac82e0ce652910149bbfe66d97555f7d2">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gaa815aa39e57d748ae93db0ae8556a177">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga43cf8c03afed0f33dc77673498768015">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gab9598c62bced17df059c1f555767dcba">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gadaa97b9145fb5dcbf1ce5f43984b57ce">XWINDOWSFILEBORLAND</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_ad8b82877267eec8cc024ae02b7c7eef8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a43349ac3160e391c95164fe83825fdfc"/><section>
    <title>Open()</title>
<indexterm><primary>Open</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>Open</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::Open (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> * xpath, bool isreadonly = <computeroutput>true</computeroutput>
)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga67a9adb9bf1515dac35a7b2e4b06591b">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga34e707282ca2332a5c8d52829d722955">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga932626e18f1f1d4a5aeefcb598d0fce7">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gabaecce53a782b5d91d321cb834da81d0">XWINDOWSFILEBORLAND</link>, <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gae21c7364acc1f91efd7126ad090208d5">XLINUXFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga34f20284eb79a54a4629acd2a19ffd29">XWINDOWSFILE</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_a43349ac3160e391c95164fe83825fdfc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a8084352d535b5fa9fccfef1e918960b9"/><section>
    <title>Read()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>Read</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::Read (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> * buffer, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> * size, <link linkend="_class_c_i_p_h_e_r">CIPHER</link> * cipher = <computeroutput><link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link></computeroutput>
)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga92398f44ea41d7c2706e63682fa0a7c5">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga4958d3d7b66663c66b52e8ee1a8ff1bf">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga030e9be633fd81be876fe27b2011de09">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga6136052ce67d6130d3757222617b9daf">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga4cbf2275241784344b2a4c1d3339cc7c">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga3e89378356dd98efcc713c52b3753777">XWINDOWSFILEBORLAND</link>.</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a"/><section>
    <title>Read()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Read</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>Read</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::Read (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> * buffer, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> size, <link linkend="_class_c_i_p_h_e_r">CIPHER</link> * cipher = <computeroutput><link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link></computeroutput>
)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga60258b70456df1ac680ae2f29ade3283">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gafdad02d67d2691e4a8c682047cf30185">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gade9a4531298dab229775a0e1a68f7401">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga8c7f4202e453f95153c4874e03cb0237">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga2650f5f7ae6ab4bfef37438f04760276">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gabf20dc77a23e64938a59693f24d27f9f">XWINDOWSFILEBORLAND</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_ae316e4ea22c9f1fb9a2965f21d0dac4a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a24332ab821d9f5059e0812374b8cb08d"/><section>
    <title>Rename()</title>
<indexterm><primary>Rename</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>Rename</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::Rename (<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> * xpathold, <link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link> * xpathnew)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga17f5061e851db9f17e81e0c8f680acd5">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga96eb3317e825349d309579e2daaa76bd">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gae3bd37eca85089b8ffe6ad5e09831486">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gac26d250ee633402e70146a53617cb7f7">XWINDOWSFILEBORLAND</link>, <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga87ae45f697b7a429ea7ef2ac992a7aa0">XLINUXFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga75f3bc2554fb48d84af6366cdfa4a0be">XWINDOWSFILE</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_a24332ab821d9f5059e0812374b8cb08d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd"/><section>
    <title>SetPosition()</title>
<indexterm><primary>SetPosition</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>SetPosition</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::SetPosition (<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> position)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga49136efa8315856d837dede1cc0fd968">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gac49beb1be74b5a90472026126ef35ab8">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gae7642ac7ff527c9573d911147a74bc48">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gab1bf535c03b52c364d854f17022af04a">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga39c1c30737a3e33474e2552d38d57e1b">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga710205bd0d8265d158c532dc10194b4d">XWINDOWSFILEBORLAND</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_aa1eb97dcf7209887546fc32d69db5dcd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a539e026a8e249e3b128b4bfd76621855"/><section>
    <title>SetSize()</title>
<indexterm><primary>SetSize</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>SetSize</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::SetSize (<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> size)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga5811c48808577eaf3c157b163f06354a">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gae79d965410704a6d3db8535acd16f4b4">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga362a80b50668eb3c66c31439d3d3251d">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gaf0d43d14f78c073944a2286a3142366a">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gae8e7f51feb2007cecbfe700eb6d37764">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gac4750f775d30e8fea7a4f2f26d8a6c16">XWINDOWSFILEBORLAND</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_a539e026a8e249e3b128b4bfd76621855_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a11b53fb5e02808927df9d01236e84eb9"/><section>
    <title>Write()</title>
<indexterm><primary>Write</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>virtual bool XFILE::Write (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> * buffer, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> size, <link linkend="_class_c_i_p_h_e_r">CIPHER</link> * cipher = <computeroutput><link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link></computeroutput>
)<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga5211e8a4ba1eff228fbcb28742d2f67b">XLINUXFILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1gaf39d5f1ef1ce76501fb0e5f3755b58c5">XESP32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga1e226894d1195a2aeba846bf3cd9933a">XSTM32FILE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga7af128e60fe83b0a51b980b66ee6519d">XSTM32FILE_NOTUNICODE</link>, <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga1f418433b42f52e7c992f7de26fc6f31">XWINDOWSFILE</link>, and <link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga8b20a5148e16b547752da749e6e46e37">XWINDOWSFILEBORLAND</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_x_f_i_l_e_a11b53fb5e02808927df9d01236e84eb9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_x_f_i_l_e_1a308f8e8f12d4d365550068b2049687d5"/><section>
    <title>cachesize</title>
<indexterm><primary>cachesize</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>cachesize</secondary></indexterm>
<para><computeroutput><link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link> XFILE::cachesize<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__x_file_8h_source_1l00146">146</link> of file <link linkend="__x_file_8h_source">XFile.h</link>.</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a25a6f73c50fb4b848fc725688e3ff977"/><section>
    <title>isopen</title>
<indexterm><primary>isopen</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>isopen</secondary></indexterm>
<para><computeroutput>bool XFILE::isopen<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__x_file_8h_source_1l00143">143</link> of file <link linkend="__x_file_8h_source">XFile.h</link>.</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1af1e2ddc3f6f199069a38df4ca60cc69c"/><section>
    <title>isreadonly</title>
<indexterm><primary>isreadonly</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>isreadonly</secondary></indexterm>
<para><computeroutput>bool XFILE::isreadonly<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__x_file_8h_source_1l00144">144</link> of file <link linkend="__x_file_8h_source">XFile.h</link>.</para>
</section>
<anchor xml:id="_class_x_f_i_l_e_1a294add2df94973ab032c4b42c00ccc0b"/><section>
    <title>xpathnamefile</title>
<indexterm><primary>xpathnamefile</primary><secondary>XFILE</secondary></indexterm>
<indexterm><primary>XFILE</primary><secondary>xpathnamefile</secondary></indexterm>
<para><computeroutput><link linkend="_class_x_p_a_t_h">XPATH</link> XFILE::xpathnamefile<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__x_file_8h_source_1l00145">145</link> of file <link linkend="__x_file_8h_source">XFile.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
D:/Projects/GENFrameWork/GEN/XUtils/XFiles/<link linkend="__x_file_8h">XFile.h</link>D:/Projects/GENFrameWork/GEN/XUtils/XFiles/<link linkend="__x_file_8cpp">XFile.cpp</link></section>
</section>
