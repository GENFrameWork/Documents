<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source" xml:lang="en-US">
<title>GRPBitmapFileJPG.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Graphic/Files/Bitmap/GRPBitmapFileJPG.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00001"/>00001 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00031"/>00031 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00033"/>00033 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00035"/>00035 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00036"/>00036 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00039"/>00039 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_file_j_p_g_8h">GRPBitmapFileJPG.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00041"/>00041 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_factory_8h">GRPFactory.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_8h">GRPBitmap.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00044"/>00044 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00046"/>00046 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00048"/>00048 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00049"/>00049 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00050"/>00050 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00052"/>00052 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00054"/>00054 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00055"/>00055 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00058"/>00058 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00059"/>00059 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00071"/><link linkend="__g_r_p_bitmap_file_j_p_g_8cpp_1a74b252bf1fd6bc3e8ef25c62b53b54ae">00071</link> <link linkend="__g_r_p_bitmap_file_j_p_g_8cpp_1a74b252bf1fd6bc3e8ef25c62b53b54ae">METHODDEF</link>(<emphasis role="keywordtype">void</emphasis>)&#32;GRPBITMAPFILEJPG_ErrorExit(j_common_ptr&#32;info)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00072"/>00072 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00073"/>00073 &#32;&#32;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g___e_r_r_o_r">GRPBITMAPFILEJPG_ERROR_PTR</link>&#32;myerr&#32;=&#32;(<link linkend="__g_r_p_bitmap_file_j_p_g_8h_1a00f0fe202e5752e741c6f7849840c37b">GRPBITMAPFILEJPG_ERROR_PTR</link>)&#32;info-&gt;err;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00074"/>00074 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00075"/>00075 &#32;&#32;(*info-&gt;err-&gt;output_message)(info);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00076"/>00076 &#32;&#32;longjmp(myerr-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g___e_r_r_o_r_1a94b8e1664b6c29f9be3c4228c66f1707">setjmp_buffer</link>,&#32;1);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00077"/>00077 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00078"/>00078 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00079"/>00079 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00080"/>00080 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_GRPBITMAPFILEJPG</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00081"/>00081 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00082"/>00082 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00090"/><link linkend="_group___g_r_a_p_h_i_c_1gac728ef66cd7a3cd3a3f0556473c97eb6">00090</link> <link linkend="_group___g_r_a_p_h_i_c_1gac728ef66cd7a3cd3a3f0556473c97eb6">GRPBITMAPFILEJPG::GRPBITMAPFILEJPG</link>():&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e">GRPBITMAPFILEBASE</link>()
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00091"/>00091 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00092"/>00092 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00093"/>00093 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00094"/>00094 &#32;&#32;memset(&amp;cinfo,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keyword">struct</emphasis>&#32;jpeg_compress_struct));
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00095"/>00095 &#32;&#32;memset(&amp;dinfo,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keyword">struct</emphasis>&#32;jpeg_decompress_struct));
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00096"/>00096 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00097"/>00097 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00098"/>00098 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00107"/><link linkend="_group___g_r_a_p_h_i_c_1gac8c6c836bafd964a80feb8e4ceee44cc">00107</link> <link linkend="_group___g_r_a_p_h_i_c_1gac8c6c836bafd964a80feb8e4ceee44cc">GRPBITMAPFILEJPG::~GRPBITMAPFILEJPG</link>()
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00108"/>00108 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00109"/>00109 &#32;&#32;memset(&amp;cinfo,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keyword">struct</emphasis>&#32;jpeg_compress_struct));
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00110"/>00110 &#32;&#32;memset(&amp;dinfo,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keyword">struct</emphasis>&#32;jpeg_decompress_struct));
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00111"/>00111 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00112"/>00112 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00113"/>00113 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00114"/>00114 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00115"/>00115 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00128"/><link linkend="_group___g_r_a_p_h_i_c_1ga69ed2b332c61759dafedaf177b03c2ff">00128</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga69ed2b332c61759dafedaf177b03c2ff">GRPBITMAPFILEJPG::CreateBitmapFromFile</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;forcemode)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00129"/>00129 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00130"/>00130 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___g_r_a_p_h_i_c_1ga2326531c9eef704c3960c7f44ccae526">Open</link>(xpath))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00131"/>00131 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00132"/>00132 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r">GRPBITMAPFILEJPGHEADER</link>&#32;&#32;header;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00133"/>00133 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00134"/>00134 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00135"/>00135 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00136"/>00136 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ReadHeaderFile(&amp;header))
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00141"/>00141 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00142"/>00142 &#32;&#32;bitmap&#32;=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1ga460b48b220289471646b4fe476c87006">CreateBitmap</link>(header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ad6401fdeafabc8677c9901384006f1da">width</link>,&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ae548a41cebd0e338e5c03e7f6657ca47">height</link>,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;databuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1af0360c595c534fe0eb540c5edb8b9997">size</link>];
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(databuffer)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(DecodeToBufferFromFile(databuffer))
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00151"/>00151 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;y&#32;=&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ae548a41cebd0e338e5c03e7f6657ca47">height</link>&#32;-&#32;1;&#32;y&#32;&gt;&#32;-1;&#32;y--)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ad6401fdeafabc8677c9901384006f1da">width</link>;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>&#32;color(databuffer[index&#32;+&#32;0],
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00157"/>00157 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index&#32;+&#32;1],
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index&#32;+&#32;2],&#32;255);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00160"/>00160 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00162"/>00162 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;+=&#32;3;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00166"/>00166 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00168"/>00168 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00170"/>00170 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00172"/>00172 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00174"/>00174 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00175"/>00175 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1gae006b37b5ec00c1066c02f4741dda631">DeleteBitmap</link>(bitmap);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00183"/>00183 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00184"/>00184 &#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00185"/>00185 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00186"/>00186 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf085dd454ff8f5c9dc35f3433b0a871b">ForceModeOfBitmap</link>(forcemode,&#32;bitmap);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00187"/>00187 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00188"/>00188 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00189"/>00189 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00203"/><link linkend="_group___g_r_a_p_h_i_c_1ga814cb4a4c7c058ac75d4c2e39710c952">00203</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga814cb4a4c7c058ac75d4c2e39710c952">GRPBITMAPFILEJPG::CreateBitmapFromBuffer</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;forcemode)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00204"/>00204 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00205"/>00205 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r">GRPBITMAPFILEJPGHEADER</link>&#32;&#32;header;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00206"/>00206 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00207"/>00207 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00208"/>00208 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00209"/>00209 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ReadHeaderBuffer(buffer,&#32;size,&#32;&amp;header))
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00214"/>00214 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00215"/>00215 &#32;&#32;bitmap&#32;=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1ga460b48b220289471646b4fe476c87006">CreateBitmap</link>(header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ad6401fdeafabc8677c9901384006f1da">width</link>,&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ae548a41cebd0e338e5c03e7f6657ca47">height</link>,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00216"/>00216 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;databuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1af0360c595c534fe0eb540c5edb8b9997">size</link>];
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(databuffer)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(DecodeToBufferFromRawBuffer(buffer,&#32;size,&#32;databuffer))
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00224"/>00224 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;y&#32;=&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ae548a41cebd0e338e5c03e7f6657ca47">height</link>&#32;-&#32;1;&#32;y&#32;&gt;&#32;-1;&#32;y--)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ad6401fdeafabc8677c9901384006f1da">width</link>;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>&#32;color(databuffer[index&#32;+&#32;0],
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index&#32;+&#32;1],
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index&#32;+&#32;2],&#32;255);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00232"/>00232 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00234"/>00234 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;+=&#32;3;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00238"/>00238 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00240"/>00240 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00242"/>00242 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00244"/>00244 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00246"/>00246 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00247"/>00247 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1gae006b37b5ec00c1066c02f4741dda631">DeleteBitmap</link>(bitmap);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00255"/>00255 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00256"/>00256 &#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00257"/>00257 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00258"/>00258 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf085dd454ff8f5c9dc35f3433b0a871b">ForceModeOfBitmap</link>(forcemode,&#32;bitmap);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00259"/>00259 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00260"/>00260 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00261"/>00261 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00275"/><link linkend="_group___g_r_a_p_h_i_c_1ga69f06ed45e121f11c0c8c7cb21a3c236">00275</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga69f06ed45e121f11c0c8c7cb21a3c236">GRPBITMAPFILEJPG::CreateFileFromBitmap</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00276"/>00276 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00277"/>00277 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!bitmap)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00281"/>00281 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00282"/>00282 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___g_r_a_p_h_i_c_1gadbc41519652512b18c6c31dd0351e464">Create</link>(xpath))&#32;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00286"/>00286 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00287"/>00287 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;size&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga5cc313280bd36df2306a440639752388">GetWidth</link>()&#32;*&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>()&#32;*&#32;3;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00288"/>00288 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00289"/>00289 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00290"/>00290 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;databuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[size];
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00291"/>00291 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(databuffer)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00294"/>00294 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=(<emphasis role="keywordtype">int</emphasis>)(bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>()-1);&#32;y&gt;-1;&#32;y--)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;(int)bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga5cc313280bd36df2306a440639752388">GetWidth</link>();&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*&#32;color&#32;=&#32;(<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*)bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a63495c593c0238080f4ec81b859d4555">GetPixel</link>(x,&#32;y);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00300"/>00300 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index&#32;+&#32;0]&#32;=&#32;color-&gt;r;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index&#32;+&#32;1]&#32;=&#32;color-&gt;g;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index&#32;+&#32;2]&#32;=&#32;color-&gt;b;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00304"/>00304 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index+=3;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00308"/>00308 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00310"/>00310 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00311"/>00311 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;EncodeToFile(bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga5cc313280bd36df2306a440639752388">GetWidth</link>(),&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>(),&#32;&#32;databuffer,&#32;quality,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00315"/>00315 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00316"/>00316 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00317"/>00317 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00318"/>00318 &#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00319"/>00319 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00320"/>00320 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00321"/>00321 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00322"/>00322 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00323"/>00323 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00335"/>00335 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILEJPG::ReadHeaderFile(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r">GRPBITMAPFILEJPGHEADER</link>*&#32;header)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00336"/>00336 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00337"/>00337 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!header)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00338"/>00338 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00339"/>00339 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g___e_r_r_o_r">GRPBITMAPFILEJPG_ERROR</link>&#32;jerr;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00340"/>00340 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00341"/>00341 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00342"/>00342 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00343"/>00343 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00344"/>00344 &#32;&#32;dinfo.err&#32;=&#32;jpeg_std_error(&amp;jerr.pub);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00345"/>00345 &#32;&#32;jerr.pub.error_exit&#32;=&#32;GRPBITMAPFILEJPG_ErrorExit;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00346"/>00346 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00347"/>00347 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(setjmp(jerr.setjmp_buffer))
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;jpeg_destroy_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00353"/>00353 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00354"/>00354 &#32;&#32;jpeg_create_decompress(&amp;dinfo);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;we&#32;can&#32;initialize&#32;the&#32;JPEG&#32;decompression&#32;object.</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00355"/>00355 <emphasis role="comment">//jpeg_stdio_src(&amp;dinfo,&#32;GetPrimaryFile()-&gt;GetFileStructHandle());&#32;&#32;&#32;&#32;//&#32;Step&#32;2:&#32;specify&#32;data&#32;source&#32;(eg,&#32;a&#32;file)&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00356"/>00356 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00357"/>00357 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00358"/>00358 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;file_size&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga3d5b9c0020c23ffb0ded5aeb105a6fb1">GetSize</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00359"/>00359 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;file_buffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)file_size];
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00360"/>00360 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00361"/>00361 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00362"/>00362 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(file_buffer,&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)file_size);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00363"/>00363 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00364"/>00364 &#32;&#32;jpeg_mem_src(&amp;dinfo,&#32;file_buffer,&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)file_size);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00365"/>00365 &#32;&#32;jpeg_read_header(&amp;dinfo,&#32;<link linkend="__x_s_t_m32___h_a_l_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00366"/>00366 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00367"/>00367 &#32;&#32;header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ad6401fdeafabc8677c9901384006f1da">width</link>&#32;&#32;=&#32;dinfo.image_width;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00368"/>00368 &#32;&#32;header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ae548a41cebd0e338e5c03e7f6657ca47">height</link>&#32;=&#32;dinfo.image_height;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00369"/>00369 &#32;&#32;header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1af0360c595c534fe0eb540c5edb8b9997">size</link>&#32;&#32;&#32;=&#32;(header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ae548a41cebd0e338e5c03e7f6657ca47">height</link>*header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ad6401fdeafabc8677c9901384006f1da">width</link>*3);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00370"/>00370 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00371"/>00371 &#32;&#32;jpeg_destroy_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00372"/>00372 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00373"/>00373 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00374"/>00374 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00375"/>00375 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;file_buffer;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00376"/>00376 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00377"/>00377 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00378"/>00378 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00379"/>00379 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00380"/>00380 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00394"/>00394 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILEJPG::ReadHeaderBuffer(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r">GRPBITMAPFILEJPGHEADER</link>*&#32;header)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00395"/>00395 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00396"/>00396 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!header)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00397"/>00397 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00398"/>00398 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g___e_r_r_o_r">GRPBITMAPFILEJPG_ERROR</link>&#32;jerr;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00399"/>00399 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00400"/>00400 &#32;&#32;dinfo.err&#32;=&#32;jpeg_std_error(&amp;jerr.pub);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00401"/>00401 &#32;&#32;jerr.pub.error_exit&#32;=&#32;GRPBITMAPFILEJPG_ErrorExit;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00402"/>00402 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00403"/>00403 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(setjmp(jerr.setjmp_buffer))
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;jpeg_destroy_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00408"/>00408 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00409"/>00409 &#32;&#32;jpeg_create_decompress(&amp;dinfo);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;we&#32;can&#32;initialize&#32;the&#32;JPEG&#32;decompression&#32;object.&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00410"/>00410 <emphasis role="comment">//jpeg_stdio_src(&amp;dinfo,&#32;GetPrimaryFile()-&gt;GetFileStructHandle());&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Step&#32;2:&#32;specify&#32;data&#32;source&#32;(eg,&#32;a&#32;file)&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00411"/>00411 &#32;&#32;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00412"/>00412 &#32;&#32;jpeg_mem_src(&amp;dinfo,&#32;buffer,&#32;size);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00413"/>00413 &#32;&#32;jpeg_read_header(&amp;dinfo,&#32;<link linkend="__x_s_t_m32___h_a_l_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00414"/>00414 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00415"/>00415 &#32;&#32;header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ad6401fdeafabc8677c9901384006f1da">width</link>&#32;&#32;=&#32;dinfo.image_width;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00416"/>00416 &#32;&#32;header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ae548a41cebd0e338e5c03e7f6657ca47">height</link>&#32;=&#32;dinfo.image_height;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00417"/>00417 &#32;&#32;header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1af0360c595c534fe0eb540c5edb8b9997">size</link>&#32;&#32;&#32;=&#32;(header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ae548a41cebd0e338e5c03e7f6657ca47">height</link>*header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g_h_e_a_d_e_r_1ad6401fdeafabc8677c9901384006f1da">width</link>*3);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00418"/>00418 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00419"/>00419 &#32;&#32;jpeg_destroy_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00420"/>00420 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00421"/>00421 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00422"/>00422 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00423"/>00423 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00424"/>00424 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00436"/>00436 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILEJPG::DecodeToBufferFromFile(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00437"/>00437 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00438"/>00438 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!buffer)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00439"/>00439 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00440"/>00440 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00441"/>00441 &#32;&#32;JSAMPARRAY&#32;&#32;line;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Output&#32;row&#32;buffer&#32;*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00442"/>00442 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowstride;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;physical&#32;row&#32;width&#32;in&#32;output&#32;buffer&#32;*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00443"/>00443 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00444"/>00444 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g___e_r_r_o_r">GRPBITMAPFILEJPG_ERROR</link>&#32;jerr;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00445"/>00445 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00446"/>00446 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00447"/>00447 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00448"/>00448 &#32;&#32;dinfo.err&#32;=&#32;jpeg_std_error(&amp;jerr.pub);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00449"/>00449 &#32;&#32;jerr.pub.error_exit&#32;=&#32;GRPBITMAPFILEJPG_ErrorExit;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00450"/>00450 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00451"/>00451 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(setjmp(jerr.setjmp_buffer))
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;jpeg_destroy_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00457"/>00457 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00458"/>00458 &#32;&#32;jpeg_create_decompress(&amp;dinfo);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;we&#32;can&#32;initialize&#32;the&#32;JPEG&#32;decompression&#32;object.&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00459"/>00459 <emphasis role="comment">//jpeg_stdio_src(&amp;dinfo,&#32;GetPrimaryFile()-&gt;GetFileStructHandle());&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Step&#32;2:&#32;specify&#32;data&#32;source&#32;(eg,&#32;a&#32;file)&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00460"/>00460 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00461"/>00461 &#32;&#32;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00462"/>00462 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;file_size&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga3d5b9c0020c23ffb0ded5aeb105a6fb1">GetSize</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00463"/>00463 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;file_buffer=<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)file_size];
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00464"/>00464 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00465"/>00465 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00466"/>00466 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(file_buffer,&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)file_size);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00467"/>00467 &#32;&#32;jpeg_mem_src(&amp;dinfo,&#32;file_buffer,&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)file_size);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00468"/>00468 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00469"/>00469 &#32;&#32;jpeg_read_header(&amp;dinfo,&#32;<link linkend="__x_s_t_m32___h_a_l_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00470"/>00470 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00471"/>00471 &#32;&#32;jpeg_start_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00472"/>00472 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00473"/>00473 &#32;&#32;rowstride&#32;=&#32;dinfo.output_width&#32;*&#32;dinfo.output_components;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00474"/>00474 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00475"/>00475 &#32;&#32;line&#32;=&#32;(*dinfo.mem-&gt;alloc_sarray)((j_common_ptr)&#32;&amp;dinfo,&#32;JPOOL_IMAGE,&#32;rowstride,&#32;1);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00476"/>00476 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00477"/>00477 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;size&#32;&#32;=&#32;dinfo.output_width&#32;*&#32;dinfo.output_height&#32;*&#32;dinfo.output_components;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00478"/>00478 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;(size-rowstride);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00479"/>00479 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00480"/>00480 &#32;&#32;memset(buffer,&#32;0&#32;,size);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00481"/>00481 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00482"/>00482 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(dinfo.output_scanline&#32;&lt;&#32;dinfo.output_height)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;jpeg_read_scanlines(&amp;dinfo,&#32;line,&#32;1);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00485"/>00485 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;buffer[index],(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(*line),rowstride);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;index-=rowstride;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00489"/>00489 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00490"/>00490 &#32;&#32;jpeg_finish_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00491"/>00491 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00492"/>00492 &#32;&#32;jpeg_destroy_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00493"/>00493 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00494"/>00494 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00495"/>00495 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00496"/>00496 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;file_buffer;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00497"/>00497 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00498"/>00498 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00499"/>00499 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00500"/>00500 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00501"/>00501 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00515"/>00515 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILEJPG::DecodeToBufferFromRawBuffer(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;tobuffer)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00516"/>00516 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00517"/>00517 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!buffer)&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00518"/>00518 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!tobuffer)&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00519"/>00519 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00520"/>00520 &#32;&#32;JSAMPARRAY&#32;&#32;line;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Output&#32;row&#32;buffer&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00521"/>00521 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowstride;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;physical&#32;row&#32;width&#32;in&#32;output&#32;buffer&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00522"/>00522 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00523"/>00523 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_j_p_g___e_r_r_o_r">GRPBITMAPFILEJPG_ERROR</link>&#32;jerr;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00524"/>00524 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00525"/>00525 &#32;&#32;dinfo.err&#32;=&#32;jpeg_std_error(&amp;jerr.pub);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00526"/>00526 &#32;&#32;jerr.pub.error_exit&#32;=&#32;GRPBITMAPFILEJPG_ErrorExit;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00527"/>00527 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00528"/>00528 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(setjmp(jerr.setjmp_buffer))
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;jpeg_destroy_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00532"/>00532 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00533"/>00533 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00534"/>00534 &#32;&#32;jpeg_create_decompress(&amp;dinfo);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Now&#32;we&#32;can&#32;initialize&#32;the&#32;JPEG&#32;decompression&#32;object.&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00535"/>00535 <emphasis role="comment">//jpeg_stdio_src(&amp;dinfo,&#32;GetPrimaryFile()-&gt;GetFileStructHandle());&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Step&#32;2:&#32;specify&#32;data&#32;source&#32;(eg,&#32;a&#32;file)&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00536"/>00536 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00537"/>00537 &#32;&#32;jpeg_mem_src(&amp;dinfo,&#32;buffer,&#32;size);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00538"/>00538 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00539"/>00539 &#32;&#32;jpeg_read_header(&amp;dinfo,&#32;<link linkend="__x_s_t_m32___h_a_l_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00540"/>00540 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00541"/>00541 &#32;&#32;jpeg_start_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00542"/>00542 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00543"/>00543 &#32;&#32;rowstride&#32;=&#32;dinfo.output_width&#32;*&#32;dinfo.output_components;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00544"/>00544 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00545"/>00545 &#32;&#32;line&#32;=&#32;(*dinfo.mem-&gt;alloc_sarray)((j_common_ptr)&#32;&amp;dinfo,&#32;JPOOL_IMAGE,&#32;rowstride,&#32;1);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00546"/>00546 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00547"/>00547 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;resultsize&#32;&#32;=&#32;dinfo.output_width&#32;*&#32;dinfo.output_height&#32;*&#32;dinfo.output_components;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00548"/>00548 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(resultsize-rowstride);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00549"/>00549 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00550"/>00550 &#32;&#32;memset(tobuffer,&#32;0,&#32;resultsize);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00551"/>00551 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00552"/>00552 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(dinfo.output_scanline&#32;&lt;&#32;dinfo.output_height)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00553"/>00553 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;jpeg_read_scanlines(&amp;dinfo,&#32;line,&#32;1);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00555"/>00555 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;tobuffer[index],&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(*line),&#32;rowstride);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;index-=rowstride;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00558"/>00558 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00559"/>00559 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00560"/>00560 &#32;&#32;jpeg_finish_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00561"/>00561 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00562"/>00562 &#32;&#32;jpeg_destroy_decompress(&amp;dinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00563"/>00563 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00564"/>00564 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00565"/>00565 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00566"/>00566 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00567"/>00567 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00583"/>00583 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILEJPG::EncodeToFile(<emphasis role="keywordtype">int</emphasis>&#32;width,&#32;<emphasis role="keywordtype">int</emphasis>&#32;height,&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;baseline)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00584"/>00584 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00585"/>00585 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!buffer)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00586"/>00586 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00587"/>00587 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00588"/>00588 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>jpeg_error_mgr&#32;jerr;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00589"/>00589 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00590"/>00590 &#32;&#32;JSAMPROW&#32;rowpointer[1];&#32;&#32;<emphasis role="comment">//&#32;pointer&#32;to&#32;JSAMPLE&#32;row[s]&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00591"/>00591 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;rowstride;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;physical&#32;row&#32;width&#32;in&#32;image&#32;buffer&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00592"/>00592 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00593"/>00593 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00594"/>00594 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00595"/>00595 &#32;&#32;cinfo.err&#32;=&#32;jpeg_std_error(&amp;jerr);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00596"/>00596 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00597"/>00597 &#32;&#32;jpeg_create_compress(&amp;cinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00598"/>00598 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00599"/>00599 &#32;&#32;FILE*&#32;filehandle&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1a4953b004d4fc8fc838133ece9996f600">CreateStructHandle</link>();
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00600"/>00600 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!filehandle)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00601"/>00601 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00602"/>00602 &#32;&#32;jpeg_stdio_dest(&amp;cinfo,&#32;filehandle);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00603"/>00603 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00604"/>00604 &#32;&#32;cinfo.image_width&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;width;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;image&#32;width&#32;and&#32;height,&#32;in&#32;pixels&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00605"/>00605 &#32;&#32;cinfo.image_height&#32;&#32;&#32;&#32;&#32;&#32;=&#32;height;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00606"/>00606 &#32;&#32;cinfo.input_components&#32;&#32;=&#32;3;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;#&#32;of&#32;color&#32;components&#32;per&#32;pixel&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00607"/>00607 &#32;&#32;cinfo.in_color_space&#32;&#32;&#32;&#32;=&#32;JCS_RGB;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;colorspace&#32;of&#32;input&#32;image&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00608"/>00608 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00609"/>00609 &#32;&#32;jpeg_set_defaults(&amp;cinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00610"/>00610 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00611"/>00611 &#32;&#32;jpeg_set_quality(&amp;cinfo,&#32;quality,&#32;baseline);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00612"/>00612 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00613"/>00613 &#32;&#32;jpeg_start_compress(&amp;cinfo,&#32;<link linkend="__x_s_t_m32___h_a_l_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00614"/>00614 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00615"/>00615 &#32;&#32;rowstride&#32;=&#32;width&#32;*&#32;3;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;JSAMPLEs&#32;per&#32;row&#32;in&#32;image_buffer&#32;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00616"/>00616 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00617"/>00617 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;size&#32;&#32;=&#32;width&#32;*&#32;height&#32;*&#32;3;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00618"/>00618 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00619"/>00619 &#32;&#32;size&#32;-=&#32;rowstride;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00620"/>00620 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00621"/>00621 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(cinfo.next_scanline&#32;&lt;&#32;cinfo.image_height)
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;rowpointer[0]&#32;=&#32;&amp;buffer[size-(cinfo.next_scanline&#32;*&#32;rowstride)];
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00624"/>00624 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;jpeg_write_scanlines(&amp;cinfo,&#32;rowpointer,&#32;1);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00626"/>00626 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00627"/>00627 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00628"/>00628 &#32;&#32;jpeg_finish_compress(&amp;cinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00629"/>00629 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00630"/>00630 &#32;&#32;jpeg_destroy_compress(&amp;cinfo);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00631"/>00631 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00632"/>00632 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00633"/>00633 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00634"/>00634 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00635"/>00635 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00636"/>00636 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00637"/>00637 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00646"/>00646 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILEJPG::Clean()
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00647"/>00647 {
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00648"/>00648 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00649"/>00649 }
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00650"/>00650 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00651"/>00651 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00652"/>00652 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00653"/>00653 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00654"/>00654 
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00655"/>00655 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_j_p_g_8cpp_source_1l00656"/>00656 
</programlisting></section>
