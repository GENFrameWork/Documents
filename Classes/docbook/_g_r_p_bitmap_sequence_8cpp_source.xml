<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g_r_p_bitmap_sequence_8cpp_source" xml:lang="en-US">
<title>GRPBitmapSequence.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Graphic/GRPBitmapSequence.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00001"/>00001 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00031"/>00031 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00033"/>00033 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00035"/>00035 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00036"/>00036 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00039"/>00039 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_sequence_8h">GRPBitmapSequence.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00041"/>00041 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_timer_8h">XTimer.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00044"/>00044 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_rect_8h">GRPRect.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_8h">GRPBitmap.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00047"/>00047 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00049"/>00049 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00051"/>00051 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00052"/>00052 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00053"/>00053 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00055"/>00055 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00057"/>00057 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00058"/>00058 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00059"/>00059 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00060"/>00060 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00061"/>00061 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00062"/>00062 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_BITMAPFRAME</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00064"/>00064 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00065"/>00065 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00073"/><link linkend="_group___g_r_a_p_h_i_c_1gaf02a7bf5def787ab738d5d9854d28ce4">00073</link> <link linkend="_group___g_r_a_p_h_i_c_1gaf02a7bf5def787ab738d5d9854d28ce4">GRPBITMAPFRAME::GRPBITMAPFRAME</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00074"/>00074 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00075"/>00075 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00076"/>00076 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00077"/>00077 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00078"/>00078 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00087"/><link linkend="_group___g_r_a_p_h_i_c_1ga1d69636944508d4a4e403c0ea91c6a82">00087</link> <link linkend="_group___g_r_a_p_h_i_c_1ga1d69636944508d4a4e403c0ea91c6a82">GRPBITMAPFRAME::~GRPBITMAPFRAME</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00088"/>00088 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00089"/>00089 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;bitmap;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00090"/>00090 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00091"/>00091 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00092"/>00092 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00093"/>00093 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00103"/><link linkend="_group___g_r_a_p_h_i_c_1ga540cb18d0bbf50644f63e4a0d731e299">00103</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga540cb18d0bbf50644f63e4a0d731e299">GRPBITMAPFRAME::GetBitmap</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00104"/>00104 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00105"/>00105 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bitmap;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00106"/>00106 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00107"/>00107 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00108"/>00108 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00118"/><link linkend="_group___g_r_a_p_h_i_c_1ga509e8a4059d3b4309f0e68eaa824bc6b">00118</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga509e8a4059d3b4309f0e68eaa824bc6b">GRPBITMAPFRAME::GetAjustX</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00119"/>00119 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00120"/>00120 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ajustx;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00121"/>00121 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00122"/>00122 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00123"/>00123 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00133"/><link linkend="_group___g_r_a_p_h_i_c_1ga4d28920b548b649ec86932ee08972c83">00133</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga4d28920b548b649ec86932ee08972c83">GRPBITMAPFRAME::GetAjustY</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00134"/>00134 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00135"/>00135 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ajusty;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00136"/>00136 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00137"/>00137 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00138"/>00138 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00148"/><link linkend="_group___g_r_a_p_h_i_c_1gaf0e7edb4c5df1c6f9f51112509b7f9c2">00148</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf0e7edb4c5df1c6f9f51112509b7f9c2">GRPBITMAPFRAME::SetBitmap</link>(<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00149"/>00149 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00150"/>00150 &#32;&#32;this-&gt;bitmap&#32;=&#32;bitmap;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00151"/>00151 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00152"/>00152 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00153"/>00153 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00163"/><link linkend="_group___g_r_a_p_h_i_c_1gaac11fb2c54c4d3ebb11f09e853f13860">00163</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaac11fb2c54c4d3ebb11f09e853f13860">GRPBITMAPFRAME::SetAjustX</link>(<emphasis role="keywordtype">int</emphasis>&#32;ajustx)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00164"/>00164 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00165"/>00165 &#32;&#32;this-&gt;ajustx&#32;=&#32;ajustx;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00166"/>00166 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00167"/>00167 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00168"/>00168 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00178"/><link linkend="_group___g_r_a_p_h_i_c_1ga97a498e972836221cf2e6b2ee061fc37">00178</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga97a498e972836221cf2e6b2ee061fc37">GRPBITMAPFRAME::SetAjustY</link>(<emphasis role="keywordtype">int</emphasis>&#32;ajusty)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00179"/>00179 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00180"/>00180 &#32;&#32;this-&gt;ajusty&#32;=&#32;ajusty;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00181"/>00181 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00182"/>00182 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00183"/>00183 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00192"/>00192 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFRAME::Clean()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00193"/>00193 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00194"/>00194 &#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00195"/>00195 &#32;&#32;ajustx&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00196"/>00196 &#32;&#32;ajusty&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00197"/>00197 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00198"/>00198 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00199"/>00199 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00200"/>00200 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00201"/>00201 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00202"/>00202 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00203"/>00203 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_GRPBITMAPSEQUENCE</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00204"/>00204 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00205"/>00205 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00213"/><link linkend="_group___g_r_a_p_h_i_c_1ga26e05c1da2cb020576413a5a5901edd8">00213</link> <link linkend="_group___g_r_a_p_h_i_c_1ga26e05c1da2cb020576413a5a5901edd8">GRPBITMAPSEQUENCE::GRPBITMAPSEQUENCE</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00214"/>00214 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00215"/>00215 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00216"/>00216 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00217"/>00217 &#32;&#32;GEN_XFACTORY_CREATE(timer,&#32;CreateTimer())
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00218"/>00218 &#32;&#32;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00219"/>00219 &#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga278b17fb213236c19a423e879d5eeb10">AjustTime</link>(<link linkend="__g_r_p_bitmap_sequence_8h_1a6ca0338dba77f09bb08ede05ae912a24">GRPBITMAPSEQUENCE_FRAMESSECOND</link>);&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00220"/>00220 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00221"/>00221 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00222"/>00222 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00231"/><link linkend="_group___g_r_a_p_h_i_c_1ga635dc6e2da1b4a12ec79bab792cac454">00231</link> <link linkend="_group___g_r_a_p_h_i_c_1ga635dc6e2da1b4a12ec79bab792cac454">GRPBITMAPSEQUENCE::~GRPBITMAPSEQUENCE</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00232"/>00232 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00233"/>00233 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(timer)&#32;GEN_XFACTORY.DeleteTimer(timer);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00234"/>00234 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00235"/>00235 &#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1gae398d73842117d3ff7711685510ac7eb">DelAllSequence</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00236"/>00236 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00237"/>00237 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00238"/>00238 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00239"/>00239 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00240"/>00240 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00254"/><link linkend="_group___g_r_a_p_h_i_c_1ga92c924c1e5e3beb73e3d5d4f48c8fd49">00254</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga92c924c1e5e3beb73e3d5d4f48c8fd49">GRPBITMAPSEQUENCE::AddFrame</link>(<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ajustx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ajusty)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00255"/>00255 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00256"/>00256 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;frame&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00257"/>00257 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!frame)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00258"/>00258 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00259"/>00259 &#32;&#32;frame-&gt;<link linkend="_group___g_r_a_p_h_i_c_1gaf0e7edb4c5df1c6f9f51112509b7f9c2">SetBitmap</link>(bitmap);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00260"/>00260 &#32;&#32;frame-&gt;<link linkend="_group___g_r_a_p_h_i_c_1gaac11fb2c54c4d3ebb11f09e853f13860">SetAjustX</link>(ajustx);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00261"/>00261 &#32;&#32;frame-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga97a498e972836221cf2e6b2ee061fc37">SetAjustY</link>(ajusty);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00262"/>00262 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00263"/>00263 &#32;&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1a51a790aac8efd4603aee608ddcc83423">Add</link>(frame);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00264"/>00264 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00265"/>00265 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00266"/>00266 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00267"/>00267 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00268"/>00268 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00280"/><link linkend="_group___g_r_a_p_h_i_c_1gae398d73842117d3ff7711685510ac7eb">00280</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gae398d73842117d3ff7711685510ac7eb">GRPBITMAPSEQUENCE::DelAllSequence</link>(<emphasis role="keywordtype">bool</emphasis>&#32;full)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00281"/>00281 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00282"/>00282 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00283"/>00283 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00284"/>00284 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(full)&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1abae5097402824f18f274e21e18b23bea">DeleteContents</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00285"/>00285 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00286"/>00286 &#32;&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1a57c72ab04fd14c60d1026e0a7b4a1887">DeleteAll</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00287"/>00287 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00288"/>00288 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00289"/>00289 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00290"/>00290 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00291"/>00291 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00301"/><link linkend="_group___g_r_a_p_h_i_c_1ga307bde46b6b4af9217f846e24613c38b">00301</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga307bde46b6b4af9217f846e24613c38b">GRPBITMAPSEQUENCE::GetActualFrame</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00302"/>00302 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00303"/>00303 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(frameindex);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00304"/>00304 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00305"/>00305 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00306"/>00306 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00316"/><link linkend="_group___g_r_a_p_h_i_c_1gae4bcdd975ae89f184413137de9b31f47">00316</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gae4bcdd975ae89f184413137de9b31f47">GRPBITMAPSEQUENCE::GetActualFrameIndex</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00317"/>00317 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00318"/>00318 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frameindex;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00319"/>00319 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00320"/>00320 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00321"/>00321 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00333"/><link linkend="_group___g_r_a_p_h_i_c_1ga02d9e85884ffb461e45c0042f2e88ea6">00333</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga02d9e85884ffb461e45c0042f2e88ea6">GRPBITMAPSEQUENCE::GetFrame</link>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;nframe)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00334"/>00334 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00335"/>00335 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(nframe&gt;=(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00336"/>00336 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(nframe);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00337"/>00337 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00338"/>00338 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00339"/>00339 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00349"/><link linkend="_group___g_r_a_p_h_i_c_1ga22b3a4afcf5edb63b9dba3483d7e74b7">00349</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga22b3a4afcf5edb63b9dba3483d7e74b7">GRPBITMAPSEQUENCE::GetNFrames</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00350"/>00350 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00351"/>00351 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00352"/>00352 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00353"/>00353 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00354"/>00354 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00364"/><link linkend="_group___g_r_a_p_h_i_c_1ga6d0627d644760bd0e174234acbeead4e">00364</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga6d0627d644760bd0e174234acbeead4e">GRPBITMAPSEQUENCE::GetNLoops</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00365"/>00365 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00366"/>00366 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nloops;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00367"/>00367 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00368"/>00368 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00369"/>00369 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00379"/><link linkend="_group___g_r_a_p_h_i_c_1gaf215682659fed92fb2585e49d251dd69">00379</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf215682659fed92fb2585e49d251dd69">GRPBITMAPSEQUENCE::GetNLoopsMade</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00380"/>00380 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00381"/>00381 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nloopsmade;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00382"/>00382 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00383"/>00383 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00384"/>00384 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00396"/><link linkend="_group___g_r_a_p_h_i_c_1ga63d3f1f85f6d228b98a72881296ee8b2">00396</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga63d3f1f85f6d228b98a72881296ee8b2">GRPBITMAPSEQUENCE::SetNLoops</link>(<emphasis role="keywordtype">int</emphasis>&#32;nloops)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00397"/>00397 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00398"/>00398 &#32;&#32;this-&gt;nloops&#32;=&#32;nloops;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00399"/>00399 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00400"/>00400 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00401"/>00401 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00402"/>00402 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00403"/>00403 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00415"/><link linkend="_group___g_r_a_p_h_i_c_1gaea99d42bbea9d455a96ae33579817652">00415</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaea99d42bbea9d455a96ae33579817652">GRPBITMAPSEQUENCE::SetNLoopsMade</link>(<emphasis role="keywordtype">int</emphasis>&#32;nloopsmade)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00416"/>00416 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00417"/>00417 &#32;&#32;this-&gt;nloopsmade&#32;=&#32;nloopsmade;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00418"/>00418 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00419"/>00419 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00420"/>00420 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00421"/>00421 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00422"/>00422 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00435"/><link linkend="_group___g_r_a_p_h_i_c_1ga099415d2d5603fae5adc32c4dc73d6b6">00435</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga099415d2d5603fae5adc32c4dc73d6b6">GRPBITMAPSEQUENCE::AjustAllSequence</link>(<emphasis role="keywordtype">int</emphasis>&#32;ajustx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ajusty)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00436"/>00436 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00437"/>00437 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00438"/>00438 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00439"/>00439 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;c&lt;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();c++)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;frame&#32;=&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frame)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame-&gt;<link linkend="_group___g_r_a_p_h_i_c_1gaac11fb2c54c4d3ebb11f09e853f13860">SetAjustX</link>(ajustx);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga97a498e972836221cf2e6b2ee061fc37">SetAjustY</link>(ajusty);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00448"/>00448 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00449"/>00449 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00450"/>00450 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00451"/>00451 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00452"/>00452 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00453"/>00453 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00467"/><link linkend="_group___g_r_a_p_h_i_c_1gaaa10e288b09d72160990b1831dd26ebf">00467</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaaa10e288b09d72160990b1831dd26ebf">GRPBITMAPSEQUENCE::Play</link>(<emphasis role="keywordtype">int</emphasis>&#32;nloops,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ajusttimeauto,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;reverse)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00468"/>00468 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00469"/>00469 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status==<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00470"/>00470 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00471"/>00471 &#32;&#32;this-&gt;nloops&#32;=&#32;nloops;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00472"/>00472 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00473"/>00473 &#32;&#32;status&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00474"/>00474 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00475"/>00475 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(ajusttimeauto)&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga278b17fb213236c19a423e879d5eeb10">AjustTime</link>(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>());
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00476"/>00476 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00477"/>00477 &#32;&#32;this-&gt;reverse&#32;=&#32;reverse;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00478"/>00478 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00479"/>00479 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!reverse)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameindex&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;frameindex&#32;=&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()-1;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00482"/>00482 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00483"/>00483 &#32;&#32;nloopsmade&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00484"/>00484 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00485"/>00485 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(frameindex);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00486"/>00486 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00487"/>00487 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00488"/>00488 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00498"/><link linkend="_group___g_r_a_p_h_i_c_1ga1f5a499bbdd86b3d32e795d627d56986">00498</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga1f5a499bbdd86b3d32e795d627d56986">GRPBITMAPSEQUENCE::Stop</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00499"/>00499 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00500"/>00500 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00501"/>00501 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status==<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a9707259dfd4398ed8fbac6f4b2ce89ff">GRPBITMAPSEQUENCESTATUS_NONE</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00502"/>00502 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00503"/>00503 &#32;&#32;status&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978ae05db71a2bc7718312b0353bd817fe51">GRPBITMAPSEQUENCESTATUS_STOP</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00504"/>00504 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00505"/>00505 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!reverse)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameindex&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00507"/>00507 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;frameindex&#32;=&#32;(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()-1);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00508"/>00508 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00509"/>00509 &#32;&#32;nloopsmade&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00510"/>00510 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00511"/>00511 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00512"/>00512 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00513"/>00513 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00514"/>00514 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00524"/><link linkend="_group___g_r_a_p_h_i_c_1gae6ad37994810c3026d4980405fdb4544">00524</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gae6ad37994810c3026d4980405fdb4544">GRPBITMAPSEQUENCE::Pause</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00525"/>00525 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00526"/>00526 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00527"/>00527 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status!=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00528"/>00528 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00529"/>00529 &#32;&#32;status&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a8e1370376f0f1a34e6375f3def8ba15d">GRPBITMAPSEQUENCESTATUS_PAUSE</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00530"/>00530 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00531"/>00531 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00532"/>00532 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00533"/>00533 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00534"/>00534 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00544"/><link linkend="_group___g_r_a_p_h_i_c_1ga1fd7b6d7c006fee5c3a0fa9927b5b2db">00544</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga1fd7b6d7c006fee5c3a0fa9927b5b2db">GRPBITMAPSEQUENCE::Finished</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00545"/>00545 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00546"/>00546 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00547"/>00547 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status!=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00548"/>00548 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00549"/>00549 &#32;&#32;status&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a635685fb5f2891c743b336a9228579a1">GRPBITMAPSEQUENCESTATUS_END</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00550"/>00550 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00551"/>00551 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00552"/>00552 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00553"/>00553 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00554"/>00554 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00564"/><link linkend="_group___g_r_a_p_h_i_c_1ga7c3c18671c73cfcc7711b3d8a4a75dd9">00564</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga7c3c18671c73cfcc7711b3d8a4a75dd9">GRPBITMAPSEQUENCE::IsPlaying</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00565"/>00565 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00566"/>00566 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status==<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00567"/>00567 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00568"/>00568 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00569"/>00569 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00570"/>00570 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00571"/>00571 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00581"/><link linkend="_group___g_r_a_p_h_i_c_1ga4ae7d656acad62ccf506427d2ed26fdc">00581</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga4ae7d656acad62ccf506427d2ed26fdc">GRPBITMAPSEQUENCE::IsEndSequence</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00582"/>00582 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00583"/>00583 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status==<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a635685fb5f2891c743b336a9228579a1">GRPBITMAPSEQUENCESTATUS_END</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00584"/>00584 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00585"/>00585 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00586"/>00586 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00587"/>00587 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00588"/>00588 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00598"/><link linkend="_group___g_r_a_p_h_i_c_1ga79c598216c4e2112405df3e19f1307e1">00598</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga79c598216c4e2112405df3e19f1307e1">GRPBITMAPSEQUENCE::Update</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00599"/>00599 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00600"/>00600 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!timer)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00601"/>00601 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00602"/>00602 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status!=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00603"/>00603 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00604"/>00604 &#32;&#32;<emphasis role="comment">//if(timer-&gt;GetMeasureMilliSeconds()&lt;timebyframe)&#32;&#32;return&#32;NULL;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00605"/>00605 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00606"/>00606 &#32;&#32;timer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00607"/>00607 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00608"/>00608 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!reverse)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()!=1)&#32;frameindex++;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00611"/>00611 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frameindex&#32;==&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>())
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameindex&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nloopsmade++;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((nloops)&amp;&amp;(nloops==nloopsmade))&#32;status=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a635685fb5f2891c743b336a9228579a1">GRPBITMAPSEQUENCESTATUS_END</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00619"/>00619 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()!=1)&#32;frameindex--;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00622"/>00622 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frameindex&lt;0)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameindex&#32;=&#32;(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()-1);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00626"/>00626 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nloopsmade++;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((nloops)&amp;&amp;(nloops==nloopsmade))&#32;status=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a635685fb5f2891c743b336a9228579a1">GRPBITMAPSEQUENCESTATUS_END</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00631"/>00631 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00632"/>00632 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(frameindex);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00633"/>00633 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00634"/>00634 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00635"/>00635 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00647"/><link linkend="_group___g_r_a_p_h_i_c_1ga278b17fb213236c19a423e879d5eeb10">00647</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga278b17fb213236c19a423e879d5eeb10">GRPBITMAPSEQUENCE::AjustTime</link>(<emphasis role="keywordtype">int</emphasis>&#32;framebysec)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00648"/>00648 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00649"/>00649 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!timer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00650"/>00650 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00651"/>00651 &#32;&#32;this-&gt;framebysec&#32;&#32;=&#32;framebysec;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00652"/>00652 &#32;&#32;timebyframe&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;((float)1000/(<emphasis role="keywordtype">float</emphasis>)framebysec);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00653"/>00653 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00654"/>00654 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00655"/>00655 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00656"/>00656 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00657"/>00657 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00667"/><link linkend="_group___g_r_a_p_h_i_c_1ga69a789902caa15f988420990aa4f2ff3">00667</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e">GRPBITMAPSEQUENCE</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga69a789902caa15f988420990aa4f2ff3">GRPBITMAPSEQUENCE::Copy</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00668"/>00668 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00669"/>00669 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e">GRPBITMAPSEQUENCE</link>*&#32;sequence&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga26e05c1da2cb020576413a5a5901edd8">GRPBITMAPSEQUENCE</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00670"/>00670 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!sequence)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00673"/>00673 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00674"/>00674 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00675"/>00675 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();&#32;c++)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00676"/>00676 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;frame&#32;=&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frame)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap&#32;=&#32;frame-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga540cb18d0bbf50644f63e4a0d731e299">GetBitmap</link>()-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga9adfa8c890144c2fdd4c298874883e74">Clone</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sequence-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga92c924c1e5e3beb73e3d5d4f48c8fd49">AddFrame</link>(bitmap,&#32;frame-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga509e8a4059d3b4309f0e68eaa824bc6b">GetAjustX</link>(),&#32;frame-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga4d28920b548b649ec86932ee08972c83">GetAjustY</link>());
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00687"/>00687 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00688"/>00688 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sequence;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00689"/>00689 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00690"/>00690 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00691"/>00691 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00703"/><link linkend="_group___g_r_a_p_h_i_c_1ga2aeb65d79cecf3f84d1038024613587b">00703</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2aeb65d79cecf3f84d1038024613587b">GRPBITMAPSEQUENCE::Flip</link>(<emphasis role="keywordtype">bool</emphasis>&#32;horizontal)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00704"/>00704 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00705"/>00705 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00706"/>00706 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00707"/>00707 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();&#32;c++)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00708"/>00708 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;frame&#32;=&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frame)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap&#32;=&#32;frame-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga540cb18d0bbf50644f63e4a0d731e299">GetBitmap</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(horizontal)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga0b94844ccf11a9b2b16ac1aa47faaf40">FlipHorizontal</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1gaaa84c8262833b01b0a8a8f84b7a01d3c">FlipVertical</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00725"/>00725 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00726"/>00726 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00727"/>00727 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00728"/>00728 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00729"/>00729 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00730"/>00730 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00739"/>00739 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPSEQUENCE::Clean()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00740"/>00740 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00741"/>00741 &#32;&#32;framebysec&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00742"/>00742 &#32;&#32;timebyframe&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00743"/>00743 &#32;&#32;timer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00744"/>00744 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00745"/>00745 &#32;&#32;repeat&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00746"/>00746 &#32;&#32;status&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a9707259dfd4398ed8fbac6f4b2ce89ff">GRPBITMAPSEQUENCESTATUS_NONE</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00747"/>00747 &#32;&#32;frameindex&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00748"/>00748 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00749"/>00749 &#32;&#32;nloops&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00750"/>00750 &#32;&#32;nloopsmade&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00751"/>00751 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00752"/>00752 &#32;&#32;reverse&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00753"/>00753 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00754"/>00754 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00755"/>00755 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00756"/>00756 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00757"/>00757 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00758"/>00758 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00759"/>00759 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00760"/>00760 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00761"/>00761 
</programlisting></section>
