<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source" xml:lang="en-US">
<title>DIOSTM32StreamI2C.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/DIOSTM32StreamI2C.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;CONTROL&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00030"/>00030 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00032"/>00032 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00033"/>00033 <emphasis role="preprocessor">#if&#32;defined(DIO_ACTIVE)&#32;&amp;&amp;&#32;defined(DIO_STREAMI2C_ACTIVE)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00034"/>00034 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00035"/>00035 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_thread_collected_8h">XThreadCollected.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_x_event_8h">DIOStreamXEvent.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_i2_c_config_8h">DIOStreamI2CConfig.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00042"/>00042 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_s_t_m32_stream_i2_c_8h">DIOSTM32StreamI2C.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00044"/>00044 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00046"/>00046 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00047"/>00047 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00048"/>00048 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00049"/>00049 DIOSTM32STREAMI2CPORT*&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::ports[DIOSTM32STREAMI2C_MAXPORTS]&#32;&#32;&#32;&#32;&#32;=&#32;{&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;};
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00050"/>00050 <link linkend="_class_d_i_o_s_t_m32_s_t_r_e_a_m_i2_c">DIOSTM32STREAMI2C</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::handles[DIOSTM32STREAMI2C_MAXHANDLES]&#32;=&#32;{&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;};
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00051"/>00051 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00052"/>00052 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00053"/>00053 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00055"/>00055 <emphasis role="comment">/*--------------------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00056"/>00056 <emphasis role="commentemphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00057"/>00057 <emphasis role="comment">/*--------------------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00059"/>00059 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00067"/>00067 DIOSTM32STREAMI2CPORT::DIOSTM32STREAMI2CPORT()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00068"/>00068 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00069"/>00069 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00070"/>00070 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00071"/>00071 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00072"/>00072 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00073"/>00073 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00082"/>00082 DIOSTM32STREAMI2CPORT::~DIOSTM32STREAMI2CPORT()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00083"/>00083 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00084"/>00084 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00085"/>00085 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00086"/>00086 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00087"/>00087 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00088"/>00088 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00098"/>00098 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOSTM32STREAMI2CPORT::GetCounterRef()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00099"/>00099 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00100"/>00100 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;counterref;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00101"/>00101 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00102"/>00102 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00103"/>00103 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00104"/>00104 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00114"/>00114 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMI2CPORT::SetCounterRef(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;counterref)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00115"/>00115 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00116"/>00116 &#32;&#32;this-&gt;counterref&#32;=&#32;counterref;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00117"/>00117 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00118"/>00118 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00119"/>00119 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00120"/>00120 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00130"/>00130 I2C_HandleTypeDef*&#32;DIOSTM32STREAMI2CPORT::GetHandleI2C()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00131"/>00131 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00132"/>00132 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hi2c;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00133"/>00133 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00134"/>00134 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00135"/>00135 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00136"/>00136 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00146"/>00146 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMI2CPORT::SetHandleI2C(I2C_HandleTypeDef*&#32;hi2c)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00147"/>00147 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00148"/>00148 &#32;&#32;this-&gt;hi2c&#32;=&#32;hi2c;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00149"/>00149 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00150"/>00150 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00151"/>00151 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00152"/>00152 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00161"/>00161 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMI2CPORT::Clean()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00162"/>00162 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00163"/>00163 &#32;&#32;counterref&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00164"/>00164 &#32;&#32;hi2c&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00165"/>00165 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00166"/>00166 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00167"/>00167 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00168"/>00168 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00169"/>00169 <emphasis role="comment">/*--------------------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00170"/>00170 <emphasis role="commentemphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00171"/>00171 <emphasis role="comment">/*--------------------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00172"/>00172 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00173"/>00173 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00174"/>00174 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00182"/>00182 DIOSTM32STREAMI2C::DIOSTM32STREAMI2C()&#32;:&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_i2_c">DIOSTREAMI2C</link>()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00183"/>00183 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00184"/>00184 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00185"/>00185 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00186"/>00186 &#32;&#32;AddState(&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aaef5bfadf7b0c8b3ca925125f170b7e1d">DIOSTREAMI2C_FSMSTATE_NONE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784ca19d5447e5a500b417b73337bb74070a9">DIOSTREAMI2C_FSMEVENT_CONNECTED</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa336cd34f4f533b415489abbe19db0137">DIOSTREAMI2C_FSMSTATE_CONNECTED</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784cab9b3b38a22fbdd00375b4e9c7e0f1676">DIOSTREAMI2C_FSMEVENT_DISCONNECTING</link>&#32;&#32;&#32;,&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa68aae42247e55f0428f08ed8d422673d">DIOSTREAMI2C_FSMSTATE_DISCONNECTING</link>&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00190"/>00190 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00191"/>00191 &#32;&#32;AddState(&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa336cd34f4f533b415489abbe19db0137">DIOSTREAMI2C_FSMSTATE_CONNECTED</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784ca4ecd7d75fb748d0c760c9e3d4b72fb6b">DIOSTREAMI2C_FSMEVENT_WAITINGTOREAD</link>&#32;&#32;&#32;,&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa1952d5fe9f20b95389cecbb2eb0bd65d">DIOSTREAMI2C_FSMSTATE_WAITINGTOREAD</link>&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784cab9b3b38a22fbdd00375b4e9c7e0f1676">DIOSTREAMI2C_FSMEVENT_DISCONNECTING</link>&#32;&#32;&#32;,&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa68aae42247e55f0428f08ed8d422673d">DIOSTREAMI2C_FSMSTATE_DISCONNECTING</link>&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00195"/>00195 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00196"/>00196 &#32;&#32;AddState(&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa1952d5fe9f20b95389cecbb2eb0bd65d">DIOSTREAMI2C_FSMSTATE_WAITINGTOREAD</link>&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784ca19d5447e5a500b417b73337bb74070a9">DIOSTREAMI2C_FSMEVENT_CONNECTED</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa336cd34f4f533b415489abbe19db0137">DIOSTREAMI2C_FSMSTATE_CONNECTED</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784cab9b3b38a22fbdd00375b4e9c7e0f1676">DIOSTREAMI2C_FSMEVENT_DISCONNECTING</link>&#32;&#32;&#32;,&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa68aae42247e55f0428f08ed8d422673d">DIOSTREAMI2C_FSMSTATE_DISCONNECTING</link>&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00200"/>00200 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00201"/>00201 &#32;&#32;AddState(&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa68aae42247e55f0428f08ed8d422673d">DIOSTREAMI2C_FSMSTATE_DISCONNECTING</link>&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784ca19d5447e5a500b417b73337bb74070a9">DIOSTREAMI2C_FSMEVENT_CONNECTED</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa336cd34f4f533b415489abbe19db0137">DIOSTREAMI2C_FSMSTATE_CONNECTED</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784ca4ecd7d75fb748d0c760c9e3d4b72fb6b">DIOSTREAMI2C_FSMEVENT_WAITINGTOREAD</link>&#32;&#32;&#32;,&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa1952d5fe9f20b95389cecbb2eb0bd65d">DIOSTREAMI2C_FSMSTATE_WAITINGTOREAD</link>&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00205"/>00205 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00206"/>00206 &#32;&#32;threadconnection&#32;=&#32;<link linkend="__x_thread_collected_8h_1aad503e3655b9ff78d3ac660d1f1f5534">CREATEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a69c9583efaf27364271b68154116efec">XTHREADGROUPID_DIOSTREAMI2C</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;DIOSTM32STREAMI2C::DIOSTM32STREAMI2C&quot;</emphasis>),&#32;ThreadConnection,&#32;(<emphasis role="keywordtype">void</emphasis>*)<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00207"/>00207 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00208"/>00208 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00209"/>00209 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00210"/>00210 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00219"/>00219 DIOSTM32STREAMI2C::~DIOSTM32STREAMI2C()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00220"/>00220 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00221"/>00221 &#32;&#32;Close();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00222"/>00222 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00223"/>00223 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(threadconnection)&#32;<link linkend="__x_thread_collected_8h_1a18fb843f5fbad51464b68d705ed29b8a">DELETEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a69c9583efaf27364271b68154116efec">XTHREADGROUPID_DIOSTREAMI2C</link>,&#32;threadconnection);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00224"/>00224 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00225"/>00225 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00226"/>00226 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00227"/>00227 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00228"/>00228 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00229"/>00229 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00239"/>00239 <link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0f">DIOSTREAMSTATUS</link>&#32;DIOSTM32STREAMI2C::GetConnectStatus()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00240"/>00240 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00241"/>00241 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!config)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00242"/>00242 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00243"/>00243 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00244"/>00244 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00245"/>00245 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00246"/>00246 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00247"/>00247 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00257"/>00257 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMI2C::Open()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00258"/>00258 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00259"/>00259 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;result&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00260"/>00260 &#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00261"/>00261 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadconnection)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00262"/>00262 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!config)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00263"/>00263 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00264"/>00264 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;DIOSTM32STREAMI2C_MAXHANDLES;&#32;c++)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(DIOSTM32STREAMI2C::handles[c]&#32;==&#32;<emphasis role="keyword">this</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00267"/>00267 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DIOSTM32STREAMI2C::handles[c])
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indexhandle&#32;=&#32;c;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::handles[indexhandle]&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00275"/>00275 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00276"/>00276 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(indexhandle&#32;==&#32;-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00277"/>00277 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00278"/>00278 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(config-&gt;GetLocalAddress()&#32;&#32;!=&#32;<link linkend="__d_i_o_stream_i2_c_config_8h_1a3aaf9e4148b174cab634073467e424b0">DIOSTREAMI2CCONFIG_ADDRESSINVALID</link>)&#32;&#32;localaddress&#32;&#32;=&#32;(config-&gt;GetLocalAddress()&#32;&#32;&lt;&lt;&#32;1);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00279"/>00279 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(config-&gt;GetRemoteAddress()&#32;!=&#32;<link linkend="__d_i_o_stream_i2_c_config_8h_1a3aaf9e4148b174cab634073467e424b0">DIOSTREAMI2CCONFIG_ADDRESSINVALID</link>)&#32;&#32;remoteaddress&#32;=&#32;(config-&gt;GetRemoteAddress()&#32;&lt;&lt;&#32;1);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00280"/>00280 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00281"/>00281 &#32;&#32;indexport&#32;=&#32;config-&gt;GetPort()-1;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00282"/>00282 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00283"/>00283 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DIOSTM32STREAMI2C::ports[indexport])
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2CPORT*&#32;port&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;DIOSTM32STREAMI2CPORT();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!port)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00287"/>00287 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;hi2c&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;I2C_HandleTypeDef();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!hi2c)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;port;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00294"/>00294 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(config-&gt;GetPort())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;1&#32;:&#32;hi2c-&gt;Instance&#32;=&#32;I2C1;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00298"/>00298 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(STM32F411xE)&#32;||&#32;defined(STM32F446x)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;2&#32;:&#32;hi2c-&gt;Instance&#32;=&#32;I2C2;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00300"/>00300 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00301"/>00301 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(HW_STM32WB55XX)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;3&#32;:&#32;hi2c-&gt;Instance&#32;=&#32;I2C3;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00303"/>00303 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00307"/>00307 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00308"/>00308 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(HW_STM32F0XX)&#32;||&#32;defined(HW_STM32F3XX)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;hi2c-&gt;Init.Timing&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x2000090E;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00310"/>00310 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00312"/>00312 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(HW_STM32WB55XX)&#32;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;hi2c-&gt;Init.Timing&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x10707DBC;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//hi2c-&gt;Init.Timing&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x00602173;&#32;&#32;&#32;//&#32;&#32;(400KHz)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00315"/>00315 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00317"/>00317 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(STM32F411xE)&#32;||&#32;defined(STM32F446x)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;hi2c-&gt;Init.ClockSpeed&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;100000;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00319"/>00319 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00320"/>00320 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;hi2c-&gt;Init.OwnAddress1&#32;&#32;&#32;&#32;&#32;&#32;=&#32;localaddress;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00322"/>00322 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(config-&gt;GetAddressSize())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_config_8h_1a711bda3a7fc20e8bd85ed096a2b2a69aa94bb0abe4825c25e39f423c11c27a5c8">DIOSTREAMI2CCONFIG_ADDRESSSIZE_DEFAULT</link>&#32;:
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_config_8h_1a711bda3a7fc20e8bd85ed096a2b2a69aa7099cdcd23615961bafc1518deb7e9c9">DIOSTREAMI2CCONFIG_ADDRESSSIZE_7BITS</link>&#32;&#32;&#32;:&#32;hi2c-&gt;Init.AddressingMode&#32;&#32;&#32;=&#32;I2C_ADDRESSINGMODE_7BIT;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_config_8h_1a711bda3a7fc20e8bd85ed096a2b2a69aa9691d588bf18079a144a4e8b27446833">DIOSTREAMI2CCONFIG_ADDRESSSIZE_10BITS</link>&#32;&#32;:&#32;hi2c-&gt;Init.AddressingMode&#32;&#32;&#32;=&#32;I2C_ADDRESSINGMODE_10BIT;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00329"/>00329 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;hi2c-&gt;Init.DualAddressMode&#32;&#32;=&#32;I2C_DUALADDRESS_DISABLE;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;hi2c-&gt;Init.OwnAddress2&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00332"/>00332 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(HW_STM32F0XX)&#32;||&#32;defined(HW_STM32F3XX)&#32;||&#32;defined(HW_STM32WB55XX)&#32;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;hi2c-&gt;Init.OwnAddress2Masks&#32;=&#32;I2C_OA2_NOMASK;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00334"/>00334 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;hi2c-&gt;Init.GeneralCallMode&#32;&#32;=&#32;I2C_GENERALCALL_DISABLE;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;hi2c-&gt;Init.NoStretchMode&#32;&#32;&#32;&#32;=&#32;config-&gt;IsStretchActive()?I2C_NOSTRETCH_ENABLE:I2C_NOSTRETCH_DISABLE;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00337"/>00337 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;=(HAL_I2C_Init(hi2c)&#32;==&#32;HAL_OK)?<emphasis role="keyword">true</emphasis>:false;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(result)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00341"/>00341 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(HW_STM32F0XX)&#32;||&#32;defined(HW_STM32F3XX)&#32;||&#32;defined(HW_STM32WB55XX)&#32;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;(HAL_I2CEx_ConfigAnalogFilter(hi2c,&#32;I2C_ANALOGFILTER_ENABLE)&#32;==&#32;HAL_OK)?<emphasis role="keyword">true</emphasis>:false;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00343"/>00343 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(result)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;(HAL_I2CEx_ConfigDigitalFilter(hi2c,&#32;0)&#32;==&#32;HAL_OK)?<emphasis role="keyword">true</emphasis>:false;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(result)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(config-&gt;GetMode()&#32;==&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008ceccaf1e4ddefa116da1bfbe2ed3d2caedaa8">DIOSTREAMMODE_MASTER</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;(HAL_I2C_IsDeviceReady(hi2c,&#32;(uint16_t)remoteaddress,&#32;10,&#32;1000)&#32;==&#32;HAL_OK)?<emphasis role="keyword">true</emphasis>:false;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00357"/>00357 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;port-&gt;SetHandleI2C(hi2c);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::ports[indexport]&#32;=&#32;port;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;hi2c&#32;=&#32;DIOSTM32STREAMI2C::ports[indexport]-&gt;GetHandleI2C();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::ports[indexport]-&gt;SetCounterRef(DIOSTM32STREAMI2C::ports[indexport]-&gt;GetCounterRef()+1);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00368"/>00368 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00369"/>00369 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(result)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;SetEvent(<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784ca19d5447e5a500b417b73337bb74070a9">DIOSTREAMI2C_FSMEVENT_CONNECTED</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00372"/>00372 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa264f9a9556afb61979d377ba92266a76">DIOSTREAMSTATUS_CONNECTED</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00374"/>00374 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;memset(bufferdata,&#32;0,&#32;<link linkend="__d_i_o_stream_8h_1aad641424d597536a03a19645768c03b4">DIOSTREAM_MAXBUFFER</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00376"/>00376 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;ResetXBuffers();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;ResetConnectionStatistics();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00379"/>00379 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;=threadconnection-&gt;Ini();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00383"/>00383 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00384"/>00384 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00385"/>00385 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00386"/>00386 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00387"/>00387 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00400"/>00400 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMI2C::WaitToFilledReadingBuffer(<emphasis role="keywordtype">int</emphasis>&#32;filledto,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00401"/>00401 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00402"/>00402 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(filledto&#32;==&#32;<link linkend="__d_i_o_stream_8h_1a13a0907b21de66249451948f84f92183">DIOSTREAM_SOMETHINGTOREAD</link>)&#32;sizebufferdata&#32;=&#32;1;&#32;<emphasis role="keywordflow">else</emphasis>&#32;sizebufferdata&#32;=&#32;filledto;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00403"/>00403 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00404"/>00404 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(config-&gt;GetMode())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008ceccaf1e4ddefa116da1bfbe2ed3d2caedaa8">DIOSTREAMMODE_MASTER</link>&#32;&#32;&#32;&#32;&#32;:&#32;HAL_I2C_Master_Receive_IT(hi2c,&#32;(uint16_t)remoteaddress,&#32;(uint8_t*)bufferdata,&#32;sizebufferdata);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00408"/>00408 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008ceccad142e1ba565379dd5c6608f71aac2fc3">DIOSTREAMMODE_SEMIMASTER</link>&#32;:
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008cecca6f21237dbdeb82235c36e04a454b416c">DIOSTREAMMODE_SLAVE</link>&#32;&#32;&#32;&#32;&#32;&#32;:&#32;HAL_I2C_Slave_Receive_IT(hi2c,&#32;(uint8_t*)bufferdata,&#32;sizebufferdata);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00414"/>00414 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00415"/>00415 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga6e20f03ff391343123fda221a5c2ed85">DIOSTREAM::WaitToFilledReadingBuffer</link>(sizebufferdata,&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00416"/>00416 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00417"/>00417 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00418"/>00418 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00419"/>00419 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00432"/>00432 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOSTM32STREAMI2C::ReadDirect(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00433"/>00433 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00434"/>00434 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!config)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00435"/>00435 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00436"/>00436 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00437"/>00437 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;br&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00438"/>00438 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00439"/>00439 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(config-&gt;GetMode())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008ceccaf1e4ddefa116da1bfbe2ed3d2caedaa8">DIOSTREAMMODE_MASTER</link>&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">if</emphasis>(HAL_I2C_Master_Receive(hi2c,&#32;(uint16_t)remoteaddress,&#32;buffer,&#32;size,&#32;1000)&#32;==&#32;HAL_OK)&#32;br&#32;=&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00443"/>00443 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008ceccad142e1ba565379dd5c6608f71aac2fc3">DIOSTREAMMODE_SEMIMASTER</link>&#32;:
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008cecca6f21237dbdeb82235c36e04a454b416c">DIOSTREAMMODE_SLAVE</link>&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">if</emphasis>(HAL_I2C_Slave_Receive(hi2c,&#32;buffer,&#32;size,&#32;1000)&#32;==&#32;HAL_OK)&#32;br&#32;=&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00447"/>00447 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00450"/>00450 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00451"/>00451 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;br;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00452"/>00452 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00453"/>00453 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00454"/>00454 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00455"/>00455 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00468"/>00468 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOSTM32STREAMI2C::WriteDirect(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00469"/>00469 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00470"/>00470 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!config)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00471"/>00471 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00472"/>00472 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00473"/>00473 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;bw&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00474"/>00474 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00475"/>00475 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00476"/>00476 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(config-&gt;GetMode())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008ceccaf1e4ddefa116da1bfbe2ed3d2caedaa8">DIOSTREAMMODE_MASTER</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008ceccad142e1ba565379dd5c6608f71aac2fc3">DIOSTREAMMODE_SEMIMASTER</link>&#32;&#32;&#32;:&#32;<emphasis role="comment">//HAL_I2C_Mem_Write(&amp;hi2c_fuel_gauge,&#32;LTC2942_ADDR,&#32;address,&#32;I2C_MEMADD_SIZE_8BIT,&#32;&amp;value,&#32;1,&#32;10);</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(HAL_I2C_Master_Transmit(hi2c,&#32;(uint16_t)remoteaddress,&#32;buffer,&#32;size,&#32;1000)&#32;==&#32;HAL_OK)&#32;bw&#32;=&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00484"/>00484 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008cecca6f21237dbdeb82235c36e04a454b416c">DIOSTREAMMODE_SLAVE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">if</emphasis>(HAL_I2C_Slave_Transmit(hi2c,&#32;buffer,&#32;size,&#32;1000)&#32;==&#32;HAL_OK)&#32;bw&#32;=&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00487"/>00487 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00490"/>00490 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00491"/>00491 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bw;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00492"/>00492 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00493"/>00493 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00494"/>00494 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00495"/>00495 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00508"/>00508 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOSTM32STREAMI2C::Write(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00509"/>00509 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00510"/>00510 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outbuffer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00511"/>00511 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00512"/>00512 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(outbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00513"/>00513 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00514"/>00514 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00515"/>00515 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00516"/>00516 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00517"/>00517 &#32;&#32;outbuffer-&gt;SetBlocked(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00518"/>00518 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00519"/>00519 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outbuffer-&gt;Add(buffer,size))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00520"/>00520 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00521"/>00521 &#32;&#32;nbyteswrite+=size;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00522"/>00522 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xtimernotactivity)&#32;xtimernotactivity-&gt;Reset();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00523"/>00523 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00524"/>00524 &#32;&#32;outbuffer-&gt;SetBlocked(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00525"/>00525 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00526"/>00526 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00527"/>00527 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00528"/>00528 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00529"/>00529 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00530"/>00530 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00540"/>00540 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMI2C::Disconnect()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00541"/>00541 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00542"/>00542 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00543"/>00543 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00544"/>00544 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00545"/>00545 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00546"/>00546 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00556"/>00556 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMI2C::Close()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00557"/>00557 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00558"/>00558 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadconnection)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00559"/>00559 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00560"/>00560 &#32;&#32;threadconnection-&gt;End();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00561"/>00561 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00562"/>00562 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00563"/>00563 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00564"/>00564 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DIOSTM32STREAMI2C::handles[indexhandle])&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00565"/>00565 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00566"/>00566 &#32;&#32;DIOSTM32STREAMI2C::handles[indexhandle]&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00567"/>00567 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00568"/>00568 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DIOSTM32STREAMI2C::ports[indexport]-&gt;GetCounterRef())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00569"/>00569 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;HAL_I2C_DeInit(DIOSTM32STREAMI2C::ports[indexport]-&gt;GetHandleI2C());
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00571"/>00571 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;DIOSTM32STREAMI2C::ports[indexport]-&gt;GetHandleI2C();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;DIOSTM32STREAMI2C::ports[indexport];
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00574"/>00574 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::ports[indexport]&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00576"/>00576 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00577"/>00577 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00578"/>00578 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::ports[indexport]-&gt;SetCounterRef(DIOSTM32STREAMI2C::ports[indexport]-&gt;GetCounterRef()-1);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00580"/>00580 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00581"/>00581 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00582"/>00582 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00583"/>00583 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00584"/>00584 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00585"/>00585 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00586"/>00586 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00597"/>00597 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMI2C::CleanBuffers()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00598"/>00598 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00599"/>00599 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00600"/>00600 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00601"/>00601 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00602"/>00602 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00603"/>00603 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00613"/>00613 <emphasis role="keywordtype">void</emphasis>&#32;HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef*&#32;hi2c)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00614"/>00614 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00615"/>00615 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;indexport&#32;=&#32;-1;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00616"/>00616 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00617"/>00617 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(hi2c-&gt;Instance&#32;==&#32;I2C1)&#32;indexport&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00618"/>00618 &#32;&#32;<emphasis role="comment">//if(hi2c-&gt;Instance&#32;==&#32;I2C2)&#32;indexport&#32;=&#32;1;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00619"/>00619 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00620"/>00620 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;DIOSTM32STREAMI2C_MAXHANDLES;&#32;c++)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(DIOSTM32STREAMI2C::handles[c])
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(DIOSTM32STREAMI2C::handles[c]-&gt;indexport&#32;&#32;==&#32;indexport)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(DIOSTM32STREAMI2C::handles[c]-&gt;GetConnectStatus()&#32;==&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa264f9a9556afb61979d377ba92266a76">DIOSTREAMSTATUS_CONNECTED</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DIOSTM32STREAMI2C::handles[c]-&gt;IsBlockRead())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DIOSTM32STREAMI2C::handles[c]-&gt;inbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(DIOSTM32STREAMI2C::handles[c]-&gt;readcache[indexport].GetSize())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::handles[c]-&gt;inbuffer-&gt;Add(DIOSTM32STREAMI2C::handles[c]-&gt;readcache);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::handles[c]-&gt;readcache[indexport].Delete();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00637"/>00637 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::handles[c]-&gt;inbuffer-&gt;Add(DIOSTM32STREAMI2C::handles[c]-&gt;bufferdata,&#32;DIOSTM32STREAMI2C::handles[c]-&gt;sizebufferdata);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::handles[c]-&gt;readcache[indexport].Add(DIOSTM32STREAMI2C::handles[c]-&gt;bufferdata,&#32;DIOSTM32STREAMI2C::handles[c]-&gt;sizebufferdata);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00646"/>00646 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32STREAMI2C::handles[c]-&gt;sizebufferdata&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00651"/>00651 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00652"/>00652 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00653"/>00653 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00654"/>00654 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00664"/>00664 <emphasis role="keywordtype">void</emphasis>&#32;HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef*&#32;hi2c)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00665"/>00665 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00666"/>00666 &#32;&#32;HAL_I2C_MasterRxCpltCallback(hi2c);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00667"/>00667 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00668"/>00668 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00669"/>00669 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00670"/>00670 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00680"/>00680 <emphasis role="keywordtype">void</emphasis>&#32;HAL_I2C_ErrorCallback(I2C_HandleTypeDef&#32;*hi2c)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00681"/>00681 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00682"/>00682 &#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;I2C&#32;comunication&#32;error&#32;&#32;%d&quot;</emphasis>),&#32;hi2c-&gt;ErrorCode);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00683"/>00683 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00684"/>00684 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00685"/>00685 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00686"/>00686 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00696"/>00696 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMI2C::ThreadConnection(<emphasis role="keywordtype">void</emphasis>*&#32;param)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00697"/>00697 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00698"/>00698 &#32;&#32;<link linkend="_class_d_i_o_s_t_m32_s_t_r_e_a_m_i2_c">DIOSTM32STREAMI2C</link>*&#32;diostream&#32;=&#32;(<link linkend="_class_d_i_o_s_t_m32_s_t_r_e_a_m_i2_c">DIOSTM32STREAMI2C</link>*)param;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00699"/>00699 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00700"/>00700 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00701"/>00701 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;GetEvent()==<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784caa86e78b63b0b90197db4bfde7c76eba5">DIOSTREAMI2C_FSMEVENT_NONE</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00702"/>00702 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(diostream-&gt;GetCurrentState())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aaef5bfadf7b0c8b3ca925125f170b7e1d">DIOSTREAMI2C_FSMSTATE_NONE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00706"/>00706 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa336cd34f4f533b415489abbe19db0137">DIOSTREAMI2C_FSMSTATE_CONNECTED</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00708"/>00708 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa1952d5fe9f20b95389cecbb2eb0bd65d">DIOSTREAMI2C_FSMSTATE_WAITINGTOREAD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;IsBlockRead())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;inbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;readcache[diostream-&gt;indexport].GetSize())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;inbuffer-&gt;Add(diostream-&gt;readcache[diostream-&gt;indexport]);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;readcache[diostream-&gt;indexport].Delete();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00720"/>00720 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;IsBlockWrite())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;outbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;esize&#32;=&#32;diostream-&gt;outbuffer-&gt;GetSize();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(esize&gt;<link linkend="__d_i_o_stream_8h_1aad641424d597536a03a19645768c03b4">DIOSTREAM_MAXBUFFER</link>)&#32;esize&#32;=&#32;<link linkend="__d_i_o_stream_8h_1aad641424d597536a03a19645768c03b4">DIOSTREAM_MAXBUFFER</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00727"/>00727 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(esize)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;outbuffer-&gt;Extract(diostream-&gt;writebuffer,&#32;0,&#32;esize);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;_esize&#32;=&#32;diostream-&gt;WriteDirect(diostream-&gt;writebuffer,&#32;esize);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_esize&#32;!=&#32;esize)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;outbuffer-&gt;Add(diostream-&gt;writebuffer,&#32;esize);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00740"/>00740 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa68aae42247e55f0428f08ed8d422673d">DIOSTREAMI2C_FSMSTATE_DISCONNECTING</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00742"/>00742 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00744"/>00744 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00745"/>00745 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00746"/>00746 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;GetEvent()&lt;<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784ca937047e7f4a57cb8112f222f532c388e">DIOSTREAMI2C_LASTEVENT</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;CheckTransition();
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00750"/>00750 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(diostream-&gt;GetCurrentState())
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aaef5bfadf7b0c8b3ca925125f170b7e1d">DIOSTREAMI2C_FSMSTATE_NONE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00754"/>00754 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa336cd34f4f533b415489abbe19db0137">DIOSTREAMI2C_FSMSTATE_CONNECTED</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_x_e_v_e_n_t">DIOSTREAMXEVENT</link>&#32;xevent(diostream,<link linkend="__d_i_o_stream_x_event_8h_1a03855c794a83f8d6c636156f111c4829a51978d78ab30f0f5237c9d2b78a80a85">DIOSTREAMXEVENT_TYPE_CONNECTED</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetDIOStream(diostream);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;PostEvent(&amp;xevent);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00758"/>00758 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;SetEvent(<link linkend="__d_i_o_stream_i2_c_8h_1a48e0633a60f12e2ce00cdbb71f0b784ca4ecd7d75fb748d0c760c9e3d4b72fb6b">DIOSTREAMI2C_FSMEVENT_WAITINGTOREAD</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00762"/>00762 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa1952d5fe9f20b95389cecbb2eb0bd65d">DIOSTREAMI2C_FSMSTATE_WAITINGTOREAD</link>&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00764"/>00764 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_i2_c_8h_1a510b5178c0543029e24ad63a990b242aa68aae42247e55f0428f08ed8d422673d">DIOSTREAMI2C_FSMSTATE_DISCONNECTING</link>&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_x_e_v_e_n_t">DIOSTREAMXEVENT</link>&#32;xevent(diostream,<link linkend="__d_i_o_stream_x_event_8h_1a03855c794a83f8d6c636156f111c4829ae953bc0973c4cdebf1b26ed06c424b52">DIOSTREAMXEVENT_TYPE_DISCONNECTED</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetDIOStream(diostream);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;PostEvent(&amp;xevent);
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00768"/>00768 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;status&#32;=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00774"/>00774 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00775"/>00775 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00776"/>00776 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00777"/>00777 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00778"/>00778 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00787"/>00787 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMI2C::Clean()
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00788"/>00788 {
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00789"/>00789 &#32;&#32;hi2c&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00790"/>00790 &#32;&#32;localaddress&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00791"/>00791 &#32;&#32;remoteaddress&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00792"/>00792 &#32;&#32;threadconnection&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00793"/>00793 &#32;&#32;indexhandle&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;-1;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00794"/>00794 &#32;&#32;indexport&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;-1;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00795"/>00795 &#32;&#32;sizebufferdata&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00796"/>00796 }
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00797"/>00797 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00798"/>00798 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00799"/>00799 
<anchor xml:id="__d_i_o_s_t_m32_stream_i2_c_8cpp_source_1l00800"/>00800 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
