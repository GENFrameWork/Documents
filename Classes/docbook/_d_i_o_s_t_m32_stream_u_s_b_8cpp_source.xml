<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source" xml:lang="en-US">
<title>DIOSTM32StreamUSB.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/DIOSTM32StreamUSB.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;CONTROL&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00030"/>00030 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00032"/>00032 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00033"/>00033 <emphasis role="preprocessor">#if&#32;defined(DIO_ACTIVE)&#32;&amp;&amp;&#32;defined(DIO_STREAMUSB_ACTIVE)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00034"/>00034 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00035"/>00035 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32___h_a_l_8h">XSTM32_HAL.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;usbd_cdc_if.h&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00039"/>00039 <emphasis role="preprocessor">#include&#32;&quot;usb_device.h&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00040"/>00040 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_thread_collected_8h">XThreadCollected.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00043"/>00043 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_x_event_8h">DIOStreamXEvent.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_u_s_b_config_8h">DIOStreamUSBConfig.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00046"/>00046 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_s_t_m32_stream_u_s_b_8h">DIOSTM32StreamUSB.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00048"/>00048 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00050"/>00050 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00051"/>00051 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00052"/>00052 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00053"/>00053 <link linkend="_class_d_i_o_s_t_m32_s_t_r_e_a_m_u_s_b">DIOSTM32STREAMUSB</link>*&#32;&#32;&#32;&#32;&#32;&#32;diostreamusbptrhandle&#32;=&#32;&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00055"/>00055 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00056"/>00056 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00057"/>00057 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00066"/>00066 DIOSTM32STREAMUSB::DIOSTM32STREAMUSB()&#32;:&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_u_s_b">DIOSTREAMUSB</link>(),&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e">XFSMACHINE</link>(0)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00067"/>00067 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00068"/>00068 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00069"/>00069 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00070"/>00070 &#32;&#32;AddState(&#32;DIOSTM32USBFSMSTATE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32USBFSMEVENT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOSTM32USBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32USBFSMEVENT_DISCONNECTING&#32;&#32;&#32;,&#32;DIOSTM32USBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00074"/>00074 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00075"/>00075 &#32;&#32;AddState(&#32;DIOSTM32USBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32USBFSMEVENT_WAITINGTOREAD&#32;&#32;&#32;,&#32;DIOSTM32USBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32USBFSMEVENT_DISCONNECTING&#32;&#32;&#32;,&#32;DIOSTM32USBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00079"/>00079 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00080"/>00080 &#32;&#32;AddState(&#32;DIOSTM32USBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32USBFSMEVENT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOSTM32USBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32USBFSMEVENT_DISCONNECTING&#32;&#32;&#32;,&#32;DIOSTM32USBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00084"/>00084 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00085"/>00085 &#32;&#32;AddState(&#32;DIOSTM32USBFSMSTATE_DISCONNECTING&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32USBFSMEVENT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOSTM32USBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32USBFSMEVENT_WAITINGTOREAD&#32;&#32;&#32;,&#32;DIOSTM32USBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00089"/>00089 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00090"/>00090 &#32;&#32;threadconnection&#32;=&#32;<link linkend="__x_thread_collected_8h_1aad503e3655b9ff78d3ac660d1f1f5534">CREATEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a84cb8ce10e9d83f06cdd1b368d0b67ea">XTHREADGROUPID_DIOSTREAMUSB</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;DIOSTM32STREAMUSB::DIOSTM32STREAMUSB&quot;</emphasis>),&#32;ThreadConnection,&#32;(<emphasis role="keywordtype">void</emphasis>*)<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00091"/>00091 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00092"/>00092 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00093"/>00093 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00094"/>00094 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00103"/>00103 DIOSTM32STREAMUSB::~DIOSTM32STREAMUSB()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00104"/>00104 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00105"/>00105 &#32;&#32;Close();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00106"/>00106 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00107"/>00107 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(threadconnection)&#32;<link linkend="__x_thread_collected_8h_1a18fb843f5fbad51464b68d705ed29b8a">DELETEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a84cb8ce10e9d83f06cdd1b368d0b67ea">XTHREADGROUPID_DIOSTREAMUSB</link>,&#32;threadconnection);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00108"/>00108 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00109"/>00109 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00110"/>00110 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00111"/>00111 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00112"/>00112 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00113"/>00113 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00123"/>00123 <link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0f">DIOSTREAMSTATUS</link>&#32;DIOSTM32STREAMUSB::GetConnectStatus()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00124"/>00124 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00125"/>00125 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!config)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00126"/>00126 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00127"/>00127 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00128"/>00128 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00129"/>00129 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00130"/>00130 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00131"/>00131 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00141"/>00141 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUSB::Open()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00142"/>00142 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadconnection)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00144"/>00144 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00145"/>00145 &#32;&#32;MX_USB_DEVICE_Init();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00146"/>00146 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00147"/>00147 &#32;&#32;diostreamusbptrhandle&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00148"/>00148 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00149"/>00149 &#32;&#32;SetEvent(DIOSTM32USBFSMEVENT_CONNECTED);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00150"/>00150 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00151"/>00151 &#32;&#32;status&#32;=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa264f9a9556afb61979d377ba92266a76">DIOSTREAMSTATUS_CONNECTED</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00152"/>00152 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00153"/>00153 &#32;&#32;ResetXBuffers();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00154"/>00154 &#32;&#32;ResetConnectionStatistics();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00155"/>00155 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00156"/>00156 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;threadconnection-&gt;Ini();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00157"/>00157 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00158"/>00158 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00159"/>00159 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00160"/>00160 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00173"/>00173 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOSTM32STREAMUSB::WriteDirect(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00174"/>00174 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00175"/>00175 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00176"/>00176 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00177"/>00177 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(CDC_Transmit_FS((uint8_t*)buffer,&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)size)&#32;==&#32;USBD_OK)&#32;<emphasis role="keywordflow">return</emphasis>&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00178"/>00178 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00179"/>00179 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00180"/>00180 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00181"/>00181 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00182"/>00182 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00183"/>00183 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00196"/>00196 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOSTM32STREAMUSB::Write(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00197"/>00197 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00198"/>00198 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outbuffer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00199"/>00199 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00200"/>00200 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(outbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00202"/>00202 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00204"/>00204 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00205"/>00205 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outbuffer-&gt;Add(buffer,size))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00206"/>00206 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00207"/>00207 &#32;&#32;nbyteswrite+=size;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00208"/>00208 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xtimernotactivity)&#32;xtimernotactivity-&gt;Reset();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00209"/>00209 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00210"/>00210 &#32;&#32;outbuffer-&gt;SetBlocked(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00211"/>00211 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00212"/>00212 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00213"/>00213 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00214"/>00214 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00215"/>00215 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00216"/>00216 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00226"/>00226 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUSB::Disconnect()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00227"/>00227 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00228"/>00228 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00229"/>00229 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00230"/>00230 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00231"/>00231 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00232"/>00232 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00242"/>00242 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUSB::Close()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00243"/>00243 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00244"/>00244 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadconnection)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00245"/>00245 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00246"/>00246 &#32;&#32;threadconnection-&gt;End();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00247"/>00247 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00248"/>00248 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00249"/>00249 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00250"/>00250 &#32;&#32;diostreamusbptrhandle&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00251"/>00251 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00252"/>00252 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00253"/>00253 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00254"/>00254 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00255"/>00255 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00256"/>00256 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00267"/>00267 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUSB::CleanBuffers()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00268"/>00268 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00269"/>00269 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00270"/>00270 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00271"/>00271 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00272"/>00272 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00273"/>00273 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00274"/>00274 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00285"/>00285 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMUSB::HAL_USB_RxCpltCallback(uint8_t*&#32;buffer,&#32;uint32_t&#32;*len)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00286"/>00286 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00287"/>00287 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()&#32;==&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00288"/>00288 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(IsBlockRead())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00289"/>00289 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00290"/>00290 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!inbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(readcache.GetSize())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inbuffer-&gt;Add(readcache);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;readcache.Delete();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00297"/>00297 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;inbuffer-&gt;Add((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)buffer,&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(*len));
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;readcache.Add((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)buffer,&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(*len));
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00304"/>00304 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00305"/>00305 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00306"/>00306 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00307"/>00307 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00317"/>00317 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMUSB::ThreadConnection(<emphasis role="keywordtype">void</emphasis>*&#32;param)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00318"/>00318 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00319"/>00319 &#32;&#32;<link linkend="_class_d_i_o_s_t_m32_s_t_r_e_a_m_u_s_b">DIOSTM32STREAMUSB</link>*&#32;diostream&#32;=&#32;(<link linkend="_class_d_i_o_s_t_m32_s_t_r_e_a_m_u_s_b">DIOSTM32STREAMUSB</link>*)param;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00320"/>00320 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00321"/>00321 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00322"/>00322 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;GetEvent()==DIOSTM32USBFSMEVENT_NONE)&#32;<emphasis role="comment">//&#32;No&#32;hay&#32;nuevos&#32;Eventos</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(diostream-&gt;GetCurrentState())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32USBFSMSTATE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00327"/>00327 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32USBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00329"/>00329 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32USBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;IsBlockRead())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;inbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;readcache.GetSize())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;inbuffer-&gt;Add(diostream-&gt;readcache);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;readcache.Delete();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00341"/>00341 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;IsBlockWrite())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;outbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;esize&#32;=&#32;diostream-&gt;outbuffer-&gt;GetSize();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(esize&gt;<link linkend="__d_i_o_stream_8h_1aad641424d597536a03a19645768c03b4">DIOSTREAM_MAXBUFFER</link>)&#32;esize&#32;=&#32;<link linkend="__d_i_o_stream_8h_1aad641424d597536a03a19645768c03b4">DIOSTREAM_MAXBUFFER</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00348"/>00348 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(esize)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;outbuffer-&gt;Get(diostream-&gt;writebuffer,&#32;esize,&#32;0);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;WriteDirect(diostream-&gt;writebuffer,&#32;esize))
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;outbuffer-&gt;Extract(<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;esize);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00361"/>00361 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32USBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00363"/>00363 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;GetEvent()&lt;DIOSTM32USB_LASTEVENT)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;CheckTransition();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00371"/>00371 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(diostream-&gt;GetCurrentState())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32USBFSMSTATE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00375"/>00375 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32USBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_x_e_v_e_n_t">DIOSTREAMXEVENT</link>&#32;xevent(diostream,<link linkend="__d_i_o_stream_x_event_8h_1a03855c794a83f8d6c636156f111c4829a51978d78ab30f0f5237c9d2b78a80a85">DIOSTREAMXEVENT_TYPE_CONNECTED</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetDIOStream(diostream);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;PostEvent(&amp;xevent);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00379"/>00379 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;SetEvent(DIOSTM32USBFSMEVENT_WAITINGTOREAD);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00383"/>00383 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32USBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00385"/>00385 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32USBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_x_e_v_e_n_t">DIOSTREAMXEVENT</link>&#32;xevent(diostream,<link linkend="__d_i_o_stream_x_event_8h_1a03855c794a83f8d6c636156f111c4829ae953bc0973c4cdebf1b26ed06c424b52">DIOSTREAMXEVENT_TYPE_DISCONNECTED</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetDIOStream(diostream);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;PostEvent(&amp;xevent);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00389"/>00389 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;status&#32;=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00396"/>00396 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00397"/>00397 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00398"/>00398 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00399"/>00399 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00408"/>00408 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMUSB::Clean()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00409"/>00409 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00410"/>00410 &#32;&#32;threadconnection&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00411"/>00411 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00412"/>00412 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00413"/>00413 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00414"/>00414 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00415"/>00415 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00416"/>00416 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_s_b_8cpp_source_1l00417"/>00417 
</programlisting></section>
