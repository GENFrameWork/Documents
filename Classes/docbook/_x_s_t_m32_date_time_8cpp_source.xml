<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_s_t_m32_date_time_8cpp_source" xml:lang="en-US">
<title>XSTM32DateTime.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/XSTM32DateTime.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;CONTROL&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00030"/>00030 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00032"/>00032 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00034"/>00034 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_date_time_8h">XSTM32DateTime.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00037"/>00037 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00042"/>00042 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00044"/>00044 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00052"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gaf75c97a03ae1bbc827759825a56f0136">00052</link> <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gaf75c97a03ae1bbc827759825a56f0136">XSTM32DATETIME::XSTM32DATETIME</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00053"/>00053 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00054"/>00054 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00055"/>00055 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00056"/>00056 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00057"/>00057 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00067"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga06a51e413677585e46a98d0c5bd63f14">00067</link> <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga06a51e413677585e46a98d0c5bd63f14">XSTM32DATETIME::~XSTM32DATETIME</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00068"/>00068 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00069"/>00069 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00070"/>00070 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00071"/>00071 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00072"/>00072 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00073"/>00073 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00083"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gadca7e1b2cdef1e59e753e6527ead52e0">00083</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gadca7e1b2cdef1e59e753e6527ead52e0">XSTM32DATETIME::Read</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00084"/>00084 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00085"/>00085 &#32;&#32;<emphasis role="comment">//GetActualDateTime(this);</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00086"/>00086 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00087"/>00087 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00088"/>00088 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00089"/>00089 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00090"/>00090 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00091"/>00091 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00101"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga108faad13c5bd1ab6ff8a391e871c8c9">00101</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga108faad13c5bd1ab6ff8a391e871c8c9">XSTM32DATETIME::Write</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00102"/>00102 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00103"/>00103 &#32;&#32;<emphasis role="comment">//SetActualDateTime(this);</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00104"/>00104 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00105"/>00105 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00106"/>00106 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00107"/>00107 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00108"/>00108 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00109"/>00109 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00119"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gadcdd3202ff23a5c4ca607ff3513387b7">00119</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gadcdd3202ff23a5c4ca607ff3513387b7">XSTM32DATETIME::GetMeridianDifference</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00120"/>00120 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00121"/>00121 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)0;
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00122"/>00122 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00123"/>00123 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00124"/>00124 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00125"/>00125 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00137"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga9803b220ab416975e11b3e8b9072a03b">00137</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga9803b220ab416975e11b3e8b9072a03b">XSTM32DATETIME::IsDayLigthSavingTime</link>(<emphasis role="keywordtype">int</emphasis>*&#32;bias)
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00138"/>00138 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00139"/>00139 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00140"/>00140 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00141"/>00141 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00142"/>00142 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00143"/>00143 
</programlisting></section>
