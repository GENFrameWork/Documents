<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__hash_c_r_c16_8cpp_source" xml:lang="en-US">
<title>HashCRC16.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/HashCRC16.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__hash_c_r_c16_8cpp_source_1l00001"/>00001 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00031"/>00031 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00033"/>00033 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00035"/>00035 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00036"/>00036 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00039"/>00039 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_c_r_c16_8h">HashCRC16.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00041"/>00041 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00044"/>00044 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00046"/>00046 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00048"/>00048 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00049"/>00049 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00050"/>00050 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00052"/>00052 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00054"/>00054 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00055"/>00055 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00058"/>00058 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00059"/>00059 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00067"/><link linkend="_group___c_i_p_h_e_r_1gaee2aa51364acccb93e26ac8bafcbee17">00067</link> <link linkend="_group___c_i_p_h_e_r_1gaee2aa51364acccb93e26ac8bafcbee17">HASHCRC16::HASHCRC16</link>()&#32;:&#32;<link linkend="_class_h_a_s_h">HASH</link>()
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00068"/>00068 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00069"/>00069 &#32;&#32;Clean();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00070"/>00070 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00071"/>00071 &#32;&#32;<link linkend="_class_h_a_s_h_1ad5af89903501908c4dcda95b37a5a785">type</link>&#32;=&#32;<link linkend="__hash_8h_1acf4dd3cf891bcd5c364340e2828a7ec9a4f1f68f09e456062fd9a98f2e87a1942">HASHTYPE_CRC16</link>;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00072"/>00072 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00073"/>00073 &#32;&#32;resulttmp&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00074"/>00074 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00075"/>00075 &#32;&#32;<emphasis role="comment">//XWORD&#32;value&#32;=&#32;0xffff;</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00076"/>00076 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;value&#32;=&#32;0x0000;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00077"/>00077 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)value);
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00078"/>00078 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00079"/>00079 &#32;&#32;Ini();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00080"/>00080 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00081"/>00081 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00082"/>00082 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00091"/><link linkend="_group___c_i_p_h_e_r_1ga6ed530123ba4e1605adbb901727ab0d6">00091</link> <link linkend="_group___c_i_p_h_e_r_1ga6ed530123ba4e1605adbb901727ab0d6">HASHCRC16::~HASHCRC16</link>()
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00092"/>00092 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00093"/>00093 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(resulttmp)
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;resulttmp;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;resulttmp&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00098"/>00098 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00099"/>00099 &#32;&#32;Clean();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00100"/>00100 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00101"/>00101 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00102"/>00102 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00115"/><link linkend="_group___c_i_p_h_e_r_1gae5d3a881c68661f87b103be61f8191da">00115</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1gae5d3a881c68661f87b103be61f8191da">HASHCRC16::Do</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size)
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00116"/>00116 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00117"/>00117 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00118"/>00118 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00119"/>00119 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;value&#32;=&#32;0;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00120"/>00120 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00121"/>00121 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(value);
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00122"/>00122 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00123"/>00123 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;size;&#32;c++)
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;Update(value,&#32;(*input));
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;input++;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00128"/>00128 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00129"/>00129 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)value);
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00130"/>00130 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00131"/>00131 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00132"/>00132 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00133"/>00133 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00134"/>00134 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00144"/><link linkend="_group___c_i_p_h_e_r_1ga153230bf6a08451ae1b38f13ad3374d5">00144</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga153230bf6a08451ae1b38f13ad3374d5">HASHCRC16::ResetResult</link>()
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00145"/>00145 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00146"/>00146 &#32;&#32;<link linkend="_group___c_i_p_h_e_r_1ga6844bc505aecfe2b878ef45f9d905e3e">HASH::ResetResult</link>();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00147"/>00147 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00148"/>00148 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00149"/>00149 &#32;&#32;<emphasis role="comment">//XWORD&#32;value&#32;=&#32;0xffff;&#32;//&#32;CRC16-ANSI&#32;has&#32;an&#32;initial&#32;value&#32;of&#32;0</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00150"/>00150 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;value&#32;=&#32;0x0000;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00151"/>00151 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)value);
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00152"/>00152 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00153"/>00153 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00154"/>00154 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00155"/>00155 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00156"/>00156 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00166"/><link linkend="_group___c_i_p_h_e_r_1gabadcce25167f1bd35dfad92a97c85afb">00166</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1gabadcce25167f1bd35dfad92a97c85afb">HASHCRC16::GetDefaultSize</link>()
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00167"/>00167 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00168"/>00168 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00169"/>00169 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00170"/>00170 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00171"/>00171 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00181"/><link linkend="_group___c_i_p_h_e_r_1gaddab75bfaf736892d65d5b98f6dc389d">00181</link> <link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;<link linkend="_group___c_i_p_h_e_r_1gaddab75bfaf736892d65d5b98f6dc389d">HASHCRC16::GetResult</link>()
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00182"/>00182 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00183"/>00183 &#32;&#32;<link linkend="_group___c_i_p_h_e_r_1gabfa992e801b2ef5589efc7d02e327cb9">GetResultCRC16</link>();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00184"/>00184 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00185"/>00185 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00186"/>00186 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00187"/>00187 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00188"/>00188 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00200"/><link linkend="_group___c_i_p_h_e_r_1ga28ae877311b66414a2965edd79e36162">00200</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;<link linkend="_group___c_i_p_h_e_r_1gaddab75bfaf736892d65d5b98f6dc389d">HASHCRC16::GetResult</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;resultsize)
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00201"/>00201 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00202"/>00202 &#32;&#32;<link linkend="_group___c_i_p_h_e_r_1gabfa992e801b2ef5589efc7d02e327cb9">GetResultCRC16</link>();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00203"/>00203 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00204"/>00204 &#32;&#32;resultsize&#32;=&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00205"/>00205 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00206"/>00206 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00207"/>00207 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00208"/>00208 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00209"/>00209 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00219"/><link linkend="_group___c_i_p_h_e_r_1gabfa992e801b2ef5589efc7d02e327cb9">00219</link> <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;<link linkend="_group___c_i_p_h_e_r_1gabfa992e801b2ef5589efc7d02e327cb9">HASHCRC16::GetResultCRC16</link>()
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00220"/>00220 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00221"/>00221 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;value&#32;=&#32;0;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00222"/>00222 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00223"/>00223 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00224"/>00224 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00225"/>00225 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(value);
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00226"/>00226 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00227"/>00227 &#32;&#32;<emphasis role="comment">//value&#32;^=&#32;0xffff;&#32;//&#32;CRC16-ANSI&#32;has&#32;an&#32;xor&#32;value&#32;of&#32;0</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00228"/>00228 &#32;&#32;value&#32;^=&#32;0x0000;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00229"/>00229 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00230"/>00230 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)value);
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00231"/>00231 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00232"/>00232 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00233"/>00233 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00234"/>00234 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00235"/>00235 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00245"/>00245 <emphasis role="keywordtype">void</emphasis>&#32;HASHCRC16::Ini(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00246"/>00246 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00247"/>00247 &#32;&#32;<emphasis role="comment">//&#32;precomputed&#32;CRC16</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00248"/>00248 &#32;&#32;<emphasis role="comment">//&#32;source:&#32;https://github.com/torvalds/linux/blob/master/lib/crc16.c</emphasis>
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00249"/>00249 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;tabletmp[256]&#32;=&#32;&#32;{
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0000,&#32;0xC0C1,&#32;0xC181,&#32;0x0140,&#32;0xC301,&#32;0x03C0,&#32;0x0280,&#32;0xC241,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xC601,&#32;0x06C0,&#32;0x0780,&#32;0xC741,&#32;0x0500,&#32;0xC5C1,&#32;0xC481,&#32;0x0440,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xCC01,&#32;0x0CC0,&#32;0x0D80,&#32;0xCD41,&#32;0x0F00,&#32;0xCFC1,&#32;0xCE81,&#32;0x0E40,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0A00,&#32;0xCAC1,&#32;0xCB81,&#32;0x0B40,&#32;0xC901,&#32;0x09C0,&#32;0x0880,&#32;0xC841,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xD801,&#32;0x18C0,&#32;0x1980,&#32;0xD941,&#32;0x1B00,&#32;0xDBC1,&#32;0xDA81,&#32;0x1A40,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x1E00,&#32;0xDEC1,&#32;0xDF81,&#32;0x1F40,&#32;0xDD01,&#32;0x1DC0,&#32;0x1C80,&#32;0xDC41,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x1400,&#32;0xD4C1,&#32;0xD581,&#32;0x1540,&#32;0xD701,&#32;0x17C0,&#32;0x1680,&#32;0xD641,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xD201,&#32;0x12C0,&#32;0x1380,&#32;0xD341,&#32;0x1100,&#32;0xD1C1,&#32;0xD081,&#32;0x1040,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xF001,&#32;0x30C0,&#32;0x3180,&#32;0xF141,&#32;0x3300,&#32;0xF3C1,&#32;0xF281,&#32;0x3240,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3600,&#32;0xF6C1,&#32;0xF781,&#32;0x3740,&#32;0xF501,&#32;0x35C0,&#32;0x3480,&#32;0xF441,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3C00,&#32;0xFCC1,&#32;0xFD81,&#32;0x3D40,&#32;0xFF01,&#32;0x3FC0,&#32;0x3E80,&#32;0xFE41,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFA01,&#32;0x3AC0,&#32;0x3B80,&#32;0xFB41,&#32;0x3900,&#32;0xF9C1,&#32;0xF881,&#32;0x3840,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x2800,&#32;0xE8C1,&#32;0xE981,&#32;0x2940,&#32;0xEB01,&#32;0x2BC0,&#32;0x2A80,&#32;0xEA41,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xEE01,&#32;0x2EC0,&#32;0x2F80,&#32;0xEF41,&#32;0x2D00,&#32;0xEDC1,&#32;0xEC81,&#32;0x2C40,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xE401,&#32;0x24C0,&#32;0x2580,&#32;0xE541,&#32;0x2700,&#32;0xE7C1,&#32;0xE681,&#32;0x2640,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x2200,&#32;0xE2C1,&#32;0xE381,&#32;0x2340,&#32;0xE101,&#32;0x21C0,&#32;0x2080,&#32;0xE041,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xA001,&#32;0x60C0,&#32;0x6180,&#32;0xA141,&#32;0x6300,&#32;0xA3C1,&#32;0xA281,&#32;0x6240,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x6600,&#32;0xA6C1,&#32;0xA781,&#32;0x6740,&#32;0xA501,&#32;0x65C0,&#32;0x6480,&#32;0xA441,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x6C00,&#32;0xACC1,&#32;0xAD81,&#32;0x6D40,&#32;0xAF01,&#32;0x6FC0,&#32;0x6E80,&#32;0xAE41,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xAA01,&#32;0x6AC0,&#32;0x6B80,&#32;0xAB41,&#32;0x6900,&#32;0xA9C1,&#32;0xA881,&#32;0x6840,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x7800,&#32;0xB8C1,&#32;0xB981,&#32;0x7940,&#32;0xBB01,&#32;0x7BC0,&#32;0x7A80,&#32;0xBA41,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xBE01,&#32;0x7EC0,&#32;0x7F80,&#32;0xBF41,&#32;0x7D00,&#32;0xBDC1,&#32;0xBC81,&#32;0x7C40,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xB401,&#32;0x74C0,&#32;0x7580,&#32;0xB541,&#32;0x7700,&#32;0xB7C1,&#32;0xB681,&#32;0x7640,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x7200,&#32;0xB2C1,&#32;0xB381,&#32;0x7340,&#32;0xB101,&#32;0x71C0,&#32;0x7080,&#32;0xB041,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5000,&#32;0x90C1,&#32;0x9181,&#32;0x5140,&#32;0x9301,&#32;0x53C0,&#32;0x5280,&#32;0x9241,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x9601,&#32;0x56C0,&#32;0x5780,&#32;0x9741,&#32;0x5500,&#32;0x95C1,&#32;0x9481,&#32;0x5440,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x9C01,&#32;0x5CC0,&#32;0x5D80,&#32;0x9D41,&#32;0x5F00,&#32;0x9FC1,&#32;0x9E81,&#32;0x5E40,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x5A00,&#32;0x9AC1,&#32;0x9B81,&#32;0x5B40,&#32;0x9901,&#32;0x59C0,&#32;0x5880,&#32;0x9841,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8801,&#32;0x48C0,&#32;0x4980,&#32;0x8941,&#32;0x4B00,&#32;0x8BC1,&#32;0x8A81,&#32;0x4A40,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x4E00,&#32;0x8EC1,&#32;0x8F81,&#32;0x4F40,&#32;0x8D01,&#32;0x4DC0,&#32;0x4C80,&#32;0x8C41,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x4400,&#32;0x84C1,&#32;0x8581,&#32;0x4540,&#32;0x8701,&#32;0x47C0,&#32;0x4680,&#32;0x8641,
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8201,&#32;0x42C0,&#32;0x4380,&#32;0x8341,&#32;0x4100,&#32;0x81C1,&#32;0x8081,&#32;0x4040
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00283"/>00283 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00284"/>00284 &#32;&#32;memcpy(table,&#32;tabletmp,&#32;256*<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00285"/>00285 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00286"/>00286 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00287"/>00287 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00300"/>00300 <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;HASHCRC16::Update(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;CRC16,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;c)
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00301"/>00301 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00302"/>00302 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(CRC16&#32;&gt;&gt;&#32;8)&#32;^&#32;table[(CRC16&#32;^&#32;c)&#32;&amp;&#32;0xff];
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00303"/>00303 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00304"/>00304 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00305"/>00305 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00314"/>00314 <emphasis role="keywordtype">void</emphasis>&#32;HASHCRC16::Clean()
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00315"/>00315 {
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00316"/>00316 &#32;&#32;resulttmp&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00317"/>00317 }
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00318"/>00318 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00319"/>00319 
<anchor xml:id="__hash_c_r_c16_8cpp_source_1l00320"/>00320 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
</programlisting></section>
