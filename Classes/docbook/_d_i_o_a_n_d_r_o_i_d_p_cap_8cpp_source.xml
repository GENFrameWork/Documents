<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source" xml:lang="en-US">
<title>DIOANDROIDPCap.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Android/DIOANDROIDPCap.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00031"/>00031 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00033"/>00033 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00035"/>00035 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#ifdef&#32;DIO_PCAP_ACTIVE</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00038"/>00038 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00042"/>00042 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_a_n_d_r_o_i_d_p_cap_8h">DIOANDROIDPCap.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00044"/>00044 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_thread_8h">XThread.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00048"/>00048 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00050"/>00050 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00052"/>00052 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00053"/>00053 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00054"/>00054 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00055"/>00055 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00056"/>00056 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00059"/>00059 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00060"/>00060 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00061"/>00061 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00062"/>00062 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00063"/>00063 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00071"/>00071 DIOANDROIDPCAP::DIOANDROIDPCAP()&#32;:&#32;<link linkend="_class_d_i_o_p_c_a_p">DIOPCAP</link>()
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00072"/>00072 {
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00073"/>00073 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00074"/>00074 }
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00075"/>00075 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00076"/>00076 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00085"/>00085 DIOANDROIDPCAP::~DIOANDROIDPCAP()
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00086"/>00086 {
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00087"/>00087 &#32;&#32;End();
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00088"/>00088 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00089"/>00089 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00090"/>00090 }
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00091"/>00091 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00092"/>00092 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00106"/>00106 <emphasis role="keywordtype">bool</emphasis>&#32;DIOANDROIDPCAP::Capture_Start(DIOPCAPNETINTERFACE*&#32;netinterface,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;promiscuousmode,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>)
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00107"/>00107 {
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00108"/>00108 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!netinterface)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00109"/>00109 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xfactory)&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00110"/>00110 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00111"/>00111 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;errbuf[PCAP_ERRBUF_SIZE];
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00112"/>00112 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00113"/>00113 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;charstr;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00114"/>00114 &#32;&#32;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00115"/>00115 &#32;&#32;(*netinterface-&gt;GetName()).ConvertToASCII(charstr);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00117"/>00117 &#32;&#32;handle=&#32;pcap_open_live(charstr.<link linkend="_group___x_u_t_i_l_s_1ga66e2dbd897e717ce38e395d6ad87b754">GetPtrChar</link>()&#32;&#32;&#32;,&#32;<emphasis role="comment">//&#32;name&#32;of&#32;the&#32;device</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;65536&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="comment">//&#32;portion&#32;of&#32;the&#32;packet&#32;to&#32;capture.&#32;&#32;65536&#32;grants&#32;that&#32;the&#32;whole&#32;packet&#32;will&#32;be&#32;captured&#32;on&#32;all&#32;the&#32;MACs.</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;promiscuousmode?1:0&#32;&#32;&#32;&#32;,&#32;<emphasis role="comment">//&#32;promiscuous&#32;mode&#32;(nonzero&#32;means&#32;promiscuous)</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="comment">//&#32;read&#32;timeout</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errbuf);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;error&#32;buffer&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00122"/>00122 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle&#32;==&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00123"/>00123 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00124"/>00124 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00125"/>00125 &#32;&#32;threadcapture&#32;=&#32;<link linkend="__x_thread_collected_8h_1aad503e3655b9ff78d3ac660d1f1f5534">CREATEXTHREAD</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;DIOANDROIDPCAP::Capture_Start&quot;</emphasis>),&#32;ThreadCapture,&#32;(<emphasis role="keywordtype">void</emphasis>*)<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00126"/>00126 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadcapture)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00127"/>00127 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00128"/>00128 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;threadcapture-&gt;Ini();
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00129"/>00129 }
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00130"/>00130 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00131"/>00131 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00141"/>00141 <emphasis role="keywordtype">bool</emphasis>&#32;DIOANDROIDPCAP::Capture_End()
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00142"/>00142 {
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(threadcapture)
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;threadcapture-&gt;End();
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_thread_collected_8h_1a18fb843f5fbad51464b68d705ed29b8a">DELETEXTHREAD</link>(threadcapture);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;threadcapture&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00149"/>00149 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00150"/>00150 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle)
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;pcap_close(handle);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;handle&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00155"/>00155 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00156"/>00156 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00157"/>00157 }
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00158"/>00158 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00159"/>00159 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00169"/>00169 <emphasis role="keywordtype">bool</emphasis>&#32;DIOANDROIDPCAP::CreateListNetInterfaces()
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00170"/>00170 {
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00171"/>00171 &#32;&#32;pcap_if_t*&#32;allnetinterfaces;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00172"/>00172 &#32;&#32;pcap_if_t*&#32;netinterface;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00173"/>00173 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;errbuf[PCAP_ERRBUF_SIZE];
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00174"/>00174 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00175"/>00175 &#32;&#32;<emphasis role="comment">//&#32;Retrieve&#32;the&#32;device&#32;list</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00176"/>00176 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(pcap_findalldevs(&amp;allnetinterfaces,&#32;errbuf)&#32;==&#32;-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00177"/>00177 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00178"/>00178 &#32;&#32;<emphasis role="comment">//&#32;Create&#32;list</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00179"/>00179 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(netinterface=allnetinterfaces;&#32;netinterface;&#32;netinterface=netinterface-&gt;next)
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;DIOPCAPNETINTERFACE*&#32;_netinterface&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;DIOPCAPNETINTERFACE();
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_netinterface)
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;string;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00185"/>00185 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;=&#32;netinterface-&gt;name;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_netinterface-&gt;SetName(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;=&#32;netinterface-&gt;description;&#32;&#32;&#32;_netinterface-&gt;SetDescription(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00188"/>00188 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;netinterfaces.<link linkend="_group___x_u_t_i_l_s_1gae19f84471c20a914d10a8ac757cacb9a">Add</link>(_netinterface);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00192"/>00192 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00193"/>00193 &#32;&#32;pcap_freealldevs(allnetinterfaces);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00194"/>00194 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00195"/>00195 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00196"/>00196 }
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00197"/>00197 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00198"/>00198 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00208"/>00208 <emphasis role="keywordtype">void</emphasis>&#32;DIOANDROIDPCAP::ThreadCapture(<emphasis role="keywordtype">void</emphasis>*&#32;data)
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00209"/>00209 {
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00210"/>00210 &#32;&#32;<link linkend="_class_d_i_o_a_n_d_r_o_i_d_p_c_a_p">DIOANDROIDPCAP</link>*&#32;diopcap&#32;=&#32;(<link linkend="_class_d_i_o_a_n_d_r_o_i_d_p_c_a_p">DIOANDROIDPCAP</link>*)data;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00211"/>00211 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diopcap)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00212"/>00212 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00213"/>00213 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diopcap-&gt;handle)
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;error&#32;=&#32;pcap_loop(diopcap-&gt;handle,&#32;1,&#32;PacketHandler,&#32;(u_char*)diopcap);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(error)
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00218"/>00218 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00221"/>00221 }
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00222"/>00222 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00223"/>00223 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00235"/>00235 <emphasis role="keywordtype">void</emphasis>&#32;DIOANDROIDPCAP::PacketHandler(u_char*&#32;param,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct</emphasis>&#32;pcap_pkthdr*&#32;header,&#32;<emphasis role="keyword">const</emphasis>&#32;u_char*&#32;data)
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00236"/>00236 {
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00237"/>00237 &#32;&#32;<link linkend="_class_d_i_o_a_n_d_r_o_i_d_p_c_a_p">DIOANDROIDPCAP</link>*&#32;diopcap&#32;=&#32;(<link linkend="_class_d_i_o_a_n_d_r_o_i_d_p_c_a_p">DIOANDROIDPCAP</link>*)param;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00238"/>00238 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diopcap)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00239"/>00239 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00240"/>00240 &#32;&#32;diopcap-&gt;Frames_Add((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)data,header-&gt;len);
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00241"/>00241 }
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00242"/>00242 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00243"/>00243 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00252"/>00252 <emphasis role="keywordtype">void</emphasis>&#32;DIOANDROIDPCAP::Clean()
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00253"/>00253 {
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00254"/>00254 &#32;&#32;handle&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00255"/>00255 &#32;&#32;threadcapture&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00256"/>00256 }
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00257"/>00257 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00258"/>00258 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00259"/>00259 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00260"/>00260 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00261"/>00261 
<anchor xml:id="__d_i_o_a_n_d_r_o_i_d_p_cap_8cpp_source_1l00262"/>00262 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
