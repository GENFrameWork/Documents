<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_x_s_t_m32___f_a_t_s_d___s_p_i" xml:lang="en-US">
<title>XSTM32_FATSD_SPI Class Reference</title>
<indexterm><primary>XSTM32_FATSD_SPI</primary></indexterm>
<para>

<para>eXtended STM32 FAT SD cards by SPI class </para>
 
</para>
<para>
<computeroutput>#include &lt;XSTM32_FATSD_SPI.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga57facf92de109e2ab005a9a595bd8035">XSTM32_FATSD_SPI</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>virtual <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gade10692466872bd7bf1c5ff8781ee2d9">~XSTM32_FATSD_SPI</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga757f5f80503ed3efa19b5322a0dfc8d7">Ini</link> (SPI_HandleTypeDef *handleSPI, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> GPIOentryID_CS, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> GPIOentryID_switch=<link linkend="__d_i_o_g_p_i_o_8h_1a488a85f4fab8868ca6503c2f0112744a">DIOGPIO_ID_NOTDEFINED</link>, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> timeout=<link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1a97d3dca6debeb237a3df49fab7f9dec3">XSTM32_FATSD_SPI_DEFAULT_TIMEOUT</link>)</para>

<para>Ini. </para>
</listitem>
            <listitem><para><link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga8c12f0d99a4098167353bc21b917018c">GetGPIOEntryID_CS</link> ()</para>

<para>GetGPIOEntryID_CS. </para>
</listitem>
            <listitem><para>void <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gaee284e69090a86a9c5a1b84676ccd2d4">SetGPIOEntryID_CS</link> (<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> GPIOentryID)</para>

<para>SetGPIOEntryID_CS. </para>
</listitem>
            <listitem><para><link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gaa6de702f982209643f50fd87e12c0693">GetGPIOEntryID_Switch</link> ()</para>

<para>GetGPIOEntryID_Switch. </para>
</listitem>
            <listitem><para>void <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga51e995b5e983ba159bdcd0fd1a640338">SetGPIOEntryID_Switch</link> (<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> GPIOentryID)</para>

<para>SetGPIOEntryID_Switch. </para>
</listitem>
            <listitem><para>SPI_HandleTypeDef * <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gad9a86e5abe645d9723f4944f398dd44c">GetHandleSPI</link> ()</para>

<para>GetHandleSPI. </para>
</listitem>
            <listitem><para>void <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga51066f29afe40b1de444b7b85f3f2d54">SetHandleSPI</link> (SPI_HandleTypeDef *handleSPI)</para>

<para>SetHandleSPI. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga4624eb00eea320602ab12c5a2b938a8d">Disk_IsInserted</link> ()</para>

<para>Disk_IsInserted. </para>
</listitem>
            <listitem><para>DSTATUS <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga3d8b1467193885f3e017eacbb4046026">Disk_Initialize</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> drive)</para>

<para>Disk_Initialize. </para>
</listitem>
            <listitem><para>DSTATUS <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga33f7b623d82602e71d843e14815dd975">Disk_Status</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> drive)</para>

<para>Disk_Status. </para>
</listitem>
            <listitem><para>DRESULT <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga3dbd408bc29e23a8b79e2f67b0433fa5">Disk_Read</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> pdrive, <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> *buffer, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> sector, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> count)</para>

<para>Disk_Read. </para>
</listitem>
            <listitem><para>DRESULT <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga97629e76cc36206b196bd22a69318df3">Disk_Write</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> pdrive, const <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> *buffer, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> sector, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> count)</para>

<para>Disk_Write. </para>
</listitem>
            <listitem><para>DRESULT <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gaa80b5f2b076ab7672dfbd10dcde56f11">Disk_IOTCL</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> drive, <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> ctrl, void *buffer)</para>

<para>Disk_IOTCL. </para>
</listitem>
            <listitem><para>bool <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gaf6ec241464f65cd9442d103502f76308">End</link> ()</para>

<para>End. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>eXtended STM32 FAT SD cards by SPI class </para>



<para><formalpara><title>Copyright</title>

<para>GEN Group. All rights reserved. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00065">65</link> of file <link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source">XSTM32_FATSD_SPI.h</link>.</para>
<para>
The documentation for this class was generated from the following files:</para>
D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/<link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h">XSTM32_FATSD_SPI.h</link>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/<link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8cpp">XSTM32_FATSD_SPI.cpp</link></section>
</section>
