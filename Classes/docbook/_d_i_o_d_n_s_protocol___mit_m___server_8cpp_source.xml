<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source" xml:lang="en-US">
<title>DIODNSProtocol_MitM_Server.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/DataIO/Protocols/DIODNSProtocol_MitM_Server.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00031"/>00031 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00033"/>00033 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00035"/>00035 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_d_n_s_protocol___mit_m___server_8h">DIODNSProtocol_MitM_Server.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00041"/>00041 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_sleep_8h">XSleep.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00045"/>00045 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_factory_8h">DIOFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_u_d_p_8h">DIOStreamUDP.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_d_n_s_protocol___client_8h">DIODNSProtocol_Client.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_d_n_s_protocol___mit_m___server___x_event_8h">DIODNSProtocol_MitM_Server_XEvent.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00050"/>00050 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00052"/>00052 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00055"/>00055 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00060"/>00060 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00061"/>00061 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00062"/>00062 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00064"/>00064 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00065"/>00065 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00073"/><link linkend="_group___d_a_t_a_i_o_1gae85b2c2684378e0f465ec22cf3236496">00073</link> <link linkend="_group___d_a_t_a_i_o_1gae85b2c2684378e0f465ec22cf3236496">DIODNSPROTOCOL_MITM_SERVER::DIODNSPROTOCOL_MITM_SERVER</link>()
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00074"/>00074 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00075"/>00075 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00076"/>00076 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00077"/>00077 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00078"/>00078 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00087"/><link linkend="_group___d_a_t_a_i_o_1ga1061511b45ff179b7439b7f8d44d2d2b">00087</link> <link linkend="_group___d_a_t_a_i_o_1ga1061511b45ff179b7439b7f8d44d2d2b">DIODNSPROTOCOL_MITM_SERVER::~DIODNSPROTOCOL_MITM_SERVER</link>()
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00088"/>00088 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00089"/>00089 &#32;&#32;<link linkend="_group___d_a_t_a_i_o_1gadab005579137ebd6819c711c03b154d4">End</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00090"/>00090 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00091"/>00091 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00092"/>00092 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00093"/>00093 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00094"/>00094 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00104"/><link linkend="_group___d_a_t_a_i_o_1ga0ae62d182e35d827457b40d8aa27d16d">00104</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga0ae62d182e35d827457b40d8aa27d16d">DIODNSPROTOCOL_MITM_SERVER::Ini</link>()
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00105"/>00105 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00106"/>00106 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gac83006698567c749aecf727dddef5d9c">RegisterEvent</link>(<link linkend="__d_i_o_d_n_s_protocol___mit_m___server___x_event_8h_1a96f01a6e69f3dbc18e8dbbc7092d60deacaf27f7939b4004dc707fcb655d687fc">DIODNSPROTOCOL_MITM_SERVER_XEVENT_TYPE_ASKDNS</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00107"/>00107 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gac83006698567c749aecf727dddef5d9c">RegisterEvent</link>(<link linkend="__d_i_o_d_n_s_protocol___mit_m___server___x_event_8h_1a96f01a6e69f3dbc18e8dbbc7092d60dea3d7ec867eaccc551f135a10a5aafd0a0">DIODNSPROTOCOL_MITM_SERVER_XEVENT_TYPE_ANSWERDNS</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00108"/>00108 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00109"/>00109 &#32;&#32;servermutex&#32;=&#32;GEN_XFACTORY.Create_Mutex();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00110"/>00110 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!servermutex)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00114"/>00114 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00115"/>00115 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;servercfgstr;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00116"/>00116 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00117"/>00117 &#32;&#32;diostreamudpcfg.<link linkend="_group___d_a_t_a_i_o_1ga458e110078121992cb1597c8a184c02d">SetMode</link>(<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008cecca3fe2791007dc244b29efb7227d887c4e">DIOSTREAMMODE_SERVER</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00118"/>00118 &#32;&#32;diostreamudpcfg.<link linkend="_group___d_a_t_a_i_o_1gacf6fa77ab365f7b646a9f701568cc916">GetRemoteURL</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;localhost&quot;</emphasis>));&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00119"/>00119 &#32;&#32;diostreamudpcfg.<link linkend="_group___d_a_t_a_i_o_1ga5d3d2983d54913f4ce5d5118eb629a68">SetRemotePort</link>(<link linkend="__d_i_o_d_n_s_protocol_8h_1a1bfdfde5ca66c22da3421d39e514ea02">DIODNSPROTOCOL_DEFAULTPORT</link>);&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00120"/>00120 &#32;&#32;diostreamudpcfg.<link linkend="_group___d_a_t_a_i_o_1ga7b848570dc12aadbd8f1564a094ca13a">SetIsUsedDatagrams</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00121"/>00121 &#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;diostreamudp&#32;=&#32;(<link linkend="_class_d_i_o_s_t_r_e_a_m_u_d_p">DIOSTREAMUDP</link>*)GEN_DIOFACTORY.CreateStreamIO(&amp;diostreamudpcfg);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00123"/>00123 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostreamudp)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.Delete_Mutex(servermutex);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;servermutex&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00130"/>00130 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00131"/>00131 &#32;&#32;<link linkend="_group___d_a_t_a_i_o_1ga1ab2731dfd80ae409e83d4820dbbe229">AddDNSServer</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;8.8.8.8&quot;</emphasis>));
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00132"/>00132 &#32;&#32;<link linkend="_group___d_a_t_a_i_o_1ga1ab2731dfd80ae409e83d4820dbbe229">AddDNSServer</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;8.8.4.4&quot;</emphasis>));
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00133"/>00133 &#32;&#32;<emphasis role="comment">//AddDNSServer(__L(&quot;64.6.64.6&quot;));</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00134"/>00134 &#32;&#32;<emphasis role="comment">//AddDNSServer(__L(&quot;64.6.65.6&quot;));</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00135"/>00135 &#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00136"/>00136 &#32;&#32;serverthread&#32;=&#32;GEN_XFACTORY.CreateThread(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6ad44314fa7baf87556f8e7937ff342e22">XTHREADGROUPID_DIODNSRESOLVED</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;DIODNSPROTOCOL_MITM_SERVER::Ini&quot;</emphasis>),&#32;DIODNSPROTOCOL_MITM_SERVER::ThreadServer,&#32;<emphasis role="keyword">this</emphasis>);&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!serverthread)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.Delete_Mutex(servermutex);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;servermutex&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00141"/>00141 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;GEN_DIOFACTORY.DeleteStreamIO(diostreamudp);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;diostreamudp&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00144"/>00144 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00147"/>00147 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00148"/>00148 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;serverthread-&gt;<link linkend="_group___x_u_t_i_l_s_1gadedf2cfac4e2c426bf7f286163508601">Ini</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00149"/>00149 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00150"/>00150 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00151"/>00151 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00163"/><link linkend="_group___d_a_t_a_i_o_1gad03d39e7deb45287635b22f117dfdccb">00163</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1gad03d39e7deb45287635b22f117dfdccb">DIODNSPROTOCOL_MITM_SERVER::Activate</link>(<emphasis role="keywordtype">bool</emphasis>&#32;active)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00164"/>00164 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00165"/>00165 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(active)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;{&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1ga8a6d7369be30f160abf2c060c2a76ece">Open</link>())
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00171"/>00171 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1gacff76db4bc54a48fe2d2ceb165835c2f">WaitToConnected</link>(3000))
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1ga42f9eb4342ba828c033258fae3ceafa6">Close</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00181"/>00181 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00182"/>00182 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!serverthread)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00186"/>00186 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00187"/>00187 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;serverthread-&gt;<link linkend="_group___x_u_t_i_l_s_1ga777dc032596d071d63fc47d55b8e6b04">Run</link>(active);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00188"/>00188 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00189"/>00189 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00190"/>00190 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00200"/>00200 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00201"/>00201 <emphasis role="comment">bool&#32;DIODNSPROTOCOL_MITM_SERVER::Update()</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00202"/>00202 <emphasis role="comment">{&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00203"/>00203 <emphasis role="comment">&#32;&#32;if(!diostreamudp)</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00204"/>00204 <emphasis role="comment">&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00205"/>00205 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00206"/>00206 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00207"/>00207 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00208"/>00208 <emphasis role="comment">&#32;&#32;if(diostreamudp-&gt;GetInXBuffer()-&gt;GetSize()&#32;&lt;&#32;(sizeof(DIODNSPROTOCOL_HEADER)&#32;+&#32;1&#32;+&#32;sizeof(DIODNSPROTOCOL_QUESTION)))</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00209"/>00209 <emphasis role="comment">&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00210"/>00210 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00211"/>00211 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00212"/>00212 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00213"/>00213 <emphasis role="comment">&#32;&#32;DIODNSPROTOCOL_HEADER*&#32;&#32;&#32;&#32;header&#32;&#32;&#32;&#32;=&#32;NULL;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00214"/>00214 <emphasis role="comment">&#32;&#32;DIODNSPROTOCOL_QUESTION*&#32;&#32;question&#32;&#32;=&#32;NULL;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00215"/>00215 <emphasis role="comment">&#32;&#32;XSTRING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nameURLstr;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00216"/>00216 <emphasis role="comment">&#32;&#32;XBUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sendbuffer;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00217"/>00217 <emphasis role="comment">&#32;&#32;XBUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;receivedbuffer[2];&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00218"/>00218 <emphasis role="comment">&#32;&#32;XBYTE*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reader&#32;&#32;&#32;&#32;=&#32;NULL;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00219"/>00219 <emphasis role="comment">&#32;&#32;XBYTE*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nameURL&#32;&#32;&#32;=&#32;NULL;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00220"/>00220 <emphasis role="comment">&#32;&#32;int&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00221"/>00221 <emphasis role="comment">&#32;&#32;bool&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;&#32;&#32;&#32;=&#32;false;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00222"/>00222 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00223"/>00223 <emphasis role="comment">&#32;&#32;receivedbuffer[0].Empty();</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00224"/>00224 <emphasis role="comment">&#32;&#32;receivedbuffer[0].Resize(65535);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00225"/>00225 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00226"/>00226 <emphasis role="comment">&#32;&#32;diostreamudp-&gt;Read(receivedbuffer[0]);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00227"/>00227 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00228"/>00228 <emphasis role="comment">&#32;&#32;if(receivedbuffer[0].GetSize()&#32;&gt;=&#32;&#32;(sizeof(DIODNSPROTOCOL_HEADER)&#32;+&#32;1&#32;+&#32;sizeof(DIODNSPROTOCOL_QUESTION)))</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00229"/>00229 <emphasis role="comment">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00230"/>00230 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;reader&#32;&#32;=&#32;&amp;receivedbuffer[0].Get()[sizeof(DIODNSPROTOCOL_HEADER)];</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00231"/>00231 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;nameURL&#32;=&#32;&#32;DIODNSPROTOCOLCLIENT::GetBufferName(reader,&#32;receivedbuffer[0].Get(),&#32;&amp;stop);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00232"/>00232 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00233"/>00233 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;header&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(DIODNSPROTOCOL_HEADER*)receivedbuffer[0].Get();</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00234"/>00234 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;nameURLstr.Set((char*)nameURL);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00235"/>00235 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;question&#32;&#32;&#32;&#32;=&#32;(DIODNSPROTOCOL_QUESTION*)receivedbuffer[0].Get()&#32;+&#32;sizeof(DIODNSPROTOCOL_HEADER)&#32;+&#32;nameURLstr.GetSize()&#32;+&#32;1;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00236"/>00236 <emphasis role="comment">&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00237"/>00237 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;delete&#32;nameURL;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00238"/>00238 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;nameURL&#32;=&#32;NULL;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00239"/>00239 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00240"/>00240 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;DIODNSPROTOCOL_MITM_SERVER_XEVENT&#32;xevent(this,&#32;DIODNSPROTOCOL_MITM_SERVER_XEVENT_TYPE_ASKDNS);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00241"/>00241 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;xevent.GetAskedURL()-&gt;Set(nameURLstr);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00242"/>00242 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;xevent.GetAskedBuffer()-&gt;CopyFrom(receivedbuffer[0]);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00243"/>00243 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00244"/>00244 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;PostEvent(&amp;xevent);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00245"/>00245 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00246"/>00246 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;for(XDWORD&#32;c=0;&#32;c&lt;dnsservers.GetSize();&#32;c++)</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00247"/>00247 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00248"/>00248 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIODNSRESOLVER_DNSSERVER*&#32;DNSserver&#32;=&#32;dnsservers.Get(c);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00249"/>00249 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(DNSserver)</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00250"/>00250 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00251"/>00251 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XTRACE_PRINTCOLOR(XTRACE_COLOR_BLUE,&#32;__L(&quot;[DSN&#32;MitM&#32;Server]&#32;%d&#32;server...&quot;),&#32;c);&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00252"/>00252 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00253"/>00253 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;Detour(DNSserver,&#32;receivedbuffer[0],&#32;receivedbuffer[1]);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00254"/>00254 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(status)</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00255"/>00255 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00256"/>00256 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XTRACE_PRINTCOLOR(XTRACE_COLOR_BLUE,&#32;__L(&quot;[DSN&#32;MitM&#32;Server]&#32;Buffer&#32;receiver&quot;));&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00257"/>00257 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XTRACE_PRINTDATABLOCKCOLOR(XTRACE_COLOR_BLUE,&#32;receivedbuffer[1]);&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00258"/>00258 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00259"/>00259 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;diostreamudp-&gt;Write(receivedbuffer[1]);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00260"/>00260 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(status)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00261"/>00261 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00262"/>00262 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;diostreamudp-&gt;WaitToFlushOutXBuffer(3);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00263"/>00263 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(status)&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00264"/>00264 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00265"/>00265 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIODNSPROTOCOL_MITM_SERVER_XEVENT&#32;xevent(this,&#32;DIODNSPROTOCOL_MITM_SERVER_XEVENT_TYPE_ANSWERDNS);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00266"/>00266 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.GetAskedURL()-&gt;Set(nameURLstr);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00267"/>00267 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.GetAskedBuffer()-&gt;CopyFrom(receivedbuffer[0]);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00268"/>00268 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.GetAnsweredBuffer()-&gt;CopyFrom(receivedbuffer[1]);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00269"/>00269 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00270"/>00270 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PostEvent(&amp;xevent);</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00271"/>00271 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00272"/>00272 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;true;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00273"/>00273 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00274"/>00274 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00275"/>00275 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00276"/>00276 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00277"/>00277 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XTRACE_PRINTCOLOR(XTRACE_COLOR_RED,&#32;__L(&quot;[DSN&#32;MitM&#32;Server]&#32;Error&#32;to&#32;Write&#32;answer&#32;buffer&quot;));&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00278"/>00278 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00279"/>00279 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00280"/>00280 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00281"/>00281 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00282"/>00282 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XTRACE_PRINTCOLOR(XTRACE_COLOR_RED,&#32;__L(&quot;[DSN&#32;MitM&#32;Server]&#32;Error&#32;to&#32;Write&#32;answer&quot;));&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00283"/>00283 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00284"/>00284 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00285"/>00285 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00286"/>00286 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00287"/>00287 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;XTRACE_PRINTCOLOR(XTRACE_COLOR_RED,&#32;__L(&quot;[DSN&#32;MitM&#32;Server]&#32;Error&#32;to&#32;Detour&quot;));&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00288"/>00288 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00289"/>00289 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00290"/>00290 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00291"/>00291 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00292"/>00292 <emphasis role="comment">&#32;&#32;&#32;else</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00293"/>00293 <emphasis role="comment">&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00294"/>00294 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;XTRACE_PRINTCOLOR(XTRACE_COLOR_RED,&#32;__L(&quot;[DSN&#32;MitM&#32;Server]&#32;Error&#32;Read&#32;Original&#32;buffer&quot;));&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00295"/>00295 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00296"/>00296 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00297"/>00297 <emphasis role="comment">&#32;&#32;return&#32;status;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00298"/>00298 <emphasis role="comment">}</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00299"/>00299 <emphasis role="comment">*/</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00300"/>00300 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00301"/>00301 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00302"/><link linkend="_group___d_a_t_a_i_o_1gaf66dcbfab9c1ed2821b1a04cd17137ae">00302</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1gaf66dcbfab9c1ed2821b1a04cd17137ae">DIODNSPROTOCOL_MITM_SERVER::Update</link>()
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00303"/>00303 {&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00304"/>00304 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;receivedbuffer[2];&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00305"/>00305 &#32;&#32;<link linkend="_struct_d_i_o_d_n_s_p_r_o_t_o_c_o_l___h_e_a_d_e_r">DIODNSPROTOCOL_HEADER</link>*&#32;&#32;&#32;&#32;header&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00306"/>00306 &#32;&#32;<link linkend="_struct_d_i_o_d_n_s_p_r_o_t_o_c_o_l___q_u_e_s_t_i_o_n">DIODNSPROTOCOL_QUESTION</link>*&#32;&#32;question&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00307"/>00307 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;askcount&#32;&#32;=&#32;0;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00308"/>00308 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reader&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00309"/>00309 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stop&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00310"/>00310 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00311"/>00311 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00312"/>00312 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostreamudp)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00316"/>00316 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00317"/>00317 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1gaa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>()&#32;&lt;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_d_i_o_d_n_s_p_r_o_t_o_c_o_l___h_e_a_d_e_r">DIODNSPROTOCOL_HEADER</link>))
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;}&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00321"/>00321 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00322"/>00322 &#32;&#32;receivedbuffer[0].<link linkend="_group___x_u_t_i_l_s_1ga3c14ba0ca9dfbf20b5127c87b275cb93">Empty</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00323"/>00323 &#32;&#32;receivedbuffer[0].<link linkend="_group___x_u_t_i_l_s_1gacf69e379f1d0bf812ae9c1157eac172c">Resize</link>(65535);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00324"/>00324 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00325"/>00325 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;sizeread&#32;=&#32;diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1ga20cd6c3635818f96468dee8bc601aec1">Read</link>(receivedbuffer[0]);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00326"/>00326 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!sizeread)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[DSN&#32;MitM&#32;Server]&#32;Error&#32;to&#32;Read&#32;header&quot;</emphasis>));&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;}&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00331"/>00331 &#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00332"/>00332 &#32;&#32;header&#32;&#32;&#32;&#32;=&#32;(<link linkend="_struct_d_i_o_d_n_s_p_r_o_t_o_c_o_l___h_e_a_d_e_r">DIODNSPROTOCOL_HEADER</link>*)receivedbuffer[0].Get();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00333"/>00333 &#32;&#32;askcount&#32;&#32;=&#32;<link linkend="__x_base_8cpp_1a4194dc6953f7f2e754c0ee59c30f500d">SwapWORD</link>(header-&gt;<link linkend="_struct_d_i_o_d_n_s_p_r_o_t_o_c_o_l___h_e_a_d_e_r_1af7cb8ccee44c744fc2b1652ecc63dbd5">q_count</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00335"/>00335 &#32;&#32;reader&#32;&#32;=&#32;&amp;receivedbuffer[0].<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()[<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_d_i_o_d_n_s_p_r_o_t_o_c_o_l___h_e_a_d_e_r">DIODNSPROTOCOL_HEADER</link>)];
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00336"/>00336 &#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00337"/>00337 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;nameURLstr;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00338"/>00338 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00339"/>00339 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;c=0;&#32;c&lt;askcount;&#32;c++)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;&#32;nameURL&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;nameURL&#32;&#32;&#32;&#32;&#32;=&#32;&#32;<link linkend="_group___d_a_t_a_i_o_1ga4fd89a1c5dd8653ec289dbfa7e2bdfa2">DIODNSPROTOCOLCLIENT::GetBufferName</link>(reader,&#32;receivedbuffer[0].Get(),&#32;&amp;stop);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;nameURLstr.<link linkend="_group___x_u_t_i_l_s_1ga4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>((<emphasis role="keywordtype">char</emphasis>*)nameURL);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_d_n_s_p_r_o_t_o_c_o_l___m_i_t_m___s_e_r_v_e_r___x_e_v_e_n_t">DIODNSPROTOCOL_MITM_SERVER_XEVENT</link>&#32;xevent(<emphasis role="keyword">this</emphasis>,&#32;<link linkend="__d_i_o_d_n_s_protocol___mit_m___server___x_event_8h_1a96f01a6e69f3dbc18e8dbbc7092d60deacaf27f7939b4004dc707fcb655d687fc">DIODNSPROTOCOL_MITM_SERVER_XEVENT_TYPE_ASKDNS</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;xevent.<link linkend="_group___d_a_t_a_i_o_1gaca0edd6c7691bc918745c01435cf00e4">GetAskedURL</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(nameURLstr);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;xevent.<link linkend="_group___d_a_t_a_i_o_1ga9dc79901fedef5bd47c443bb02248f9c">GetAskedBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1gafc53f10185dc4d03cb99dfa959de19d1">CopyFrom</link>(receivedbuffer[0]);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00349"/>00349 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gadb65926d5f56410c9243d2f7c69a87a3">PostEvent</link>(&amp;xevent);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;reader&#32;&#32;&#32;&#32;&#32;+=&#32;stop;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;question&#32;&#32;&#32;&#32;=&#32;(<link linkend="_struct_d_i_o_d_n_s_p_r_o_t_o_c_o_l___q_u_e_s_t_i_o_n">DIODNSPROTOCOL_QUESTION</link>*)reader;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00355"/>00355 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00356"/>00356 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;dnsservers.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();&#32;c++)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_d_n_s_r_e_s_o_l_v_e_r___d_n_s_s_e_r_v_e_r">DIODNSRESOLVER_DNSSERVER</link>*&#32;DNSserver&#32;=&#32;dnsservers.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(DNSserver)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1ade81e1905d604ef7eb03d194ba1332d4">XTRACE_COLOR_BLUE</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[DSN&#32;MitM&#32;Server]&#32;%d&#32;server...&quot;</emphasis>),&#32;c);&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00362"/>00362 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;Detour(DNSserver,&#32;receivedbuffer[0],&#32;receivedbuffer[1]);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1ade81e1905d604ef7eb03d194ba1332d4">XTRACE_COLOR_BLUE</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[DSN&#32;MitM&#32;Server]&#32;Buffer&#32;receiver&quot;</emphasis>));&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1a728105cb06ce627f1d60693181755f93">XTRACE_PRINTDATABLOCKCOLOR</link>(<link linkend="__x_trace_8h_1ade81e1905d604ef7eb03d194ba1332d4">XTRACE_COLOR_BLUE</link>,&#32;receivedbuffer[1]);&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00368"/>00368 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[DSN&#32;MitM&#32;Server]&#32;Error&#32;to&#32;Detour&quot;</emphasis>));&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00377"/>00377 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00378"/>00378 &#32;&#32;status&#32;=&#32;diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1gac04f4ad8ff28b97128a876063103dd50">Write</link>(receivedbuffer[1]);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00379"/>00379 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//status&#32;=&#32;diostreamudp-&gt;WaitToFlushOutXBuffer(3);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_d_n_s_p_r_o_t_o_c_o_l___m_i_t_m___s_e_r_v_e_r___x_e_v_e_n_t">DIODNSPROTOCOL_MITM_SERVER_XEVENT</link>&#32;xevent(<emphasis role="keyword">this</emphasis>,&#32;<link linkend="__d_i_o_d_n_s_protocol___mit_m___server___x_event_8h_1a96f01a6e69f3dbc18e8dbbc7092d60dea3d7ec867eaccc551f135a10a5aafd0a0">DIODNSPROTOCOL_MITM_SERVER_XEVENT_TYPE_ANSWERDNS</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.<link linkend="_group___d_a_t_a_i_o_1gaca0edd6c7691bc918745c01435cf00e4">GetAskedURL</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(nameURLstr);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.<link linkend="_group___d_a_t_a_i_o_1ga5b492acf92fe1a02b16412e0ec1227ec">GetAnsweredBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1gafc53f10185dc4d03cb99dfa959de19d1">CopyFrom</link>(receivedbuffer[1]);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00387"/>00387 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gadb65926d5f56410c9243d2f7c69a87a3">PostEvent</link>(&amp;xevent);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00389"/>00389 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[DSN&#32;MitM&#32;Server]&#32;Error&#32;to&#32;Write&#32;answer&#32;buffer&quot;</emphasis>));&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[DSN&#32;MitM&#32;Server]&#32;Error&#32;to&#32;Write&#32;answer&quot;</emphasis>));&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00402"/>00402 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00403"/>00403 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00404"/>00404 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00405"/>00405 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00415"/><link linkend="_group___d_a_t_a_i_o_1gadab005579137ebd6819c711c03b154d4">00415</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1gadab005579137ebd6819c711c03b154d4">DIODNSPROTOCOL_MITM_SERVER::End</link>()
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00416"/>00416 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00417"/>00417 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gab78992063b09d37612e7719e37d415bc">DeRegisterEvent</link>(<link linkend="__d_i_o_d_n_s_protocol___mit_m___server___x_event_8h_1a96f01a6e69f3dbc18e8dbbc7092d60deacaf27f7939b4004dc707fcb655d687fc">DIODNSPROTOCOL_MITM_SERVER_XEVENT_TYPE_ASKDNS</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00418"/>00418 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gab78992063b09d37612e7719e37d415bc">DeRegisterEvent</link>(<link linkend="__d_i_o_d_n_s_protocol___mit_m___server___x_event_8h_1a96f01a6e69f3dbc18e8dbbc7092d60dea3d7ec867eaccc551f135a10a5aafd0a0">DIODNSPROTOCOL_MITM_SERVER_XEVENT_TYPE_ANSWERDNS</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00419"/>00419 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00420"/>00420 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(serverthread)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;serverthread-&gt;<link linkend="_group___x_u_t_i_l_s_1ga1831e88c99bc5bfdab7246bc141aae3c">End</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00423"/>00423 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.DeleteThread(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6ad44314fa7baf87556f8e7937ff342e22">XTHREADGROUPID_DIODNSRESOLVED</link>,&#32;serverthread);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;serverthread&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00427"/>00427 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00428"/>00428 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostreamudp)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1ga42f9eb4342ba828c033258fae3ceafa6">Close</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00431"/>00431 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;GEN_DIOFACTORY.DeleteStreamIO(diostreamudp);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;diostreamudp&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00436"/>00436 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(servermutex)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.Delete_Mutex(servermutex);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;servermutex&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00441"/>00441 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00442"/>00442 &#32;&#32;<link linkend="_group___d_a_t_a_i_o_1ga3d9d231631f57be1d1b4aad81c23430c">DeleteAllDNSServers</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00443"/>00443 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00444"/>00444 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00445"/>00445 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00446"/>00446 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00447"/>00447 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00460"/><link linkend="_group___d_a_t_a_i_o_1ga1ab2731dfd80ae409e83d4820dbbe229">00460</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga1ab2731dfd80ae409e83d4820dbbe229">DIODNSPROTOCOL_MITM_SERVER::AddDNSServer</link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;server,&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;port)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00461"/>00461 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00462"/>00462 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!server)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00466"/>00466 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00467"/>00467 &#32;&#32;<link linkend="_class_d_i_o_d_n_s_r_e_s_o_l_v_e_r___d_n_s_s_e_r_v_e_r">DIODNSRESOLVER_DNSSERVER</link>*&#32;dnsserver&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_i_o_d_n_s_r_e_s_o_l_v_e_r___d_n_s_s_e_r_v_e_r">DIODNSRESOLVER_DNSSERVER</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00468"/>00468 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!dnsserver)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00472"/>00472 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00473"/>00473 &#32;&#32;dnsserver-&gt;<link linkend="_group___d_a_t_a_i_o_1gab3edfb323fb13694c316d27fd29444ec">GetIP</link>()-&gt;<link linkend="_group___d_a_t_a_i_o_1ga1955ea08de61edcd19d7806e64ed9aaa">Set</link>(server);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00474"/>00474 &#32;&#32;dnsserver-&gt;<link linkend="_group___d_a_t_a_i_o_1ga107e217119bd7a0b75d00af98678419a">SetPort</link>(port);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00475"/>00475 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00476"/>00476 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dnsservers.<link linkend="_class_x_v_e_c_t_o_r_1a51a790aac8efd4603aee608ddcc83423">Add</link>(dnsserver);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00477"/>00477 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00478"/>00478 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00479"/>00479 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00492"/><link linkend="_group___d_a_t_a_i_o_1gac6e1ca0f02d782ab820457b4d5f8b40b">00492</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga1ab2731dfd80ae409e83d4820dbbe229">DIODNSPROTOCOL_MITM_SERVER::AddDNSServer</link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;server,&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;port)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00493"/>00493 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00494"/>00494 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga1ab2731dfd80ae409e83d4820dbbe229">AddDNSServer</link>(server.<link linkend="_group___x_u_t_i_l_s_1gad1470753a96f93e2feb3ee54e6fef95f">Get</link>(),&#32;port);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00495"/>00495 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00496"/>00496 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00497"/>00497 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00510"/><link linkend="_group___d_a_t_a_i_o_1ga528c14a919db18335d8b55355dea064e">00510</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga1ab2731dfd80ae409e83d4820dbbe229">DIODNSPROTOCOL_MITM_SERVER::AddDNSServer</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;serverIP,&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;port)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00511"/>00511 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00512"/>00512 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!serverIP)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00513"/>00513 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00515"/>00515 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00516"/>00516 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00517"/>00517 &#32;&#32;<link linkend="_class_d_i_o_d_n_s_r_e_s_o_l_v_e_r___d_n_s_s_e_r_v_e_r">DIODNSRESOLVER_DNSSERVER</link>*&#32;dnsserver&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_i_o_d_n_s_r_e_s_o_l_v_e_r___d_n_s_s_e_r_v_e_r">DIODNSRESOLVER_DNSSERVER</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00518"/>00518 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!dnsserver)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00519"/>00519 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00521"/>00521 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00522"/>00522 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00523"/>00523 &#32;&#32;dnsserver-&gt;<link linkend="_group___d_a_t_a_i_o_1gab3edfb323fb13694c316d27fd29444ec">GetIP</link>()-&gt;<link linkend="_group___d_a_t_a_i_o_1ga1955ea08de61edcd19d7806e64ed9aaa">Set</link>(serverIP);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00524"/>00524 &#32;&#32;dnsserver-&gt;<link linkend="_group___d_a_t_a_i_o_1ga107e217119bd7a0b75d00af98678419a">SetPort</link>(port);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00525"/>00525 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00526"/>00526 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dnsservers.<link linkend="_class_x_v_e_c_t_o_r_1a51a790aac8efd4603aee608ddcc83423">Add</link>(dnsserver);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00527"/>00527 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00528"/>00528 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00529"/>00529 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00542"/><link linkend="_group___d_a_t_a_i_o_1ga5751707b8b61082110ed3f392ffab3b6">00542</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga1ab2731dfd80ae409e83d4820dbbe229">DIODNSPROTOCOL_MITM_SERVER::AddDNSServer</link>(<link linkend="_class_d_i_o_i_p">DIOIP</link>&amp;&#32;serverIP,&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;port)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00543"/>00543 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00544"/>00544 &#32;&#32;<link linkend="_class_d_i_o_d_n_s_r_e_s_o_l_v_e_r___d_n_s_s_e_r_v_e_r">DIODNSRESOLVER_DNSSERVER</link>*&#32;dnsserver&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_i_o_d_n_s_r_e_s_o_l_v_e_r___d_n_s_s_e_r_v_e_r">DIODNSRESOLVER_DNSSERVER</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00545"/>00545 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!dnsserver)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00546"/>00546 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00548"/>00548 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00549"/>00549 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00550"/>00550 &#32;&#32;dnsserver-&gt;<link linkend="_group___d_a_t_a_i_o_1gab3edfb323fb13694c316d27fd29444ec">GetIP</link>()-&gt;<link linkend="_group___d_a_t_a_i_o_1ga1955ea08de61edcd19d7806e64ed9aaa">Set</link>(serverIP.<link linkend="_group___d_a_t_a_i_o_1gaa7fc98655c9aab8feb85758307d928f5">Get</link>());
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00551"/>00551 &#32;&#32;dnsserver-&gt;<link linkend="_group___d_a_t_a_i_o_1ga107e217119bd7a0b75d00af98678419a">SetPort</link>(port);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00552"/>00552 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00553"/>00553 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dnsservers.<link linkend="_class_x_v_e_c_t_o_r_1a51a790aac8efd4603aee608ddcc83423">Add</link>(dnsserver);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00554"/>00554 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00555"/>00555 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00556"/>00556 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00566"/><link linkend="_group___d_a_t_a_i_o_1ga3d9d231631f57be1d1b4aad81c23430c">00566</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga3d9d231631f57be1d1b4aad81c23430c">DIODNSPROTOCOL_MITM_SERVER::DeleteAllDNSServers</link>()
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00567"/>00567 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00568"/>00568 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(dnsservers.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00569"/>00569 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00572"/>00572 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00573"/>00573 &#32;&#32;dnsservers.<link linkend="_class_x_v_e_c_t_o_r_1abae5097402824f18f274e21e18b23bea">DeleteContents</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00574"/>00574 &#32;&#32;dnsservers.<link linkend="_class_x_v_e_c_t_o_r_1a57c72ab04fd14c60d1026e0a7b4a1887">DeleteAll</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00575"/>00575 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00576"/>00576 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00577"/>00577 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00578"/>00578 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00579"/>00579 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00589"/><link linkend="_group___d_a_t_a_i_o_1ga4641bda37ee431ae98c8f278926470f8">00589</link> <link linkend="_class_x_m_u_t_e_x">XMUTEX</link>*&#32;<link linkend="_group___d_a_t_a_i_o_1ga4641bda37ee431ae98c8f278926470f8">DIODNSPROTOCOL_MITM_SERVER::GetServerMutex</link>()
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00590"/>00590 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00591"/>00591 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;servermutex;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00592"/>00592 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00593"/>00593 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00594"/>00594 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00608"/>00608 <emphasis role="keywordtype">bool</emphasis>&#32;DIODNSPROTOCOL_MITM_SERVER::Detour(<link linkend="_class_d_i_o_d_n_s_r_e_s_o_l_v_e_r___d_n_s_s_e_r_v_e_r">DIODNSRESOLVER_DNSSERVER</link>*&#32;DNSserver,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;sendbuffer,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;receivedbuffer)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00609"/>00609 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00610"/>00610 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DNSserver)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00611"/>00611 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00613"/>00613 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00614"/>00614 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00615"/>00615 &#32;&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_u_d_p_c_o_n_f_i_g">DIOSTREAMUDPCONFIG</link>&#32;&#32;&#32;dioudpcfg;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_u_d_p">DIOSTREAMUDP</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dioudp&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00617"/>00617 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remoteIP;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00618"/>00618 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;serverport&#32;=&#32;0;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00619"/>00619 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00620"/>00620 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00621"/>00621 &#32;&#32;DNSserver-&gt;<link linkend="_group___d_a_t_a_i_o_1gab3edfb323fb13694c316d27fd29444ec">GetIP</link>()-&gt;<link linkend="_group___d_a_t_a_i_o_1ga6a266ef4ef9e43473e91acc37a816725">GetXString</link>(remoteIP);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00622"/>00622 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00623"/>00623 &#32;&#32;dioudpcfg.<link linkend="_group___d_a_t_a_i_o_1ga458e110078121992cb1597c8a184c02d">SetMode</link>(<link linkend="__d_i_o_stream_config_8h_1ae47ddf801d21b825b353ae3a3008ceccae2f1cd5b3bdb86e59afda7eb0f8a91a8">DIOSTREAMMODE_CLIENT</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00624"/>00624 &#32;&#32;dioudpcfg.<link linkend="_group___d_a_t_a_i_o_1ga7b848570dc12aadbd8f1564a094ca13a">SetIsUsedDatagrams</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00625"/>00625 &#32;&#32;dioudpcfg.<link linkend="_group___d_a_t_a_i_o_1gacf6fa77ab365f7b646a9f701568cc916">GetRemoteURL</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(remoteIP);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00626"/>00626 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00627"/>00627 &#32;&#32;serverport&#32;=&#32;DNSserver-&gt;<link linkend="_group___d_a_t_a_i_o_1ga5987a3b7c5d79cae5c311d336328bae4">GetPort</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00628"/>00628 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00629"/>00629 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!serverport)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;dioudpcfg.<link linkend="_group___d_a_t_a_i_o_1ga5d3d2983d54913f4ce5d5118eb629a68">SetRemotePort</link>(<link linkend="__d_i_o_d_n_s_protocol_8h_1a1bfdfde5ca66c22da3421d39e514ea02">DIODNSPROTOCOL_DEFAULTPORT</link>);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;dioudpcfg.<link linkend="_group___d_a_t_a_i_o_1ga5d3d2983d54913f4ce5d5118eb629a68">SetRemotePort</link>(serverport);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00637"/>00637 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00638"/>00638 &#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;dioudp&#32;=&#32;(<link linkend="_class_d_i_o_s_t_r_e_a_m_u_d_p">DIOSTREAMUDP</link>*)GEN_DIOFACTORY.CreateStreamIO(&amp;dioudpcfg);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00640"/>00640 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(dioudp)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(dioudp-&gt;<link linkend="_group___d_a_t_a_i_o_1ga8a6d7369be30f160abf2c060c2a76ece">Open</link>())
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;dioudp-&gt;<link linkend="_group___d_a_t_a_i_o_1gac04f4ad8ff28b97128a876063103dd50">Write</link>(sendbuffer);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1ga59dc380e213dd083940c80663667dae7">WaitToFlushOutXBuffer</link>(3);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00649"/>00649 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;receivedbuffer.<link linkend="_group___x_u_t_i_l_s_1ga3c14ba0ca9dfbf20b5127c87b275cb93">Empty</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;receivedbuffer.<link linkend="_group___x_u_t_i_l_s_1gacf69e379f1d0bf812ae9c1157eac172c">Resize</link>(65535);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1ga6e20f03ff391343123fda221a5c2ed85">WaitToFilledReadingBuffer</link>(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_d_i_o_d_n_s_p_r_o_t_o_c_o_l___h_e_a_d_e_r">DIODNSPROTOCOL_HEADER</link>),&#32;2);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;diostreamudp-&gt;<link linkend="_group___d_a_t_a_i_o_1ga20cd6c3635818f96468dee8bc601aec1">Read</link>(receivedbuffer);
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dioudp-&gt;<link linkend="_group___d_a_t_a_i_o_1ga42f9eb4342ba828c033258fae3ceafa6">Close</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00664"/>00664 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;GEN_DIOFACTORY.DeleteStreamIO(dioudp);&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00666"/>00666 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00667"/>00667 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00668"/>00668 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00669"/>00669 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00670"/>00670 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00671"/>00671 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00681"/>00681 <emphasis role="keywordtype">void</emphasis>&#32;DIODNSPROTOCOL_MITM_SERVER::ThreadServer(<emphasis role="keywordtype">void</emphasis>*&#32;param)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00682"/>00682 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00683"/>00683 &#32;&#32;<link linkend="_class_d_i_o_d_n_s_p_r_o_t_o_c_o_l___m_i_t_m___s_e_r_v_e_r">DIODNSPROTOCOL_MITM_SERVER</link>*&#32;mitm_server&#32;=&#32;(<link linkend="_class_d_i_o_d_n_s_p_r_o_t_o_c_o_l___m_i_t_m___s_e_r_v_e_r">DIODNSPROTOCOL_MITM_SERVER</link>*)param;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00684"/>00684 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!mitm_server)
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00687"/>00687 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00688"/>00688 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00689"/>00689 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mitm_server-&gt;<link linkend="_group___d_a_t_a_i_o_1ga4641bda37ee431ae98c8f278926470f8">GetServerMutex</link>())
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00690"/>00690 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;mitm_server-&gt;<link linkend="_group___d_a_t_a_i_o_1ga4641bda37ee431ae98c8f278926470f8">GetServerMutex</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00692"/>00692 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00693"/>00693 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00694"/>00694 &#32;&#32;mitm_server-&gt;<link linkend="_group___d_a_t_a_i_o_1gaf66dcbfab9c1ed2821b1a04cd17137ae">Update</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00695"/>00695 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00696"/>00696 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mitm_server-&gt;<link linkend="_group___d_a_t_a_i_o_1ga4641bda37ee431ae98c8f278926470f8">GetServerMutex</link>())
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00697"/>00697 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;mitm_server-&gt;<link linkend="_group___d_a_t_a_i_o_1ga4641bda37ee431ae98c8f278926470f8">GetServerMutex</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00699"/>00699 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00700"/>00700 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00701"/>00701 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00702"/>00702 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00703"/>00703 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00712"/>00712 <emphasis role="keywordtype">void</emphasis>&#32;DIODNSPROTOCOL_MITM_SERVER::Clean()
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00713"/>00713 {
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00714"/>00714 &#32;&#32;serverthread&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00715"/>00715 &#32;&#32;servermutex&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00716"/>00716 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00717"/>00717 &#32;&#32;diostreamudp&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00718"/>00718 }
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00719"/>00719 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00720"/>00720 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00721"/>00721 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00722"/>00722 
<anchor xml:id="__d_i_o_d_n_s_protocol___mit_m___server_8cpp_source_1l00723"/>00723 
</programlisting></section>
