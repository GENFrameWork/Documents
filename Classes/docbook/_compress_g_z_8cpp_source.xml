<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__compress_g_z_8cpp_source" xml:lang="en-US">
<title>CompressGZ.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Compress/CompressGZ.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__compress_g_z_8cpp_source_1l00001"/>00001 
<anchor xml:id="__compress_g_z_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00031"/>00031 
<anchor xml:id="__compress_g_z_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00033"/>00033 
<anchor xml:id="__compress_g_z_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00035"/>00035 
<anchor xml:id="__compress_g_z_8cpp_source_1l00036"/>00036 
<anchor xml:id="__compress_g_z_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00039"/>00039 
<anchor xml:id="__compress_g_z_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__compress_g_z_8h">CompressGZ.h</link>&quot;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00041"/>00041 
<anchor xml:id="__compress_g_z_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&lt;zlib.h&gt;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00045"/>00045 
<anchor xml:id="__compress_g_z_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00047"/>00047 
<anchor xml:id="__compress_g_z_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00049"/>00049 
<anchor xml:id="__compress_g_z_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00051"/>00051 
<anchor xml:id="__compress_g_z_8cpp_source_1l00052"/>00052 
<anchor xml:id="__compress_g_z_8cpp_source_1l00053"/>00053 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00055"/>00055 
<anchor xml:id="__compress_g_z_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00057"/>00057 
<anchor xml:id="__compress_g_z_8cpp_source_1l00058"/>00058 
<anchor xml:id="__compress_g_z_8cpp_source_1l00059"/>00059 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00060"/>00060 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00061"/>00061 
<anchor xml:id="__compress_g_z_8cpp_source_1l00062"/>00062 
<anchor xml:id="__compress_g_z_8cpp_source_1l00070"/><link linkend="_group___c_o_m_p_r_e_s_s_1ga90e89369d15d000b015a756dbe5576f2">00070</link> <link linkend="_group___c_o_m_p_r_e_s_s_1ga90e89369d15d000b015a756dbe5576f2">COMPRESS_GZ::COMPRESS_GZ</link>()&#32;:&#32;<link linkend="_class_c_o_m_p_r_e_s_s_b_a_s_e">COMPRESSBASE</link>()
<anchor xml:id="__compress_g_z_8cpp_source_1l00071"/>00071 {
<anchor xml:id="__compress_g_z_8cpp_source_1l00072"/>00072 &#32;&#32;Clean();
<anchor xml:id="__compress_g_z_8cpp_source_1l00073"/>00073 
<anchor xml:id="__compress_g_z_8cpp_source_1l00074"/>00074 &#32;&#32;<link linkend="_group___c_o_m_p_r_e_s_s_1ga9a7d68961c2af05ba8e21f6584cde06f">SetType</link>(<link linkend="__compress_base_8h_1ae531f940df1055ce7c28e7cbc784a22fa4b81f70fb41fe7ee8903cb35e74ed5dd">COMPRESSBASE_TYPE_GZ</link>);
<anchor xml:id="__compress_g_z_8cpp_source_1l00075"/>00075 }
<anchor xml:id="__compress_g_z_8cpp_source_1l00076"/>00076 
<anchor xml:id="__compress_g_z_8cpp_source_1l00077"/>00077 
<anchor xml:id="__compress_g_z_8cpp_source_1l00086"/><link linkend="_group___c_o_m_p_r_e_s_s_1ga9fc1b9c7056efac9d0f2b620d6d7e9f0">00086</link> <link linkend="_group___c_o_m_p_r_e_s_s_1ga9fc1b9c7056efac9d0f2b620d6d7e9f0">COMPRESS_GZ::~COMPRESS_GZ</link>()
<anchor xml:id="__compress_g_z_8cpp_source_1l00087"/>00087 {
<anchor xml:id="__compress_g_z_8cpp_source_1l00088"/>00088 &#32;&#32;Clean();
<anchor xml:id="__compress_g_z_8cpp_source_1l00089"/>00089 }
<anchor xml:id="__compress_g_z_8cpp_source_1l00090"/>00090 
<anchor xml:id="__compress_g_z_8cpp_source_1l00091"/>00091 
<anchor xml:id="__compress_g_z_8cpp_source_1l00105"/><link linkend="_group___c_o_m_p_r_e_s_s_1gae813fd0b96048d53705c0cf6d7b8a0a3">00105</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_o_m_p_r_e_s_s_1gae813fd0b96048d53705c0cf6d7b8a0a3">COMPRESS_GZ::Compress</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;source,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;xbuffer)
<anchor xml:id="__compress_g_z_8cpp_source_1l00106"/>00106 {
<anchor xml:id="__compress_g_z_8cpp_source_1l00107"/>00107 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!source)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00108"/>00108 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00109"/>00109 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xbuffer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00110"/>00110 
<anchor xml:id="__compress_g_z_8cpp_source_1l00111"/>00111 &#32;&#32;xbuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__compress_g_z_8cpp_source_1l00112"/>00112 &#32;&#32;xbuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1gacf69e379f1d0bf812ae9c1157eac172c">Resize</link>(size);
<anchor xml:id="__compress_g_z_8cpp_source_1l00113"/>00113 
<anchor xml:id="__compress_g_z_8cpp_source_1l00114"/>00114 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;csize&#32;=&#32;size;
<anchor xml:id="__compress_g_z_8cpp_source_1l00115"/>00115 
<anchor xml:id="__compress_g_z_8cpp_source_1l00116"/>00116 &#32;&#32;ZCompress(xbuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;&amp;csize,&#32;source,&#32;size);
<anchor xml:id="__compress_g_z_8cpp_source_1l00117"/>00117 
<anchor xml:id="__compress_g_z_8cpp_source_1l00118"/>00118 &#32;&#32;xbuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1gacf69e379f1d0bf812ae9c1157eac172c">Resize</link>(csize);
<anchor xml:id="__compress_g_z_8cpp_source_1l00119"/>00119 
<anchor xml:id="__compress_g_z_8cpp_source_1l00120"/>00120 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00121"/>00121 }
<anchor xml:id="__compress_g_z_8cpp_source_1l00122"/>00122 
<anchor xml:id="__compress_g_z_8cpp_source_1l00123"/>00123 
<anchor xml:id="__compress_g_z_8cpp_source_1l00137"/><link linkend="_group___c_o_m_p_r_e_s_s_1ga57ee9b32dff8dd1ad541b453943e8379">00137</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_o_m_p_r_e_s_s_1ga57ee9b32dff8dd1ad541b453943e8379">COMPRESS_GZ::Decompress</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;source,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;xbuffer)
<anchor xml:id="__compress_g_z_8cpp_source_1l00138"/>00138 {
<anchor xml:id="__compress_g_z_8cpp_source_1l00139"/>00139 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!source)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00140"/>00140 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00141"/>00141 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xbuffer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00142"/>00142 
<anchor xml:id="__compress_g_z_8cpp_source_1l00143"/>00143 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;csize&#32;=&#32;xbuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>();
<anchor xml:id="__compress_g_z_8cpp_source_1l00144"/>00144 
<anchor xml:id="__compress_g_z_8cpp_source_1l00145"/>00145 &#32;&#32;ZDecompress(xbuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;&amp;csize,&#32;source,&#32;size);
<anchor xml:id="__compress_g_z_8cpp_source_1l00146"/>00146 
<anchor xml:id="__compress_g_z_8cpp_source_1l00147"/>00147 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00148"/>00148 }
<anchor xml:id="__compress_g_z_8cpp_source_1l00149"/>00149 
<anchor xml:id="__compress_g_z_8cpp_source_1l00150"/>00150 
<anchor xml:id="__compress_g_z_8cpp_source_1l00165"/>00165 <emphasis role="keywordtype">int</emphasis>&#32;COMPRESS_GZ::ZCompress(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;target,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;targetsize,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;source,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;sourcesize)
<anchor xml:id="__compress_g_z_8cpp_source_1l00166"/>00166 {
<anchor xml:id="__compress_g_z_8cpp_source_1l00167"/>00167 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;level&#32;=&#32;-1;
<anchor xml:id="__compress_g_z_8cpp_source_1l00168"/>00168 &#32;&#32;z_stream&#32;&#32;stream;
<anchor xml:id="__compress_g_z_8cpp_source_1l00169"/>00169 
<anchor xml:id="__compress_g_z_8cpp_source_1l00170"/>00170 &#32;&#32;stream.zalloc&#32;&#32;&#32;=&#32;Z_NULL;
<anchor xml:id="__compress_g_z_8cpp_source_1l00171"/>00171 &#32;&#32;stream.zfree&#32;&#32;&#32;&#32;=&#32;Z_NULL;
<anchor xml:id="__compress_g_z_8cpp_source_1l00172"/>00172 &#32;&#32;stream.opaque&#32;&#32;&#32;=&#32;Z_NULL;
<anchor xml:id="__compress_g_z_8cpp_source_1l00173"/>00173 
<anchor xml:id="__compress_g_z_8cpp_source_1l00174"/>00174 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(deflateInit2(&amp;stream,&#32;level,&#32;Z_DEFLATED,&#32;<link linkend="__compress_g_z_8h_1a80682587643f944fc6ed85e22a36087a">COMPRESS_GZ_WINDOWBITS</link>&#32;|&#32;<link linkend="__compress_g_z_8h_1aaf60fe73d553d63a8d142b7bb10c865d">COMPRESS_GZ_ENCODING</link>,&#32;8,&#32;Z_DEFAULT_STRATEGY)&#32;!=&#32;Z_OK)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Z_BUF_ERROR;
<anchor xml:id="__compress_g_z_8cpp_source_1l00175"/>00175 
<anchor xml:id="__compress_g_z_8cpp_source_1l00176"/>00176 &#32;&#32;stream.next_in&#32;&#32;=&#32;(Bytef*)source;
<anchor xml:id="__compress_g_z_8cpp_source_1l00177"/>00177 &#32;&#32;stream.avail_in&#32;=&#32;(uInt)sourcesize;
<anchor xml:id="__compress_g_z_8cpp_source_1l00178"/>00178 
<anchor xml:id="__compress_g_z_8cpp_source_1l00179"/>00179 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;destlen&#32;&#32;&#32;&#32;&#32;=&#32;(uInt)*targetsize;
<anchor xml:id="__compress_g_z_8cpp_source_1l00180"/>00180 
<anchor xml:id="__compress_g_z_8cpp_source_1l00181"/>00181 &#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;<emphasis role="comment">//int&#32;have;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00182"/>00182 
<anchor xml:id="__compress_g_z_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;stream.avail_out&#32;=&#32;destlen;
<anchor xml:id="__compress_g_z_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;stream.next_out&#32;&#32;=&#32;target;
<anchor xml:id="__compress_g_z_8cpp_source_1l00185"/>00185 
<anchor xml:id="__compress_g_z_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(deflate(&amp;stream,&#32;Z_FINISH)&#32;==&#32;Z_STREAM_ERROR)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Z_STREAM_ERROR;
<anchor xml:id="__compress_g_z_8cpp_source_1l00187"/>00187 
<anchor xml:id="__compress_g_z_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//have&#32;=&#32;destlen&#32;-&#32;stream.avail_out;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00189"/>00189 
<anchor xml:id="__compress_g_z_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(stream.avail_out&#32;==&#32;0);
<anchor xml:id="__compress_g_z_8cpp_source_1l00191"/>00191 
<anchor xml:id="__compress_g_z_8cpp_source_1l00192"/>00192 &#32;(*targetsize)&#32;=&#32;stream.total_out;
<anchor xml:id="__compress_g_z_8cpp_source_1l00193"/>00193 
<anchor xml:id="__compress_g_z_8cpp_source_1l00194"/>00194 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(deflateEnd(&amp;stream)&#32;!=&#32;Z_OK)&#32;<emphasis role="keywordflow">return</emphasis>&#32;Z_BUF_ERROR;
<anchor xml:id="__compress_g_z_8cpp_source_1l00195"/>00195 
<anchor xml:id="__compress_g_z_8cpp_source_1l00196"/>00196 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;Z_OK;
<anchor xml:id="__compress_g_z_8cpp_source_1l00197"/>00197 }
<anchor xml:id="__compress_g_z_8cpp_source_1l00198"/>00198 
<anchor xml:id="__compress_g_z_8cpp_source_1l00199"/>00199 
<anchor xml:id="__compress_g_z_8cpp_source_1l00214"/>00214 <emphasis role="keywordtype">int</emphasis>&#32;COMPRESS_GZ::ZDecompress(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;target,<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;targetsize,<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;source,<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;sourcesize)
<anchor xml:id="__compress_g_z_8cpp_source_1l00215"/>00215 {
<anchor xml:id="__compress_g_z_8cpp_source_1l00216"/>00216 &#32;&#32;z_stream&#32;&#32;stream;
<anchor xml:id="__compress_g_z_8cpp_source_1l00217"/>00217 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;err;
<anchor xml:id="__compress_g_z_8cpp_source_1l00218"/>00218 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret;
<anchor xml:id="__compress_g_z_8cpp_source_1l00219"/>00219 <emphasis role="comment">//unsigned&#32;&#32;have;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00220"/>00220 
<anchor xml:id="__compress_g_z_8cpp_source_1l00221"/>00221 &#32;&#32;stream.zalloc&#32;&#32;&#32;=&#32;Z_NULL;
<anchor xml:id="__compress_g_z_8cpp_source_1l00222"/>00222 &#32;&#32;stream.zfree&#32;&#32;&#32;&#32;=&#32;Z_NULL;
<anchor xml:id="__compress_g_z_8cpp_source_1l00223"/>00223 &#32;&#32;stream.opaque&#32;&#32;&#32;=&#32;Z_NULL;
<anchor xml:id="__compress_g_z_8cpp_source_1l00224"/>00224 &#32;&#32;stream.avail_in&#32;=&#32;0;
<anchor xml:id="__compress_g_z_8cpp_source_1l00225"/>00225 &#32;&#32;stream.next_in&#32;&#32;=&#32;Z_NULL;
<anchor xml:id="__compress_g_z_8cpp_source_1l00226"/>00226 
<anchor xml:id="__compress_g_z_8cpp_source_1l00227"/>00227 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(inflateInit2(&amp;stream,&#32;16&#32;+&#32;MAX_WBITS)&#32;!=&#32;Z_OK)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Z_DATA_ERROR;
<anchor xml:id="__compress_g_z_8cpp_source_1l00228"/>00228 
<anchor xml:id="__compress_g_z_8cpp_source_1l00229"/>00229 &#32;&#32;stream.avail_in&#32;=&#32;sourcesize;
<anchor xml:id="__compress_g_z_8cpp_source_1l00230"/>00230 
<anchor xml:id="__compress_g_z_8cpp_source_1l00231"/>00231 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((uLong)stream.avail_in&#32;!=&#32;(uLong)sourcesize)&#32;<emphasis role="keywordflow">return</emphasis>&#32;Z_BUF_ERROR;
<anchor xml:id="__compress_g_z_8cpp_source_1l00232"/>00232 
<anchor xml:id="__compress_g_z_8cpp_source_1l00233"/>00233 &#32;&#32;stream.next_in&#32;=&#32;&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)source;
<anchor xml:id="__compress_g_z_8cpp_source_1l00234"/>00234 
<anchor xml:id="__compress_g_z_8cpp_source_1l00235"/>00235 &#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;stream.avail_out&#32;&#32;=&#32;*targetsize;
<anchor xml:id="__compress_g_z_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;stream.next_out&#32;&#32;&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)target;
<anchor xml:id="__compress_g_z_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;ret&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;inflate(&amp;stream,&#32;Z_NO_FLUSH);
<anchor xml:id="__compress_g_z_8cpp_source_1l00238"/>00238 
<anchor xml:id="__compress_g_z_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(ret)
<anchor xml:id="__compress_g_z_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__compress_g_z_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Z_ERRNO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="__compress_g_z_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Z_STREAM_ERROR&#32;&#32;&#32;:
<anchor xml:id="__compress_g_z_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Z_BUF_ERROR&#32;&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="__compress_g_z_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Z_VERSION_ERROR&#32;&#32;:
<anchor xml:id="__compress_g_z_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Z_NEED_DICT&#32;&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="__compress_g_z_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Z_DATA_ERROR&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="__compress_g_z_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;Z_MEM_ERROR&#32;&#32;&#32;&#32;&#32;&#32;:&#32;inflateEnd(&amp;stream);
<anchor xml:id="__compress_g_z_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__compress_g_z_8cpp_source_1l00250"/>00250 
<anchor xml:id="__compress_g_z_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//have&#32;=&#32;COMPRESS_GZ_CHUNK&#32;-&#32;stream.avail_out;</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00252"/>00252 
<anchor xml:id="__compress_g_z_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(stream.avail_out&#32;==&#32;0);
<anchor xml:id="__compress_g_z_8cpp_source_1l00254"/>00254 
<anchor xml:id="__compress_g_z_8cpp_source_1l00255"/>00255 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(inflateEnd(&amp;stream)&#32;!=&#32;Z_OK)
<anchor xml:id="__compress_g_z_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;{
<anchor xml:id="__compress_g_z_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Z_BUF_ERROR;
<anchor xml:id="__compress_g_z_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;}
<anchor xml:id="__compress_g_z_8cpp_source_1l00259"/>00259 
<anchor xml:id="__compress_g_z_8cpp_source_1l00260"/>00260 &#32;&#32;*targetsize&#32;=&#32;stream.total_out;
<anchor xml:id="__compress_g_z_8cpp_source_1l00261"/>00261 
<anchor xml:id="__compress_g_z_8cpp_source_1l00262"/>00262 &#32;&#32;err&#32;=&#32;inflateEnd(&amp;stream);
<anchor xml:id="__compress_g_z_8cpp_source_1l00263"/>00263 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(err!=Z_OK)&#32;<emphasis role="keywordflow">return</emphasis>&#32;err;
<anchor xml:id="__compress_g_z_8cpp_source_1l00264"/>00264 
<anchor xml:id="__compress_g_z_8cpp_source_1l00265"/>00265 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Z_OK;
<anchor xml:id="__compress_g_z_8cpp_source_1l00266"/>00266 }
<anchor xml:id="__compress_g_z_8cpp_source_1l00267"/>00267 
<anchor xml:id="__compress_g_z_8cpp_source_1l00268"/>00268 
<anchor xml:id="__compress_g_z_8cpp_source_1l00277"/>00277 <emphasis role="keywordtype">void</emphasis>&#32;COMPRESS_GZ::Clean()
<anchor xml:id="__compress_g_z_8cpp_source_1l00278"/>00278 {
<anchor xml:id="__compress_g_z_8cpp_source_1l00279"/>00279 &#32;&#32;<link linkend="_class_c_o_m_p_r_e_s_s_b_a_s_e_1a912f2c51ea571d790654cebe7754c772">param1</link>&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__compress_g_z_8cpp_source_1l00280"/>00280 }
<anchor xml:id="__compress_g_z_8cpp_source_1l00281"/>00281 
<anchor xml:id="__compress_g_z_8cpp_source_1l00282"/>00282 
<anchor xml:id="__compress_g_z_8cpp_source_1l00283"/>00283 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__compress_g_z_8cpp_source_1l00284"/>00284 
</programlisting></section>
