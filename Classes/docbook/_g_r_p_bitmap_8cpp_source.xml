<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g_r_p_bitmap_8cpp_source" xml:lang="en-US">
<title>GRPBitmap.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Graphic/GRPBitmap.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00001"/>00001 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00031"/>00031 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00033"/>00033 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00035"/>00035 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00036"/>00036 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00039"/>00039 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_8h">GRPBitmap.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00041"/>00041 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_rect_8h">GRPRect.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00043"/>00043 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00045"/>00045 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00047"/>00047 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00048"/>00048 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00049"/>00049 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00051"/>00051 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00053"/>00053 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00054"/>00054 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00055"/>00055 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00057"/>00057 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00058"/>00058 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00071"/><link linkend="_group___g_r_a_p_h_i_c_1gadcfee87a80fbe25f2d403d11608a0248">00071</link> <link linkend="_group___g_r_a_p_h_i_c_1gadcfee87a80fbe25f2d403d11608a0248">GRPBITMAP::GRPBITMAP</link>(<emphasis role="keywordtype">int</emphasis>&#32;width,&#32;<emphasis role="keywordtype">int</emphasis>&#32;height,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;mode,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isbufferinverse)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00072"/>00072 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00073"/>00073 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00074"/>00074 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00075"/>00075 &#32;&#32;this-&gt;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a2ff017a4a306c64388b4748cff2ef1f0">width</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00076"/>00076 &#32;&#32;this-&gt;height&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1af56534d12004917f8655bfd96d81aa63">height</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00077"/>00077 &#32;&#32;this-&gt;mode&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a41870014907133c43d9b99e52acc598f">mode</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00078"/>00078 &#32;&#32;this-&gt;isbufferinverse&#32;=&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a82cd5418db903f5a5fb8c56aceff6319">isbufferinverse</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00079"/>00079 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00080"/>00080 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00081"/>00081 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00090"/><link linkend="_group___g_r_a_p_h_i_c_1ga732c88150f2c40c6d0020f9b642c266f">00090</link> <link linkend="_group___g_r_a_p_h_i_c_1ga732c88150f2c40c6d0020f9b642c266f">GRPBITMAP::~GRPBITMAP</link>()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00091"/>00091 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00092"/>00092 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00093"/>00093 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00094"/>00094 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00095"/>00095 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00105"/><link linkend="_group___g_r_a_p_h_i_c_1ga277cfa1873c563e80ce9ea54f83d0b8c">00105</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga277cfa1873c563e80ce9ea54f83d0b8c">GRPBITMAP::IsValid</link>()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00106"/>00106 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00107"/>00107 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ae4cf9ecceb251fdacd00f1fb637f69ee">isvalid</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00108"/>00108 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00109"/>00109 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00110"/>00110 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00120"/><link linkend="_group___g_r_a_p_h_i_c_1ga313ad3e912d8093c4861260436b99a71">00120</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga313ad3e912d8093c4861260436b99a71">GRPBITMAP::GetBuffer</link>()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00121"/>00121 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00122"/>00122 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ab91b2c346bb2b99d06aa5e4d8b7893fd">buffer</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00123"/>00123 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00124"/>00124 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00125"/>00125 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00135"/><link linkend="_group___g_r_a_p_h_i_c_1ga103f4f693c0164a6bfdcf7a9a7c6c5d9">00135</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>**&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga103f4f693c0164a6bfdcf7a9a7c6c5d9">GRPBITMAP::GetBufferPointer</link>()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00136"/>00136 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ab91b2c346bb2b99d06aa5e4d8b7893fd">buffer</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00138"/>00138 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00139"/>00139 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00140"/>00140 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00150"/><link linkend="_group___g_r_a_p_h_i_c_1gad46bb9d22d6d2420b9de0ab915348a50">00150</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gad46bb9d22d6d2420b9de0ab915348a50">GRPBITMAP::GetBufferSize</link>()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00151"/>00151 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00152"/>00152 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ac7ef8e3377939b4ade46447ab1d3b52a">buffersize</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00153"/>00153 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00154"/>00154 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00155"/>00155 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00167"/><link linkend="_group___g_r_a_p_h_i_c_1gae0649ddd5b4ae9798afaf2ce367ca3e9">00167</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1gae0649ddd5b4ae9798afaf2ce367ca3e9">GRPBITMAP::GetSubBitmap</link>(<link linkend="_class_g_r_p_r_e_c_t_b_a_s_e">GRPRECTINT</link>&amp;&#32;rect)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00168"/>00168 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00169"/>00169 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00170"/>00170 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00171"/>00171 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00172"/>00172 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00182"/><link linkend="_group___g_r_a_p_h_i_c_1ga9adfa8c890144c2fdd4c298874883e74">00182</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga9adfa8c890144c2fdd4c298874883e74">GRPBITMAP::Clone</link>()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00183"/>00183 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00184"/>00184 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00185"/>00185 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00186"/>00186 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00187"/>00187 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00199"/><link linkend="_group___g_r_a_p_h_i_c_1gabe60f6c56acbd81e30e25ce9e836980e">00199</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gabe60f6c56acbd81e30e25ce9e836980e">GRPBITMAP::CopyFrom</link>(<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00200"/>00200 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00201"/>00201 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00202"/>00202 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00203"/>00203 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00204"/>00204 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00216"/><link linkend="_group___g_r_a_p_h_i_c_1ga8410b794c1df13ec016545b0d4d71f6c">00216</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga8410b794c1df13ec016545b0d4d71f6c">GRPBITMAP::ConvertToMode</link>(<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;newmode)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00217"/>00217 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00218"/>00218 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00219"/>00219 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00220"/>00220 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00221"/>00221 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00231"/><link linkend="_group___g_r_a_p_h_i_c_1ga0b94844ccf11a9b2b16ac1aa47faaf40">00231</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga0b94844ccf11a9b2b16ac1aa47faaf40">GRPBITMAP::FlipHorizontal</link>()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00232"/>00232 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00233"/>00233 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00234"/>00234 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00235"/>00235 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00236"/>00236 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00246"/><link linkend="_group___g_r_a_p_h_i_c_1gaaa84c8262833b01b0a8a8f84b7a01d3c">00246</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaaa84c8262833b01b0a8a8f84b7a01d3c">GRPBITMAP::FlipVertical</link>()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00247"/>00247 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00248"/>00248 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00249"/>00249 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00250"/>00250 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00251"/>00251 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00263"/><link linkend="_group___g_r_a_p_h_i_c_1ga1e04caf8314d06c33559b65c6990d92c">00263</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga1e04caf8314d06c33559b65c6990d92c">GRPBITMAP::Rotate</link>(<emphasis role="keywordtype">float</emphasis>&#32;degrees)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00264"/>00264 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00265"/>00265 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00266"/>00266 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00267"/>00267 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00268"/>00268 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00281"/><link linkend="_group___g_r_a_p_h_i_c_1ga476c1db766f56e015eef0b9205d91de7">00281</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga476c1db766f56e015eef0b9205d91de7">GRPBITMAP::Scale</link>(<emphasis role="keywordtype">int</emphasis>&#32;nwidth,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nheight)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00282"/>00282 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00283"/>00283 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00284"/>00284 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00285"/>00285 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00286"/>00286 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00298"/><link linkend="_group___g_r_a_p_h_i_c_1ga426493ff1423d1c0f5d6eccf0f1a7a05">00298</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga426493ff1423d1c0f5d6eccf0f1a7a05">GRPBITMAP::Crop</link>(<link linkend="_class_g_r_p_r_e_c_t_b_a_s_e">GRPRECTINT</link>&amp;&#32;rect)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00299"/>00299 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00300"/>00300 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00301"/>00301 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00302"/>00302 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00303"/>00303 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00315"/><link linkend="_group___g_r_a_p_h_i_c_1gaae912b2a3e36b03a0ffa3a963d02474b">00315</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaae912b2a3e36b03a0ffa3a963d02474b">GRPBITMAP::Compare</link>(<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00316"/>00316 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00317"/>00317 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!bitmap)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00321"/>00321 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00322"/>00322 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga1a9445c147fafbcf926caecaa5a13430">GetMode</link>()&#32;!=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga1a9445c147fafbcf926caecaa5a13430">GetMode</link>())&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00326"/>00326 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00327"/>00327 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1gad46bb9d22d6d2420b9de0ab915348a50">GetBufferSize</link>()&#32;!=&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ac7ef8e3377939b4ade46447ab1d3b52a">buffersize</link>)&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00331"/>00331 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00332"/>00332 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;bufferbitmap&#32;=&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga313ad3e912d8093c4861260436b99a71">GetBuffer</link>();
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00333"/>00333 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!bufferbitmap)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00337"/>00337 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00338"/>00338 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;equal&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00339"/>00339 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00340"/>00340 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ac7ef8e3377939b4ade46447ab1d3b52a">buffersize</link>;&#32;c++)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bufferbitmap[c]&#32;!=&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ab91b2c346bb2b99d06aa5e4d8b7893fd">buffer</link>[c])
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;equal&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;}&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00348"/>00348 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00349"/>00349 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;equal;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00350"/>00350 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00351"/>00351 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00352"/>00352 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00368"/><link linkend="_group___g_r_a_p_h_i_c_1gaf73ac47344352df591067147b60b8545">00368</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf73ac47344352df591067147b60b8545">GRPBITMAP::FindSubBitmap</link>(<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmapref,&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;y,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;difflimitpercent,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;pixelmargin)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00369"/>00369 {&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00370"/>00370 &#32;&#32;x&#32;=&#32;0;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00371"/>00371 &#32;&#32;y&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00372"/>00372 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00373"/>00373 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!bitmapref)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00377"/>00377 &#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00378"/>00378 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;_bitmap&#32;=&#32;bitmapref-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga8410b794c1df13ec016545b0d4d71f6c">ConvertToMode</link>(<link linkend="_group___g_r_a_p_h_i_c_1ga1a9445c147fafbcf926caecaa5a13430">GetMode</link>());
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00379"/>00379 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_bitmap)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00383"/>00383 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00384"/>00384 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga313ad3e912d8093c4861260436b99a71">GetBuffer</link>())
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00388"/>00388 &#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00389"/>00389 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;&#32;&#32;bufferscreen&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*)<link linkend="_class_g_r_p_b_i_t_m_a_p_1ab91b2c346bb2b99d06aa5e4d8b7893fd">buffer</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00390"/>00390 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;&#32;&#32;bufferbitmap&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*)_bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga313ad3e912d8093c4861260436b99a71">GetBuffer</link>();
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00391"/>00391 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;sizepixel&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00392"/>00392 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;bufferscreensize&#32;&#32;&#32;&#32;=&#32;(<link linkend="_group___g_r_a_p_h_i_c_1gad46bb9d22d6d2420b9de0ab915348a50">GetBufferSize</link>()&#32;/&#32;sizepixel);
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00393"/>00393 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;bufferbmplinesize&#32;&#32;&#32;=&#32;_bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga5cc313280bd36df2306a440639752388">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00394"/>00394 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;ndiff&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00395"/>00395 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;found&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00396"/>00396 &#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00397"/>00397 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;scrpos&#32;=&#32;0;&#32;scrpos&#32;&lt;&#32;bufferscreensize;&#32;scrpos++)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;ndiff&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;bmppos&#32;=&#32;0;&#32;bmppos&#32;&lt;&#32;bufferbmplinesize;&#32;bmppos++)&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bufferscreen[scrpos&#32;+&#32;bmppos]&#32;!=&#32;bufferbitmap[bmppos])
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___g_r_a_p_h_i_c_1ga06e9dd0ca0ce2187f1e2aa392448e5a5">IsSimilarPixel</link>(bufferscreen[scrpos&#32;+&#32;bmppos],&#32;bufferbitmap[bmppos],&#32;pixelmargin))
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ndiff++;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga5985794e00f02d26b82a5c5cdced8e39">DifferencesPerCent</link>(ndiff,&#32;bufferbmplinesize,&#32;difflimitpercent);
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(found)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00415"/>00415 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;srcpixelsline&#32;&#32;=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga5cc313280bd36df2306a440639752388">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;scrpos_tmp&#32;&#32;&#32;&#32;&#32;=&#32;scrpos;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;bmppos_tmp&#32;&#32;&#32;&#32;&#32;=&#32;bufferbmplinesize;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;&#32;(scrpos&#32;%&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga5cc313280bd36df2306a440639752388">GetWidth</link>());
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>()&#32;-&#32;(scrpos&#32;/&#32;srcpixelsline)&#32;-&#32;_bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00422"/>00422 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scrpos_tmp&#32;+=&#32;srcpixelsline;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;line&#32;=&#32;1;&#32;line&#32;&lt;&#32;_bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>();&#32;line++)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ndiff&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;bmppos&#32;=&#32;0;&#32;bmppos&#32;&lt;&#32;bufferbmplinesize;&#32;bmppos++)&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bufferscreen[scrpos_tmp&#32;+&#32;bmppos]&#32;!=&#32;bufferbitmap[bmppos_tmp])
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___g_r_a_p_h_i_c_1ga06e9dd0ca0ce2187f1e2aa392448e5a5">IsSimilarPixel</link>(bufferscreen[scrpos_tmp&#32;+&#32;bmppos],&#32;bufferbitmap[bmppos_tmp],&#32;pixelmargin))
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ndiff++;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bmppos_tmp++;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga5985794e00f02d26b82a5c5cdced8e39">DifferencesPerCent</link>(ndiff,&#32;bufferbmplinesize,&#32;difflimitpercent);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00442"/>00442 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!found)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;scrpos_tmp&#32;+=&#32;srcpixelsline;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00450"/>00450 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(found)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00457"/>00457 &#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00458"/>00458 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!found)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00464"/>00464 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_bitmap;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00465"/>00465 &#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00466"/>00466 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;found;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00467"/>00467 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00468"/>00468 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00469"/>00469 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00479"/><link linkend="_group___g_r_a_p_h_i_c_1gac24cbcd151609977f5db48ca7580912f">00479</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gac24cbcd151609977f5db48ca7580912f">GRPBITMAP::GetHandle</link>()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00480"/>00480 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00481"/>00481 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a01213f3f203c5334609455a0d6299353">handle</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00482"/>00482 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00483"/>00483 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00484"/>00484 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00494"/><link linkend="_group___g_r_a_p_h_i_c_1ga39d763de96001e428b34aacccdc7bd6a">00494</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga39d763de96001e428b34aacccdc7bd6a">GRPBITMAP::SetHandle</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;handle)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00495"/>00495 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00496"/>00496 &#32;&#32;this-&gt;handle&#32;=&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a01213f3f203c5334609455a0d6299353">handle</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00497"/>00497 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00498"/>00498 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00499"/>00499 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00513"/><link linkend="_group___g_r_a_p_h_i_c_1ga5985794e00f02d26b82a5c5cdced8e39">00513</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga5985794e00f02d26b82a5c5cdced8e39">GRPBITMAP::DifferencesPerCent</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;ndiff,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;max,&#32;<emphasis role="keywordtype">int</emphasis>&#32;limit)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00514"/>00514 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00515"/>00515 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;actualdiff&#32;=&#32;((ndiff*100)/max);
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00516"/>00516 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00517"/>00517 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(actualdiff&#32;&gt;&#32;limit)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00518"/>00518 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00519"/>00519 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00520"/>00520 }&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00521"/>00521 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00522"/>00522 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00536"/><link linkend="_group___g_r_a_p_h_i_c_1ga06e9dd0ca0ce2187f1e2aa392448e5a5">00536</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga06e9dd0ca0ce2187f1e2aa392448e5a5">GRPBITMAP::IsSimilarPixel</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;origin,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;target,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;margin)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00537"/>00537 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00538"/>00538 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;originRGBA&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;origin;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00539"/>00539 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;targetRGBA&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;target;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00540"/>00540 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;status&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00541"/>00541 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00542"/>00542 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ncomponent&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00543"/>00543 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00544"/>00544 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;4;&#32;c++)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00545"/>00545 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(abs(originRGBA[c]&#32;-&#32;targetRGBA[c])&#32;&gt;&#32;margin)
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ncomponent++;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00550"/>00550 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00551"/>00551 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00552"/>00552 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ncomponent)&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00553"/>00553 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00555"/>00555 &#32;&#32;&#32;&#32;}&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00556"/>00556 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00557"/>00557 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00558"/>00558 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00559"/>00559 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00560"/>00560 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00569"/>00569 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAP::Clean()
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00570"/>00570 {
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00571"/>00571 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ab91b2c346bb2b99d06aa5e4d8b7893fd">buffer</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00572"/>00572 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ac7ef8e3377939b4ade46447ab1d3b52a">buffersize</link>&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00573"/>00573 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1ae4cf9ecceb251fdacd00f1fb637f69ee">isvalid</link>&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00574"/>00574 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a01213f3f203c5334609455a0d6299353">handle</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__g_r_p_bitmap_8h_1affe480d4b3ad339fe61ebfb6af85a8bc">GRPBITMAP_INVALIDHANDLE</link>;
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00575"/>00575 }
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00576"/>00576 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00577"/>00577 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00578"/>00578 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00579"/>00579 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00580"/>00580 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00581"/>00581 
<anchor xml:id="__g_r_p_bitmap_8cpp_source_1l00582"/>00582 
</programlisting></section>
