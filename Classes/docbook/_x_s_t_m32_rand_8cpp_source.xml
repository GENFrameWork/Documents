<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_s_t_m32_rand_8cpp_source" xml:lang="en-US">
<title>XSTM32Rand.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/XSTM32Rand.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;CONTROL&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00030"/>00030 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00032"/>00032 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00034"/>00034 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00035"/>00035 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32___h_a_l_8h">XSTM32_HAL.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_rand_8h">XSTM32Rand.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00042"/>00042 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00044"/>00044 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00046"/>00046 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00054"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gac3c94b5787c7b5f9186bf5d52ab61750">00054</link> <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1gac3c94b5787c7b5f9186bf5d52ab61750">XSTM32RAND::XSTM32RAND</link>()
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00055"/>00055 {
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00056"/>00056 &#32;&#32;Clean();
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00057"/>00057 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00058"/>00058 &#32;&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga4e67602cf89a75f3b934a5223085fd95">Ini</link>();
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00059"/>00059 }
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00060"/>00060 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00061"/>00061 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00070"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga3bcfe130cfe6b2b6bfd2a3df2dc064e3">00070</link> <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga3bcfe130cfe6b2b6bfd2a3df2dc064e3">XSTM32RAND::~XSTM32RAND</link>()
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00071"/>00071 {
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00072"/>00072 &#32;&#32;Clean();
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00073"/>00073 }
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00074"/>00074 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00075"/>00075 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00076"/>00076 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00086"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga4e67602cf89a75f3b934a5223085fd95">00086</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga4e67602cf89a75f3b934a5223085fd95">XSTM32RAND::Ini</link>()
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00087"/>00087 {&#32;&#32;
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00088"/>00088 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;prime1&#32;=&#32;42;
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00089"/>00089 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;prime2&#32;=&#32;89;
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00090"/>00090 &#32;&#32;
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00091"/>00091 &#32;&#32;initialvalue&#32;=&#32;HAL_GetTick();
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00092"/>00092 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00093"/>00093 &#32;&#32;initialvalue&#32;+=&#32;(initialvalue&#32;*&#32;prime1)&#32;+&#32;prime2;
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00094"/>00094 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00095"/>00095 &#32;&#32;srand(initialvalue);
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00096"/>00096 &#32;&#32;
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00097"/>00097 &#32;&#32;
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00098"/>00098 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00099"/>00099 }
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00100"/>00100 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00101"/>00101 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00102"/>00102 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00114"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga19e3ac3cc74d40f13b0113eeabf65890">00114</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga19e3ac3cc74d40f13b0113eeabf65890">XSTM32RAND::MaxElements</link>(<emphasis role="keywordtype">int</emphasis>&#32;max)
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00115"/>00115 {
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00116"/>00116 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_rand_8h_1ac30c87f36fdbca26aca5972841cf6b63">GETRANDOM</link>(0,max-1);
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00117"/>00117 }
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00118"/>00118 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00119"/>00119 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00120"/>00120 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00132"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga25dc59292adcaee0d9ded0ed4d74ef3c">00132</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga25dc59292adcaee0d9ded0ed4d74ef3c">XSTM32RAND::Max</link>(<emphasis role="keywordtype">int</emphasis>&#32;max)
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00133"/>00133 {
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00134"/>00134 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_rand_8h_1ac30c87f36fdbca26aca5972841cf6b63">GETRANDOM</link>(0,max);
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00135"/>00135 }
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00136"/>00136 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00137"/>00137 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00138"/>00138 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00151"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga5a2da290c6a0474cf5721a2af53c4e1f">00151</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga5a2da290c6a0474cf5721a2af53c4e1f">XSTM32RAND::Between</link>(<emphasis role="keywordtype">int</emphasis>&#32;min,<emphasis role="keywordtype">int</emphasis>&#32;max)
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00152"/>00152 {
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00153"/>00153 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_rand_8h_1ac30c87f36fdbca26aca5972841cf6b63">GETRANDOM</link>(min,max);
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00154"/>00154 }
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00155"/>00155 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00156"/>00156 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00157"/>00157 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00166"/>00166 <emphasis role="keywordtype">void</emphasis>&#32;XSTM32RAND::Clean()
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00167"/>00167 {
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00168"/>00168 &#32;&#32;initialvalue&#32;=&#32;0;
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00169"/>00169 }
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00170"/>00170 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00171"/>00171 
<anchor xml:id="__x_s_t_m32_rand_8cpp_source_1l00172"/>00172 
</programlisting></section>
