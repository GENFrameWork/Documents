<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source" xml:lang="en-US">
<title>XWINDOWSTrace.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Windows/XWINDOWSTrace.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#ifdef&#32;XTRACE_ACTIVE</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00038"/>00038 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00042"/>00042 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_w_i_n_d_o_w_s_trace_8h">XWINDOWSTrace.h</link>&quot;</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00044"/>00044 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_string_8h">XString.h</link>&quot;</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_w_i_n_d_o_w_s_system_8h">XWINDOWSSystem.h</link>&quot;</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_w_i_n_d_o_w_s_date_time_8h">XWINDOWSDateTime.h</link>&quot;</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00049"/>00049 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00052"/>00052 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00053"/>00053 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00055"/>00055 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00057"/>00057 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00059"/>00059 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00060"/>00060 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00061"/>00061 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00062"/>00062 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00070"/>00070 XWINDOWSTRACE::XWINDOWSTRACE()
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00071"/>00071 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00072"/>00072 &#32;&#32;Clean();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00073"/>00073 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00074"/>00074 &#32;&#32;<link linkend="_class_x_t_r_a_c_e_1a04118236a45633e3dec5e02aeafb63ba">XTRACE::instance</link>&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00075"/>00075 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00076"/>00076 &#32;&#32;mutexhandle&#32;=&#32;(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>)CreateMutex(&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_s_t_m32___h_a_l_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00077"/>00077 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!mutexhandle)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00078"/>00078 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00079"/>00079 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00080"/>00080 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00089"/>00089 XWINDOWSTRACE::~XWINDOWSTRACE()
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00090"/>00090 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00091"/>00091 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mutexhandle)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;CloseHandle((HANDLE)mutexhandle);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;mutexhandle&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00096"/>00096 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00097"/>00097 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;<link linkend="__x_trace_8h_1af199f7131d82a501867d0d3f6452f7db">XTRACE_MAXNTARGETS</link>;&#32;c++)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(targets[c].GetType()&#32;==&#32;<link linkend="__x_trace_8h_1a88bdf656519efb17e41d3ad15c75a013a1e2d09705c349c4425c57253e15998a2">XTRACE_TYPE_NET</link>)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CloseHandleNet(&amp;targets[c]);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00104"/>00104 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00105"/>00105 &#32;&#32;Clean();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00106"/>00106 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00107"/>00107 &#32;&#32;<link linkend="_class_x_t_r_a_c_e_1a04118236a45633e3dec5e02aeafb63ba">XTRACE::instance</link>&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00108"/>00108 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00109"/>00109 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00110"/>00110 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00122"/>00122 <emphasis role="keywordtype">void</emphasis>&#32;XWINDOWSTRACE::PrintSpecial(<link linkend="_class_x_t_r_a_c_e___t_a_r_g_e_t">XTRACE_TARGET</link>*&#32;target,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;level,&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00123"/>00123 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00124"/>00124 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!target)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00125"/>00125 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga2b803e6b893de0066b02d281342bf470">GetAim</link>()[0])&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00126"/>00126 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00127"/>00127 &#32;&#32;Lock();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00128"/>00128 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00129"/>00129 &#32;&#32;HWND&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hwnd;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00130"/>00130 &#32;&#32;COPYDATASTRUCT&#32;cs;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00131"/>00131 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00132"/>00132 &#32;&#32;hwnd&#32;=&#32;FindWindow(<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga2b803e6b893de0066b02d281342bf470">GetAim</link>());
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00133"/>00133 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00134"/>00134 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(hwnd&#32;==&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00136"/>00136 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;_MSC_VER</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00137"/>00137 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;OutputDebugString(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;OutputDebugString(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>));
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00140"/>00140 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00144"/>00144 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;publicIP&#32;=&#32;0;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localIP&#32;&#32;=&#32;0x01010101;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xbufferpacket(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_w_i_n_d_o_w_s_d_a_t_e_t_i_m_e">XWINDOWSDATETIME</link>&#32;&#32;&#32;xdatetime;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00149"/>00149 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;xdatetime.<link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga0474a1150318f6af025214281b29ec5c">Read</link>();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00151"/>00151 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;SetTraceTextToXBuffer(publicIP,&#32;localIP,&#32;level,&#32;sequence,&#32;&amp;xdatetime,&#32;&#32;<emphasis role="keywordtype">string</emphasis>,&#32;xbufferpacket);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00153"/>00153 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;cs.dwData&#32;&#32;=&#32;0;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;cs.lpData&#32;&#32;=&#32;(PVOID)xbufferpacket.Get();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;cs.cbData&#32;&#32;=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)xbufferpacket.GetSize();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00157"/>00157 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;SendMessage(hwnd,&#32;WM_COPYDATA,&#32;(WPARAM)<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;(LPARAM)&amp;cs);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00160"/>00160 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00161"/>00161 &#32;&#32;target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga4daec3ccd1c6094d28f8bfed49be3d24">AddNSendings</link>();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00162"/>00162 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00163"/>00163 &#32;&#32;UnLock();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00164"/>00164 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00165"/>00165 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00166"/>00166 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00178"/>00178 <emphasis role="keywordtype">void</emphasis>&#32;XWINDOWSTRACE::PrintFile(<link linkend="_class_x_t_r_a_c_e___t_a_r_g_e_t">XTRACE_TARGET</link>*&#32;target,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;level,&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00179"/>00179 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00180"/>00180 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!target)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00181"/>00181 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga2b803e6b893de0066b02d281342bf470">GetAim</link>()[0])&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00182"/>00182 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00183"/>00183 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;line;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00184"/>00184 &#32;&#32;FILE*&#32;&#32;&#32;file;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00185"/>00185 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00186"/>00186 &#32;&#32;Lock();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00187"/>00187 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00188"/>00188 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;error&#32;=&#32;0;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00189"/>00189 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00190"/>00190 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;BUILDER</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00191"/>00191 &#32;&#32;file&#32;=&#32;_wfopen(target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga2b803e6b893de0066b02d281342bf470">GetAim</link>(),&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;at&quot;</emphasis>));
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00192"/>00192 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;UnLock();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00197"/>00197 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00198"/>00198 &#32;&#32;error&#32;=&#32;_wfopen_s(&amp;file,&#32;target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga2b803e6b893de0066b02d281342bf470">GetAim</link>(),&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;at&quot;</emphasis>));
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00199"/>00199 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00200"/>00200 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00201"/>00201 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(error)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;UnLock();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00206"/>00206 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00207"/>00207 &#32;&#32;<emphasis role="comment">//&#32;---&#32;Check&#32;File&#32;size&#32;--------------</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00208"/>00208 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00209"/>00209 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;sizefile;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00210"/>00210 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00211"/>00211 &#32;&#32;fflush(file);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00212"/>00212 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00213"/>00213 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;position&#32;=&#32;ftell(file);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00214"/>00214 &#32;&#32;fseek(file,0,SEEK_END);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00215"/>00215 &#32;&#32;sizefile&#32;=&#32;ftell(file);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00216"/>00216 &#32;&#32;fseek(file,position,SEEK_SET);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00217"/>00217 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00218"/>00218 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(sizefile+(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)line.<link linkend="_group___x_u_t_i_l_s_1ga7c3fa0dd7b650399470c76192fbd4916">GetSize</link>()&gt;sizelimit)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;fclose(file);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00221"/>00221 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;DeleteFile(target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga2b803e6b893de0066b02d281342bf470">GetAim</link>());
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00223"/>00223 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00224"/>00224 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;BUILDER</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;file&#32;=&#32;_wfopen(target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga2b803e6b893de0066b02d281342bf470">GetAim</link>(),<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;at&quot;</emphasis>));
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnLock();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00231"/>00231 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;error&#32;=&#32;_wfopen_s(&amp;file,&#32;target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga2b803e6b893de0066b02d281342bf470">GetAim</link>(),&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;at&quot;</emphasis>));
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00233"/>00233 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00234"/>00234 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(error)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UnLock();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00241"/>00241 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00242"/>00242 &#32;&#32;<emphasis role="comment">//&#32;---&#32;Check&#32;File&#32;size&#32;--------------</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00243"/>00243 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00244"/>00244 &#32;&#32;line&#32;=&#32;string;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00245"/>00245 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00246"/>00246 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(file)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;charstr;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;line.<link linkend="_group___x_u_t_i_l_s_1gacdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(charstr);&#32;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;fwrite(charstr.<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;1,&#32;line.<link linkend="_group___x_u_t_i_l_s_1ga7c3fa0dd7b650399470c76192fbd4916">GetSize</link>(),&#32;file);&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;fwrite(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;\n\r&quot;</emphasis>),1,1,file);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00254"/>00254 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;fclose(file);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00257"/>00257 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00258"/>00258 &#32;&#32;target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga4daec3ccd1c6094d28f8bfed49be3d24">AddNSendings</link>();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00259"/>00259 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00260"/>00260 &#32;&#32;UnLock();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00261"/>00261 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00262"/>00262 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00263"/>00263 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00275"/>00275 <emphasis role="keywordtype">void</emphasis>&#32;XWINDOWSTRACE::PrintNet(<link linkend="_class_x_t_r_a_c_e___t_a_r_g_e_t">XTRACE_TARGET</link>*&#32;target,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;level,&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00276"/>00276 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00277"/>00277 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!target)&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00278"/>00278 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00279"/>00279 <emphasis role="preprocessor">&#32;&#32;#if(defined(DIO_ACTIVE)&#32;&amp;&amp;&#32;defined(DIO_STREAMUDP_ACTIVE))</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00280"/>00280 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00281"/>00281 &#32;&#32;Lock();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00282"/>00282 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00283"/>00283 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;xbufferpacket(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00284"/>00284 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00285"/>00285 &#32;&#32;xdatetime.<link linkend="_group___p_l_a_t_f_o_r_m___w_i_n_d_o_w_s_1ga0474a1150318f6af025214281b29ec5c">Read</link>();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00286"/>00286 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00287"/>00287 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XTRACE_NOINTERNET</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00288"/>00288 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;publicIP&#32;=&#32;0;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00289"/>00289 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00290"/>00290 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00291"/>00291 &#32;&#32;SetTraceTextToXBuffer(publicIP,&#32;localIP,&#32;level,&#32;sequence,&#32;&amp;xdatetime,&#32;&#32;<emphasis role="keywordtype">string</emphasis>,&#32;xbufferpacket);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00292"/>00292 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00293"/>00293 &#32;&#32;SOCKET&#32;handle&#32;=&#32;(SOCKET)target-&gt;GetNETHandle();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00294"/>00294 &#32;&#32;send(handle,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*)xbufferpacket.Get(),&#32;xbufferpacket.GetSize(),&#32;0);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00295"/>00295 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00296"/>00296 &#32;&#32;target-&gt;<link linkend="_group___x_u_t_i_l_s_1ga4daec3ccd1c6094d28f8bfed49be3d24">AddNSendings</link>();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00297"/>00297 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00298"/>00298 &#32;&#32;UnLock();&#32;&#32;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00299"/>00299 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00300"/>00300 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00301"/>00301 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00302"/>00302 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00303"/>00303 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00315"/>00315 <emphasis role="keywordtype">bool</emphasis>&#32;XWINDOWSTRACE::GetHandleNet(<link linkend="_class_x_t_r_a_c_e___t_a_r_g_e_t">XTRACE_TARGET</link>*&#32;target)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00316"/>00316 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00317"/>00317 <emphasis role="preprocessor">&#32;&#32;#if(defined(DIO_ACTIVE)&#32;&amp;&amp;&#32;defined(DIO_STREAMUDP_ACTIVE))</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00318"/>00318 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00319"/>00319 &#32;&#32;SOCKADDR_IN&#32;&#32;addr;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00320"/>00320 &#32;&#32;SOCKET&#32;&#32;&#32;&#32;&#32;&#32;&#32;handle;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00321"/>00321 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00322"/>00322 &#32;&#32;memset(&amp;addr,0,<emphasis role="keyword">sizeof</emphasis>(SOCKADDR_IN));
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00323"/>00323 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00324"/>00324 &#32;&#32;handle&#32;=&#32;socket(AF_INET,&#32;SOCK_DGRAM,&#32;0);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00325"/>00325 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle&#32;==&#32;INVALID_SOCKET)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00326"/>00326 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00327"/>00327 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!target-&gt;GetIP()[0])&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00328"/>00328 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00329"/>00329 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00330"/>00330 &#32;&#32;addr.sin_family&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;AF_INET;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00331"/>00331 &#32;&#32;addr.sin_port&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;htons(target-&gt;GetPort());
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00332"/>00332 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00333"/>00333 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(target-&gt;GetIP()[0]&#32;==&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;addr.sin_addr.s_addr&#32;&#32;=&#32;&#32;htonl(INADDR_BROADCAST);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;{&#32;&#32;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00339"/>00339 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#ifndef&#32;BUILDER</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;inet_pton(addr.sin_family,&#32;target-&gt;GetIP(),&#32;&amp;addr.sin_addr.s_addr);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00341"/>00341 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;addr.sin_addr.s_addr&#32;&#32;=&#32;inet_addr(target-&gt;GetIP());
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00343"/>00343 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00345"/>00345 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00346"/>00346 &#32;&#32;connect(handle,(LPSOCKADDR)&amp;addr,<emphasis role="keyword">sizeof</emphasis>(SOCKADDR_IN));
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00347"/>00347 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00348"/>00348 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;NEThandle&#32;=&#32;(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>)handle;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00349"/>00349 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00350"/>00350 &#32;&#32;target-&gt;SetNETHandle(NEThandle);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00351"/>00351 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00352"/>00352 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00353"/>00353 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00354"/>00354 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00355"/>00355 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00356"/>00356 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00357"/>00357 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00369"/>00369 <emphasis role="keywordtype">bool</emphasis>&#32;XWINDOWSTRACE::CloseHandleNet(<link linkend="_class_x_t_r_a_c_e___t_a_r_g_e_t">XTRACE_TARGET</link>*&#32;target)
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00370"/>00370 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00371"/>00371 <emphasis role="preprocessor">&#32;&#32;#if(defined(DIO_ACTIVE)&#32;&amp;&amp;&#32;defined(DIO_STREAMUDP_ACTIVE))</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00372"/>00372 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00373"/>00373 &#32;&#32;SOCKET&#32;handle&#32;=&#32;(SOCKET)target-&gt;GetNETHandle();
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00374"/>00374 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!handle)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00375"/>00375 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00376"/>00376 &#32;&#32;closesocket(handle);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00377"/>00377 &#32;&#32;target-&gt;SetNETHandle(0);
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00378"/>00378 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00379"/>00379 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00380"/>00380 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00381"/>00381 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00382"/>00382 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00383"/>00383 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00384"/>00384 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00395"/>00395 <emphasis role="keywordtype">bool</emphasis>&#32;XWINDOWSTRACE::Lock()
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00396"/>00396 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00397"/>00397 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!mutexhandle)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00398"/>00398 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(WaitForSingleObject((HANDLE)mutexhandle,&#32;INFINITE)&#32;==&#32;WAIT_FAILED)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00399"/>00399 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00400"/>00400 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00401"/>00401 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00402"/>00402 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00403"/>00403 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00414"/>00414 <emphasis role="keywordtype">bool</emphasis>&#32;XWINDOWSTRACE::UnLock()
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00415"/>00415 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00416"/>00416 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!mutexhandle)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00417"/>00417 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ReleaseMutex((HANDLE)mutexhandle))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00418"/>00418 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00419"/>00419 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00420"/>00420 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00421"/>00421 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00422"/>00422 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00431"/>00431 <emphasis role="keywordtype">void</emphasis>&#32;XWINDOWSTRACE::Clean()
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00432"/>00432 {
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00433"/>00433 &#32;&#32;mutexhandle&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00434"/>00434 }
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00435"/>00435 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00436"/>00436 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00437"/>00437 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00438"/>00438 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00439"/>00439 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00440"/>00440 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00441"/>00441 
<anchor xml:id="__x_w_i_n_d_o_w_s_trace_8cpp_source_1l00442"/>00442 
</programlisting></section>
