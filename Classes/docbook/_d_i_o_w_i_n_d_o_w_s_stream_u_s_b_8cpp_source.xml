<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source" xml:lang="en-US">
<title>DIOWINDOWSStreamUSB.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Windows/DIOWINDOWSStreamUSB.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00031"/>00031 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00033"/>00033 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00035"/>00035 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#if&#32;defined(DIO_ACTIVE)&#32;&amp;&amp;&#32;defined(DIO_STREAMUSB_ACTIVE)</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00038"/>00038 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00042"/>00042 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8h">DIOWINDOWSStreamUSB.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00044"/>00044 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_string_8h">XString.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00048"/>00048 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_x_event_8h">DIOStreamXEvent.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00050"/>00050 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00052"/>00052 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00055"/>00055 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00060"/>00060 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00061"/>00061 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00062"/>00062 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00064"/>00064 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00065"/>00065 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00073"/>00073 DIOWINDOWSSTREAMUSB::DIOWINDOWSSTREAMUSB()&#32;:&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_u_s_b">DIOSTREAMUSB</link>()&#32;,&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e">XFSMACHINE</link>(0)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00074"/>00074 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00075"/>00075 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00076"/>00076 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00077"/>00077 &#32;&#32;AddState(&#32;DIOWINDOWSUSBFSMSTATE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00081"/>00081 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00082"/>00082 &#32;&#32;AddState(&#32;DIOWINDOWSUSBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_SENDINGDATA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_SENDINGDATA&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00087"/>00087 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00088"/>00088 &#32;&#32;AddState(&#32;DIOWINDOWSUSBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_SENDINGDATA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_SENDINGDATA&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00093"/>00093 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00094"/>00094 &#32;&#32;AddState(&#32;DIOWINDOWSUSBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOWINDOWSUSBFSMEVENT_SENDINGDATA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOWINDOWSUSBFSMSTATE_SENDINGDATA&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00099"/>00099 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00100"/>00100 &#32;&#32;threadconnection&#32;=&#32;<link linkend="__x_thread_collected_8h_1aad503e3655b9ff78d3ac660d1f1f5534">CREATEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a84cb8ce10e9d83f06cdd1b368d0b67ea">XTHREADGROUPID_DIOSTREAMUSB</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;DIOWINDOWSSTREAMUSB::DIOWINDOWSSTREAMUSB&quot;</emphasis>),&#32;ThreadConnection,&#32;(<emphasis role="keywordtype">void</emphasis>*)<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00101"/>00101 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00102"/>00102 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00103"/>00103 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00112"/>00112 DIOWINDOWSSTREAMUSB::~DIOWINDOWSSTREAMUSB()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00113"/>00113 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00114"/>00114 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00115"/>00115 &#32;&#32;Close();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00116"/>00116 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00117"/>00117 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(threadconnection)&#32;<link linkend="__x_thread_collected_8h_1a18fb843f5fbad51464b68d705ed29b8a">DELETEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a84cb8ce10e9d83f06cdd1b368d0b67ea">XTHREADGROUPID_DIOSTREAMUSB</link>,&#32;threadconnection);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00118"/>00118 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00119"/>00119 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00120"/>00120 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00121"/>00121 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00122"/>00122 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00132"/>00132 <link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0f">DIOSTREAMSTATUS</link>&#32;DIOWINDOWSSTREAMUSB::GetConnectStatus()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00133"/>00133 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00134"/>00134 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle==INVALID_HANDLE_VALUE)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00135"/>00135 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!config)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00136"/>00136 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00138"/>00138 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00139"/>00139 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00140"/>00140 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00150"/>00150 <emphasis role="keywordtype">bool</emphasis>&#32;DIOWINDOWSSTREAMUSB::Open()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00151"/>00151 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00152"/>00152 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadconnection)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00153"/>00153 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00154"/>00154 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!inbuffer)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00155"/>00155 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outbuffer)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00156"/>00156 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00157"/>00157 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!config)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00158"/>00158 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00159"/>00159 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;comport;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00160"/>00160 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;cfg;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00161"/>00161 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00162"/>00162 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00163"/>00163 &#32;&#32;handle&#32;=&#32;CreateFile(config-&gt;GetResource()-&gt;Get(),&#32;GENERIC_READ&#32;|&#32;GENERIC_WRITE
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;FILE_SHARE_READ&#32;|&#32;FILE_SHARE_WRITE
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;OPEN_EXISTING
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;FILE_FLAG_OVERLAPPED
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00169"/>00169 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00170"/>00170 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00171"/>00171 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle==INVALID_HANDLE_VALUE)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00172"/>00172 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00173"/>00173 &#32;&#32;memset(&amp;ovi,0,<emphasis role="keyword">sizeof</emphasis>(ovi));
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00174"/>00174 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00175"/>00175 &#32;&#32;SetEvent(DIOWINDOWSUSBFSMEVENT_CONNECTED);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00176"/>00176 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00177"/>00177 &#32;&#32;status&#32;=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa264f9a9556afb61979d377ba92266a76">DIOSTREAMSTATUS_CONNECTED</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00178"/>00178 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00179"/>00179 &#32;&#32;ResetXBuffers();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00180"/>00180 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00181"/>00181 &#32;&#32;ResetConnectionStatistics();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00182"/>00182 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00183"/>00183 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;threadconnection-&gt;Ini();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00184"/>00184 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00185"/>00185 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00186"/>00186 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00196"/>00196 <emphasis role="keywordtype">bool</emphasis>&#32;DIOWINDOWSSTREAMUSB::Close()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00197"/>00197 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00198"/>00198 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadconnection)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00199"/>00199 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00200"/>00200 &#32;&#32;threadconnection-&gt;End();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00201"/>00201 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00202"/>00202 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00203"/>00203 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00204"/>00204 &#32;&#32;CloseHandle(handle);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00205"/>00205 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00206"/>00206 &#32;&#32;handle=INVALID_HANDLE_VALUE;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00207"/>00207 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00208"/>00208 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00209"/>00209 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00210"/>00210 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00211"/>00211 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00222"/>00222 <emphasis role="keywordtype">bool</emphasis>&#32;DIOWINDOWSSTREAMUSB::CleanBuffers()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00223"/>00223 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00224"/>00224 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00225"/>00225 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00226"/>00226 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00227"/>00227 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00228"/>00228 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00229"/>00229 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00239"/>00239 <emphasis role="keywordtype">void</emphasis>&#32;DIOWINDOWSSTREAMUSB::ThreadConnection(<emphasis role="keywordtype">void</emphasis>*&#32;data)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00240"/>00240 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00241"/>00241 &#32;&#32;<link linkend="_class_d_i_o_w_i_n_d_o_w_s_s_t_r_e_a_m_u_s_b">DIOWINDOWSSTREAMUSB</link>*&#32;diostream&#32;=&#32;(<link linkend="_class_d_i_o_w_i_n_d_o_w_s_s_t_r_e_a_m_u_s_b">DIOWINDOWSSTREAMUSB</link>*)data;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00242"/>00242 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00243"/>00243 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00244"/>00244 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;GetEvent()==DIOWINDOWSUSBFSMEVENT_NONE)&#32;<emphasis role="comment">//&#32;No&#32;hay&#32;nuevos&#32;Eventos</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(diostream-&gt;GetCurrentState())
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00249"/>00249 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00251"/>00251 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;IsBlockRead())
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;buffer[<link linkend="__d_i_o_stream_8h_1aad641424d597536a03a19645768c03b4">DIOSTREAM_MAXBUFFER</link>];
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00255"/>00255 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;br&#32;=&#32;diostream-&gt;ReadBuffer(buffer,&#32;<link linkend="__d_i_o_stream_8h_1aad641424d597536a03a19645768c03b4">DIOSTREAM_MAXBUFFER</link>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(br)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;inbuffer-&gt;Add(buffer,&#32;br);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00262"/>00262 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(::GetLastError()&#32;==&#32;5)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;SetEvent(DIOWINDOWSUSBFSMEVENT_DISCONNECTING);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00268"/>00268 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;IsBlockWrite())
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;esize&#32;=&#32;diostream-&gt;outbuffer-&gt;GetSize();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(esize)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;outbuffer-&gt;SetBlocked(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;bw&#32;=&#32;diostream-&gt;WriteBuffer(diostream-&gt;outbuffer-&gt;Get(),&#32;esize);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;outbuffer-&gt;SetBlocked(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bw)&#32;diostream-&gt;outbuffer-&gt;Extract(<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;bw);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00282"/>00282 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_SENDINGDATA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00284"/>00284 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00286"/>00286 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;GetEvent()&lt;DIOWINDOWSUSB_LASTEVENT)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;CheckTransition();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00294"/>00294 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(diostream-&gt;GetCurrentState())
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00298"/>00298 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_x_e_v_e_n_t">DIOSTREAMXEVENT</link>&#32;xevent(diostream,<link linkend="__d_i_o_stream_x_event_8h_1a03855c794a83f8d6c636156f111c4829a51978d78ab30f0f5237c9d2b78a80a85">DIOSTREAMXEVENT_TYPE_CONNECTED</link>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetDIOStream(diostream);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00301"/>00301 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;PostEvent(&amp;xevent);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00303"/>00303 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;SetEvent(DIOWINDOWSUSBFSMEVENT_WAITINGTOREAD);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00307"/>00307 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00309"/>00309 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_SENDINGDATA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00311"/>00311 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOWINDOWSUSBFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_x_e_v_e_n_t">DIOSTREAMXEVENT</link>&#32;xevent(diostream,<link linkend="__d_i_o_stream_x_event_8h_1a03855c794a83f8d6c636156f111c4829ae953bc0973c4cdebf1b26ed06c424b52">DIOSTREAMXEVENT_TYPE_DISCONNECTED</link>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetDIOStream(diostream);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;PostEvent(&amp;xevent);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00315"/>00315 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;threadconnection-&gt;Run(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;status&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00323"/>00323 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00324"/>00324 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00325"/>00325 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00338"/>00338 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOWINDOWSSTREAMUSB::ReadBuffer(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00339"/>00339 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00340"/>00340 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00341"/>00341 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;==&#32;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00342"/>00342 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00343"/>00343 &#32;&#32;DWORD&#32;br&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00344"/>00344 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00345"/>00345 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00346"/>00346 &#32;&#32;status&#32;=&#32;ReadFile(handle,&#32;buffer,&#32;size,&#32;&amp;br,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)?<emphasis role="keyword">true</emphasis>:<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00347"/>00347 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00348"/>00348 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00349"/>00349 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00350"/>00350 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)br;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00351"/>00351 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00352"/>00352 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00353"/>00353 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00366"/>00366 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOWINDOWSSTREAMUSB::WriteBuffer(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00367"/>00367 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00368"/>00368 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00369"/>00369 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00370"/>00370 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;==&#32;0)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00371"/>00371 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00372"/>00372 &#32;&#32;DWORD&#32;&#32;&#32;&#32;&#32;&#32;bw&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00373"/>00373 &#32;&#32;OVERLAPPED&#32;oviwrite&#32;&#32;&#32;=&#32;{&#32;0&#32;};
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00374"/>00374 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;status;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00375"/>00375 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00376"/>00376 &#32;&#32;oviwrite.hEvent&#32;=&#32;CreateEvent(0,<link linkend="__x_s_t_m32___h_a_l_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>,<link linkend="__x_s_t_m32___h_a_l_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>,0);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00377"/>00377 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!oviwrite.hEvent)&#32;<emphasis role="keywordflow">return</emphasis>&#32;bw;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00378"/>00378 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00379"/>00379 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!WriteFile(handle,buffer,size,&amp;bw,&amp;oviwrite))
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetLastError()!=ERROR_IO_PENDING)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(WaitForSingleObject(oviwrite.hEvent,writetimeout))
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;WAIT_OBJECT_0&#32;:&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!GetOverlappedResult(handle,&amp;oviwrite,&amp;bw,<link linkend="__x_s_t_m32___h_a_l_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>))
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00393"/>00393 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;WAIT_TIMEOUT&#32;&#32;:&#32;CancelIo(handle);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00397"/>00397 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;&#32;:&#32;status=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00400"/>00400 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00403"/>00403 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00405"/>00405 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00406"/>00406 &#32;&#32;CloseHandle(oviwrite.hEvent);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00407"/>00407 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00408"/>00408 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00409"/>00409 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00410"/>00410 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)bw;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00411"/>00411 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00412"/>00412 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00413"/>00413 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00422"/>00422 <emphasis role="keywordtype">void</emphasis>&#32;DIOWINDOWSSTREAMUSB::Clean()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00423"/>00423 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00424"/>00424 &#32;&#32;threadconnection&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00425"/>00425 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00426"/>00426 &#32;&#32;handle&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;INVALID_HANDLE_VALUE;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00427"/>00427 &#32;&#32;hevent&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00428"/>00428 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00429"/>00429 &#32;&#32;memset(&amp;ovi,0,<emphasis role="keyword">sizeof</emphasis>(ovi));
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00430"/>00430 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00431"/>00431 &#32;&#32;readtimeout&#32;&#32;&#32;&#32;&#32;&#32;=&#32;3000;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00432"/>00432 &#32;&#32;writetimeout&#32;&#32;&#32;&#32;&#32;=&#32;3000;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00433"/>00433 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00434"/>00434 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00435"/>00435 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00436"/>00436 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00437"/>00437 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00438"/>00438 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00439"/>00439 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_stream_u_s_b_8cpp_source_1l00440"/>00440 
</programlisting></section>
