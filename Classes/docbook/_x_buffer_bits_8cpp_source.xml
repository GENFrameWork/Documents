<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_buffer_bits_8cpp_source" xml:lang="en-US">
<title>XBufferBits.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XBufferBits.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_buffer_bits_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_bits_8h">XBufferBits.h</link>&quot;</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00047"/>00047 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00048"/>00048 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00049"/>00049 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00053"/>00053 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00054"/>00054 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00055"/>00055 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00057"/>00057 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00068"/><link linkend="_group___x_u_t_i_l_s_1ga3ae96f1266d06b596065c439877eadfe">00068</link> <link linkend="_group___x_u_t_i_l_s_1ga3ae96f1266d06b596065c439877eadfe">XBUFFERBITS::XBUFFERBITS</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;xbuffer)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00069"/>00069 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00070"/>00070 &#32;&#32;Clean();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00071"/>00071 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00072"/>00072 &#32;&#32;this-&gt;xbuffer&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00073"/>00073 &#32;&#32;this-&gt;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;=&#32;xbuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00074"/>00074 &#32;&#32;this-&gt;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00075"/>00075 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00076"/>00076 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00077"/>00077 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00086"/><link linkend="_group___x_u_t_i_l_s_1gaf0c040d21fcdd70debac708950885133">00086</link> <link linkend="_group___x_u_t_i_l_s_1gaf0c040d21fcdd70debac708950885133">XBUFFERBITS::~XBUFFERBITS</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00087"/>00087 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00088"/>00088 &#32;&#32;Clean();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00089"/>00089 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00090"/>00090 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00091"/>00091 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00101"/><link linkend="_group___x_u_t_i_l_s_1gad54cb85478208a797b1fa9833129b48a">00101</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gad54cb85478208a797b1fa9833129b48a">XBUFFERBITS::IsByteAligned</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00102"/>00102 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00103"/>00103 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;==&#32;8);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00104"/>00104 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00105"/>00105 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00106"/>00106 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00116"/><link linkend="_group___x_u_t_i_l_s_1ga4a871a7fd2855666a415a9fc217de578">00116</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga4a871a7fd2855666a415a9fc217de578">XBUFFERBITS::IsEOF</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00117"/>00117 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00118"/>00118 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;&gt;=&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()+<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>());
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00119"/>00119 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00120"/>00120 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00121"/>00121 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00131"/><link linkend="_group___x_u_t_i_l_s_1ga28b83349f26f1a675bc6d9a921e619a4">00131</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga28b83349f26f1a675bc6d9a921e619a4">XBUFFERBITS::IsOverrun</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00132"/>00132 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00133"/>00133 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;&gt;=&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()+<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>()))&#32;&amp;&amp;&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;&lt;&#32;8);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00134"/>00134 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00135"/>00135 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00136"/>00136 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00146"/><link linkend="_group___x_u_t_i_l_s_1ga061f3b3e2941faf0f485ecaf6bc75e6f">00146</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___x_u_t_i_l_s_1ga061f3b3e2941faf0f485ecaf6bc75e6f">XBUFFERBITS::GetBytePosition</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00147"/>00147 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00148"/>00148 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()&#32;-&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00149"/>00149 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00150"/>00150 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00151"/>00151 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00161"/><link linkend="_group___x_u_t_i_l_s_1ga17cc0adc3f3d5e606e2da00375f173bb">00161</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___x_u_t_i_l_s_1ga17cc0adc3f3d5e606e2da00375f173bb">XBUFFERBITS::GetBitPosition</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00162"/>00162 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00163"/>00163 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;8&#32;-&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00164"/>00164 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00165"/>00165 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00166"/>00166 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00177"/><link linkend="_group___x_u_t_i_l_s_1ga93a5dc3ae5ae6bb8b3a3e1278d671546">00177</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga93a5dc3ae5ae6bb8b3a3e1278d671546">XBUFFERBITS::SetPosition</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;index,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;bitindex)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00178"/>00178 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00179"/>00179 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()&#32;+&#32;index;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00180"/>00180 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8&#32;-&#32;((bitindex&#32;&gt;=&#32;8)&#32;?&#32;7&#32;:&#32;0);&#32;<emphasis role="comment">//&#32;zero&#32;base&#32;index,&#32;can&apos;t&#32;be&#32;8</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00181"/>00181 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00182"/>00182 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00183"/>00183 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00191"/><link linkend="_group___x_u_t_i_l_s_1gae513ab29a98abd29ebe7d9b428438ee9">00191</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gae513ab29a98abd29ebe7d9b428438ee9">XBUFFERBITS::SkipU1</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00192"/>00192 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00193"/>00193 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>--;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00194"/>00194 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00195"/>00195 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;==&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00200"/>00200 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00201"/>00201 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00202"/>00202 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00212"/><link linkend="_group___x_u_t_i_l_s_1ga8d8feeb57956801c0675f4eb866f04d3">00212</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___x_u_t_i_l_s_1ga8d8feeb57956801c0675f4eb866f04d3">XBUFFERBITS::PeekU1</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00213"/>00213 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00214"/>00214 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00215"/>00215 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00216"/>00216 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1ga4a871a7fd2855666a415a9fc217de578">IsEOF</link>())
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;((*(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>))&#32;&gt;&gt;&#32;(&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;-&#32;1&#32;))&#32;&amp;&#32;0x01;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00220"/>00220 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00221"/>00221 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00222"/>00222 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00223"/>00223 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00224"/>00224 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00234"/><link linkend="_group___x_u_t_i_l_s_1ga447e99a38908718923815f98e5d80251">00234</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___x_u_t_i_l_s_1ga447e99a38908718923815f98e5d80251">XBUFFERBITS::ReadU1</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00235"/>00235 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00236"/>00236 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00237"/>00237 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00238"/>00238 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>--;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00239"/>00239 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00240"/>00240 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!&#32;<link linkend="_group___x_u_t_i_l_s_1ga4a871a7fd2855666a415a9fc217de578">IsEOF</link>())
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;((*(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>))&#32;&gt;&gt;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>)&#32;&amp;&#32;0x01;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00244"/>00244 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00245"/>00245 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;==&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00250"/>00250 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00251"/>00251 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00252"/>00252 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00253"/>00253 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00254"/>00254 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00264"/><link linkend="_group___x_u_t_i_l_s_1gaca76492778b6bc379490354f7551203e">00264</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gaca76492778b6bc379490354f7551203e">XBUFFERBITS::SkipU</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00265"/>00265 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00266"/>00266 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00267"/>00267 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gae513ab29a98abd29ebe7d9b428438ee9">SkipU1</link>();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00271"/>00271 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00272"/>00272 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00273"/>00273 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00285"/><link linkend="_group___x_u_t_i_l_s_1ga68a58c8dc62eca1c48d28cc6c0d2edc2">00285</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___x_u_t_i_l_s_1ga68a58c8dc62eca1c48d28cc6c0d2edc2">XBUFFERBITS::PeekU</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00286"/>00286 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00287"/>00287 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;orig_byte&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00288"/>00288 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;origin_bits_left&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00289"/>00289 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00290"/>00290 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00291"/>00291 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00292"/>00292 &#32;&#32;r&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1ga7a44bc85f6fb2f41d5e9be8453ca705b">ReadU</link>(n);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00293"/>00293 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00294"/>00294 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;=&#32;orig_byte;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00295"/>00295 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;origin_bits_left;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00296"/>00296 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00297"/>00297 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00298"/>00298 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00299"/>00299 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00300"/>00300 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00312"/><link linkend="_group___x_u_t_i_l_s_1ga7a44bc85f6fb2f41d5e9be8453ca705b">00312</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___x_u_t_i_l_s_1ga7a44bc85f6fb2f41d5e9be8453ca705b">XBUFFERBITS::ReadU</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00313"/>00313 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00314"/>00314 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00315"/>00315 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00316"/>00316 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;|=&#32;(&#32;<link linkend="_group___x_u_t_i_l_s_1ga447e99a38908718923815f98e5d80251">ReadU1</link>()&#32;&lt;&lt;&#32;(&#32;n&#32;-&#32;i&#32;-&#32;1&#32;)&#32;);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00320"/>00320 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00321"/>00321 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00322"/>00322 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00323"/>00323 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00324"/>00324 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00334"/><link linkend="_group___x_u_t_i_l_s_1ga349241970b9151e47749c6b9764aecc9">00334</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___x_u_t_i_l_s_1ga349241970b9151e47749c6b9764aecc9">XBUFFERBITS::ReadUE</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00335"/>00335 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00336"/>00336 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00337"/>00337 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00338"/>00338 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00339"/>00339 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;(<link linkend="_group___x_u_t_i_l_s_1ga447e99a38908718923815f98e5d80251">ReadU1</link>()&#32;==&#32;0)&#32;&amp;&amp;&#32;(i&#32;&lt;&#32;32)&#32;&amp;&amp;&#32;(!<link linkend="_group___x_u_t_i_l_s_1ga4a871a7fd2855666a415a9fc217de578">IsEOF</link>())&#32;)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;i++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00343"/>00343 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00344"/>00344 &#32;&#32;r&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1ga7a44bc85f6fb2f41d5e9be8453ca705b">ReadU</link>(i);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00345"/>00345 &#32;&#32;r&#32;+=&#32;(1&#32;&lt;&lt;&#32;i)&#32;-&#32;1;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00346"/>00346 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00347"/>00347 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00348"/>00348 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00349"/>00349 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00350"/>00350 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00360"/><link linkend="_group___x_u_t_i_l_s_1ga867ae7fead4415e9dde34c04c8d4ca5b">00360</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga867ae7fead4415e9dde34c04c8d4ca5b">XBUFFERBITS::ReadSE</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00361"/>00361 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00362"/>00362 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;r&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1ga349241970b9151e47749c6b9764aecc9">ReadUE</link>();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00363"/>00363 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;&amp;&#32;0x01)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;(r+1)/2;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00367"/>00367 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;-(r/2);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00371"/>00371 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00372"/>00372 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00373"/>00373 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00374"/>00374 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00375"/>00375 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00385"/><link linkend="_group___x_u_t_i_l_s_1ga0e11b8763a66f0463a345882c4c447dd">00385</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga0e11b8763a66f0463a345882c4c447dd">XBUFFERBITS::WriteU1</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;v)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00386"/>00386 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00387"/>00387 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>--;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00388"/>00388 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00389"/>00389 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!&#32;<link linkend="_group___x_u_t_i_l_s_1ga4a871a7fd2855666a415a9fc217de578">IsEOF</link>())
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;FIXME&#32;this&#32;is&#32;slow,&#32;but&#32;we&#32;must&#32;clear&#32;bit&#32;first</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;is&#32;it&#32;better&#32;to&#32;memset(0)&#32;the&#32;whole&#32;buffer&#32;during&#32;bs_init()&#32;instead?</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;we&#32;don&apos;t&#32;do&#32;either,&#32;we&#32;introduce&#32;pretty&#32;nasty&#32;bugs</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;(*(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>))&#32;&amp;=&#32;~(0x01&#32;&lt;&lt;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;(*(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>))&#32;|=&#32;((v&#32;&amp;&#32;0x01)&#32;&lt;&lt;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00397"/>00397 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00398"/>00398 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;==&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00403"/>00403 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00404"/>00404 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00405"/>00405 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00416"/><link linkend="_group___x_u_t_i_l_s_1ga953be4b787cc815eb3068820b12080da">00416</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga953be4b787cc815eb3068820b12080da">XBUFFERBITS::WriteU</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;v)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00417"/>00417 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00418"/>00418 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00419"/>00419 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga0e11b8763a66f0463a345882c4c447dd">WriteU1</link>((v&#32;&gt;&gt;&#32;(&#32;n&#32;-&#32;i&#32;-&#32;1&#32;))&amp;0x01);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00423"/>00423 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00424"/>00424 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00425"/>00425 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00435"/><link linkend="_group___x_u_t_i_l_s_1gad63ab59115d043fb5617502e550d9d36">00435</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gad63ab59115d043fb5617502e550d9d36">XBUFFERBITS::WriteUE</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;v)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00436"/>00436 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00437"/>00437 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;len_table[256]&#32;=
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00438"/>00438 &#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;1,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;1,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;2,2,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;3,3,3,3,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;4,4,4,4,4,4,4,4,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00459"/>00459 &#32;&#32;};
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00460"/>00460 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00461"/>00461 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;len;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00462"/>00462 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00463"/>00463 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;==&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga0e11b8763a66f0463a345882c4c447dd">WriteU1</link>(1);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00467"/>00467 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;v++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00470"/>00470 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;&gt;=&#32;0x01000000)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len&#32;=&#32;24&#32;+&#32;len_table[&#32;v&#32;&gt;&gt;&#32;24&#32;];
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(v&#32;&gt;=&#32;0x00010000)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len&#32;=&#32;16&#32;+&#32;len_table[&#32;v&#32;&gt;&gt;&#32;16&#32;];
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(v&#32;&gt;=&#32;0x00000100)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len&#32;=&#32;&#32;8&#32;+&#32;len_table[&#32;v&#32;&gt;&gt;&#32;&#32;8&#32;];
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len&#32;=&#32;len_table[&#32;v&#32;];
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00487"/>00487 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga953be4b787cc815eb3068820b12080da">WriteU</link>(2*len-1,&#32;v);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00490"/>00490 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00491"/>00491 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00492"/>00492 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00502"/><link linkend="_group___x_u_t_i_l_s_1gaa7ee776c27109bf69dbb147ff9229a0d">00502</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gaa7ee776c27109bf69dbb147ff9229a0d">XBUFFERBITS::WriteSE</link>(<emphasis role="keywordtype">int</emphasis>&#32;v)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00503"/>00503 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00504"/>00504 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;&lt;=&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gad63ab59115d043fb5617502e550d9d36">WriteUE</link>(-v*2);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00507"/>00507 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00508"/>00508 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00509"/>00509 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gad63ab59115d043fb5617502e550d9d36">WriteUE</link>(v*2&#32;-&#32;1);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00511"/>00511 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00512"/>00512 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00513"/>00513 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00514"/>00514 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00523"/>00523 <emphasis role="keywordtype">void</emphasis>&#32;XBUFFERBITS::Clean()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00524"/>00524 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00525"/>00525 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00526"/>00526 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00527"/>00527 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00528"/>00528 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00529"/>00529 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00530"/>00530 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00531"/>00531 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00532"/>00532 
</programlisting></section>
