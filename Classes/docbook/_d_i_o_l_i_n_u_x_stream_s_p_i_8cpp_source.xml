<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source" xml:lang="en-US">
<title>DIOLINUXStreamSPI.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Linux/DIOLINUXStreamSPI.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00031"/>00031 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00033"/>00033 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00035"/>00035 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#if&#32;defined(DIO_ACTIVE)&#32;&amp;&amp;&#32;defined(DIO_STREAMSPI_ACTIVE)</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00038"/>00038 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00042"/>00042 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_l_i_n_u_x_stream_s_p_i_8h">DIOLINUXStreamSPI.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00044"/>00044 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&lt;getopt.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#include&#32;&lt;fcntl.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&lt;sys/ioctl.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#include&#32;&lt;linux/types.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#include&#32;&lt;linux/spi/spidev.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00055"/>00055 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_s_p_i_config_8h">DIOStreamSPIConfig.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00060"/>00060 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00061"/>00061 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00062"/>00062 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00063"/>00063 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00064"/>00064 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00065"/>00065 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00066"/>00066 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00067"/>00067 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00068"/>00068 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00069"/>00069 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00070"/>00070 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00071"/>00071 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00072"/>00072 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00073"/>00073 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00074"/>00074 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00082"/>00082 <link linkend="_class_d_i_o_l_i_n_u_x_s_t_r_e_a_m_s_p_i_1a864ff2ec888f8422135883ef68e7eef1">DIOLINUXSTREAMSPI::DIOLINUXSTREAMSPI</link>()&#32;:&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i">DIOSTREAMSPI</link>()
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00083"/>00083 {
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00084"/>00084 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00085"/>00085 }
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00086"/>00086 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00087"/>00087 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00096"/>00096 <link linkend="_class_d_i_o_l_i_n_u_x_s_t_r_e_a_m_s_p_i_1aed6c7cc2c7496156614f253790df757e">DIOLINUXSTREAMSPI::~DIOLINUXSTREAMSPI</link>()
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00097"/>00097 {
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00098"/>00098 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00099"/>00099 }
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00100"/>00100 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00101"/>00101 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00111"/>00111 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_l_i_n_u_x_s_t_r_e_a_m_s_p_i_1a5078156e7d09387eaf0a7282fbed4b94">DIOLINUXSTREAMSPI::Open</link>()
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00112"/>00112 {
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00113"/>00113 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i_1a48ed26560b85cc226aabe299d7c18db6">config</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00114"/>00114 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00115"/>00115 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;charstr;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00116"/>00116 &#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00117"/>00117 &#32;&#32;(*<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i_1a48ed26560b85cc226aabe299d7c18db6">config</link>-&gt;<link linkend="_group___d_a_t_a_i_o_1ga31e115f358c3e26c9d7189c19d8d860e">GetLocalDeviceName</link>()).ConvertToASCII(charstr);
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00118"/>00118 &#32;&#32;handle&#32;=&#32;open(charstr.<link linkend="_group___x_u_t_i_l_s_1ga66e2dbd897e717ce38e395d6ad87b754">GetPtrChar</link>(),&#32;O_RDWR);&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00119"/>00119 &#32;&#32;<emphasis role="comment">//XTRACE_PRINTCOLOR(((handle&lt;0)?4:1),&#32;__L(&quot;SPI&#32;Open&#32;%s&#32;:&#32;%s&quot;),&#32;config-&gt;GetLocalDeviceName()-&gt;Get(),&#32;((handle&lt;0)?__L(&quot;Error&quot;):__L(&quot;Ok&quot;)));</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00120"/>00120 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle&lt;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00121"/>00121 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00122"/>00122 &#32;&#32;<emphasis role="comment">//&#32;&#32;Set&#32;SPI&#32;parameters.</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00123"/>00123 &#32;&#32;<emphasis role="comment">//&#32;&#32;Why&#32;are&#32;we&#32;reading&#32;it&#32;afterwriting&#32;it?&#32;I&apos;ve&#32;no&#32;idea,&#32;but&#32;for&#32;now&#32;I&apos;m&#32;blindly</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00124"/>00124 &#32;&#32;<emphasis role="comment">//&#32;&#32;copying&#32;example&#32;code&#32;I&apos;ve&#32;seen&#32;online...</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00125"/>00125 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00126"/>00126 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;_mode&#32;&#32;=&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i_1a48ed26560b85cc226aabe299d7c18db6">config</link>-&gt;<link linkend="_group___d_a_t_a_i_o_1ga448efbc49bf721814713a89b4dc6b52d">GetSPIMode</link>();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00127"/>00127 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;_bits&#32;&#32;=&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i_1a48ed26560b85cc226aabe299d7c18db6">config</link>-&gt;<link linkend="_group___d_a_t_a_i_o_1ga6bebe630e2423621eb4441cce20ed13b">GetNBitsWord</link>();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00128"/>00128 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;_speed&#32;=&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i_1a48ed26560b85cc226aabe299d7c18db6">config</link>-&gt;<link linkend="_group___d_a_t_a_i_o_1ga6c7b3c3d4ba4189649f34daa8979feed">GetSpeed</link>();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00129"/>00129 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00130"/>00130 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ioctl(handle,&#32;SPI_IOC_WR_MODE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;_mode)&#32;&#32;&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00131"/>00131 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ioctl(handle,&#32;SPI_IOC_WR_BITS_PER_WORD&#32;&#32;,&#32;&amp;_bits)&#32;&#32;&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00132"/>00132 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ioctl(handle,&#32;SPI_IOC_WR_MAX_SPEED_HZ&#32;&#32;&#32;,&#32;&amp;_speed)&#32;&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00133"/>00133 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00134"/>00134 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ioctl(handle,&#32;SPI_IOC_RD_MODE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;_mode)&#32;&#32;&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00135"/>00135 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ioctl(handle,&#32;SPI_IOC_RD_BITS_PER_WORD&#32;&#32;,&#32;&amp;_bits)&#32;&#32;&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00136"/>00136 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ioctl(handle,&#32;SPI_IOC_RD_MAX_SPEED_HZ&#32;&#32;&#32;,&#32;&amp;_speed)&#32;&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00137"/>00137 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00138"/>00138 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga2f0f851406dce28fc0e4bd8da4b43f2b">DIOSTREAMSPI::Open</link>();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00139"/>00139 }
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00140"/>00140 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00141"/>00141 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00151"/>00151 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_l_i_n_u_x_s_t_r_e_a_m_s_p_i_1a42d0194332464ef9c5d44e7814df078d">DIOLINUXSTREAMSPI::Close</link>()
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00152"/>00152 {
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00153"/>00153 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a06ffb9031fd93737d8097914e792665e">status</link>&#32;=&#32;<link linkend="_group___d_a_t_a_i_o_1ga02de4aa3e65df850f7e881dbd78085ba">DIOSTREAMSPI::Close</link>();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00154"/>00154 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00155"/>00155 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle&gt;=0)
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;close(handle);
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;handle&#32;&#32;=&#32;-1;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00160"/>00160 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00161"/>00161 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a06ffb9031fd93737d8097914e792665e">status</link>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00162"/>00162 }
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00163"/>00163 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00164"/>00164 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00178"/>00178 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_l_i_n_u_x_s_t_r_e_a_m_s_p_i_1a62160960f5bcd1fc66b659cad4386fca">DIOLINUXSTREAMSPI::TransferBuffer</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;bufferread,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;bufferwrite,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00179"/>00179 {
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00180"/>00180 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>spi_ioc_transfer&#32;transf;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00181"/>00181 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00182"/>00182 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;sizeint&#32;=&#32;size;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00183"/>00183 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00184"/>00184 &#32;&#32;memset((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;transf,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keyword">struct</emphasis>&#32;spi_ioc_transfer));
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00185"/>00185 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00186"/>00186 &#32;&#32;<emphasis role="comment">//XTRACE_PRINTCOLOR(1,&#32;__L(&quot;real&#32;SPI&#32;%d&quot;),&#32;size);</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00187"/>00187 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00188"/>00188 &#32;&#32;<emphasis role="comment">//wprintf((wchar_t&#32;*)__L(&quot;\n&#32;Write&#32;%4d&#32;bytes&#32;-&gt;&quot;),size);</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00189"/>00189 &#32;&#32;<emphasis role="comment">//fflush(stdout);</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00190"/>00190 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00191"/>00191 &#32;&#32;transf.tx_buf&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;long)bufferwrite;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00192"/>00192 &#32;&#32;transf.rx_buf&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;long)<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i_1af36735c8748f16c5e827ba06e76240dc">bufferread</link>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00193"/>00193 &#32;&#32;transf.len&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;sizeint;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00194"/>00194 &#32;&#32;transf.speed_hz&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i_1a48ed26560b85cc226aabe299d7c18db6">config</link>-&gt;<link linkend="_group___d_a_t_a_i_o_1ga6c7b3c3d4ba4189649f34daa8979feed">GetSpeed</link>();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00195"/>00195 &#32;&#32;transf.delay_usecs&#32;&#32;&#32;&#32;=&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i_1a48ed26560b85cc226aabe299d7c18db6">config</link>-&gt;<link linkend="_group___d_a_t_a_i_o_1gad95abb71eb38f3dad47e0f21992536fd">GetDelay</link>();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00196"/>00196 &#32;&#32;transf.bits_per_word&#32;&#32;=&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_s_p_i_1a48ed26560b85cc226aabe299d7c18db6">config</link>-&gt;<link linkend="_group___d_a_t_a_i_o_1ga6bebe630e2423621eb4441cce20ed13b">GetNBitsWord</link>();
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00197"/>00197 &#32;&#32;<emphasis role="comment">//transf.cs_change&#32;&#32;&#32;&#32;&#32;&#32;=&#32;true;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00198"/>00198 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00199"/>00199 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;err&#32;=&#32;ioctl(handle,&#32;SPI_IOC_MESSAGE(1),&#32;&amp;transf);
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00200"/>00200 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00201"/>00201 &#32;&#32;<emphasis role="comment">//wprintf((wchar_t&#32;*)__L(&quot;%4d&#32;%d\n&quot;),&#32;transf.len,&#32;err);</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00202"/>00202 &#32;&#32;<emphasis role="comment">//fflush(stdout);</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00203"/>00203 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00204"/>00204 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(err&lt;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00205"/>00205 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00206"/>00206 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00207"/>00207 }
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00208"/>00208 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00209"/>00209 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00219"/>00219 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_d_i_o_l_i_n_u_x_s_t_r_e_a_m_s_p_i_1a2d86339570b58bf9efd49832d5ea40f5">DIOLINUXSTREAMSPI::Sleep</link>(<emphasis role="keywordtype">int</emphasis>&#32;count)
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00220"/>00220 {
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00221"/>00221 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;&#32;i&lt;count;&#32;i++)
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">asm</emphasis>(<emphasis role="stringliteral">&quot;nop&quot;</emphasis>);
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00225"/>00225 }
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00226"/>00226 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00227"/>00227 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00236"/>00236 <emphasis role="keywordtype">void</emphasis>&#32;DIOLINUXSTREAMSPI::Clean()
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00237"/>00237 {
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00238"/>00238 &#32;&#32;handle&#32;=&#32;-1;
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00239"/>00239 }
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00240"/>00240 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00241"/>00241 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00242"/>00242 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00243"/>00243 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00244"/>00244 
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00245"/>00245 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_stream_s_p_i_8cpp_source_1l00246"/>00246 
</programlisting></section>
