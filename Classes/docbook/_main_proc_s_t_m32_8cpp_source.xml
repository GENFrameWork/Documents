<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__main_proc_s_t_m32_8cpp_source" xml:lang="en-US">
<title>MainProcSTM32.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/MainProcSTM32.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00001"/>00001 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;CONTROL&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00030"/>00030 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00032"/>00032 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00033"/>00033 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00034"/>00034 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00035"/>00035 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&lt;stddef.h&gt;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00039"/>00039 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32___h_a_l_8h">XSTM32_HAL.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_factory_8h">XSTM32Factory.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_system_8h">XSTM32System.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_rand_8h">XSTM32Rand.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_sleep_8h">XSTM32Sleep.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_trace_8h">XSTM32Trace.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_e_e_p_r_o_m_memory_manager_8h">XSTM32EEPROMMemoryManager.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00047"/>00047 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#ifdef&#32;DIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_s_t_m32_factory_8h">DIOSTM32Factory.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00050"/>00050 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;DIO_GPIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">&#32;&#32;#include&#32;&quot;<link linkend="__d_i_o_g_p_i_o_8h">DIOGPIO.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">&#32;&#32;#include&#32;&quot;<link linkend="__d_i_o_s_t_m32_g_p_i_o_8h">DIOSTM32GPIO.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00055"/>00055 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00057"/>00057 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00058"/>00058 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__version_frame_work_8h">VersionFrameWork.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00059"/>00059 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00060"/>00060 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_thread_list_non_preemptive_8h">XThreadListNonPreemptive.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00061"/>00061 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_translation___g_e_n_8h">XTranslation_GEN.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00062"/>00062 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_translation_8h">XTranslation.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_publisher_8h">XPublisher.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00064"/>00064 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00065"/>00065 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__a_p_p_base_8h">APPBase.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00066"/>00066 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__a_p_p_main_8h">APPMain.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00067"/>00067 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00068"/>00068 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__main_proc_s_t_m32_8h">MainProcSTM32.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00069"/>00069 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00070"/>00070 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00071"/>00071 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00072"/>00072 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00073"/>00073 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00074"/>00074 <emphasis role="preprocessor">#ifdef&#32;XTRACE_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00075"/>00075 <link linkend="_class_x_s_t_m32_t_r_a_c_e">XSTM32TRACE</link>&#32;&#32;&#32;&#32;&#32;&#32;STM32trace;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00076"/>00076 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00077"/><link linkend="__main_proc_s_t_m32_8cpp_1ae3e1009f8363d2a7297120dc87a69bbe">00077</link> <link linkend="_class_m_a_i_n_p_r_o_c_s_t_m32">MAINPROCSTM32</link>&#32;&#32;&#32;&#32;<link linkend="__main_proc_s_t_m32_8cpp_1ae3e1009f8363d2a7297120dc87a69bbe">mainprocstm32</link>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00078"/>00078 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00079"/>00079 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00080"/>00080 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00081"/>00081 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00082"/>00082 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00090"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga45fe43d227050854f5b175d924555a55">00090</link> <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga45fe43d227050854f5b175d924555a55">MAINPROCSTM32::MAINPROCSTM32</link>()
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00091"/>00091 {
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00092"/>00092 &#32;&#32;Clean();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00093"/>00093 }
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00094"/>00094 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00095"/>00095 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00096"/>00096 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00105"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga05ebcae6b036358906fe196cbb2e4484">00105</link> <link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga05ebcae6b036358906fe196cbb2e4484">MAINPROCSTM32::~MAINPROCSTM32</link>()
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00106"/>00106 {
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00107"/>00107 &#32;&#32;Clean();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00108"/>00108 }
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00109"/>00109 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00110"/>00110 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00111"/>00111 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00123"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga19f7d6e90cb564e9f64178ac4d1a0f4c">00123</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga19f7d6e90cb564e9f64178ac4d1a0f4c">MAINPROCSTM32::Ini</link>(<link linkend="_class_a_p_p_m_a_i_n">APPMAIN</link>*&#32;appmain)
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00124"/>00124 {
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00125"/>00125 &#32;&#32;this-&gt;appmain&#32;=&#32;<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00126"/>00126 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00127"/>00127 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Factorys_Ini())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00128"/>00128 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00129"/>00129 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;APP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00130"/>00130 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00131"/>00131 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00132"/>00132 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1a7ec2ce73d999c87734b4fd2e6d40bffb">Create</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00133"/>00133 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1abcd96e0ac68d041dd307005e2496638d">Ini</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00134"/>00134 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00135"/>00135 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00136"/>00136 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1a47d21028ecd52962c912b0d803b2ff82">Main_Proc_PlatformIni</link>)
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1a47d21028ecd52962c912b0d803b2ff82">Main_Proc_PlatformIni</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00141"/>00141 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00142"/>00142 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1a8f8ac76e1927db99e4de64dd699d9028">Main_Proc_Ini</link>)
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1a8f8ac76e1927db99e4de64dd699d9028">Main_Proc_Ini</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00146"/>00146 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00147"/>00147 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00148"/>00148 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00149"/>00149 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00150"/>00150 }
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00151"/>00151 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00152"/>00152 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00153"/>00153 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00163"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga7a0e81794893666e080f71ae21dc0e73">00163</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga7a0e81794893666e080f71ae21dc0e73">MAINPROCSTM32::Update</link>()
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00164"/>00164 {
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00165"/>00165 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;APP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00166"/>00166 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>)
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1a380ae38e7fe3c02cb7a2eb0fa54cb5ce">Update</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00170"/>00170 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00171"/>00171 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1a09d103a86728395ab5143a584be890de">Main_Proc_Update</link>)
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1a09d103a86728395ab5143a584be890de">Main_Proc_Update</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00175"/>00175 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00176"/>00176 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00177"/>00177 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00178"/>00178 }
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00179"/>00179 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00180"/>00180 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00181"/>00181 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00191"/><link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga1652b8f154cb236f58993b56c493cf75">00191</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga1652b8f154cb236f58993b56c493cf75">MAINPROCSTM32::End</link>()
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00192"/>00192 {
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00193"/>00193 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;APP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00194"/>00194 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00195"/>00195 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>)&#32;<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1add944be5665daa45baa865d7d15214a9">End</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00196"/>00196 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00197"/>00197 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00198"/>00198 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00199"/>00199 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1a7dddfdb386e99f41661d284091ed87f3">Main_Proc_End</link>)
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1a7dddfdb386e99f41661d284091ed87f3">Main_Proc_End</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00203"/>00203 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00204"/>00204 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00205"/>00205 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00206"/>00206 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifndef&#32;MICROCONTROLLER</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00207"/>00207 &#32;&#32;<link linkend="_group___m_a_i_n___p_r_o_c_e_d_u_r_e_1gaa2aff4e5ac767790eddc6f6707b7af51">DeleteAllExecParams</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00208"/>00208 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00209"/>00209 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00210"/>00210 &#32;&#32;Factorys_End();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00211"/>00211 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00212"/>00212 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;APP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00213"/>00213 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00214"/>00214 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>)&#32;<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1a26ebe4f503149e3e1b8ae89aef286f9a">Delete</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00215"/>00215 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00216"/>00216 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00217"/>00217 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00218"/>00218 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1ab80fb8685c48c9d1de7954f2508d256c">Main_Proc_PlatformEnd</link>)
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1ab80fb8685c48c9d1de7954f2508d256c">Main_Proc_PlatformEnd</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00222"/>00222 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00223"/>00223 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00224"/>00224 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00225"/>00225 &#32;&#32;VERSION::DelInstance();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00226"/>00226 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00227"/>00227 &#32;&#32;<link linkend="__x_file_8h_1a9e8aab286aee9488ba13769f0d741b0b">XFILE_DISPLAYNOTCLOSEFILES</link>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00228"/>00228 &#32;&#32;<link linkend="__x_memory___control_8h_1a0ec218a86bf7506dad87c644ada09800">XMEMORY_CONTROL_DISPLAYMEMORYLEAKS</link>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00229"/>00229 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00230"/>00230 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00231"/>00231 }
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00232"/>00232 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00233"/>00233 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00234"/>00234 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00246"/>00246 <emphasis role="keywordtype">bool</emphasis>&#32;MAINPROCSTM32::Factorys_Ini()
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00247"/>00247 {
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00248"/>00248 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gac90e09ebcf9e3742ddda46ccdfee6f23">XFACTORY::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_s_t_m32_f_a_c_t_o_r_y">XSTM32FACTORY</link>());
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00249"/>00249 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1gaae2e58b7f424da9b3e5a8adfb08bcf3a">XFACTORY::GetIsInstanced</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00250"/>00250 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00251"/>00251 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga21e6002f94625d24b3118f2097e3ce0a">XRAND::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_s_t_m32_r_a_n_d">XSTM32RAND</link>());
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00252"/>00252 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1ga5fab21d8fea4b5e754682878ee952417">XRAND::GetIsInstanced</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00253"/>00253 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00254"/>00254 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga699e30b12ab2c34a247331b6934d3e39">XSLEEP::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_s_t_m32_s_l_e_e_p">XSTM32SLEEP</link>());
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00255"/>00255 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1gad839c785146abc101fe575c6ee7e8fd6">XSLEEP::GetIsInstanced</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00256"/>00256 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00257"/>00257 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga29189cab62d37dce2a557b9170ea3a26">XSYSTEM::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_s_t_m32_s_y_s_t_e_m">XSTM32SYSTEM</link>());
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00258"/>00258 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1gaae6f1b7f1d87b939dd97033c74fdc74e">XSYSTEM::GetIsInstanced</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00259"/>00259 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00260"/>00260 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XEEPROMMEMORYMANAGER_ACTIVE&#32;&#32;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00261"/>00261 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaaac0cda9c8011f506601ee91bef26bc9">XEEPROMMEMORYMANAGER::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_s_t_m32_e_e_p_r_o_m_m_e_m_o_r_y_m_a_n_a_g_e_r">XSTM32EEPROMMEMORYMANAGER</link>());
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00262"/>00262 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1ga77c663a2a190b41472f0bfb5ebb437fc">XEEPROMMEMORYMANAGER::GetIsInstanced</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00263"/>00263 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00264"/>00264 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00265"/>00265 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;DIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00266"/>00266 &#32;&#32;DIOFACTORY::SetInstance(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_i_o_s_t_m32_f_a_c_t_o_r_y">DIOSTM32FACTORY</link>());
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00267"/>00267 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DIOFACTORY::GetIsInstanced())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00268"/>00268 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00269"/>00269 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;DIO_GPIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;<link linkend="_group___d_a_t_a_i_o_1gae4278de9149375359ac11f20a6ca67ee">DIOGPIO::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_i_o_s_t_m32_g_p_i_o">DIOSTM32GPIO</link>());
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___d_a_t_a_i_o_1gae0c9d6f03a9920da0405858970ed3c19">DIOGPIO::GetIsInstanced</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00272"/>00272 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___d_a_t_a_i_o_1ga376b13e4fe398f0768cadadb7c97bda3">DIOGPIO::GetInstance</link>().<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga19f7d6e90cb564e9f64178ac4d1a0f4c">Ini</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00274"/>00274 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00275"/>00275 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00276"/>00276 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00277"/>00277 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00278"/>00278 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00279"/>00279 }
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00280"/>00280 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00281"/>00281 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00282"/>00282 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00283"/>00283 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00293"/>00293 <emphasis role="keywordtype">bool</emphasis>&#32;MAINPROCSTM32::Factorys_End()
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00294"/>00294 {
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00295"/>00295 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;DIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00296"/>00296 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00297"/>00297 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;DIO_GPIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group___d_a_t_a_i_o_1gae0c9d6f03a9920da0405858970ed3c19">DIOGPIO::GetIsInstanced</link>())
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___d_a_t_a_i_o_1ga376b13e4fe398f0768cadadb7c97bda3">DIOGPIO::GetInstance</link>().<link linkend="_group___d_a_t_a_i_o_1ga33ff07acaa5b157f48ee3b37bb40e5d5">End</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___d_a_t_a_i_o_1ga3c14eb35c95d7425d5b74c9ebda781e6">DIOGPIO::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00303"/>00303 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00304"/>00304 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00305"/>00305 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(DIOFACTORY::GetIsInstanced())&#32;DIOFACTORY::DelInstance();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00306"/>00306 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00308"/>00308 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XEEPROMMEMORYMANAGER_ACTIVE&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00309"/>00309 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group___x_u_t_i_l_s_1ga77c663a2a190b41472f0bfb5ebb437fc">XEEPROMMEMORYMANAGER::GetIsInstanced</link>())&#32;<link linkend="_group___x_u_t_i_l_s_1gac10948aeb440a63d84cd1f4546eb510a">XEEPROMMEMORYMANAGER::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00310"/>00310 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00311"/>00311 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00312"/>00312 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XEEPROMMEMORYMANAGER_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00313"/>00313 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gac10948aeb440a63d84cd1f4546eb510a">XEEPROMMEMORYMANAGER::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00314"/>00314 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00315"/>00315 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00316"/>00316 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga4d3701ec70e6ee78ca90e1d6764d4b1a">XPATHSMANAGER::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00317"/>00317 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00318"/>00318 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga9b84e09b184edef5f4e97c2165036d92">XTRANSLATION::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00319"/>00319 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga2a380ecf0e37a78e5ee98676e2a070f9">XTRANSLATION_GEN::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00320"/>00320 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00321"/>00321 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gab9d19784c5ff3faa03e744224c1ad2c3">XRAND::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00322"/>00322 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00323"/>00323 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga10c10431ed188718ce23622f058f50ab">XSLEEP::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00324"/>00324 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00325"/>00325 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaad9f77d850184c13149d7f4cd526eab3">XSYSTEM::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00326"/>00326 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00327"/>00327 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga26edb2432d284144113240ff00caa1f4">XPUBLISHER::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00328"/>00328 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00329"/>00329 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gae6bc0f504d6c8090c3df7f56a4416b97">XTHREADLISTNONPREEMPTIVE::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00330"/>00330 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00331"/>00331 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XTHREADCOLLECTED_ACTIVE</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00332"/>00332 &#32;&#32;XTHREADSCOLLECTEDMANAGER::DelInstance();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00333"/>00333 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00334"/>00334 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00335"/>00335 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gaf539fb1685f39758e3844098f9916ef1">XFACTORY::DelInstance</link>();
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00336"/>00336 &#32;&#32;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00337"/>00337 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00338"/>00338 }
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00339"/>00339 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00340"/>00340 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00341"/>00341 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00342"/>00342 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00351"/>00351 <emphasis role="keywordtype">void</emphasis>&#32;MAINPROCSTM32::Clean()
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00352"/>00352 {
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00353"/>00353 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00354"/>00354 }
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00355"/>00355 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00356"/>00356 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00357"/>00357 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00358"/>00358 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00359"/>00359 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00378"/><link linkend="__main_proc_s_t_m32_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">00378</link> &#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__main_proc_s_t_m32_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00379"/>00379 {
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00380"/>00380 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;status&#32;=&#32;0;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00381"/>00381 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00382"/>00382 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_s_t_m32_8cpp_1ae3e1009f8363d2a7297120dc87a69bbe">mainprocstm32</link>.<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga19f7d6e90cb564e9f64178ac4d1a0f4c">Ini</link>(&amp;<link linkend="__a_p_p_main_8h_1a30881accd0aa260bddea7ebc6f7be462">GEN_appmain</link>))
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<link linkend="__main_proc_s_t_m32_8cpp_1ae3e1009f8363d2a7297120dc87a69bbe">mainprocstm32</link>.<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga7a0e81794893666e080f71ae21dc0e73">Update</link>())
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00386"/>00386 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00388"/>00388 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;1;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00390"/>00390 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00391"/>00391 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_s_t_m32_8cpp_1ae3e1009f8363d2a7297120dc87a69bbe">mainprocstm32</link>.<link linkend="_group___p_l_a_t_f_o_r_m___s_t_m32_1ga1652b8f154cb236f58993b56c493cf75">End</link>())&#32;status&#32;=&#32;1;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00392"/>00392 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00393"/>00393 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00394"/>00394 }
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00395"/>00395 
<anchor xml:id="__main_proc_s_t_m32_8cpp_source_1l00396"/>00396 
</programlisting></section>
