<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source" xml:lang="en-US">
<title>GRPBitmapFileTGA.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Graphic/Files/Bitmap/GRPBitmapFileTGA.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00001"/>00001 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00031"/>00031 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00033"/>00033 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00035"/>00035 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00036"/>00036 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00037"/>00037 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00038"/>00038 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00039"/>00039 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00041"/>00041 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_file_t_g_a_8h">GRPBitmapFileTGA.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00043"/>00043 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_factory_8h">GRPFactory.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_8h">GRPBitmap.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00046"/>00046 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00048"/>00048 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00050"/>00050 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00051"/>00051 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00052"/>00052 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00054"/>00054 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00055"/>00055 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00056"/>00056 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00057"/>00057 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00058"/>00058 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00060"/>00060 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00061"/>00061 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00062"/>00062 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_GRPBITMAPFILETGAHEADER</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00063"/>00063 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00064"/>00064 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00072"/><link linkend="_group___g_r_a_p_h_i_c_1ga0a4c5a2111eee8c338d43ab0f46a0d90">00072</link> <link linkend="_group___g_r_a_p_h_i_c_1ga0a4c5a2111eee8c338d43ab0f46a0d90">GRPBITMAPFILETGAHEADER::GRPBITMAPFILETGAHEADER</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00073"/>00073 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00074"/>00074 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00075"/>00075 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00076"/>00076 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00077"/>00077 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00086"/><link linkend="_group___g_r_a_p_h_i_c_1ga69ab4065664c4eac2bb31163c23de4e2">00086</link> <link linkend="_group___g_r_a_p_h_i_c_1ga69ab4065664c4eac2bb31163c23de4e2">GRPBITMAPFILETGAHEADER::~GRPBITMAPFILETGAHEADER</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00087"/>00087 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00088"/>00088 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00089"/>00089 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00090"/>00090 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00091"/>00091 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00103"/><link linkend="_group___g_r_a_p_h_i_c_1ga210da533e803586cc2ff058b5ee020cf">00103</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga210da533e803586cc2ff058b5ee020cf">GRPBITMAPFILETGAHEADER::Load</link>(<link linkend="_class_x_f_i_l_e">XFILE</link>*&#32;file)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00104"/>00104 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00105"/>00105 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a8fe0149a14a49dd5911e956770987bf3">IDlength</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00106"/>00106 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a882775f87e015806d0f6f0ea6ae63188">colourmaptype</link>&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00107"/>00107 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a04165ee3c18323603d2c24a6639e3ea4">datatypecode</link>&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00108"/>00108 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1af6e2271e2ba2c6bb95cc35b40f8cce80">colourmaporigin</link>&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00109"/>00109 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a40344b4d476fc0017ad5b3b5ef453b83">colourmaplength</link>&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00110"/>00110 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a745d781db86f64f7fbd489269b84ab2c">colourmapdepth</link>&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00111"/>00111 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1acfaa19c482720679a39a9d85c2819c3f">xorigin</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00112"/>00112 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a63553ca7be0a7bd51b9dddfa7bb50c57">yorigin</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00113"/>00113 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a6aa47d634443afabd7c439dcd6514efd">width</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00114"/>00114 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1aadc71c624ae263c4e6849e14d52aa870">height</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00115"/>00115 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00116"/>00116 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1ae33fef6fdcc244f0cb4515398caa9874">imagedescriptor</link>&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00117"/>00117 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00118"/>00118 &#32;&#32;<emphasis role="comment">//&#32;Only&#32;RGB&#32;format&#32;valid.</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00119"/>00119 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a04165ee3c18323603d2c24a6639e3ea4">datatypecode</link>&#32;!=&#32;<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84a5ea2151b4f81225501d00305834817d4">GRPBITMAPFILETGATYPE_UNCOMPRESS_RGB</link>)&#32;&amp;&amp;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a04165ee3c18323603d2c24a6639e3ea4">datatypecode</link>&#32;!=&#32;<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84ad4b7b96556d74273e0d9f82cf9c0f039">GRPBITMAPFILETGATYPE_RLECOMPRESS_RGB</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00121"/>00121 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00122"/>00122 &#32;&#32;<emphasis role="comment">//&#32;Only&#32;16,24,32&#32;bits&#32;format&#32;valid.</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00123"/>00123 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>&#32;!=&#32;16)&#32;&amp;&amp;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>&#32;!=&#32;24)&#32;&amp;&amp;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>&#32;!=&#32;32))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00126"/>00126 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00127"/>00127 &#32;&#32;<emphasis role="comment">//&#32;Only&#32;0,1&#32;colour&#32;map&#32;types</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00128"/>00128 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a882775f87e015806d0f6f0ea6ae63188">colourmaptype</link>&#32;!=&#32;0)&#32;&amp;&amp;&#32;(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a882775f87e015806d0f6f0ea6ae63188">colourmaptype</link>&#32;!=&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00129"/>00129 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00130"/>00130 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;16&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a0c0f30701d79a1221292ff87eb3b9d44">GRPPROPERTYMODE_16_RGBA_5551</link>;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;24&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;32&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00136"/>00136 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00137"/>00137 &#32;&#32;offsetdata&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILETGAHEADERINFO</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00138"/>00138 &#32;&#32;offsetdata&#32;+=&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a8fe0149a14a49dd5911e956770987bf3">IDlength</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00139"/>00139 &#32;&#32;offsetdata&#32;+=&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a882775f87e015806d0f6f0ea6ae63188">colourmaptype</link>&#32;*&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a40344b4d476fc0017ad5b3b5ef453b83">colourmaplength</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00140"/>00140 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00141"/>00141 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00142"/>00142 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00143"/>00143 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00144"/>00144 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00158"/><link linkend="_group___g_r_a_p_h_i_c_1ga5c086d3a71974bca8dc71ced0ac1ce5c">00158</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga210da533e803586cc2ff058b5ee020cf">GRPBITMAPFILETGAHEADER::Load</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;indexbuffer)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00159"/>00159 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00160"/>00160 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a8fe0149a14a49dd5911e956770987bf3">IDlength</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00161"/>00161 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a882775f87e015806d0f6f0ea6ae63188">colourmaptype</link>&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00162"/>00162 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a04165ee3c18323603d2c24a6639e3ea4">datatypecode</link>&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00163"/>00163 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1af6e2271e2ba2c6bb95cc35b40f8cce80">colourmaporigin</link>&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00164"/>00164 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a40344b4d476fc0017ad5b3b5ef453b83">colourmaplength</link>&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00165"/>00165 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a745d781db86f64f7fbd489269b84ab2c">colourmapdepth</link>&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00166"/>00166 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1acfaa19c482720679a39a9d85c2819c3f">xorigin</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00167"/>00167 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a63553ca7be0a7bd51b9dddfa7bb50c57">yorigin</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00168"/>00168 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a6aa47d634443afabd7c439dcd6514efd">width</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00169"/>00169 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1aadc71c624ae263c4e6849e14d52aa870">height</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00170"/>00170 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00171"/>00171 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1ae33fef6fdcc244f0cb4515398caa9874">imagedescriptor</link>&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00172"/>00172 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00173"/>00173 &#32;&#32;<emphasis role="comment">//&#32;Only&#32;RGB&#32;format&#32;valid.</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00174"/>00174 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a04165ee3c18323603d2c24a6639e3ea4">datatypecode</link>&#32;!=&#32;<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84a5ea2151b4f81225501d00305834817d4">GRPBITMAPFILETGATYPE_UNCOMPRESS_RGB</link>)&#32;&amp;&amp;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a04165ee3c18323603d2c24a6639e3ea4">datatypecode</link>&#32;!=&#32;<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84ad4b7b96556d74273e0d9f82cf9c0f039">GRPBITMAPFILETGATYPE_RLECOMPRESS_RGB</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00176"/>00176 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00177"/>00177 &#32;&#32;<emphasis role="comment">//&#32;Only&#32;16,24,32&#32;bits&#32;format&#32;valid.</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00178"/>00178 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>&#32;!=&#32;16)&#32;&amp;&amp;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>&#32;!=&#32;24)&#32;&amp;&amp;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>&#32;!=&#32;32))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00181"/>00181 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00182"/>00182 &#32;&#32;<emphasis role="comment">//&#32;Only&#32;0,1&#32;colour&#32;map&#32;types</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00183"/>00183 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a882775f87e015806d0f6f0ea6ae63188">colourmaptype</link>&#32;!=&#32;0)&#32;&amp;&amp;&#32;(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a882775f87e015806d0f6f0ea6ae63188">colourmaptype</link>&#32;!=&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00184"/>00184 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00185"/>00185 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;16&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a0c0f30701d79a1221292ff87eb3b9d44">GRPPROPERTYMODE_16_RGBA_5551</link>;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;24&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;32&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00191"/>00191 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00192"/>00192 &#32;&#32;offsetdata&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILETGAHEADERINFO</link>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00193"/>00193 &#32;&#32;offsetdata&#32;+=&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a8fe0149a14a49dd5911e956770987bf3">IDlength</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00194"/>00194 &#32;&#32;offsetdata&#32;+=&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a882775f87e015806d0f6f0ea6ae63188">colourmaptype</link>&#32;*&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a40344b4d476fc0017ad5b3b5ef453b83">colourmaplength</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00195"/>00195 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00196"/>00196 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00197"/>00197 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00198"/>00198 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00199"/>00199 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00209"/><link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">00209</link> <link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILETGAHEADERINFO</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GRPBITMAPFILETGAHEADER::GetHeaderInfo</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00210"/>00210 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00211"/>00211 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;headerinfo;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00212"/>00212 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00213"/>00213 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00214"/>00214 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00224"/><link linkend="_group___g_r_a_p_h_i_c_1ga3eb3337280dd53b6942aedc24b4869cf">00224</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga3eb3337280dd53b6942aedc24b4869cf">GRPBITMAPFILETGAHEADER::GetWidth</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00225"/>00225 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00226"/>00226 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a6aa47d634443afabd7c439dcd6514efd">width</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00227"/>00227 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00228"/>00228 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00229"/>00229 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00239"/><link linkend="_group___g_r_a_p_h_i_c_1ga49861521dbd2a66743e8d2388e53d362">00239</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga49861521dbd2a66743e8d2388e53d362">GRPBITMAPFILETGAHEADER::GetHeight</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00240"/>00240 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00241"/>00241 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1aadc71c624ae263c4e6849e14d52aa870">height</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00242"/>00242 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00243"/>00243 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00244"/>00244 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00254"/><link linkend="_group___g_r_a_p_h_i_c_1ga309b518053d503a3b30cf90054085b44">00254</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga309b518053d503a3b30cf90054085b44">GRPBITMAPFILETGAHEADER::GetBitsPerPixel</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00255"/>00255 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00256"/>00256 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00257"/>00257 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00258"/>00258 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00259"/>00259 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00269"/><link linkend="_group___g_r_a_p_h_i_c_1ga6fbba456d22adda5f89c22636f862033">00269</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga6fbba456d22adda5f89c22636f862033">GRPBITMAPFILETGAHEADER::GetOffsetData</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00270"/>00270 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00271"/>00271 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;offsetdata;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00272"/>00272 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00273"/>00273 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00274"/>00274 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00284"/><link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">00284</link> <link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GRPBITMAPFILETGAHEADER::GetMode</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00285"/>00285 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00286"/>00286 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mode;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00287"/>00287 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00288"/>00288 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00289"/>00289 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00299"/><link linkend="_group___g_r_a_p_h_i_c_1gab7062870b7442343b77f12f39cae4edd">00299</link> <link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84">GRPBITMAPFILETGATYPE</link>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gab7062870b7442343b77f12f39cae4edd">GRPBITMAPFILETGAHEADER::GetType</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00300"/>00300 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00301"/>00301 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84">GRPBITMAPFILETGATYPE</link>)headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a04165ee3c18323603d2c24a6639e3ea4">datatypecode</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00302"/>00302 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00303"/>00303 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00304"/>00304 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00313"/>00313 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILETGAHEADER::Clean()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00314"/>00314 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00315"/>00315 &#32;&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a8d8362661aa67a4abc4e66f90a1a7bfd">GRPPROPERTYMODE_XX_UNKNOWN</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00316"/>00316 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00317"/>00317 &#32;&#32;memset((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo,&#32;0&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILETGAHEADERINFO</link>));
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00318"/>00318 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00319"/>00319 &#32;&#32;offsetdata&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00320"/>00320 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00321"/>00321 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00322"/>00322 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00323"/>00323 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00324"/>00324 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00325"/>00325 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00326"/>00326 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_GRPBITMAPFILETGA</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00327"/>00327 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00328"/>00328 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00336"/><link linkend="_group___g_r_a_p_h_i_c_1gadfd0db17394a855bab09735b3a178b18">00336</link> <link linkend="_group___g_r_a_p_h_i_c_1gadfd0db17394a855bab09735b3a178b18">GRPBITMAPFILETGA::GRPBITMAPFILETGA</link>():&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e">GRPBITMAPFILEBASE</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00337"/>00337 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00338"/>00338 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00339"/>00339 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00340"/>00340 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00341"/>00341 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00350"/><link linkend="_group___g_r_a_p_h_i_c_1ga21187a1b397f8e02fcce56e51da83637">00350</link> <link linkend="_group___g_r_a_p_h_i_c_1ga21187a1b397f8e02fcce56e51da83637">GRPBITMAPFILETGA::~GRPBITMAPFILETGA</link>()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00351"/>00351 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00352"/>00352 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00353"/>00353 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00354"/>00354 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00355"/>00355 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00368"/><link linkend="_group___g_r_a_p_h_i_c_1gac1f099f55a03a51c23a2f9381c643bc8">00368</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1gac1f099f55a03a51c23a2f9381c643bc8">GRPBITMAPFILETGA::CreateBitmapFromFile</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;forcemode)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00369"/>00369 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00370"/>00370 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___g_r_a_p_h_i_c_1ga2326531c9eef704c3960c7f44ccae526">Open</link>(xpath))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00371"/>00371 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00372"/>00372 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r">GRPBITMAPFILETGAHEADER</link>&#32;&#32;header;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00373"/>00373 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00374"/>00374 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00375"/>00375 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00376"/>00376 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ReadHeaderFile(&amp;header))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00381"/>00381 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00382"/>00382 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga3eb3337280dd53b6942aedc24b4869cf">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00383"/>00383 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;=&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga49861521dbd2a66743e8d2388e53d362">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00384"/>00384 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesppixel&#32;=&#32;(header.<link linkend="_group___g_r_a_p_h_i_c_1ga309b518053d503a3b30cf90054085b44">GetBitsPerPixel</link>()/8);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00385"/>00385 &#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*&#32;&#32;&#32;&#32;&#32;colors&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00386"/>00386 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00387"/>00387 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00388"/>00388 &#32;&#32;bitmap&#32;=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1ga460b48b220289471646b4fe476c87006">CreateBitmap</link>(width,&#32;height,&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>());
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00389"/>00389 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;databuffer[8];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00392"/>00392 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1a95d94561b38b12abc55ac65f06d66be1">file</link>-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(header.<link linkend="_group___g_r_a_p_h_i_c_1ga6fbba456d22adda5f89c22636f862033">GetOffsetData</link>());
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00394"/>00394 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;filebuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>((height&#32;*&#32;width&#32;*&#32;bytesppixel),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00396"/>00396 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1a95d94561b38b12abc55ac65f06d66be1">file</link>-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;height&#32;*&#32;width&#32;*&#32;bytesppixel);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1gacff899b0385a3d04c1a26d463647ab07">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00399"/>00399 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;colors&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>[(height&#32;*&#32;width)+&#32;256&#32;];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(colors)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(index&#32;&lt;&#32;(height&#32;*&#32;width)&#32;)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(header.<link linkend="_group___g_r_a_p_h_i_c_1gab7062870b7442343b77f12f39cae4edd">GetType</link>())
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84a5ea2151b4f81225501d00305834817d4">GRPBITMAPFILETGATYPE_UNCOMPRESS_RGB</link>&#32;&#32;:&#32;<emphasis role="keywordflow">if</emphasis>(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(databuffer,&#32;bytesppixel))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CreateColor(header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>(),&#32;databuffer,&#32;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00411"/>00411 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00413"/>00413 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00415"/>00415 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84ad4b7b96556d74273e0d9f82cf9c0f039">GRPBITMAPFILETGATYPE_RLECOMPRESS_RGB</link>&#32;:&#32;{&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;typepacket&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;sizepacket&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00418"/>00418 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(&amp;typepacket,&#32;1))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sizepacket&#32;=&#32;(typepacket&#32;&amp;&#32;0x7F)&#32;+&#32;1;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00422"/>00422 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(typepacket&#32;&amp;&#32;0x80)&#32;<emphasis role="comment">//&#32;run-length&#32;packet</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(databuffer,&#32;bytesppixel))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;sizepacket;&#32;c++)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CreateColor(header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>(),&#32;databuffer,&#32;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;raw&#32;packet</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;sizepacket;&#32;c++)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(databuffer,&#32;bytesppixel))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CreateColor(header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>(),&#32;databuffer,&#32;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00448"/>00448 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00450"/>00450 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00453"/>00453 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00457"/>00457 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;filebuffer;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00459"/>00459 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00461"/>00461 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00462"/>00462 &#32;&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00463"/>00463 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00464"/>00464 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=height-1;&#32;y&gt;-1;&#32;y--)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;width;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>())
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a0c0f30701d79a1221292ff87eb3b9d44">GRPPROPERTYMODE_16_RGBA_5551</link>&#32;:&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a06fe93e6319ebdd2f84b419b4ae489b5">PutBlendPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;colors[index],&#32;(<emphasis role="keywordtype">int</emphasis>)colors[index].a);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00474"/>00474 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>&#32;&#32;&#32;:&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00477"/>00477 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>&#32;:&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00482"/>00482 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1gae006b37b5ec00c1066c02f4741dda631">DeleteBitmap</link>(bitmap);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00494"/>00494 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00495"/>00495 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00496"/>00496 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;colors;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00497"/>00497 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00498"/>00498 &#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00499"/>00499 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00500"/>00500 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf085dd454ff8f5c9dc35f3433b0a871b">ForceModeOfBitmap</link>(forcemode,&#32;bitmap);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00501"/>00501 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00502"/>00502 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00503"/>00503 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00517"/><link linkend="_group___g_r_a_p_h_i_c_1ga7b15481dbd5dc66f5154266632341efd">00517</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga7b15481dbd5dc66f5154266632341efd">GRPBITMAPFILETGA::CreateBitmapFromBuffer</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;forcemode)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00518"/>00518 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00519"/>00519 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r">GRPBITMAPFILETGAHEADER</link>&#32;&#32;header;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00520"/>00520 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00521"/>00521 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00522"/>00522 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00523"/>00523 &#32;&#32;indexbuffer&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00524"/>00524 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00525"/>00525 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ReadHeaderBuffer(buffer,&#32;size,&#32;&amp;header))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00526"/>00526 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00528"/>00528 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00529"/>00529 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00530"/>00530 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga3eb3337280dd53b6942aedc24b4869cf">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00531"/>00531 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;=&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga49861521dbd2a66743e8d2388e53d362">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00532"/>00532 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesppixel&#32;=&#32;(header.<link linkend="_group___g_r_a_p_h_i_c_1ga309b518053d503a3b30cf90054085b44">GetBitsPerPixel</link>()/8);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00533"/>00533 &#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*&#32;&#32;&#32;&#32;&#32;colors&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00534"/>00534 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00535"/>00535 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00536"/>00536 &#32;&#32;bitmap&#32;=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1ga460b48b220289471646b4fe476c87006">CreateBitmap</link>(width,&#32;height,&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>());
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00537"/>00537 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00538"/>00538 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;databuffer[8];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00540"/>00540 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;=&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga6fbba456d22adda5f89c22636f862033">GetOffsetData</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00542"/>00542 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;sizetoread&#32;=&#32;(height&#32;*&#32;width&#32;*&#32;bytesppixel);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;&gt;&#32;sizetoread)&#32;sizetoread&#32;=&#32;size;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00545"/>00545 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;filebuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>(sizetoread,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00547"/>00547 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;&amp;buffer[indexbuffer],&#32;(size&#32;-&#32;indexbuffer));
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00549"/>00549 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1gacff899b0385a3d04c1a26d463647ab07">SetPosition</link>(0);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00551"/>00551 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;colors&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>[(height&#32;*&#32;width)+&#32;256&#32;];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(colors)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(index&#32;&lt;&#32;(height&#32;*&#32;width)&#32;)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(header.<link linkend="_group___g_r_a_p_h_i_c_1gab7062870b7442343b77f12f39cae4edd">GetType</link>())
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84a5ea2151b4f81225501d00305834817d4">GRPBITMAPFILETGATYPE_UNCOMPRESS_RGB</link>&#32;&#32;:&#32;<emphasis role="keywordflow">if</emphasis>(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(databuffer,&#32;bytesppixel))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CreateColor(header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>(),&#32;databuffer,&#32;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00563"/>00563 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00565"/>00565 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00567"/>00567 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84ad4b7b96556d74273e0d9f82cf9c0f039">GRPBITMAPFILETGATYPE_RLECOMPRESS_RGB</link>&#32;:&#32;{&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;typepacket&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;sizepacket&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00570"/>00570 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(&amp;typepacket,&#32;1))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sizepacket&#32;=&#32;(typepacket&#32;&amp;&#32;0x7F)&#32;+&#32;1;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00574"/>00574 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(typepacket&#32;&amp;&#32;0x80)&#32;<emphasis role="comment">//&#32;run-length&#32;packet</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(databuffer,&#32;bytesppixel))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;sizepacket;&#32;c++)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CreateColor(header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>(),&#32;databuffer,&#32;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;raw&#32;packet</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;sizepacket;&#32;c++)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(filebuffer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(databuffer,&#32;bytesppixel))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CreateColor(header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>(),&#32;databuffer,&#32;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00600"/>00600 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00602"/>00602 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00605"/>00605 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00609"/>00609 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;filebuffer;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00611"/>00611 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00613"/>00613 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00614"/>00614 &#32;&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00615"/>00615 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00616"/>00616 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=height-1;&#32;y&gt;-1;&#32;y--)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;width;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(header.<link linkend="_group___g_r_a_p_h_i_c_1gab922f7af0e20a0e7041717fcebe7182e">GetMode</link>())
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a0c0f30701d79a1221292ff87eb3b9d44">GRPPROPERTYMODE_16_RGBA_5551</link>&#32;:&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a06fe93e6319ebdd2f84b419b4ae489b5">PutBlendPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;colors[index],&#32;(<emphasis role="keywordtype">int</emphasis>)colors[index].a);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00626"/>00626 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>&#32;&#32;&#32;:&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00629"/>00629 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>&#32;:&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;colors[index]);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00634"/>00634 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index++;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1gae006b37b5ec00c1066c02f4741dda631">DeleteBitmap</link>(bitmap);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00647"/>00647 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00648"/>00648 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;colors;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00649"/>00649 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00650"/>00650 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf085dd454ff8f5c9dc35f3433b0a871b">ForceModeOfBitmap</link>(forcemode,&#32;bitmap);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00651"/>00651 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00652"/>00652 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00653"/>00653 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00667"/><link linkend="_group___g_r_a_p_h_i_c_1ga890584bcc55b89714e6ddd430caee5ca">00667</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga890584bcc55b89714e6ddd430caee5ca">GRPBITMAPFILETGA::CreateFileFromBitmap</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00668"/>00668 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00669"/>00669 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!bitmap)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00670"/>00670 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00671"/>00671 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___g_r_a_p_h_i_c_1gadbc41519652512b18c6c31dd0351e464">Create</link>(xpath))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00672"/>00672 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00673"/>00673 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r">GRPBITMAPFILETGAHEADER</link>&#32;header;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00674"/>00674 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00675"/>00675 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a8fe0149a14a49dd5911e956770987bf3">IDlength</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00676"/>00676 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a882775f87e015806d0f6f0ea6ae63188">colourmaptype</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00677"/>00677 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a04165ee3c18323603d2c24a6639e3ea4">datatypecode</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__g_r_p_bitmap_file_t_g_a_8h_1ad871265e16a85b95591d296b24c72d84a5ea2151b4f81225501d00305834817d4">GRPBITMAPFILETGATYPE_UNCOMPRESS_RGB</link>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00678"/>00678 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1af6e2271e2ba2c6bb95cc35b40f8cce80">colourmaporigin</link>&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00679"/>00679 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a40344b4d476fc0017ad5b3b5ef453b83">colourmaplength</link>&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00680"/>00680 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a745d781db86f64f7fbd489269b84ab2c">colourmapdepth</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00681"/>00681 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1acfaa19c482720679a39a9d85c2819c3f">xorigin</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00682"/>00682 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a63553ca7be0a7bd51b9dddfa7bb50c57">yorigin</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00683"/>00683 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a6aa47d634443afabd7c439dcd6514efd">width</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga5cc313280bd36df2306a440639752388">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00684"/>00684 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1aadc71c624ae263c4e6849e14d52aa870">height</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00685"/>00685 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1a85cc77aa66b13ff78739fc70d20a9747">bitsperpixel</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;32;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00686"/>00686 &#32;&#32;header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o_1ae33fef6fdcc244f0cb4515398caa9874">imagedescriptor</link>&#32;&#32;&#32;&#32;&#32;=&#32;8;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00687"/>00687 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00688"/>00688 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga5cc313280bd36df2306a440639752388">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00689"/>00689 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00690"/>00690 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;bytesppixel&#32;&#32;=&#32;(header.<link linkend="_group___g_r_a_p_h_i_c_1ga309b518053d503a3b30cf90054085b44">GetBitsPerPixel</link>()/8);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00691"/>00691 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;sizebmp&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(header.<link linkend="_group___g_r_a_p_h_i_c_1ga3eb3337280dd53b6942aedc24b4869cf">GetWidth</link>()*header.<link linkend="_group___g_r_a_p_h_i_c_1ga49861521dbd2a66743e8d2388e53d362">GetHeight</link>()*bytesppixel);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00692"/>00692 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;index&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00693"/>00693 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00694"/>00694 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00695"/>00695 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1a95d94561b38b12abc55ac65f06d66be1">file</link>-&gt;<link linkend="_class_x_f_i_l_e_1a11b53fb5e02808927df9d01236e84eb9">Write</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)header.<link linkend="_group___g_r_a_p_h_i_c_1ga7c86e02cd301e99c2c33369f95d11051">GetHeaderInfo</link>(),&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILETGAHEADERINFO</link>)))
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00696"/>00696 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;databuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[sizebmp];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(databuffer)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=height-1;&#32;y&gt;-1;&#32;y--)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;width;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*&#32;color&#32;=&#32;(<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*)bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a63495c593c0238080f4ec81b859d4555">GetPixel</link>(x,&#32;y);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(color)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index+2]&#32;=&#32;color-&gt;r;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index+1]&#32;=&#32;color-&gt;g;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index+0]&#32;=&#32;color-&gt;b;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index+3]&#32;=&#32;color-&gt;a;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00712"/>00712 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;&#32;+=&#32;bytesppixel;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00716"/>00716 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1a95d94561b38b12abc55ac65f06d66be1">file</link>-&gt;<link linkend="_class_x_f_i_l_e_1a11b53fb5e02808927df9d01236e84eb9">Write</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)databuffer,&#32;sizebmp))&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00718"/>00718 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00720"/>00720 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00722"/>00722 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00723"/>00723 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00724"/>00724 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00725"/>00725 &#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00726"/>00726 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00727"/>00727 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00728"/>00728 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00729"/>00729 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00730"/>00730 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00742"/>00742 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILETGA::ReadHeaderFile(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r">GRPBITMAPFILETGAHEADER</link>*&#32;header)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00743"/>00743 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00744"/>00744 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!header)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00745"/>00745 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00746"/>00746 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00747"/>00747 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!header-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga210da533e803586cc2ff058b5ee020cf">Load</link>(<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00748"/>00748 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00749"/>00749 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00750"/>00750 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00751"/>00751 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00752"/>00752 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00766"/>00766 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILETGA::ReadHeaderBuffer(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_t_g_a_h_e_a_d_e_r">GRPBITMAPFILETGAHEADER</link>*&#32;header)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00767"/>00767 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00768"/>00768 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!header-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga210da533e803586cc2ff058b5ee020cf">Load</link>(buffer,&#32;size,&#32;indexbuffer))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00769"/>00769 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00770"/>00770 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00771"/>00771 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00772"/>00772 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00773"/>00773 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00787"/>00787 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILETGA::CreateColor(<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;mode,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;databuffer,&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>&amp;&#32;color)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00788"/>00788 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00789"/>00789 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!databuffer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00790"/>00790 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00791"/>00791 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(mode)
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00792"/>00792 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a0c0f30701d79a1221292ff87eb3b9d44">GRPPROPERTYMODE_16_RGBA_5551</link>&#32;:&#32;color.r&#32;=&#32;&#32;(databuffer[1]&#32;&amp;&#32;0x7c)&#32;&lt;&lt;&#32;1;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;((databuffer[1]&#32;&amp;&#32;0x03)&#32;&lt;&lt;&#32;6)&#32;|&#32;((databuffer[0]&#32;&amp;&#32;0xe0)&#32;&gt;&gt;&#32;2);
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;&#32;(databuffer[0]&#32;&amp;&#32;0x1f)&#32;&lt;&lt;&#32;3;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;&#32;(databuffer[1]&#32;&amp;&#32;0x80)?0:255;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00798"/>00798 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>&#32;&#32;&#32;:&#32;color.r&#32;=&#32;databuffer[2];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;databuffer[1];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;databuffer[0];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;255;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00804"/>00804 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>&#32;:&#32;color.r&#32;=&#32;databuffer[2];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;databuffer[1];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;databuffer[0];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;databuffer[3];
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00811"/>00811 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00812"/>00812 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00813"/>00813 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00814"/>00814 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00815"/>00815 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00816"/>00816 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00825"/>00825 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILETGA::Clean()
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00826"/>00826 {
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00827"/>00827 &#32;&#32;&#32;indexbuffer&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00828"/>00828 }
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00829"/>00829 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00830"/>00830 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00831"/>00831 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00832"/>00832 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00833"/>00833 
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00834"/>00834 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_t_g_a_8cpp_source_1l00835"/>00835 
</programlisting></section>
