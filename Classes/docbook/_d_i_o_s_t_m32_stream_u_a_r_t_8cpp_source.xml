<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source" xml:lang="en-US">
<title>DIOSTM32StreamUART.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/DIOSTM32StreamUART.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;CONTROL&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00030"/>00030 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00032"/>00032 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00033"/>00033 <emphasis role="preprocessor">#if&#32;defined(DIO_ACTIVE)&#32;&amp;&amp;&#32;defined(DIO_STREAMUART_ACTIVE)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00034"/>00034 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00035"/>00035 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_thread_collected_8h">XThreadCollected.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_x_event_8h">DIOStreamXEvent.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_u_a_r_t_config_8h">DIOStreamUARTConfig.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00042"/>00042 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_s_t_m32_stream_u_a_r_t_8h">DIOSTM32StreamUART.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00044"/>00044 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00046"/>00046 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00047"/>00047 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00048"/>00048 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00049"/>00049 <link linkend="_class_d_i_o_s_t_m32_s_t_r_e_a_m_u_a_r_t">DIOSTM32STREAMUART</link>*&#32;&#32;&#32;diostreamuartptrhandle[DIOSTM32STREAMIUART_MAXHANDLES]&#32;=&#32;{&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;};
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00050"/>00050 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00051"/>00051 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00052"/>00052 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00053"/>00053 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00062"/>00062 DIOSTM32STREAMUART::DIOSTM32STREAMUART()&#32;:&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_u_a_r_t">DIOSTREAMUART</link>(),&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e">XFSMACHINE</link>(0)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00063"/>00063 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00064"/>00064 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00065"/>00065 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00066"/>00066 &#32;&#32;AddState(&#32;DIOSTM32UARTFSMSTATE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32UARTFSMEVENT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOSTM32UARTFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32UARTFSMEVENT_DISCONNECTING&#32;&#32;&#32;&#32;,&#32;DIOSTM32UARTFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00070"/>00070 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00071"/>00071 &#32;&#32;AddState(&#32;DIOSTM32UARTFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32UARTFSMEVENT_WAITINGTOREAD&#32;&#32;&#32;&#32;,&#32;DIOSTM32UARTFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32UARTFSMEVENT_DISCONNECTING&#32;&#32;&#32;&#32;,&#32;DIOSTM32UARTFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00075"/>00075 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00076"/>00076 &#32;&#32;AddState(&#32;DIOSTM32UARTFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32UARTFSMEVENT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOSTM32UARTFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32UARTFSMEVENT_DISCONNECTING&#32;&#32;&#32;&#32;,&#32;DIOSTM32UARTFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00080"/>00080 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00081"/>00081 &#32;&#32;AddState(&#32;DIOSTM32UARTFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32UARTFSMEVENT_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;DIOSTM32UARTFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DIOSTM32UARTFSMEVENT_WAITINGTOREAD&#32;&#32;&#32;&#32;,&#32;DIOSTM32UARTFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00085"/>00085 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00086"/>00086 &#32;&#32;threadconnection&#32;=&#32;<link linkend="__x_thread_collected_8h_1aad503e3655b9ff78d3ac660d1f1f5534">CREATEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6afd5ea3f57252c8ca31afbd92ac8292ea">XTHREADGROUPID_DIOSTREAMUART</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;DIOSTM32STREAMUART::DIOSTM32STREAMUART&quot;</emphasis>),&#32;ThreadConnection,&#32;(<emphasis role="keywordtype">void</emphasis>*)<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00087"/>00087 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00088"/>00088 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00089"/>00089 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00090"/>00090 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00099"/>00099 DIOSTM32STREAMUART::~DIOSTM32STREAMUART()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00100"/>00100 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00101"/>00101 &#32;&#32;Close();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00102"/>00102 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00103"/>00103 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(threadconnection)&#32;<link linkend="__x_thread_collected_8h_1a18fb843f5fbad51464b68d705ed29b8a">DELETEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6afd5ea3f57252c8ca31afbd92ac8292ea">XTHREADGROUPID_DIOSTREAMUART</link>,&#32;threadconnection);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00104"/>00104 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00105"/>00105 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00106"/>00106 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00107"/>00107 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00108"/>00108 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00109"/>00109 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00119"/>00119 <link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0f">DIOSTREAMSTATUS</link>&#32;DIOSTM32STREAMUART::GetConnectStatus()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00120"/>00120 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00121"/>00121 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!config)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00122"/>00122 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00123"/>00123 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00124"/>00124 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00125"/>00125 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00126"/>00126 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00127"/>00127 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00137"/>00137 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::Open()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00138"/>00138 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00139"/>00139 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadconnection)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00140"/>00140 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00141"/>00141 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(config-&gt;GetPort())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;1&#32;:&#32;huart.Instance&#32;=&#32;USART1;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00145"/>00145 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00146"/>00146 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;case&#32;&#32;2&#32;:&#32;huart.Instance&#32;=&#32;USART2;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00147"/>00147 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;#ifndef&#32;HW_STM32F4XX</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00148"/>00148 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;case&#32;&#32;3&#32;:&#32;huart.Instance&#32;=&#32;USART3;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00149"/>00149 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00150"/>00150 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;default&#32;:&#32;return&#32;false;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00151"/>00151 <emphasis role="comment">*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00153"/>00153 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00154"/>00154 &#32;&#32;indexport&#32;=&#32;(config-&gt;GetPort()-1);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00155"/>00155 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(indexport&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00156"/>00156 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00157"/>00157 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Config(<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1ac7b4f9a6403101ca6da38d0a17fc670e">DIOSTREAMUARTMASK_ALL</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00158"/>00158 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00159"/>00159 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(HAL_UART_Init(&amp;huart)&#32;!=&#32;HAL_OK)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00160"/>00160 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00161"/>00161 &#32;&#32;diostreamuartptrhandle[indexport]&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00162"/>00162 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00163"/>00163 &#32;&#32;__HAL_UART_ENABLE_IT(&amp;huart,&#32;UART_IT_RXNE);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00164"/>00164 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(config-&gt;GetPort())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;1&#32;:&#32;HAL_NVIC_SetPriority(USART1_IRQn,&#32;0,&#32;0);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NVIC_EnableIRQ(USART1_IRQn);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00170"/>00170 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00171"/>00171 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;case&#32;&#32;2&#32;:&#32;HAL_NVIC_SetPriority(USART2_IRQn,&#32;0,&#32;0);</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00172"/>00172 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NVIC_EnableIRQ(USART2_IRQn);</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00173"/>00173 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00174"/>00174 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00175"/>00175 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;#ifndef&#32;HW_STM32F4XX</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00176"/>00176 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;case&#32;&#32;3&#32;:</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00177"/>00177 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;HW_STM32F0XX</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00178"/>00178 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NVIC_SetPriority(USART3_4_IRQn,&#32;0,&#32;0);</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00179"/>00179 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NVIC_EnableIRQ(USART3_4_IRQn);</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00180"/>00180 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#else</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00181"/>00181 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NVIC_SetPriority(USART3_IRQn,&#32;0,&#32;0);</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00182"/>00182 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HAL_NVIC_EnableIRQ(USART3_IRQn);</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00183"/>00183 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00184"/>00184 <emphasis role="comment"></emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00185"/>00185 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00186"/>00186 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00187"/>00187 <emphasis role="comment">*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00188"/>00188 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;default&#32;:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00191"/>00191 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00192"/>00192 &#32;&#32;HAL_UART_Receive_IT(&amp;huart,&#32;(uint8_t*)&amp;receiveddata,&#32;1);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00193"/>00193 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00194"/>00194 &#32;&#32;SetEvent(DIOSTM32UARTFSMEVENT_CONNECTED);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00195"/>00195 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00196"/>00196 &#32;&#32;status&#32;=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa264f9a9556afb61979d377ba92266a76">DIOSTREAMSTATUS_CONNECTED</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00197"/>00197 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00198"/>00198 &#32;&#32;ResetXBuffers();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00199"/>00199 &#32;&#32;ResetConnectionStatistics();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00200"/>00200 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00201"/>00201 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;threadconnection-&gt;Ini();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00202"/>00202 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00203"/>00203 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00204"/>00204 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00205"/>00205 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00217"/>00217 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::Config(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;mask)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00218"/>00218 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00219"/>00219 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((mask&amp;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1ab0b19349b16ea607fee0a0768e254732">DIOSTREAMUARTMASK_BAUDRATE</link>)&#32;==&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1ab0b19349b16ea607fee0a0768e254732">DIOSTREAMUARTMASK_BAUDRATE</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(this-&gt;config-&gt;GetBaudRate())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;50&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.BaudRate&#32;=&#32;50;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;300&#32;&#32;&#32;&#32;:&#32;huart.Init.BaudRate&#32;=&#32;300;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;600&#32;&#32;&#32;&#32;:&#32;huart.Init.BaudRate&#32;=&#32;600;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1200&#32;&#32;&#32;:&#32;huart.Init.BaudRate&#32;=&#32;1200;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4800&#32;&#32;&#32;:&#32;huart.Init.BaudRate&#32;=&#32;4800;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;9600&#32;&#32;&#32;:&#32;huart.Init.BaudRate&#32;=&#32;9600;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;19200&#32;&#32;:&#32;huart.Init.BaudRate&#32;=&#32;19200;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;38400&#32;&#32;:&#32;huart.Init.BaudRate&#32;=&#32;38400;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;57600&#32;&#32;:&#32;huart.Init.BaudRate&#32;=&#32;57600;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;115200&#32;:&#32;huart.Init.BaudRate&#32;=&#32;115200;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00235"/>00235 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00236"/>00236 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((mask&amp;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a840a43e8c9562dab05cae7d4fdaca429">DIOSTREAMUARTMASK_DATABITS</link>&#32;)&#32;==&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a840a43e8c9562dab05cae7d4fdaca429">DIOSTREAMUARTMASK_DATABITS</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(this-&gt;config-&gt;GetDataBits())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a60ceeedfe98fbe628b3a8946287ef930a49c32a692b4c198bc1980af4b4f0f7d7">DIOSTREAMUARTDATABIT_5</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a60ceeedfe98fbe628b3a8946287ef930aa312b221b64d1d939670914fb16a706b">DIOSTREAMUARTDATABIT_6</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a60ceeedfe98fbe628b3a8946287ef930ae1612e49cc6a9a769060de8366333229">DIOSTREAMUARTDATABIT_7</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a60ceeedfe98fbe628b3a8946287ef930a347d006256c69fdc8865efe4f0f63240">DIOSTREAMUARTDATABIT_8</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.WordLength&#32;=&#32;UART_WORDLENGTH_8B;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a60ceeedfe98fbe628b3a8946287ef930a361432c29500ade708764adaaf05cb28">DIOSTREAMUARTDATABIT_9</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.WordLength&#32;=&#32;UART_WORDLENGTH_9B;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00247"/>00247 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00248"/>00248 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((mask&amp;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1af0bea2a8975800d67a9c0b6c2caa8ac0">DIOSTREAMUARTMASK_PARITY</link>)&#32;==&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1af0bea2a8975800d67a9c0b6c2caa8ac0">DIOSTREAMUARTMASK_PARITY</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(this-&gt;config-&gt;GetParity())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1aa71aaf2831d7b6a7a26e3d67b8f8c450ab68bd4383179f3839d0ab5c021023d66">DIOSTREAMUARTPARITY_NONE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.Parity&#32;=&#32;UART_PARITY_NONE;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1aa71aaf2831d7b6a7a26e3d67b8f8c450a1a16420079da4604e6028dd0ee959fb0">DIOSTREAMUARTPARITY_MARK</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1aa71aaf2831d7b6a7a26e3d67b8f8c450a5506600e2060791940eb9d6daa4a776e">DIOSTREAMUARTPARITY_ODD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.Parity&#32;=&#32;UART_PARITY_ODD;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1aa71aaf2831d7b6a7a26e3d67b8f8c450a73138c9870f2a3907253810702628b30">DIOSTREAMUARTPARITY_SPACE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1aa71aaf2831d7b6a7a26e3d67b8f8c450a6333a9ba7d0769d1ecf2bd586e4d3f42">DIOSTREAMUARTPARITY_EVEN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.Parity&#32;=&#32;UART_PARITY_EVEN;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00259"/>00259 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00260"/>00260 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((mask&amp;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a04cff5dd2f04d054c40c02cb60e38226">DIOSTREAMUARTMASK_STOPBITS</link>&#32;)&#32;==&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a04cff5dd2f04d054c40c02cb60e38226">DIOSTREAMUARTMASK_STOPBITS</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(this-&gt;config-&gt;GetStopBits())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1afb946a28c35539ed2b23dff11590a067afd23bc384b37eb74cc499491babc8e3d">DIOSTREAMUARTSTOPBITS_ONE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.StopBits&#32;=&#32;UART_STOPBITS_1;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00265"/>00265 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;defined(HW_STM32F0XX)&#32;||&#32;defined(HW_STM32F3XX)&#32;||&#32;defined(HW_STM32WB55XX)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1afb946a28c35539ed2b23dff11590a067afdc96326e354e2a4cba08a687e3f906b">DIOSTREAMUARTSTOPBITS_ONEANDAHALF</link>&#32;&#32;:&#32;huart.Init.StopBits&#32;=&#32;UART_STOPBITS_1_5;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00267"/>00267 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1afb946a28c35539ed2b23dff11590a067ad28e3846898c7fa8d817254a173de03a">DIOSTREAMUARTSTOPBITS_TWO</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.StopBits&#32;=&#32;UART_STOPBITS_2;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00271"/>00271 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00272"/>00272 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((mask&amp;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a4536e9e2e4eb76933392947d1fcbfbb1">DIOSTREAMUARTMASK_FLOWCONTROL</link>)&#32;==&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a4536e9e2e4eb76933392947d1fcbfbb1">DIOSTREAMUARTMASK_FLOWCONTROL</link>)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(config-&gt;GetFlowControl())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a61cd8ff8f68f4277e2f4202ca432479ba9899048a0b7a5387623d6441d7859751">DIOSTREAMUARTFLOWCONTROL_NONE</link>&#32;&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.HwFlowCtl&#32;=&#32;UART_HWCONTROL_NONE;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a61cd8ff8f68f4277e2f4202ca432479ba4f7338f9d549500b0ffe843d7d99346c">DIOSTREAMUARTFLOWCONTROL_HARD</link>&#32;&#32;&#32;&#32;&#32;&#32;:&#32;huart.Init.HwFlowCtl&#32;=&#32;UART_HWCONTROL_RTS_CTS;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_stream_u_a_r_t_config_8h_1a61cd8ff8f68f4277e2f4202ca432479ba1118824bc8df184af5173c6272c84c8d">DIOSTREAMUARTFLOWCONTROL_SOFT</link>&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00281"/>00281 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00282"/>00282 &#32;&#32;huart.Init.Mode&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;UART_MODE_TX_RX;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00283"/>00283 &#32;&#32;huart.Init.OverSampling&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;UART_OVERSAMPLING_16;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00284"/>00284 <emphasis role="preprocessor">&#32;&#32;#if&#32;defined(HW_STM32F0XX)&#32;||&#32;defined(HW_STM32F3XX)</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00285"/>00285 &#32;&#32;<emphasis role="comment">//huart.Init.OneBitSampling&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;UART_ONEBIT_SAMPLING_DISABLED;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00286"/>00286 &#32;&#32;huart.AdvancedInit.AdvFeatureInit&#32;=&#32;UART_ADVFEATURE_NO_INIT;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00287"/>00287 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00288"/>00288 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00289"/>00289 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00290"/>00290 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00291"/>00291 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00292"/>00292 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00293"/>00293 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00306"/>00306 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOSTM32STREAMUART::ReadDirect(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00307"/>00307 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00308"/>00308 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00309"/>00309 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00310"/>00310 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;br&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00311"/>00311 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00312"/>00312 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(HAL_UART_Receive(&amp;diostreamuartptrhandle[indexport]-&gt;huart,&#32;(uint8_t*)buffer,&#32;size,&#32;1000)&#32;==&#32;HAL_OK)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;br&#32;=&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00316"/>00316 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00317"/>00317 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)br;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00318"/>00318 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00319"/>00319 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00320"/>00320 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00321"/>00321 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00334"/>00334 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOSTM32STREAMUART::WriteDirect(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00335"/>00335 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00336"/>00336 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00337"/>00337 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00338"/>00338 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(HAL_UART_Transmit(&amp;huart,&#32;(uint8_t*)buffer&#32;,&#32;(uint16_t)size,&#32;1000)&#32;==&#32;HAL_OK)&#32;<emphasis role="keywordflow">return</emphasis>&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00339"/>00339 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00340"/>00340 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00341"/>00341 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00342"/>00342 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00343"/>00343 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00344"/>00344 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00357"/>00357 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;DIOSTM32STREAMUART::Write(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00358"/>00358 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00359"/>00359 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outbuffer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00360"/>00360 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00361"/>00361 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(outbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00363"/>00363 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00365"/>00365 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00366"/>00366 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outbuffer-&gt;Add(buffer,size))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00367"/>00367 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00368"/>00368 &#32;&#32;nbyteswrite+=size;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00369"/>00369 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xtimernotactivity)&#32;xtimernotactivity-&gt;Reset();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00370"/>00370 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00371"/>00371 &#32;&#32;outbuffer-&gt;SetBlocked(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00372"/>00372 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00373"/>00373 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;size;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00374"/>00374 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00375"/>00375 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00376"/>00376 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00377"/>00377 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00387"/>00387 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::Disconnect()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00388"/>00388 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00389"/>00389 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00390"/>00390 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00391"/>00391 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00392"/>00392 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00393"/>00393 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00403"/>00403 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::Close()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00404"/>00404 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00405"/>00405 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadconnection)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00406"/>00406 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00407"/>00407 &#32;&#32;threadconnection-&gt;End();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00408"/>00408 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00409"/>00409 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GetConnectStatus()==<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00410"/>00410 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00411"/>00411 &#32;&#32;diostreamuartptrhandle[indexport]&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00412"/>00412 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00413"/>00413 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00414"/>00414 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00415"/>00415 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00416"/>00416 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00417"/>00417 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00427"/>00427 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::GetCTS()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00428"/>00428 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00429"/>00429 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00430"/>00430 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00431"/>00431 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00432"/>00432 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00433"/>00433 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00443"/>00443 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::GetDSR()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00444"/>00444 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00445"/>00445 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00446"/>00446 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00447"/>00447 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00448"/>00448 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00449"/>00449 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00459"/>00459 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::GetRing()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00460"/>00460 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00461"/>00461 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00462"/>00462 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00463"/>00463 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00464"/>00464 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00465"/>00465 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00475"/>00475 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::GetRLSD()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00476"/>00476 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00477"/>00477 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00478"/>00478 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00479"/>00479 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00480"/>00480 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00481"/>00481 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00493"/>00493 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::SetRTS(<emphasis role="keywordtype">bool</emphasis>&#32;on)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00494"/>00494 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00495"/>00495 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00496"/>00496 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00497"/>00497 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00498"/>00498 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00499"/>00499 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00511"/>00511 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::SetDTR(<emphasis role="keywordtype">bool</emphasis>&#32;on)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00512"/>00512 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00513"/>00513 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00514"/>00514 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00515"/>00515 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00516"/>00516 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00517"/>00517 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00528"/>00528 <emphasis role="keywordtype">bool</emphasis>&#32;DIOSTM32STREAMUART::CleanBuffers()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00529"/>00529 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00530"/>00530 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00531"/>00531 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00532"/>00532 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00533"/>00533 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00534"/>00534 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00535"/>00535 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00545"/>00545 UART_HandleTypeDef*&#32;DIOSTM32STREAMUART::GetHuart()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00546"/>00546 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00547"/>00547 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;huart;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00548"/>00548 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00549"/>00549 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00550"/>00550 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00551"/>00551 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00561"/>00561 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMUART::SetHuart(UART_HandleTypeDef*&#32;huart)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00562"/>00562 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!huart)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00564"/>00564 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00565"/>00565 &#32;&#32;this-&gt;huart&#32;=&#32;(*huart);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00566"/>00566 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00567"/>00567 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00568"/>00568 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00569"/>00569 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00570"/>00570 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00580"/>00580 <emphasis role="keywordtype">void</emphasis>&#32;HAL_UART_RxCpltCallback(UART_HandleTypeDef&#32;*huart)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00581"/>00581 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00582"/>00582 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;indexport&#32;=&#32;-1;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00583"/>00583 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00584"/>00584 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(huart-&gt;Instance&#32;==&#32;USART1)&#32;indexport&#32;=&#32;0;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00585"/>00585 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00586"/>00586 &#32;&#32;<emphasis role="comment">//if(huart-&gt;Instance&#32;==&#32;USART2)&#32;indexport&#32;=&#32;1;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00587"/>00587 &#32;&#32;<emphasis role="comment">//#ifndef&#32;HW_STM32F4XX</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00588"/>00588 &#32;&#32;<emphasis role="comment">//if(huart-&gt;Instance&#32;==&#32;USART3)&#32;indexport&#32;=&#32;2;</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00589"/>00589 &#32;&#32;<emphasis role="comment">//#endif</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00591"/>00591 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00592"/>00592 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(indexport&#32;==&#32;-1)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00593"/>00593 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostreamuartptrhandle[indexport])&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00594"/>00594 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostreamuartptrhandle[indexport]-&gt;GetConnectStatus()&#32;==&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00595"/>00595 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00596"/>00596 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostreamuartptrhandle[indexport]-&gt;IsBlockRead())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostreamuartptrhandle[indexport]-&gt;inbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostreamuartptrhandle[indexport]-&gt;readcache[indexport].GetSize())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostreamuartptrhandle[indexport]-&gt;inbuffer-&gt;Add(diostreamuartptrhandle[indexport]-&gt;readcache);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostreamuartptrhandle[indexport]-&gt;readcache[indexport].Delete();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00605"/>00605 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostreamuartptrhandle[indexport]-&gt;inbuffer-&gt;Add(diostreamuartptrhandle[indexport]-&gt;receiveddata);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostreamuartptrhandle[indexport]-&gt;readcache[indexport].Add(diostreamuartptrhandle[indexport]-&gt;receiveddata);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00613"/>00613 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00614"/>00614 &#32;&#32;HAL_UART_Receive_IT(&amp;diostreamuartptrhandle[indexport]-&gt;huart,&#32;(uint8_t*)&amp;diostreamuartptrhandle[indexport]-&gt;receiveddata,&#32;1);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00615"/>00615 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00616"/>00616 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00617"/>00617 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00618"/>00618 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00628"/>00628 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMUART::ThreadConnection(<emphasis role="keywordtype">void</emphasis>*&#32;param)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00629"/>00629 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00630"/>00630 &#32;&#32;<link linkend="_class_d_i_o_s_t_m32_s_t_r_e_a_m_u_a_r_t">DIOSTM32STREAMUART</link>*&#32;diostream&#32;=&#32;(<link linkend="_class_d_i_o_s_t_m32_s_t_r_e_a_m_u_a_r_t">DIOSTM32STREAMUART</link>*)param;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00631"/>00631 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00632"/>00632 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00633"/>00633 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;GetEvent()==DIOSTM32UARTFSMEVENT_NONE)&#32;<emphasis role="comment">//&#32;No&#32;hay&#32;nuevos&#32;Eventos</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(diostream-&gt;GetCurrentState())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32UARTFSMSTATE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00638"/>00638 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32UARTFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00640"/>00640 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32UARTFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;IsBlockRead())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;inbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;readcache[diostream-&gt;indexport].GetSize())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;inbuffer-&gt;Add(diostream-&gt;readcache);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;readcache[diostream-&gt;indexport].Delete();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00652"/>00652 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;IsBlockWrite())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;outbuffer-&gt;IsBlocked())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;esize&#32;=&#32;diostream-&gt;outbuffer-&gt;GetSize();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(esize&gt;<link linkend="__d_i_o_stream_8h_1aad641424d597536a03a19645768c03b4">DIOSTREAM_MAXBUFFER</link>)&#32;esize&#32;=&#32;<link linkend="__d_i_o_stream_8h_1aad641424d597536a03a19645768c03b4">DIOSTREAM_MAXBUFFER</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00659"/>00659 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(esize)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;outbuffer-&gt;Get(diostream-&gt;writebuffer,&#32;esize,&#32;0);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;WriteDirect(diostream-&gt;writebuffer,&#32;esize))
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;outbuffer-&gt;Extract(<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;esize);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00672"/>00672 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32UARTFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00674"/>00674 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00676"/>00676 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00677"/>00677 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00678"/>00678 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;GetEvent()&lt;DIOSTM32UART_LASTEVENT)
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;CheckTransition();
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00682"/>00682 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(diostream-&gt;GetCurrentState())
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32UARTFSMSTATE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00686"/>00686 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32UARTFSMSTATE_CONNECTED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_x_e_v_e_n_t">DIOSTREAMXEVENT</link>&#32;xevent(diostream,<link linkend="__d_i_o_stream_x_event_8h_1a03855c794a83f8d6c636156f111c4829a51978d78ab30f0f5237c9d2b78a80a85">DIOSTREAMXEVENT_TYPE_CONNECTED</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetDIOStream(diostream);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;PostEvent(&amp;xevent);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00690"/>00690 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;SetEvent(DIOSTM32UARTFSMEVENT_WAITINGTOREAD);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00694"/>00694 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32UARTFSMSTATE_WAITINGTOREAD&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00696"/>00696 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;DIOSTM32UARTFSMSTATE_DISCONNECTING&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_x_e_v_e_n_t">DIOSTREAMXEVENT</link>&#32;xevent(diostream,<link linkend="__d_i_o_stream_x_event_8h_1a03855c794a83f8d6c636156f111c4829ae953bc0973c4cdebf1b26ed06c424b52">DIOSTREAMXEVENT_TYPE_DISCONNECTED</link>);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetDIOStream(diostream);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;PostEvent(&amp;xevent);
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00700"/>00700 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;status&#32;=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00706"/>00706 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00707"/>00707 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00708"/>00708 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00709"/>00709 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00710"/>00710 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00711"/>00711 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00720"/>00720 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTM32STREAMUART::Clean()
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00721"/>00721 {
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00722"/>00722 &#32;&#32;threadconnection&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00723"/>00723 &#32;&#32;indexport&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;-1;
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00724"/>00724 }
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00725"/>00725 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00726"/>00726 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00727"/>00727 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00728"/>00728 
<anchor xml:id="__d_i_o_s_t_m32_stream_u_a_r_t_8cpp_source_1l00729"/>00729 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
