<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source" xml:lang="en-US">
<title>GRPBitmapFilePNG.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Graphic/Files/Bitmap/GRPBitmapFilePNG.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00001"/>00001 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00031"/>00031 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00033"/>00033 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00035"/>00035 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00036"/>00036 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00039"/>00039 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_file_p_n_g_8h">GRPBitmapFilePNG.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00041"/>00041 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_factory_8h">GRPFactory.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_8h">GRPBitmap.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00044"/>00044 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00046"/>00046 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00048"/>00048 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00049"/>00049 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00050"/>00050 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00052"/>00052 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00054"/>00054 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00055"/>00055 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00058"/>00058 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00059"/>00059 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00067"/><link linkend="_group___g_r_a_p_h_i_c_1ga4690a6288e697a4b7bb1ce60d9bf586b">00067</link> <link linkend="_group___g_r_a_p_h_i_c_1ga4690a6288e697a4b7bb1ce60d9bf586b">GRPBITMAPFILEPNG::GRPBITMAPFILEPNG</link>():&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e">GRPBITMAPFILEBASE</link>()
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00068"/>00068 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00069"/>00069 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00070"/>00070 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00071"/>00071 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00072"/>00072 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00081"/><link linkend="_group___g_r_a_p_h_i_c_1ga25b5ed942d995d6468d22a82a1e08d8a">00081</link> <link linkend="_group___g_r_a_p_h_i_c_1ga25b5ed942d995d6468d22a82a1e08d8a">GRPBITMAPFILEPNG::~GRPBITMAPFILEPNG</link>()
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00082"/>00082 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00083"/>00083 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00084"/>00084 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00085"/>00085 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00086"/>00086 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00099"/><link linkend="_group___g_r_a_p_h_i_c_1gad8daa7409a348a5c147a15dfa25af96d">00099</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1gad8daa7409a348a5c147a15dfa25af96d">GRPBITMAPFILEPNG::CreateBitmapFromFile</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;forcemode)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00100"/>00100 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00101"/>00101 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___g_r_a_p_h_i_c_1ga2326531c9eef704c3960c7f44ccae526">Open</link>(xpath))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00102"/>00102 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00103"/>00103 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;&#32;&#32;&#32;bitmap&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00104"/>00104 &#32;&#32;png_bytep*&#32;&#32;&#32;&#32;databuffer&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00105"/>00105 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;header[8];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00106"/>00106 &#32;&#32;png_structp&#32;&#32;&#32;png;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00107"/>00107 &#32;&#32;png_infop&#32;&#32;&#32;&#32;&#32;info;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00108"/>00108 &#32;&#32;png_uint_32&#32;&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00109"/>00109 &#32;&#32;png_uint_32&#32;&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00110"/>00110 &#32;&#32;png_byte&#32;&#32;&#32;&#32;&#32;&#32;colortype&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00111"/>00111 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesppixel&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00112"/>00112 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowbytes&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00113"/>00113 <emphasis role="comment">//int&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;npasses&#32;&#32;&#32;&#32;&#32;=&#32;0;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00114"/>00114 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00115"/>00115 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1a95d94561b38b12abc55ac65f06d66be1">file</link>-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(header,&#32;<link linkend="__g_r_p_bitmap_file_p_n_g_8h_1ab859cf4e6a44571bffad5811aaf01e9e">GRPBITMAPFILEPNG_HEADERSIZE</link>))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!png_sig_cmp(header,&#32;0,&#32;8))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png&#32;=&#32;png_create_read_struct(PNG_LIBPNG_VER_STRING,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(png)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info&#32;=&#32;png_create_info_struct(png);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(info)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!setjmp(png_jmpbuf(png)))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_set_read_fn(png&#32;,&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)<emphasis role="keyword">this</emphasis>,&#32;GRPBITMAPFILEPNG::ReadFileData);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00128"/>00128 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_set_sig_bytes(png,&#32;8);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00130"/>00130 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_read_info(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00132"/>00132 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;png_get_image_width(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;png_get_image_height(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colortype&#32;&#32;&#32;&#32;=&#32;png_get_color_type(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesppixel&#32;&#32;=&#32;png_get_channels(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowbytes&#32;&#32;&#32;&#32;&#32;=&#32;(int)png_get_rowbytes(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//npasses&#32;&#32;&#32;&#32;&#32;&#32;=&#32;png_set_interlace_handling(png);</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00139"/>00139 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_read_update_info(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00141"/>00141 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!setjmp(png_jmpbuf(png)))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer&#32;=&#32;(png_bytep*)<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[<emphasis role="keyword">sizeof</emphasis>(png_bytep)&#32;*&#32;height];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=0;&#32;y&lt;(int)height;&#32;y++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[y]&#32;=&#32;(png_byte*)<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[rowbytes];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00149"/>00149 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_read_image(png,&#32;databuffer);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_destroy_read_struct(&amp;png,&#32;&amp;info,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00152"/>00152 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a8d8362661aa67a4abc4e66f90a1a7bfd">GRPPROPERTYMODE_XX_UNKNOWN</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00154"/>00154 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(colortype)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;PNG_COLOR_TYPE_RGB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;PNG_COLOR_TYPE_RGB_ALPHA&#32;&#32;&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00160"/>00160 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1ga460b48b220289471646b4fe476c87006">CreateBitmap</link>(width,&#32;height,&#32;mode);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00165"/>00165 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=0;&#32;y&lt;(int)height;&#32;y++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00169"/>00169 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;(int)width;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>&#32;color;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00173"/>00173 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.r&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(*(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(databuffer[y]&#32;+&#32;index&#32;+&#32;0));
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(*(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(databuffer[y]&#32;+&#32;index&#32;+&#32;1));
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(*(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(databuffer[y]&#32;+&#32;index&#32;+&#32;2));
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00177"/>00177 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(colortype&#32;==&#32;PNG_COLOR_TYPE_RGB)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;255;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(*(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(databuffer[y]&#32;+&#32;index&#32;+&#32;3));
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00186"/>00186 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00188"/>00188 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;&#32;+=&#32;bytesppixel;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00192"/>00192 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00194"/>00194 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=0;&#32;y&lt;(int)height;&#32;y++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer[y];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00199"/>00199 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00207"/>00207 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00208"/>00208 &#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00209"/>00209 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00210"/>00210 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf085dd454ff8f5c9dc35f3433b0a871b">ForceModeOfBitmap</link>(forcemode,&#32;bitmap);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00211"/>00211 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00212"/>00212 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00213"/>00213 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00227"/><link linkend="_group___g_r_a_p_h_i_c_1ga6843994e5c9bbe947b09c835509c54f7">00227</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga6843994e5c9bbe947b09c835509c54f7">GRPBITMAPFILEPNG::CreateBitmapFromBuffer</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;forcemode)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00228"/>00228 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00229"/>00229 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!buffer)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00230"/>00230 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&lt;<link linkend="__g_r_p_bitmap_file_p_n_g_8h_1ab859cf4e6a44571bffad5811aaf01e9e">GRPBITMAPFILEPNG_HEADERSIZE</link>)&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00231"/>00231 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00232"/>00232 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;&#32;&#32;&#32;bitmap&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00233"/>00233 &#32;&#32;png_bytep*&#32;&#32;&#32;&#32;databuffer&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00234"/>00234 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;header[8];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00235"/>00235 &#32;&#32;png_structp&#32;&#32;&#32;png;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00236"/>00236 &#32;&#32;png_infop&#32;&#32;&#32;&#32;&#32;info;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00237"/>00237 &#32;&#32;png_uint_32&#32;&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00238"/>00238 &#32;&#32;png_uint_32&#32;&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00239"/>00239 &#32;&#32;png_byte&#32;&#32;&#32;&#32;&#32;&#32;colortype&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00240"/>00240 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesppixel&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00241"/>00241 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowbytes&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00242"/>00242 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;npasses&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00243"/>00243 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00244"/>00244 &#32;&#32;bufferdata&#32;&#32;&#32;&#32;&#32;&#32;=&#32;buffer;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00245"/>00245 &#32;&#32;bufferdatasize&#32;&#32;=&#32;size;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00246"/>00246 &#32;&#32;bufferdataindex&#32;=&#32;<link linkend="__g_r_p_bitmap_file_p_n_g_8h_1ab859cf4e6a44571bffad5811aaf01e9e">GRPBITMAPFILEPNG_HEADERSIZE</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00247"/>00247 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00248"/>00248 &#32;&#32;memcpy(header,&#32;buffer,&#32;<link linkend="__g_r_p_bitmap_file_p_n_g_8h_1ab859cf4e6a44571bffad5811aaf01e9e">GRPBITMAPFILEPNG_HEADERSIZE</link>);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00249"/>00249 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00250"/>00250 &#32;&#32;bufferdataindex&#32;=&#32;<link linkend="__g_r_p_bitmap_file_p_n_g_8h_1ab859cf4e6a44571bffad5811aaf01e9e">GRPBITMAPFILEPNG_HEADERSIZE</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00251"/>00251 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00252"/>00252 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!png_sig_cmp(header,&#32;0,&#32;8))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;png&#32;=&#32;png_create_read_struct(PNG_LIBPNG_VER_STRING,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(png)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info&#32;=&#32;png_create_info_struct(png);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(info)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!setjmp(png_jmpbuf(png)))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_set_read_fn(png&#32;,&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)<emphasis role="keyword">this</emphasis>,&#32;GRPBITMAPFILEPNG::ReadBufferData);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00263"/>00263 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_set_sig_bytes(png,&#32;8);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00265"/>00265 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_read_info(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00267"/>00267 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;png_get_image_width(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;png_get_image_height(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;colortype&#32;&#32;&#32;&#32;=&#32;png_get_color_type(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesppixel&#32;&#32;=&#32;png_get_channels(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowbytes&#32;&#32;&#32;&#32;&#32;=&#32;(int)png_get_rowbytes(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;npasses&#32;&#32;&#32;&#32;&#32;&#32;=&#32;png_set_interlace_handling(png);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00274"/>00274 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_read_update_info(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00276"/>00276 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!setjmp(png_jmpbuf(png)))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer&#32;=&#32;(png_bytep*)<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[<emphasis role="keyword">sizeof</emphasis>(png_bytep)&#32;*&#32;height];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=0;&#32;y&lt;(int)height;&#32;y++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[y]&#32;=&#32;(png_byte*)<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[rowbytes];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00284"/>00284 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_read_image(png,&#32;databuffer);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_destroy_read_struct(&amp;png,&#32;&amp;info,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00287"/>00287 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a8d8362661aa67a4abc4e66f90a1a7bfd">GRPPROPERTYMODE_XX_UNKNOWN</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00289"/>00289 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(colortype)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;PNG_COLOR_TYPE_RGB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;PNG_COLOR_TYPE_RGB_ALPHA&#32;&#32;&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00295"/>00295 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_group___g_r_a_p_h_i_c_1ga460b48b220289471646b4fe476c87006">CreateBitmap</link>(width,&#32;height,&#32;mode);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00300"/>00300 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=0;&#32;y&lt;(int)height;&#32;y++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00304"/>00304 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;(int)width;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>&#32;color;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00308"/>00308 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.r&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(*(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(databuffer[y]&#32;+&#32;index&#32;+&#32;0));
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(*(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(databuffer[y]&#32;+&#32;index&#32;+&#32;1));
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(*(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(databuffer[y]&#32;+&#32;index&#32;+&#32;2));
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00312"/>00312 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(colortype&#32;==&#32;PNG_COLOR_TYPE_RGB)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;255;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(*(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(databuffer[y]&#32;+&#32;index&#32;+&#32;3));
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00321"/>00321 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00323"/>00323 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;&#32;+=&#32;bytesppixel;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00327"/>00327 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00329"/>00329 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=0;&#32;y&lt;(int)height;&#32;y++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer[y];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00334"/>00334 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00341"/>00341 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00342"/>00342 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf085dd454ff8f5c9dc35f3433b0a871b">ForceModeOfBitmap</link>(forcemode,&#32;bitmap);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00343"/>00343 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00344"/>00344 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00345"/>00345 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00359"/><link linkend="_group___g_r_a_p_h_i_c_1gaf8eec4f996f6745a1ffa6423bc0216d1">00359</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaf8eec4f996f6745a1ffa6423bc0216d1">GRPBITMAPFILEPNG::CreateFileFromBitmap</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00360"/>00360 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00361"/>00361 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!bitmap)&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00362"/>00362 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00363"/>00363 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___g_r_a_p_h_i_c_1gadbc41519652512b18c6c31dd0351e464">Create</link>(xpath))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00364"/>00364 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00365"/>00365 &#32;&#32;png_structp&#32;&#32;&#32;png;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00366"/>00366 &#32;&#32;png_infop&#32;&#32;&#32;&#32;&#32;info;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00367"/>00367 &#32;&#32;png_bytep*&#32;&#32;&#32;&#32;databuffer&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00368"/>00368 &#32;&#32;png_uint_32&#32;&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga5cc313280bd36df2306a440639752388">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00369"/>00369 &#32;&#32;png_uint_32&#32;&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00370"/>00370 &#32;&#32;png_byte&#32;&#32;&#32;&#32;&#32;&#32;bitdepth&#32;&#32;&#32;&#32;=&#32;8;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00371"/>00371 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bytesppixel&#32;=&#32;4;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00372"/>00372 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowbytes&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00373"/>00373 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00374"/>00374 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00375"/>00375 &#32;&#32;png&#32;=&#32;png_create_write_struct(PNG_LIBPNG_VER_STRING,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00376"/>00376 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(png)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;info&#32;=&#32;png_create_info_struct(png);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(info)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!setjmp(png_jmpbuf(png)))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_set_write_fn(png&#32;&#32;,&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)<emphasis role="keyword">this</emphasis>,&#32;GRPBITMAPFILEPNG::WriteFileData,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00384"/>00384 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!setjmp(png_jmpbuf(png)))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rowbytes&#32;=&#32;width&#32;*&#32;4;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00388"/>00388 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer&#32;=&#32;(png_bytep*)<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[<emphasis role="keyword">sizeof</emphasis>(png_bytep)&#32;*&#32;height];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=0;&#32;y&lt;(int)height;&#32;y++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[y]&#32;=&#32;(png_byte*)<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[rowbytes];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00394"/>00394 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_set_IHDR(png,&#32;info,&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitdepth&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PNG_COLOR_TYPE_RGB_ALPHA&#32;&#32;,
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PNG_INTERLACE_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PNG_COMPRESSION_TYPE_BASE&#32;,
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PNG_FILTER_TYPE_BASE);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00402"/>00402 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_write_info(png,&#32;info);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00404"/>00404 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!setjmp(png_jmpbuf(png)))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00408"/>00408 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=0;&#32;y&lt;(int)height;&#32;y++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00412"/>00412 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;(int)width;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*&#32;color&#32;=&#32;(<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*)bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a63495c593c0238080f4ec81b859d4555">GetPixel</link>(x,&#32;y);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(color)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;ptr&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(databuffer[y]&#32;+&#32;index);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00419"/>00419 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptr[0]&#32;=&#32;color-&gt;r;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptr[1]&#32;=&#32;color-&gt;g;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptr[2]&#32;=&#32;color-&gt;b;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ptr[3]&#32;=&#32;color-&gt;a;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00425"/>00425 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;&#32;+=&#32;bytesppixel;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00429"/>00429 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_write_image(png,&#32;databuffer);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00431"/>00431 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!setjmp(png_jmpbuf(png)))
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;png_write_end(png,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00437"/>00437 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=0;&#32;y&lt;(int)height;&#32;y++)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer[y];
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00442"/>00442 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00444"/>00444 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00449"/>00449 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00450"/>00450 &#32;&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00451"/>00451 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00452"/>00452 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00453"/>00453 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00454"/>00454 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00455"/>00455 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00465"/><link linkend="_group___g_r_a_p_h_i_c_1ga902536051c1ac60b2972b845e8d1150b">00465</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga902536051c1ac60b2972b845e8d1150b">GRPBITMAPFILEPNG::BufferData_Get</link>()
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00466"/>00466 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00467"/>00467 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bufferdata;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00468"/>00468 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00469"/>00469 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00470"/>00470 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00480"/><link linkend="_group___g_r_a_p_h_i_c_1ga9b76c839fc4dfeaefa0cb4ebbcd9c602">00480</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___g_r_a_p_h_i_c_1ga9b76c839fc4dfeaefa0cb4ebbcd9c602">GRPBITMAPFILEPNG::BufferData_GetIndex</link>()
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00481"/>00481 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00482"/>00482 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bufferdataindex;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00483"/>00483 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00484"/>00484 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00485"/>00485 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00495"/><link linkend="_group___g_r_a_p_h_i_c_1gaefb4e3e7f5735249ee62dc19e25f0196">00495</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaefb4e3e7f5735249ee62dc19e25f0196">GRPBITMAPFILEPNG::BufferData_SetIndex</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;index)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00496"/>00496 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00497"/>00497 &#32;&#32;this-&gt;bufferdataindex&#32;=&#32;index;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00498"/>00498 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00499"/>00499 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00500"/>00500 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00510"/><link linkend="_group___g_r_a_p_h_i_c_1gaa077da8e56c59b0ab9392ab4ca33d723">00510</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___g_r_a_p_h_i_c_1gaa077da8e56c59b0ab9392ab4ca33d723">GRPBITMAPFILEPNG::BufferData_GetSize</link>()
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00511"/>00511 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00512"/>00512 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bufferdatasize;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00513"/>00513 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00514"/>00514 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00515"/>00515 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00527"/>00527 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILEPNG::ReadFileData(png_structp&#32;png,&#32;png_bytep&#32;data,&#32;png_size_t&#32;length)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00528"/>00528 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00529"/>00529 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_p_n_g">GRPBITMAPFILEPNG</link>*&#32;xfilepng&#32;=&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_p_n_g">GRPBITMAPFILEPNG</link>*)png_get_io_ptr(png);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00530"/>00530 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xfilepng)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00531"/>00531 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00532"/>00532 &#32;&#32;xfilepng-&gt;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)data,&#32;(int)length);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00533"/>00533 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00534"/>00534 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00535"/>00535 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00547"/>00547 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILEPNG::ReadBufferData(png_structp&#32;png,&#32;png_bytep&#32;data,&#32;png_size_t&#32;length)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00548"/>00548 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00549"/>00549 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_p_n_g">GRPBITMAPFILEPNG</link>*&#32;xfilepng&#32;=&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_p_n_g">GRPBITMAPFILEPNG</link>*)png_get_io_ptr(png);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00550"/>00550 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xfilepng)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00551"/>00551 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00552"/>00552 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer&#32;=&#32;xfilepng-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga902536051c1ac60b2972b845e8d1150b">BufferData_Get</link>();
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00553"/>00553 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;index&#32;&#32;=&#32;xfilepng-&gt;<link linkend="_group___g_r_a_p_h_i_c_1ga9b76c839fc4dfeaefa0cb4ebbcd9c602">BufferData_GetIndex</link>();
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00554"/>00554 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00555"/>00555 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)data,&#32;&amp;buffer[index],&#32;(<emphasis role="keywordtype">int</emphasis>)length);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00556"/>00556 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00557"/>00557 &#32;&#32;index+=&#32;(int)length;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00558"/>00558 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00559"/>00559 &#32;&#32;xfilepng-&gt;<link linkend="_group___g_r_a_p_h_i_c_1gaefb4e3e7f5735249ee62dc19e25f0196">BufferData_SetIndex</link>(index);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00560"/>00560 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00561"/>00561 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00562"/>00562 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00574"/>00574 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILEPNG::WriteFileData(png_structp&#32;png,&#32;png_bytep&#32;data,&#32;png_size_t&#32;length)
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00575"/>00575 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00576"/>00576 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_p_n_g">GRPBITMAPFILEPNG</link>*&#32;xfilepng&#32;=&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_p_n_g">GRPBITMAPFILEPNG</link>*)png_get_io_ptr(png);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00577"/>00577 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xfilepng)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00578"/>00578 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00579"/>00579 &#32;&#32;xfilepng-&gt;<link linkend="_group___x_u_t_i_l_s_1gaa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()-&gt;<link linkend="_class_x_f_i_l_e_1a11b53fb5e02808927df9d01236e84eb9">Write</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)data,&#32;(int)length);
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00580"/>00580 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00581"/>00581 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00582"/>00582 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00591"/>00591 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILEPNG::Clean()
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00592"/>00592 {
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00593"/>00593 &#32;&#32;bufferdata&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00594"/>00594 &#32;&#32;bufferdataindex&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00595"/>00595 &#32;&#32;bufferdatasize&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00596"/>00596 }
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00597"/>00597 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00598"/>00598 
<anchor xml:id="__g_r_p_bitmap_file_p_n_g_8cpp_source_1l00599"/>00599 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
</programlisting></section>
