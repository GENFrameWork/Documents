<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__hash_m_d5_8cpp_source" xml:lang="en-US">
<title>HashMD5.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/HashMD5.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__hash_m_d5_8cpp_source_1l00001"/>00001 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00031"/>00031 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00033"/>00033 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00035"/>00035 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00036"/>00036 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00039"/>00039 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_m_d5_8h">HashMD5.h</link>&quot;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00041"/>00041 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00043"/>00043 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00045"/>00045 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00047"/>00047 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00048"/>00048 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00049"/>00049 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00051"/>00051 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00052"/><link linkend="__hash_m_d5_8cpp_1a51398c0e5541164ad4d6615880073305">00052</link> <emphasis role="preprocessor">#define&#32;S11&#32;&#32;&#32;7</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00053"/><link linkend="__hash_m_d5_8cpp_1a1ec499cd0e54ecc28c2ac2afea5b038e">00053</link> <emphasis role="preprocessor">#define&#32;S12&#32;&#32;&#32;12</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00054"/><link linkend="__hash_m_d5_8cpp_1aaeec90429105fb54d853dd4fc7027a54">00054</link> <emphasis role="preprocessor">#define&#32;S13&#32;&#32;&#32;17</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00055"/><link linkend="__hash_m_d5_8cpp_1a78342b0ccde2ed12fdf19a113cc266cf">00055</link> <emphasis role="preprocessor">#define&#32;S14&#32;&#32;&#32;22</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00056"/><link linkend="__hash_m_d5_8cpp_1ab6d5354f647a0e7592a1f051fc8377b2">00056</link> <emphasis role="preprocessor">#define&#32;S21&#32;&#32;&#32;5</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00057"/><link linkend="__hash_m_d5_8cpp_1addad30455da936bc1879ee9c72b46d59">00057</link> <emphasis role="preprocessor">#define&#32;S22&#32;&#32;&#32;9</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00058"/><link linkend="__hash_m_d5_8cpp_1a6321a8b29628936f76e9e78cf5bda95f">00058</link> <emphasis role="preprocessor">#define&#32;S23&#32;&#32;&#32;14</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00059"/><link linkend="__hash_m_d5_8cpp_1a0c09eb77d30a0d5f9154914147b86c20">00059</link> <emphasis role="preprocessor">#define&#32;S24&#32;&#32;&#32;20</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00060"/><link linkend="__hash_m_d5_8cpp_1aef26590f8a880ee6f4a158168defcd89">00060</link> <emphasis role="preprocessor">#define&#32;S31&#32;&#32;&#32;4</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00061"/><link linkend="__hash_m_d5_8cpp_1a1d512424dd8a91e0a5bcc98563f33914">00061</link> <emphasis role="preprocessor">#define&#32;S32&#32;&#32;&#32;11</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00062"/><link linkend="__hash_m_d5_8cpp_1a1c854214533f6220e859b0063196abb3">00062</link> <emphasis role="preprocessor">#define&#32;S33&#32;&#32;&#32;16</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00063"/><link linkend="__hash_m_d5_8cpp_1af6472be1d535970afee8e5266a74aa07">00063</link> <emphasis role="preprocessor">#define&#32;S34&#32;&#32;&#32;23</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00064"/><link linkend="__hash_m_d5_8cpp_1ab674ba129e588da55d1d494e1cf3c15e">00064</link> <emphasis role="preprocessor">#define&#32;S41&#32;&#32;&#32;6</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00065"/><link linkend="__hash_m_d5_8cpp_1a268ef1a49114a94b931cc6b313e3cd1b">00065</link> <emphasis role="preprocessor">#define&#32;S42&#32;&#32;&#32;10</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00066"/><link linkend="__hash_m_d5_8cpp_1a5aaa7121f39650d472746942ca68f959">00066</link> <emphasis role="preprocessor">#define&#32;S43&#32;&#32;&#32;15</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00067"/><link linkend="__hash_m_d5_8cpp_1a6a3989af72b55d169bd73a66f8620aae">00067</link> <emphasis role="preprocessor">#define&#32;S44&#32;&#32;&#32;21</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00068"/>00068 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00069"/>00069 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00070"/>00070 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00071"/>00071 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00072"/>00072 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00073"/>00073 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00074"/>00074 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00075"/>00075 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00083"/><link linkend="_group___c_i_p_h_e_r_1gaa0de9a3c8bc5d30a7867297bfa2d1e08">00083</link> <link linkend="_group___c_i_p_h_e_r_1gaa0de9a3c8bc5d30a7867297bfa2d1e08">HASHMD5::HASHMD5</link>()&#32;:&#32;<link linkend="_class_h_a_s_h">HASH</link>()
<anchor xml:id="__hash_m_d5_8cpp_source_1l00084"/>00084 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00085"/>00085 &#32;&#32;Clean();
<anchor xml:id="__hash_m_d5_8cpp_source_1l00086"/>00086 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00087"/>00087 &#32;&#32;<link linkend="_class_h_a_s_h_1ad5af89903501908c4dcda95b37a5a785">type</link>&#32;=&#32;<link linkend="__hash_8h_1acf4dd3cf891bcd5c364340e2828a7ec9a2d7c98232d9152254b15e2daf1da9468">HASHTYPE_MD5</link>;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00088"/>00088 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00089"/>00089 &#32;&#32;Ini();
<anchor xml:id="__hash_m_d5_8cpp_source_1l00090"/>00090 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00091"/>00091 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00092"/>00092 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00101"/><link linkend="_group___c_i_p_h_e_r_1ga6fc8892799ec875eae93aa7b1f7ee65d">00101</link> <link linkend="_group___c_i_p_h_e_r_1ga6fc8892799ec875eae93aa7b1f7ee65d">HASHMD5::~HASHMD5</link>()
<anchor xml:id="__hash_m_d5_8cpp_source_1l00102"/>00102 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00103"/>00103 &#32;&#32;Clean();
<anchor xml:id="__hash_m_d5_8cpp_source_1l00104"/>00104 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00105"/>00105 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00106"/>00106 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00119"/><link linkend="_group___c_i_p_h_e_r_1ga6ebccb64de455e455e9fd5a49170f07e">00119</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga6ebccb64de455e455e9fd5a49170f07e">HASHMD5::Do</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00120"/>00120 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00121"/>00121 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00122"/>00122 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00123"/>00123 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_m_d5_8cpp_source_1l00124"/>00124 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00125"/>00125 &#32;&#32;Ini();
<anchor xml:id="__hash_m_d5_8cpp_source_1l00126"/>00126 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00127"/>00127 &#32;&#32;Update(input,size);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00128"/>00128 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00129"/>00129 &#32;&#32;End();
<anchor xml:id="__hash_m_d5_8cpp_source_1l00130"/>00130 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00131"/>00131 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(digest,16);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00132"/>00132 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00133"/>00133 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00134"/>00134 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00135"/>00135 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00136"/>00136 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00146"/><link linkend="_group___c_i_p_h_e_r_1ga29b3ee9addf3aa58825f1946637af2a3">00146</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga29b3ee9addf3aa58825f1946637af2a3">HASHMD5::GetDefaultSize</link>()
<anchor xml:id="__hash_m_d5_8cpp_source_1l00147"/>00147 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00148"/>00148 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;16;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00149"/>00149 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00150"/>00150 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00151"/>00151 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00159"/>00159 <emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::Ini()
<anchor xml:id="__hash_m_d5_8cpp_source_1l00160"/>00160 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00161"/>00161 &#32;&#32;finalized=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00162"/>00162 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00163"/>00163 &#32;&#32;count[0]&#32;=&#32;0;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00164"/>00164 &#32;&#32;count[1]&#32;=&#32;0;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00165"/>00165 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00166"/>00166 &#32;&#32;<emphasis role="comment">//&#32;load&#32;magic&#32;initialization&#32;constants.</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00167"/>00167 &#32;&#32;state[0]&#32;=&#32;0x67452301;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00168"/>00168 &#32;&#32;state[1]&#32;=&#32;0xefcdab89;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00169"/>00169 &#32;&#32;state[2]&#32;=&#32;0x98badcfe;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00170"/>00170 &#32;&#32;state[3]&#32;=&#32;0x10325476;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00171"/>00171 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00172"/>00172 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00173"/>00173 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00184"/>00184 <emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::Update(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00185"/>00185 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00186"/>00186 &#32;&#32;<emphasis role="comment">//&#32;compute&#32;number&#32;of&#32;bytes&#32;mod&#32;64</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00187"/>00187 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;index&#32;=&#32;count[0]&#32;/&#32;8&#32;%&#32;<link linkend="__hash_m_d5_8h_1a38cdb5d983181beb98f3e71aa3b12fbc">HASHMD5_BLOCKSIZE</link>;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00188"/>00188 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00189"/>00189 &#32;&#32;<emphasis role="comment">//&#32;Update&#32;number&#32;of&#32;bits</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00190"/>00190 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((count[0]&#32;+=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(size&#32;&lt;&lt;&#32;3))&#32;&lt;&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(size&#32;&lt;&lt;&#32;3))&#32;count[1]++;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00191"/>00191 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00192"/>00192 &#32;&#32;count[1]&#32;+=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(size&#32;&gt;&gt;&#32;29);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00193"/>00193 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00194"/>00194 &#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;bytes&#32;we&#32;need&#32;to&#32;fill&#32;in&#32;buffer</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00195"/>00195 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;firstpart&#32;=&#32;64&#32;-&#32;index;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00196"/>00196 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00197"/>00197 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00198"/>00198 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00199"/>00199 &#32;&#32;<emphasis role="comment">//&#32;transform&#32;as&#32;many&#32;times&#32;as&#32;possible.</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00200"/>00200 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;&gt;=&#32;firstpart)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_m_d5_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;fill&#32;buffer&#32;first,&#32;transform</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(&amp;buffer[index],&#32;input,&#32;firstpart);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00204"/>00204 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;Transform(buffer);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00206"/>00206 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;transform&#32;chunks&#32;of&#32;HASHMD5_BLOCKSIZE&#32;(64&#32;bytes)</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;firstpart;&#32;i&#32;+&#32;<link linkend="__hash_m_d5_8h_1a38cdb5d983181beb98f3e71aa3b12fbc">HASHMD5_BLOCKSIZE</link>&#32;&lt;=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)size;&#32;i&#32;+=&#32;<link linkend="__hash_m_d5_8h_1a38cdb5d983181beb98f3e71aa3b12fbc">HASHMD5_BLOCKSIZE</link>)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_m_d5_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Transform(&amp;input[i]);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_m_d5_8cpp_source_1l00212"/>00212 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;index&#32;=&#32;0;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00214"/>00214 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00215"/>00215 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;i&#32;=&#32;0;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00216"/>00216 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00217"/>00217 &#32;&#32;<emphasis role="comment">//&#32;buffer&#32;remaining&#32;input</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00218"/>00218 &#32;&#32;memcpy(&amp;buffer[index],&#32;&amp;input[i],&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(size-i));
<anchor xml:id="__hash_m_d5_8cpp_source_1l00219"/>00219 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00220"/>00220 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00221"/>00221 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00231"/>00231 <emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::Transform(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;block[<link linkend="__hash_m_d5_8h_1a38cdb5d983181beb98f3e71aa3b12fbc">HASHMD5_BLOCKSIZE</link>])
<anchor xml:id="__hash_m_d5_8cpp_source_1l00232"/>00232 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00233"/>00233 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;a&#32;=&#32;state[0];
<anchor xml:id="__hash_m_d5_8cpp_source_1l00234"/>00234 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;b&#32;=&#32;state[1];
<anchor xml:id="__hash_m_d5_8cpp_source_1l00235"/>00235 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c&#32;=&#32;state[2];
<anchor xml:id="__hash_m_d5_8cpp_source_1l00236"/>00236 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;d&#32;=&#32;state[3];
<anchor xml:id="__hash_m_d5_8cpp_source_1l00237"/>00237 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x[16];
<anchor xml:id="__hash_m_d5_8cpp_source_1l00238"/>00238 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00239"/>00239 &#32;&#32;Decode(x,&#32;block,&#32;<link linkend="__hash_m_d5_8h_1a38cdb5d983181beb98f3e71aa3b12fbc">HASHMD5_BLOCKSIZE</link>);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00240"/>00240 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00241"/>00241 &#32;&#32;<emphasis role="comment">//&#32;Round&#32;1&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00242"/>00242 &#32;&#32;FF&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;0],&#32;<link linkend="__hash_m_d5_8cpp_1a51398c0e5541164ad4d6615880073305">S11</link>,&#32;0xd76aa478);&#32;<emphasis role="comment">//&#32;1&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00243"/>00243 &#32;&#32;FF&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;1],&#32;<link linkend="__hash_m_d5_8cpp_1a1ec499cd0e54ecc28c2ac2afea5b038e">S12</link>,&#32;0xe8c7b756);&#32;<emphasis role="comment">//&#32;2&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00244"/>00244 &#32;&#32;FF&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[&#32;2],&#32;<link linkend="__hash_m_d5_8cpp_1aaeec90429105fb54d853dd4fc7027a54">S13</link>,&#32;0x242070db);&#32;<emphasis role="comment">//&#32;3&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00245"/>00245 &#32;&#32;FF&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;3],&#32;<link linkend="__hash_m_d5_8cpp_1a78342b0ccde2ed12fdf19a113cc266cf">S14</link>,&#32;0xc1bdceee);&#32;<emphasis role="comment">//&#32;4&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00246"/>00246 &#32;&#32;FF&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;4],&#32;<link linkend="__hash_m_d5_8cpp_1a51398c0e5541164ad4d6615880073305">S11</link>,&#32;0xf57c0faf);&#32;<emphasis role="comment">//&#32;5&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00247"/>00247 &#32;&#32;FF&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;5],&#32;<link linkend="__hash_m_d5_8cpp_1a1ec499cd0e54ecc28c2ac2afea5b038e">S12</link>,&#32;0x4787c62a);&#32;<emphasis role="comment">//&#32;6&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00248"/>00248 &#32;&#32;FF&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[&#32;6],&#32;<link linkend="__hash_m_d5_8cpp_1aaeec90429105fb54d853dd4fc7027a54">S13</link>,&#32;0xa8304613);&#32;<emphasis role="comment">//&#32;7&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00249"/>00249 &#32;&#32;FF&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;7],&#32;<link linkend="__hash_m_d5_8cpp_1a78342b0ccde2ed12fdf19a113cc266cf">S14</link>,&#32;0xfd469501);&#32;<emphasis role="comment">//&#32;8&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00250"/>00250 &#32;&#32;FF&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;8],&#32;<link linkend="__hash_m_d5_8cpp_1a51398c0e5541164ad4d6615880073305">S11</link>,&#32;0x698098d8);&#32;<emphasis role="comment">//&#32;9&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00251"/>00251 &#32;&#32;FF&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;9],&#32;<link linkend="__hash_m_d5_8cpp_1a1ec499cd0e54ecc28c2ac2afea5b038e">S12</link>,&#32;0x8b44f7af);&#32;<emphasis role="comment">//&#32;10&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00252"/>00252 &#32;&#32;FF&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[10],&#32;<link linkend="__hash_m_d5_8cpp_1aaeec90429105fb54d853dd4fc7027a54">S13</link>,&#32;0xffff5bb1);&#32;<emphasis role="comment">//&#32;11&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00253"/>00253 &#32;&#32;FF&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[11],&#32;<link linkend="__hash_m_d5_8cpp_1a78342b0ccde2ed12fdf19a113cc266cf">S14</link>,&#32;0x895cd7be);&#32;<emphasis role="comment">//&#32;12&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00254"/>00254 &#32;&#32;FF&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[12],&#32;<link linkend="__hash_m_d5_8cpp_1a51398c0e5541164ad4d6615880073305">S11</link>,&#32;0x6b901122);&#32;<emphasis role="comment">//&#32;13&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00255"/>00255 &#32;&#32;FF&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[13],&#32;<link linkend="__hash_m_d5_8cpp_1a1ec499cd0e54ecc28c2ac2afea5b038e">S12</link>,&#32;0xfd987193);&#32;<emphasis role="comment">//&#32;14&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00256"/>00256 &#32;&#32;FF&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[14],&#32;<link linkend="__hash_m_d5_8cpp_1aaeec90429105fb54d853dd4fc7027a54">S13</link>,&#32;0xa679438e);&#32;<emphasis role="comment">//&#32;15&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00257"/>00257 &#32;&#32;FF&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[15],&#32;<link linkend="__hash_m_d5_8cpp_1a78342b0ccde2ed12fdf19a113cc266cf">S14</link>,&#32;0x49b40821);&#32;<emphasis role="comment">//&#32;16&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00258"/>00258 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00259"/>00259 &#32;&#32;<emphasis role="comment">//&#32;Round&#32;2&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00260"/>00260 &#32;&#32;GG&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;1],&#32;<link linkend="__hash_m_d5_8cpp_1ab6d5354f647a0e7592a1f051fc8377b2">S21</link>,&#32;0xf61e2562);&#32;<emphasis role="comment">//&#32;17&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00261"/>00261 &#32;&#32;GG&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;6],&#32;<link linkend="__hash_m_d5_8cpp_1addad30455da936bc1879ee9c72b46d59">S22</link>,&#32;0xc040b340);&#32;<emphasis role="comment">//&#32;18&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00262"/>00262 &#32;&#32;GG&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[11],&#32;<link linkend="__hash_m_d5_8cpp_1a6321a8b29628936f76e9e78cf5bda95f">S23</link>,&#32;0x265e5a51);&#32;<emphasis role="comment">//&#32;19&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00263"/>00263 &#32;&#32;GG&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;0],&#32;<link linkend="__hash_m_d5_8cpp_1a0c09eb77d30a0d5f9154914147b86c20">S24</link>,&#32;0xe9b6c7aa);&#32;<emphasis role="comment">//&#32;20&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00264"/>00264 &#32;&#32;GG&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;5],&#32;<link linkend="__hash_m_d5_8cpp_1ab6d5354f647a0e7592a1f051fc8377b2">S21</link>,&#32;0xd62f105d);&#32;<emphasis role="comment">//&#32;21&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00265"/>00265 &#32;&#32;GG&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[10],&#32;<link linkend="__hash_m_d5_8cpp_1addad30455da936bc1879ee9c72b46d59">S22</link>,&#32;&#32;0x2441453);&#32;<emphasis role="comment">//&#32;22&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00266"/>00266 &#32;&#32;GG&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[15],&#32;<link linkend="__hash_m_d5_8cpp_1a6321a8b29628936f76e9e78cf5bda95f">S23</link>,&#32;0xd8a1e681);&#32;<emphasis role="comment">//&#32;23&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00267"/>00267 &#32;&#32;GG&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;4],&#32;<link linkend="__hash_m_d5_8cpp_1a0c09eb77d30a0d5f9154914147b86c20">S24</link>,&#32;0xe7d3fbc8);&#32;<emphasis role="comment">//&#32;24&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00268"/>00268 &#32;&#32;GG&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;9],&#32;<link linkend="__hash_m_d5_8cpp_1ab6d5354f647a0e7592a1f051fc8377b2">S21</link>,&#32;0x21e1cde6);&#32;<emphasis role="comment">//&#32;25&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00269"/>00269 &#32;&#32;GG&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[14],&#32;<link linkend="__hash_m_d5_8cpp_1addad30455da936bc1879ee9c72b46d59">S22</link>,&#32;0xc33707d6);&#32;<emphasis role="comment">//&#32;26&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00270"/>00270 &#32;&#32;GG&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[&#32;3],&#32;<link linkend="__hash_m_d5_8cpp_1a6321a8b29628936f76e9e78cf5bda95f">S23</link>,&#32;0xf4d50d87);&#32;<emphasis role="comment">//&#32;27&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00271"/>00271 &#32;&#32;GG&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;8],&#32;<link linkend="__hash_m_d5_8cpp_1a0c09eb77d30a0d5f9154914147b86c20">S24</link>,&#32;0x455a14ed);&#32;<emphasis role="comment">//&#32;28&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00272"/>00272 &#32;&#32;GG&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[13],&#32;<link linkend="__hash_m_d5_8cpp_1ab6d5354f647a0e7592a1f051fc8377b2">S21</link>,&#32;0xa9e3e905);&#32;<emphasis role="comment">//&#32;29&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00273"/>00273 &#32;&#32;GG&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;2],&#32;<link linkend="__hash_m_d5_8cpp_1addad30455da936bc1879ee9c72b46d59">S22</link>,&#32;0xfcefa3f8);&#32;<emphasis role="comment">//&#32;30&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00274"/>00274 &#32;&#32;GG&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[&#32;7],&#32;<link linkend="__hash_m_d5_8cpp_1a6321a8b29628936f76e9e78cf5bda95f">S23</link>,&#32;0x676f02d9);&#32;<emphasis role="comment">//&#32;31&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00275"/>00275 &#32;&#32;GG&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[12],&#32;<link linkend="__hash_m_d5_8cpp_1a0c09eb77d30a0d5f9154914147b86c20">S24</link>,&#32;0x8d2a4c8a);&#32;<emphasis role="comment">//&#32;32&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00276"/>00276 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00277"/>00277 &#32;&#32;<emphasis role="comment">//&#32;Round&#32;3&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00278"/>00278 &#32;&#32;HH&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;5],&#32;<link linkend="__hash_m_d5_8cpp_1aef26590f8a880ee6f4a158168defcd89">S31</link>,&#32;0xfffa3942);&#32;<emphasis role="comment">//&#32;33&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00279"/>00279 &#32;&#32;HH&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;8],&#32;<link linkend="__hash_m_d5_8cpp_1a1d512424dd8a91e0a5bcc98563f33914">S32</link>,&#32;0x8771f681);&#32;<emphasis role="comment">//&#32;34&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00280"/>00280 &#32;&#32;HH&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[11],&#32;<link linkend="__hash_m_d5_8cpp_1a1c854214533f6220e859b0063196abb3">S33</link>,&#32;0x6d9d6122);&#32;<emphasis role="comment">//&#32;35&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00281"/>00281 &#32;&#32;HH&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[14],&#32;<link linkend="__hash_m_d5_8cpp_1af6472be1d535970afee8e5266a74aa07">S34</link>,&#32;0xfde5380c);&#32;<emphasis role="comment">//&#32;36&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00282"/>00282 &#32;&#32;HH&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;1],&#32;<link linkend="__hash_m_d5_8cpp_1aef26590f8a880ee6f4a158168defcd89">S31</link>,&#32;0xa4beea44);&#32;<emphasis role="comment">//&#32;37&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00283"/>00283 &#32;&#32;HH&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;4],&#32;<link linkend="__hash_m_d5_8cpp_1a1d512424dd8a91e0a5bcc98563f33914">S32</link>,&#32;0x4bdecfa9);&#32;<emphasis role="comment">//&#32;38&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00284"/>00284 &#32;&#32;HH&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[&#32;7],&#32;<link linkend="__hash_m_d5_8cpp_1a1c854214533f6220e859b0063196abb3">S33</link>,&#32;0xf6bb4b60);&#32;<emphasis role="comment">//&#32;39&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00285"/>00285 &#32;&#32;HH&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[10],&#32;<link linkend="__hash_m_d5_8cpp_1af6472be1d535970afee8e5266a74aa07">S34</link>,&#32;0xbebfbc70);&#32;<emphasis role="comment">//&#32;40&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00286"/>00286 &#32;&#32;HH&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[13],&#32;<link linkend="__hash_m_d5_8cpp_1aef26590f8a880ee6f4a158168defcd89">S31</link>,&#32;0x289b7ec6);&#32;<emphasis role="comment">//&#32;41&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00287"/>00287 &#32;&#32;HH&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;0],&#32;<link linkend="__hash_m_d5_8cpp_1a1d512424dd8a91e0a5bcc98563f33914">S32</link>,&#32;0xeaa127fa);&#32;<emphasis role="comment">//&#32;42&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00288"/>00288 &#32;&#32;HH&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[&#32;3],&#32;<link linkend="__hash_m_d5_8cpp_1a1c854214533f6220e859b0063196abb3">S33</link>,&#32;0xd4ef3085);&#32;<emphasis role="comment">//&#32;43&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00289"/>00289 &#32;&#32;HH&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;6],&#32;<link linkend="__hash_m_d5_8cpp_1af6472be1d535970afee8e5266a74aa07">S34</link>,&#32;&#32;0x4881d05);&#32;<emphasis role="comment">//&#32;44&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00290"/>00290 &#32;&#32;HH&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;9],&#32;<link linkend="__hash_m_d5_8cpp_1aef26590f8a880ee6f4a158168defcd89">S31</link>,&#32;0xd9d4d039);&#32;<emphasis role="comment">//&#32;45&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00291"/>00291 &#32;&#32;HH&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[12],&#32;<link linkend="__hash_m_d5_8cpp_1a1d512424dd8a91e0a5bcc98563f33914">S32</link>,&#32;0xe6db99e5);&#32;<emphasis role="comment">//&#32;46&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00292"/>00292 &#32;&#32;HH&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[15],&#32;<link linkend="__hash_m_d5_8cpp_1a1c854214533f6220e859b0063196abb3">S33</link>,&#32;0x1fa27cf8);&#32;<emphasis role="comment">//&#32;47&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00293"/>00293 &#32;&#32;HH&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;2],&#32;<link linkend="__hash_m_d5_8cpp_1af6472be1d535970afee8e5266a74aa07">S34</link>,&#32;0xc4ac5665);&#32;<emphasis role="comment">//&#32;48&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00294"/>00294 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00295"/>00295 &#32;&#32;<emphasis role="comment">//&#32;Round&#32;4&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00296"/>00296 &#32;&#32;II&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;0],&#32;<link linkend="__hash_m_d5_8cpp_1ab674ba129e588da55d1d494e1cf3c15e">S41</link>,&#32;0xf4292244);&#32;<emphasis role="comment">//&#32;49&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00297"/>00297 &#32;&#32;II&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;7],&#32;<link linkend="__hash_m_d5_8cpp_1a268ef1a49114a94b931cc6b313e3cd1b">S42</link>,&#32;0x432aff97);&#32;<emphasis role="comment">//&#32;50&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00298"/>00298 &#32;&#32;II&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[14],&#32;<link linkend="__hash_m_d5_8cpp_1a5aaa7121f39650d472746942ca68f959">S43</link>,&#32;0xab9423a7);&#32;<emphasis role="comment">//&#32;51&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00299"/>00299 &#32;&#32;II&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;5],&#32;<link linkend="__hash_m_d5_8cpp_1a6a3989af72b55d169bd73a66f8620aae">S44</link>,&#32;0xfc93a039);&#32;<emphasis role="comment">//&#32;52&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00300"/>00300 &#32;&#32;II&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[12],&#32;<link linkend="__hash_m_d5_8cpp_1ab674ba129e588da55d1d494e1cf3c15e">S41</link>,&#32;0x655b59c3);&#32;<emphasis role="comment">//&#32;53&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00301"/>00301 &#32;&#32;II&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[&#32;3],&#32;<link linkend="__hash_m_d5_8cpp_1a268ef1a49114a94b931cc6b313e3cd1b">S42</link>,&#32;0x8f0ccc92);&#32;<emphasis role="comment">//&#32;54&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00302"/>00302 &#32;&#32;II&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[10],&#32;<link linkend="__hash_m_d5_8cpp_1a5aaa7121f39650d472746942ca68f959">S43</link>,&#32;0xffeff47d);&#32;<emphasis role="comment">//&#32;55&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00303"/>00303 &#32;&#32;II&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;1],&#32;<link linkend="__hash_m_d5_8cpp_1a6a3989af72b55d169bd73a66f8620aae">S44</link>,&#32;0x85845dd1);&#32;<emphasis role="comment">//&#32;56&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00304"/>00304 &#32;&#32;II&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;8],&#32;<link linkend="__hash_m_d5_8cpp_1ab674ba129e588da55d1d494e1cf3c15e">S41</link>,&#32;0x6fa87e4f);&#32;<emphasis role="comment">//&#32;57&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00305"/>00305 &#32;&#32;II&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[15],&#32;<link linkend="__hash_m_d5_8cpp_1a268ef1a49114a94b931cc6b313e3cd1b">S42</link>,&#32;0xfe2ce6e0);&#32;<emphasis role="comment">//&#32;58&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00306"/>00306 &#32;&#32;II&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[&#32;6],&#32;<link linkend="__hash_m_d5_8cpp_1a5aaa7121f39650d472746942ca68f959">S43</link>,&#32;0xa3014314);&#32;<emphasis role="comment">//&#32;59&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00307"/>00307 &#32;&#32;II&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[13],&#32;<link linkend="__hash_m_d5_8cpp_1a6a3989af72b55d169bd73a66f8620aae">S44</link>,&#32;0x4e0811a1);&#32;<emphasis role="comment">//&#32;60&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00308"/>00308 &#32;&#32;II&#32;(a,&#32;b,&#32;c,&#32;d,&#32;x[&#32;4],&#32;<link linkend="__hash_m_d5_8cpp_1ab674ba129e588da55d1d494e1cf3c15e">S41</link>,&#32;0xf7537e82);&#32;<emphasis role="comment">//&#32;61&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00309"/>00309 &#32;&#32;II&#32;(d,&#32;a,&#32;b,&#32;c,&#32;x[11],&#32;<link linkend="__hash_m_d5_8cpp_1a268ef1a49114a94b931cc6b313e3cd1b">S42</link>,&#32;0xbd3af235);&#32;<emphasis role="comment">//&#32;62&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00310"/>00310 &#32;&#32;II&#32;(c,&#32;d,&#32;a,&#32;b,&#32;x[&#32;2],&#32;<link linkend="__hash_m_d5_8cpp_1a5aaa7121f39650d472746942ca68f959">S43</link>,&#32;0x2ad7d2bb);&#32;<emphasis role="comment">//&#32;63&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00311"/>00311 &#32;&#32;II&#32;(b,&#32;c,&#32;d,&#32;a,&#32;x[&#32;9],&#32;<link linkend="__hash_m_d5_8cpp_1a6a3989af72b55d169bd73a66f8620aae">S44</link>,&#32;0xeb86d391);&#32;<emphasis role="comment">//&#32;64&#32;</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00312"/>00312 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00313"/>00313 &#32;&#32;state[0]&#32;+=&#32;a;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00314"/>00314 &#32;&#32;state[1]&#32;+=&#32;b;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00315"/>00315 &#32;&#32;state[2]&#32;+=&#32;c;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00316"/>00316 &#32;&#32;state[3]&#32;+=&#32;d;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00317"/>00317 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00318"/>00318 &#32;&#32;<emphasis role="comment">//&#32;Zeroize&#32;sensitive&#32;information.</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00319"/>00319 &#32;&#32;memset(x,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(x));
<anchor xml:id="__hash_m_d5_8cpp_source_1l00320"/>00320 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00321"/>00321 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00322"/>00322 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00334"/>00334 <emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::Decode(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;output,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00335"/>00335 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00336"/>00336 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i=0,&#32;j=0;&#32;j&lt;size;&#32;i++,&#32;j+=4)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_m_d5_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;output[i]&#32;=&#32;((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)input[j])&#32;|&#32;(((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)input[j+1])&#32;&lt;&lt;&#32;8)&#32;|&#32;(((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)input[j+2])&#32;&lt;&lt;&#32;16)&#32;|&#32;(((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)input[j+3])&#32;&lt;&lt;&#32;24);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_m_d5_8cpp_source_1l00340"/>00340 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00341"/>00341 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00342"/>00342 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00354"/>00354 <emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::Encode(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;output,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00355"/>00355 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00356"/>00356 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i=0,&#32;j=0;&#32;j&lt;size;&#32;i++,&#32;j+=&#32;4)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_m_d5_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;output[j]&#32;=&#32;input[i]&#32;&amp;&#32;0xff;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;output[j+1]&#32;=&#32;(input[i]&#32;&gt;&gt;&#32;8)&#32;&amp;&#32;0xff;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;output[j+2]&#32;=&#32;(input[i]&#32;&gt;&gt;&#32;16)&#32;&amp;&#32;0xff;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;output[j+3]&#32;=&#32;(input[i]&#32;&gt;&gt;&#32;24)&#32;&amp;&#32;0xff;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_m_d5_8cpp_source_1l00363"/>00363 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00364"/>00364 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00365"/>00365 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00373"/>00373 <emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::End()
<anchor xml:id="__hash_m_d5_8cpp_source_1l00374"/>00374 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00375"/>00375 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;padding[64]&#32;=&#32;{&#32;0x80,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,
<anchor xml:id="__hash_m_d5_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,
<anchor xml:id="__hash_m_d5_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,
<anchor xml:id="__hash_m_d5_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00,&#32;0x00
<anchor xml:id="__hash_m_d5_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__hash_m_d5_8cpp_source_1l00380"/>00380 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00381"/>00381 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(finalized)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00382"/>00382 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Save&#32;number&#32;of&#32;bits</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00384"/>00384 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;bits[8];
<anchor xml:id="__hash_m_d5_8cpp_source_1l00385"/>00385 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00386"/>00386 &#32;&#32;Encode(bits,&#32;count,&#32;8);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00387"/>00387 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pad&#32;out&#32;to&#32;56&#32;mod&#32;64.</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00389"/>00389 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;index&#32;=&#32;count[0]&#32;/&#32;8&#32;%&#32;64;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00390"/>00390 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;padLen&#32;=&#32;(index&#32;&lt;&#32;56)&#32;?&#32;(56&#32;-&#32;index)&#32;:&#32;(120&#32;-&#32;index);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00391"/>00391 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00392"/>00392 &#32;&#32;Update(padding,&#32;padLen);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00393"/>00393 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Append&#32;size&#32;(before&#32;padding)</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00395"/>00395 &#32;&#32;Update(bits,&#32;8);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00396"/>00396 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;<emphasis role="comment">//&#32;Store&#32;state&#32;in&#32;digest</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00398"/>00398 &#32;&#32;Encode(digest,&#32;state,&#32;16);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00399"/>00399 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00400"/>00400 &#32;&#32;<emphasis role="comment">//&#32;Zeroize&#32;sensitive&#32;information.</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00401"/>00401 &#32;&#32;memset(buffer,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;buffer);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00402"/>00402 &#32;&#32;memset(count,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>&#32;count);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00403"/>00403 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00404"/>00404 &#32;&#32;finalized=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00405"/>00405 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00406"/>00406 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00407"/>00407 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00421"/>00421 <emphasis role="keyword">inline</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;HASHMD5::F(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;y,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;z)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00422"/>00422 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00423"/>00423 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&amp;y)&#32;|&#32;(~x&amp;z);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00424"/>00424 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00425"/>00425 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00426"/>00426 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00440"/>00440 <emphasis role="keyword">inline</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;HASHMD5::G(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;y,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;z)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00441"/>00441 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00442"/>00442 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&amp;z)&#32;|&#32;(y&amp;~z);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00443"/>00443 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00444"/>00444 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00445"/>00445 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00459"/>00459 <emphasis role="keyword">inline</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;HASHMD5::H(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;y,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;z)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00460"/>00460 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00461"/>00461 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x^y^z;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00462"/>00462 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00463"/>00463 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00464"/>00464 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00478"/>00478 <emphasis role="keyword">inline</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;HASHMD5::I(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;y,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;z)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00479"/>00479 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00480"/>00480 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;y&#32;^&#32;(x&#32;|&#32;~z);
<anchor xml:id="__hash_m_d5_8cpp_source_1l00481"/>00481 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00482"/>00482 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00483"/>00483 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00496"/>00496 <emphasis role="keyword">inline</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;HASHMD5::RotateLeft(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00497"/>00497 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00498"/>00498 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&#32;&lt;&lt;&#32;n)&#32;|&#32;(x&#32;&gt;&gt;&#32;(32-n));
<anchor xml:id="__hash_m_d5_8cpp_source_1l00499"/>00499 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00500"/>00500 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00501"/>00501 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00519"/>00519 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::FF(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;a,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;b,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;d,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;s,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;ac)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00520"/>00520 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00521"/>00521 &#32;&#32;a&#32;=&#32;RotateLeft(a+&#32;F(b,c,d)&#32;+&#32;x&#32;+&#32;ac,&#32;s)&#32;+&#32;b;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00522"/>00522 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00523"/>00523 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00524"/>00524 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00542"/>00542 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::GG(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;a,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;b,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;d,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;s,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;ac)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00543"/>00543 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00544"/>00544 &#32;&#32;a&#32;=&#32;RotateLeft(a&#32;+&#32;G(b,c,d)&#32;+&#32;x&#32;+&#32;ac,&#32;s)&#32;+&#32;b;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00545"/>00545 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00546"/>00546 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00547"/>00547 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00565"/>00565 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::HH(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;a,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;b,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;d,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;s,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;ac)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00566"/>00566 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00567"/>00567 &#32;&#32;a&#32;=&#32;RotateLeft(a&#32;+&#32;H(b,c,d)&#32;+&#32;x&#32;+&#32;ac,&#32;s)&#32;+&#32;b;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00568"/>00568 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00569"/>00569 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00570"/>00570 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00588"/>00588 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::II(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;a,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;b,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;d,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;x,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;s,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;ac)
<anchor xml:id="__hash_m_d5_8cpp_source_1l00589"/>00589 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00590"/>00590 &#32;&#32;a&#32;=&#32;RotateLeft(a&#32;+&#32;I(b,c,d)&#32;+&#32;x&#32;+&#32;ac,&#32;s)&#32;+&#32;b;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00591"/>00591 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00592"/>00592 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00593"/>00593 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00602"/>00602 <emphasis role="keywordtype">void</emphasis>&#32;HASHMD5::Clean()
<anchor xml:id="__hash_m_d5_8cpp_source_1l00603"/>00603 {
<anchor xml:id="__hash_m_d5_8cpp_source_1l00604"/>00604 &#32;&#32;finalized=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00605"/>00605 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00606"/>00606 &#32;&#32;count[0]&#32;=&#32;0;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00607"/>00607 &#32;&#32;count[1]&#32;=&#32;0;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00608"/>00608 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00609"/>00609 &#32;&#32;<emphasis role="comment">//&#32;load&#32;magic&#32;initialization&#32;constants.</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00610"/>00610 &#32;&#32;state[0]&#32;=&#32;0x67452301;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00611"/>00611 &#32;&#32;state[1]&#32;=&#32;0xefcdab89;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00612"/>00612 &#32;&#32;state[2]&#32;=&#32;0x98badcfe;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00613"/>00613 &#32;&#32;state[3]&#32;=&#32;0x10325476;
<anchor xml:id="__hash_m_d5_8cpp_source_1l00614"/>00614 }
<anchor xml:id="__hash_m_d5_8cpp_source_1l00615"/>00615 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00616"/>00616 
<anchor xml:id="__hash_m_d5_8cpp_source_1l00617"/>00617 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_m_d5_8cpp_source_1l00618"/>00618 
</programlisting></section>
