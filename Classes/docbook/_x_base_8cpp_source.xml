<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_base_8cpp_source" xml:lang="en-US">
<title>XBase.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XBase.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_base_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_base_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_base_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_base_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_base_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_base_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_base_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_base_8h">XBase.h</link>&quot;</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_base_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_base_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_base_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00047"/>00047 
<anchor xml:id="__x_base_8cpp_source_1l00048"/>00048 
<anchor xml:id="__x_base_8cpp_source_1l00049"/>00049 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_base_8cpp_source_1l00052"/>00052 
<anchor xml:id="__x_base_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00054"/>00054 
<anchor xml:id="__x_base_8cpp_source_1l00055"/>00055 
<anchor xml:id="__x_base_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_base_8cpp_source_1l00059"/>00059 
<anchor xml:id="__x_base_8cpp_source_1l00067"/><link linkend="_group___x_u_t_i_l_s_1ga6fb64564e028856784d271b02d29d45e">00067</link> <link linkend="_group___x_u_t_i_l_s_1ga6fb64564e028856784d271b02d29d45e">XBASE::XBASE</link>()
<anchor xml:id="__x_base_8cpp_source_1l00068"/>00068 {
<anchor xml:id="__x_base_8cpp_source_1l00069"/>00069 &#32;&#32;Clean();
<anchor xml:id="__x_base_8cpp_source_1l00070"/>00070 }
<anchor xml:id="__x_base_8cpp_source_1l00071"/>00071 
<anchor xml:id="__x_base_8cpp_source_1l00072"/>00072 
<anchor xml:id="__x_base_8cpp_source_1l00081"/><link linkend="_group___x_u_t_i_l_s_1ga5f3ca4fc5f15ab3af437af6147c5ca67">00081</link> <link linkend="_group___x_u_t_i_l_s_1ga5f3ca4fc5f15ab3af437af6147c5ca67">XBASE::~XBASE</link>()
<anchor xml:id="__x_base_8cpp_source_1l00082"/>00082 {
<anchor xml:id="__x_base_8cpp_source_1l00083"/>00083 &#32;&#32;Clean();
<anchor xml:id="__x_base_8cpp_source_1l00084"/>00084 }
<anchor xml:id="__x_base_8cpp_source_1l00085"/>00085 
<anchor xml:id="__x_base_8cpp_source_1l00086"/>00086 
<anchor xml:id="__x_base_8cpp_source_1l00095"/>00095 <emphasis role="keywordtype">void</emphasis>&#32;XBASE::Clean()
<anchor xml:id="__x_base_8cpp_source_1l00096"/>00096 {
<anchor xml:id="__x_base_8cpp_source_1l00097"/>00097 
<anchor xml:id="__x_base_8cpp_source_1l00098"/>00098 }
<anchor xml:id="__x_base_8cpp_source_1l00099"/>00099 
<anchor xml:id="__x_base_8cpp_source_1l00100"/>00100 
<anchor xml:id="__x_base_8cpp_source_1l00112"/><link linkend="__x_base_8cpp_1a21ecb6c60f0e1b4b6d53f1d4c85a8610">00112</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__x_base_8cpp_1a21ecb6c60f0e1b4b6d53f1d4c85a8610">Truncate</link>(<emphasis role="keywordtype">double</emphasis>&#32;value)
<anchor xml:id="__x_base_8cpp_source_1l00113"/>00113 {
<anchor xml:id="__x_base_8cpp_source_1l00114"/>00114 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;truncate&#32;=&#32;0;
<anchor xml:id="__x_base_8cpp_source_1l00115"/>00115 
<anchor xml:id="__x_base_8cpp_source_1l00116"/>00116 &#32;&#32;modf(value,&#32;&amp;truncate);
<anchor xml:id="__x_base_8cpp_source_1l00117"/>00117 
<anchor xml:id="__x_base_8cpp_source_1l00118"/>00118 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truncate;
<anchor xml:id="__x_base_8cpp_source_1l00119"/>00119 }
<anchor xml:id="__x_base_8cpp_source_1l00120"/>00120 
<anchor xml:id="__x_base_8cpp_source_1l00121"/>00121 
<anchor xml:id="__x_base_8cpp_source_1l00133"/><link linkend="__x_base_8cpp_1a1e8c9a80193adf0dd340ee3508b9889f">00133</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__x_base_8cpp_1a1e8c9a80193adf0dd340ee3508b9889f">Fraction</link>(<emphasis role="keywordtype">double</emphasis>&#32;value)
<anchor xml:id="__x_base_8cpp_source_1l00134"/>00134 {
<anchor xml:id="__x_base_8cpp_source_1l00135"/>00135 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;truncate&#32;=&#32;0;
<anchor xml:id="__x_base_8cpp_source_1l00136"/>00136 
<anchor xml:id="__x_base_8cpp_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;modf(value,&#32;&amp;truncate);
<anchor xml:id="__x_base_8cpp_source_1l00138"/>00138 }
<anchor xml:id="__x_base_8cpp_source_1l00139"/>00139 
<anchor xml:id="__x_base_8cpp_source_1l00140"/>00140 
<anchor xml:id="__x_base_8cpp_source_1l00153"/><link linkend="__x_base_8cpp_1a146e7682be9f853069a01842a0d2583d">00153</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__x_base_8cpp_1a146e7682be9f853069a01842a0d2583d">RoundOff</link>(<emphasis role="keywordtype">float</emphasis>&#32;value,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;prec)
<anchor xml:id="__x_base_8cpp_source_1l00154"/>00154 {
<anchor xml:id="__x_base_8cpp_source_1l00155"/>00155 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;BUILDER</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00156"/>00156 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0f;
<anchor xml:id="__x_base_8cpp_source_1l00157"/>00157 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00158"/>00158 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;pow_10&#32;=&#32;pow(10.0f,&#32;(<emphasis role="keywordtype">double</emphasis>)prec);
<anchor xml:id="__x_base_8cpp_source_1l00159"/>00159 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)(round(value&#32;*&#32;pow_10)&#32;/&#32;pow_10);
<anchor xml:id="__x_base_8cpp_source_1l00160"/>00160 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00161"/>00161 }
<anchor xml:id="__x_base_8cpp_source_1l00162"/>00162 
<anchor xml:id="__x_base_8cpp_source_1l00163"/>00163 
<anchor xml:id="__x_base_8cpp_source_1l00176"/><link linkend="__x_base_8cpp_1a9a58704393614ca320f7f8ba0c695ee2">00176</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__x_base_8cpp_1a146e7682be9f853069a01842a0d2583d">RoundOff</link>(<emphasis role="keywordtype">double</emphasis>&#32;value,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;prec)
<anchor xml:id="__x_base_8cpp_source_1l00177"/>00177 {
<anchor xml:id="__x_base_8cpp_source_1l00178"/>00178 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;BUILDER</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00179"/>00179 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0f;
<anchor xml:id="__x_base_8cpp_source_1l00180"/>00180 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00181"/>00181 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;pow_10&#32;=&#32;pow(10.0f,&#32;(<emphasis role="keywordtype">float</emphasis>)prec);
<anchor xml:id="__x_base_8cpp_source_1l00182"/>00182 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;round(value&#32;*&#32;pow_10)&#32;/&#32;pow_10;
<anchor xml:id="__x_base_8cpp_source_1l00183"/>00183 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00184"/>00184 }
<anchor xml:id="__x_base_8cpp_source_1l00185"/>00185 
<anchor xml:id="__x_base_8cpp_source_1l00186"/>00186 
<anchor xml:id="__x_base_8cpp_source_1l00198"/><link linkend="__x_base_8cpp_1a8c6720cc79460977a1880f7a7ef50b23">00198</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__x_base_8cpp_1a8c6720cc79460977a1880f7a7ef50b23">RoundFloat</link>(<emphasis role="keywordtype">float</emphasis>&#32;x)
<anchor xml:id="__x_base_8cpp_source_1l00199"/>00199 {
<anchor xml:id="__x_base_8cpp_source_1l00200"/>00200 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;float(x&#32;&gt;=&#32;0.0f&#32;?&#32;floor(x&#32;+&#32;0.5f)&#32;:&#32;ceil(x&#32;-&#32;0.5f));
<anchor xml:id="__x_base_8cpp_source_1l00201"/>00201 }
<anchor xml:id="__x_base_8cpp_source_1l00202"/>00202 
<anchor xml:id="__x_base_8cpp_source_1l00203"/>00203 
<anchor xml:id="__x_base_8cpp_source_1l00216"/><link linkend="__x_base_8cpp_1a935282594c57ece8181590e72e6e2ea5">00216</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__x_base_8cpp_1a935282594c57ece8181590e72e6e2ea5">AdjustFloat</link>(<emphasis role="keywordtype">float</emphasis>&#32;valor,&#32;<emphasis role="keywordtype">int</emphasis>&#32;decimals)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00217"/>00217 {
<anchor xml:id="__x_base_8cpp_source_1l00218"/>00218 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;factor&#32;=&#32;1.0f;
<anchor xml:id="__x_base_8cpp_source_1l00219"/>00219 &#32;&#32;
<anchor xml:id="__x_base_8cpp_source_1l00220"/>00220 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;decimals;&#32;++i)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_base_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;factor&#32;*=&#32;10.0f;
<anchor xml:id="__x_base_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_base_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;
<anchor xml:id="__x_base_8cpp_source_1l00225"/>00225 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;valorAjustado&#32;=&#32;(float)floor(valor&#32;*&#32;factor&#32;+&#32;0.5f)&#32;/&#32;factor;
<anchor xml:id="__x_base_8cpp_source_1l00226"/>00226 &#32;&#32;
<anchor xml:id="__x_base_8cpp_source_1l00227"/>00227 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;valorAjustado;
<anchor xml:id="__x_base_8cpp_source_1l00228"/>00228 }
<anchor xml:id="__x_base_8cpp_source_1l00229"/>00229 
<anchor xml:id="__x_base_8cpp_source_1l00230"/>00230 
<anchor xml:id="__x_base_8cpp_source_1l00243"/><link linkend="__x_base_8cpp_1a70cf67d0fe96e86e59ede009bb080adf">00243</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__x_base_8cpp_1a70cf67d0fe96e86e59ede009bb080adf">AdjustDouble</link>(<emphasis role="keywordtype">double</emphasis>&#32;valor,&#32;<emphasis role="keywordtype">int</emphasis>&#32;decimals)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00244"/>00244 {
<anchor xml:id="__x_base_8cpp_source_1l00245"/>00245 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor&#32;=&#32;1.0;
<anchor xml:id="__x_base_8cpp_source_1l00246"/>00246 
<anchor xml:id="__x_base_8cpp_source_1l00247"/>00247 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;decimals;&#32;++i)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_base_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;factor&#32;*=&#32;10.0;
<anchor xml:id="__x_base_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_base_8cpp_source_1l00251"/>00251 
<anchor xml:id="__x_base_8cpp_source_1l00252"/>00252 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;valorAjustado&#32;=&#32;floor(valor&#32;*&#32;factor&#32;+&#32;0.5)&#32;/&#32;factor;
<anchor xml:id="__x_base_8cpp_source_1l00253"/>00253 
<anchor xml:id="__x_base_8cpp_source_1l00254"/>00254 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;valorAjustado;
<anchor xml:id="__x_base_8cpp_source_1l00255"/>00255 }
<anchor xml:id="__x_base_8cpp_source_1l00256"/>00256 
<anchor xml:id="__x_base_8cpp_source_1l00257"/>00257 
<anchor xml:id="__x_base_8cpp_source_1l00269"/><link linkend="__x_base_8cpp_1a23d88e3333ad7d631f867c45dced3378">00269</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1a23d88e3333ad7d631f867c45dced3378">HighWORD</link>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00270"/>00270 {
<anchor xml:id="__x_base_8cpp_source_1l00271"/>00271 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((data&#32;&amp;&#32;0xFF00)&#32;&gt;&gt;&#32;8);
<anchor xml:id="__x_base_8cpp_source_1l00272"/>00272 }
<anchor xml:id="__x_base_8cpp_source_1l00273"/>00273 
<anchor xml:id="__x_base_8cpp_source_1l00274"/>00274 
<anchor xml:id="__x_base_8cpp_source_1l00286"/><link linkend="__x_base_8cpp_1ad7661023cb78f8b19678e5b69a8b769e">00286</link> <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;<link linkend="__x_base_8cpp_1ad7661023cb78f8b19678e5b69a8b769e">HighDWORD</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00287"/>00287 {
<anchor xml:id="__x_base_8cpp_source_1l00288"/>00288 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((data&#32;&amp;&#32;0xFFFF0000)&#32;&gt;&gt;&#32;16);
<anchor xml:id="__x_base_8cpp_source_1l00289"/>00289 }
<anchor xml:id="__x_base_8cpp_source_1l00290"/>00290 
<anchor xml:id="__x_base_8cpp_source_1l00291"/>00291 
<anchor xml:id="__x_base_8cpp_source_1l00303"/><link linkend="__x_base_8cpp_1ac11736a39c04a21fe2ff69c40e4521a2">00303</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__x_base_8cpp_1ac11736a39c04a21fe2ff69c40e4521a2">HighQWORD</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00304"/>00304 {
<anchor xml:id="__x_base_8cpp_source_1l00305"/>00305 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((data&#32;&amp;&#32;0xFFFFFFFF00000000)&#32;&gt;&gt;&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00306"/>00306 }
<anchor xml:id="__x_base_8cpp_source_1l00307"/>00307 
<anchor xml:id="__x_base_8cpp_source_1l00308"/>00308 
<anchor xml:id="__x_base_8cpp_source_1l00320"/><link linkend="__x_base_8cpp_1a15b7e37f5cc36ca070e667bedfb68507">00320</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1a15b7e37f5cc36ca070e667bedfb68507">LowWORD</link>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00321"/>00321 {
<anchor xml:id="__x_base_8cpp_source_1l00322"/>00322 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(data&#32;&amp;&#32;0x00FF);
<anchor xml:id="__x_base_8cpp_source_1l00323"/>00323 }
<anchor xml:id="__x_base_8cpp_source_1l00324"/>00324 
<anchor xml:id="__x_base_8cpp_source_1l00325"/>00325 
<anchor xml:id="__x_base_8cpp_source_1l00337"/><link linkend="__x_base_8cpp_1a65b5e0136e533d7346156c43aba9ce62">00337</link> <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;<link linkend="__x_base_8cpp_1a65b5e0136e533d7346156c43aba9ce62">LowDWORD</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00338"/>00338 {
<anchor xml:id="__x_base_8cpp_source_1l00339"/>00339 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)(data&#32;&amp;&#32;0x0000FFFF);
<anchor xml:id="__x_base_8cpp_source_1l00340"/>00340 }
<anchor xml:id="__x_base_8cpp_source_1l00341"/>00341 
<anchor xml:id="__x_base_8cpp_source_1l00342"/>00342 
<anchor xml:id="__x_base_8cpp_source_1l00354"/><link linkend="__x_base_8cpp_1a4885ae02c3b2e1eeaabb37f89ed1dcb3">00354</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__x_base_8cpp_1a4885ae02c3b2e1eeaabb37f89ed1dcb3">LowQWORD</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00355"/>00355 {
<anchor xml:id="__x_base_8cpp_source_1l00356"/>00356 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(data&#32;&amp;&#32;0x00000000FFFFFFFF);
<anchor xml:id="__x_base_8cpp_source_1l00357"/>00357 }
<anchor xml:id="__x_base_8cpp_source_1l00358"/>00358 
<anchor xml:id="__x_base_8cpp_source_1l00359"/>00359 
<anchor xml:id="__x_base_8cpp_source_1l00371"/><link linkend="__x_base_8cpp_1a4194dc6953f7f2e754c0ee59c30f500d">00371</link> <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;<link linkend="__x_base_8cpp_1a4194dc6953f7f2e754c0ee59c30f500d">SwapWORD</link>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00372"/>00372 {
<anchor xml:id="__x_base_8cpp_source_1l00373"/>00373 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;hi&#32;=&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)((data&amp;0xFF00)&gt;&gt;8);
<anchor xml:id="__x_base_8cpp_source_1l00374"/>00374 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;lo&#32;=&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)((data&amp;0x00FF)&lt;&lt;8);
<anchor xml:id="__x_base_8cpp_source_1l00375"/>00375 
<anchor xml:id="__x_base_8cpp_source_1l00376"/>00376 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)(hi|lo);
<anchor xml:id="__x_base_8cpp_source_1l00377"/>00377 }
<anchor xml:id="__x_base_8cpp_source_1l00378"/>00378 
<anchor xml:id="__x_base_8cpp_source_1l00379"/>00379 
<anchor xml:id="__x_base_8cpp_source_1l00391"/><link linkend="__x_base_8cpp_1a4d1da17fcb47e6bff9f2dbc0e680d593">00391</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__x_base_8cpp_1a4d1da17fcb47e6bff9f2dbc0e680d593">SwapDWORD</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00392"/>00392 {
<anchor xml:id="__x_base_8cpp_source_1l00393"/>00393 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;hi1&#32;=&#32;(data&amp;0xFF000000)&gt;&gt;24;
<anchor xml:id="__x_base_8cpp_source_1l00394"/>00394 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;lo1&#32;=&#32;(data&amp;0x00FF0000)&gt;&gt;8;
<anchor xml:id="__x_base_8cpp_source_1l00395"/>00395 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;hi2&#32;=&#32;(data&amp;0x0000FF00)&lt;&lt;8;
<anchor xml:id="__x_base_8cpp_source_1l00396"/>00396 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;lo2&#32;=&#32;(data&amp;0x000000FF)&lt;&lt;24;
<anchor xml:id="__x_base_8cpp_source_1l00397"/>00397 
<anchor xml:id="__x_base_8cpp_source_1l00398"/>00398 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(hi1|lo1|hi2|lo2);
<anchor xml:id="__x_base_8cpp_source_1l00399"/>00399 }
<anchor xml:id="__x_base_8cpp_source_1l00400"/>00400 
<anchor xml:id="__x_base_8cpp_source_1l00401"/>00401 
<anchor xml:id="__x_base_8cpp_source_1l00413"/><link linkend="__x_base_8cpp_1a51d327cd1dc2f2ae08c70596880dd85f">00413</link> <link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;<link linkend="__x_base_8cpp_1a51d327cd1dc2f2ae08c70596880dd85f">SwapQWORD</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00414"/>00414 {
<anchor xml:id="__x_base_8cpp_source_1l00415"/>00415 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;hi1&#32;=&#32;(data&amp;0xFF00000000000000ULL)&#32;&gt;&gt;&#32;(24&#32;+&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00416"/>00416 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;lo1&#32;=&#32;(data&amp;0x00FF000000000000ULL)&#32;&gt;&gt;&#32;(&#32;8&#32;+&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00417"/>00417 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;hi2&#32;=&#32;(data&amp;0x0000FF0000000000ULL)&#32;&gt;&gt;&#32;(&#32;&#32;&#32;&#32;&#32;24);
<anchor xml:id="__x_base_8cpp_source_1l00418"/>00418 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;lo2&#32;=&#32;(data&amp;0x000000FF00000000ULL)&#32;&gt;&gt;&#32;(&#32;&#32;&#32;&#32;&#32;&#32;8);
<anchor xml:id="__x_base_8cpp_source_1l00419"/>00419 
<anchor xml:id="__x_base_8cpp_source_1l00420"/>00420 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;hi3&#32;=&#32;(data&amp;0x00000000FF000000ULL)&#32;&lt;&lt;&#32;(&#32;&#32;&#32;&#32;&#32;&#32;8);
<anchor xml:id="__x_base_8cpp_source_1l00421"/>00421 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;lo3&#32;=&#32;(data&amp;0x0000000000FF0000ULL)&#32;&lt;&lt;&#32;(&#32;&#32;&#32;&#32;&#32;24);
<anchor xml:id="__x_base_8cpp_source_1l00422"/>00422 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;hi4&#32;=&#32;(data&amp;0x000000000000FF00ULL)&#32;&lt;&lt;&#32;(&#32;8&#32;+&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00423"/>00423 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;lo4&#32;=&#32;(data&amp;0x00000000000000FFULL)&#32;&lt;&lt;&#32;(24&#32;+&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00424"/>00424 
<anchor xml:id="__x_base_8cpp_source_1l00425"/>00425 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(hi1|lo1|hi2|lo2|hi3|lo3|hi4|lo4);
<anchor xml:id="__x_base_8cpp_source_1l00426"/>00426 }
<anchor xml:id="__x_base_8cpp_source_1l00427"/>00427 
<anchor xml:id="__x_base_8cpp_source_1l00428"/>00428 
<anchor xml:id="__x_base_8cpp_source_1l00440"/><link linkend="__x_base_8cpp_1a787b44cf0777f3c366cec5815d032f80">00440</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_base_8cpp_1a787b44cf0777f3c366cec5815d032f80">InvertSign</link>(<emphasis role="keywordtype">int</emphasis>&#32;number)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00441"/>00441 {
<anchor xml:id="__x_base_8cpp_source_1l00442"/>00442 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-number;
<anchor xml:id="__x_base_8cpp_source_1l00443"/>00443 }
<anchor xml:id="__x_base_8cpp_source_1l00444"/>00444 
<anchor xml:id="__x_base_8cpp_source_1l00445"/>00445 
<anchor xml:id="__x_base_8cpp_source_1l00457"/><link linkend="__x_base_8cpp_1a1025936b2f2fe4b550959e9c5efdd215">00457</link> <link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;<link linkend="__x_base_8cpp_1a1025936b2f2fe4b550959e9c5efdd215">DWORDToBCD</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;dword)
<anchor xml:id="__x_base_8cpp_source_1l00458"/>00458 {
<anchor xml:id="__x_base_8cpp_source_1l00459"/>00459 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;shift&#32;&#32;=&#32;16;
<anchor xml:id="__x_base_8cpp_source_1l00460"/>00460 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;result&#32;=&#32;(dword&#32;%&#32;10);
<anchor xml:id="__x_base_8cpp_source_1l00461"/>00461 
<anchor xml:id="__x_base_8cpp_source_1l00462"/>00462 &#32;&#32;<emphasis role="keywordflow">while</emphasis>((dword&#32;=&#32;(dword/10)))
<anchor xml:id="__x_base_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_base_8cpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;+=&#32;(dword&#32;%&#32;10)&#32;*&#32;shift;
<anchor xml:id="__x_base_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;shift&#32;*=&#32;16;&#32;<emphasis role="comment">//&#32;weirdly,&#32;it&apos;s&#32;not&#32;possible&#32;to&#32;left&#32;shift&#32;more&#32;than&#32;32&#32;bits</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_base_8cpp_source_1l00467"/>00467 
<anchor xml:id="__x_base_8cpp_source_1l00468"/>00468 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__x_base_8cpp_source_1l00469"/>00469 }
<anchor xml:id="__x_base_8cpp_source_1l00470"/>00470 
<anchor xml:id="__x_base_8cpp_source_1l00471"/>00471 
<anchor xml:id="__x_base_8cpp_source_1l00483"/><link linkend="__x_base_8cpp_1a0753543168ac34a96fde804e0c16e028">00483</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__x_base_8cpp_1a0753543168ac34a96fde804e0c16e028">BCDToDWORD</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;bcd)
<anchor xml:id="__x_base_8cpp_source_1l00484"/>00484 {
<anchor xml:id="__x_base_8cpp_source_1l00485"/>00485 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;mask&#32;=&#32;0x000f;
<anchor xml:id="__x_base_8cpp_source_1l00486"/>00486 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;pwr&#32;&#32;=&#32;1;
<anchor xml:id="__x_base_8cpp_source_1l00487"/>00487 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;i&#32;&#32;&#32;&#32;=&#32;(bcd&#32;&amp;&#32;mask);
<anchor xml:id="__x_base_8cpp_source_1l00488"/>00488 
<anchor xml:id="__x_base_8cpp_source_1l00489"/>00489 &#32;&#32;<emphasis role="keywordflow">while</emphasis>((bcd&#32;=&#32;(bcd&#32;&gt;&gt;&#32;4)))
<anchor xml:id="__x_base_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_base_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;pwr&#32;*=&#32;10;
<anchor xml:id="__x_base_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;(bcd&#32;&amp;&#32;mask)&#32;*&#32;pwr;
<anchor xml:id="__x_base_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_base_8cpp_source_1l00494"/>00494 
<anchor xml:id="__x_base_8cpp_source_1l00495"/>00495 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)i;
<anchor xml:id="__x_base_8cpp_source_1l00496"/>00496 }
<anchor xml:id="__x_base_8cpp_source_1l00497"/>00497 
<anchor xml:id="__x_base_8cpp_source_1l00498"/>00498 
<anchor xml:id="__x_base_8cpp_source_1l00510"/><link linkend="__x_base_8cpp_1af51d424a2bede3b7c2d3c2d32f85f727">00510</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1af51d424a2bede3b7c2d3c2d32f85f727">RotateBitLeft</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<emphasis role="keywordtype">byte</emphasis>)
<anchor xml:id="__x_base_8cpp_source_1l00511"/>00511 {
<anchor xml:id="__x_base_8cpp_source_1l00512"/>00512 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&lt;&lt;&#32;1)&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&gt;&gt;&#32;7);
<anchor xml:id="__x_base_8cpp_source_1l00513"/>00513 }
<anchor xml:id="__x_base_8cpp_source_1l00514"/>00514 
<anchor xml:id="__x_base_8cpp_source_1l00515"/>00515 
<anchor xml:id="__x_base_8cpp_source_1l00527"/><link linkend="__x_base_8cpp_1a57c5321ef9a5b1a0684d9db13a483968">00527</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1a57c5321ef9a5b1a0684d9db13a483968">RotateBitRight</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<emphasis role="keywordtype">byte</emphasis>)
<anchor xml:id="__x_base_8cpp_source_1l00528"/>00528 {
<anchor xml:id="__x_base_8cpp_source_1l00529"/>00529 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&gt;&gt;&#32;1)&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&lt;&lt;&#32;7);
<anchor xml:id="__x_base_8cpp_source_1l00530"/>00530 }
<anchor xml:id="__x_base_8cpp_source_1l00531"/>00531 
<anchor xml:id="__x_base_8cpp_source_1l00532"/>00532 
<anchor xml:id="__x_base_8cpp_source_1l00544"/><link linkend="__x_base_8cpp_1ac3f6d41c295a645e22b168a1beded217">00544</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1ac3f6d41c295a645e22b168a1beded217">RotateBitReverse</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<emphasis role="keywordtype">byte</emphasis>)
<anchor xml:id="__x_base_8cpp_source_1l00545"/>00545 {
<anchor xml:id="__x_base_8cpp_source_1l00546"/>00546 &#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0xF0)&#32;&gt;&gt;&#32;4&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0x0F)&#32;&lt;&lt;&#32;4;
<anchor xml:id="__x_base_8cpp_source_1l00547"/>00547 &#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0xCC)&#32;&gt;&gt;&#32;2&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0x33)&#32;&lt;&lt;&#32;2;
<anchor xml:id="__x_base_8cpp_source_1l00548"/>00548 &#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0xAA)&#32;&gt;&gt;&#32;1&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0x55)&#32;&lt;&lt;&#32;1;
<anchor xml:id="__x_base_8cpp_source_1l00549"/>00549 
<anchor xml:id="__x_base_8cpp_source_1l00550"/>00550 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;byte;
<anchor xml:id="__x_base_8cpp_source_1l00551"/>00551 }
<anchor xml:id="__x_base_8cpp_source_1l00552"/>00552 
<anchor xml:id="__x_base_8cpp_source_1l00553"/>00553 
<anchor xml:id="__x_base_8cpp_source_1l00554"/>00554 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00555"/>00555 
</programlisting></section>
