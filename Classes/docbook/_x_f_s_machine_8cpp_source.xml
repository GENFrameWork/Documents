<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_f_s_machine_8cpp_source" xml:lang="en-US">
<title>XFSMachine.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XFSMachine.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_f_s_machine_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_f_s_machine_8h">XFSMachine.h</link>&quot;</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00047"/>00047 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00048"/>00048 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00049"/>00049 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00053"/>00053 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00054"/>00054 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00055"/>00055 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00057"/>00057 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_XFSMACHINESTATE</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00060"/>00060 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00061"/>00061 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00062"/>00062 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00073"/><link linkend="_group___x_u_t_i_l_s_1ga21a6529ba99a20c141f9105c65be34a1">00073</link> <link linkend="_group___x_u_t_i_l_s_1ga21a6529ba99a20c141f9105c65be34a1">XFSMACHINESTATE::XFSMACHINESTATE</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ntransitions)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00074"/>00074 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00075"/>00075 &#32;&#32;Clean();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00076"/>00076 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00077"/>00077 &#32;&#32;this-&gt;maxtransitions&#32;=&#32;ntransitions?ntransitions:1;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00078"/>00078 &#32;&#32;this-&gt;stateID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;stateID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00079"/>00079 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00080"/>00080 &#32;&#32;inputs&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00081"/>00081 &#32;&#32;outputstates&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00082"/>00082 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00083"/>00083 &#32;&#32;inputs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[this-&gt;maxtransitions];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00084"/>00084 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!inputs)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00085"/>00085 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00086"/>00086 &#32;&#32;outputstates&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[this-&gt;maxtransitions];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00087"/>00087 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outputstates)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;inputs;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00092"/>00092 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00093"/>00093 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;this-&gt;maxtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;outputstates[c]&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00098"/>00098 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00099"/>00099 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00100"/>00100 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00109"/><link linkend="_group___x_u_t_i_l_s_1gacf6e7c4291caa7bcfa535c85ad20afde">00109</link> <link linkend="_group___x_u_t_i_l_s_1gacf6e7c4291caa7bcfa535c85ad20afde">XFSMACHINESTATE::~XFSMACHINESTATE</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00110"/>00110 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00111"/>00111 &#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;inputs;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00112"/>00112 &#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;outputstates;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00113"/>00113 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00114"/>00114 &#32;&#32;Clean();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00115"/>00115 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00116"/>00116 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00117"/>00117 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00127"/><link linkend="_group___x_u_t_i_l_s_1ga9445c1c1a8d0e33f7a8421d5a61344ef">00127</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga9445c1c1a8d0e33f7a8421d5a61344ef">XFSMACHINESTATE::GetID</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00128"/>00128 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00129"/>00129 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stateID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00130"/>00130 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00131"/>00131 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00132"/>00132 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00145"/><link linkend="_group___x_u_t_i_l_s_1ga7294d80066582ecc24576887038faa6c">00145</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga7294d80066582ecc24576887038faa6c">XFSMACHINESTATE::AddTransition</link>(<emphasis role="keywordtype">int</emphasis>&#32;input,<emphasis role="keywordtype">int</emphasis>&#32;outputID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00146"/>00146 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00147"/>00147 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00148"/>00148 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00149"/>00149 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(c=0;c&lt;maxtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outputstates[c])&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00153"/>00153 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00154"/>00154 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(c&lt;maxtransitions)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;outputstates[c]&#32;=&#32;outputID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;input;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00158"/>00158 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00161"/>00161 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00162"/>00162 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00163"/>00163 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00164"/>00164 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00165"/>00165 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00177"/><link linkend="_group___x_u_t_i_l_s_1gaadfffca2012364631ecb94cec8cb149e">00177</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gaadfffca2012364631ecb94cec8cb149e">XFSMACHINESTATE::GetOutput</link>(<emphasis role="keywordtype">int</emphasis>&#32;input)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00178"/>00178 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00179"/>00179 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;outputID&#32;=&#32;stateID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00180"/>00180 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00181"/>00181 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;maxtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outputstates[c])&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00184"/>00184 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(input&#32;==&#32;inputs[c])
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outputID&#32;=&#32;outputstates[c];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00191"/>00191 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00192"/>00192 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(outputID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00193"/>00193 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00194"/>00194 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00195"/>00195 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00207"/><link linkend="_group___x_u_t_i_l_s_1gaf9246ded7403844dad2368f11af15541">00207</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gaf9246ded7403844dad2368f11af15541">XFSMACHINESTATE::DeleteTransition</link>(<emphasis role="keywordtype">int</emphasis>&#32;outputID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00208"/>00208 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00209"/>00209 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00210"/>00210 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00211"/>00211 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(c=0;c&lt;maxtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(outputstates[c]==outputID)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00215"/>00215 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00216"/>00216 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(c&gt;=maxtransitions)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00217"/>00217 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00218"/>00218 &#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00219"/>00219 &#32;&#32;outputstates[c]&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00220"/>00220 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00221"/>00221 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(;c&lt;(maxtransitions-1);c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outputstates[c])&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00224"/>00224 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;inputs[c+1];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;outputstates[c]&#32;=&#32;outputstates[c+1];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00228"/>00228 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00229"/>00229 &#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00230"/>00230 &#32;&#32;outputstates[c]&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00231"/>00231 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00232"/>00232 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00233"/>00233 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00234"/>00234 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00235"/>00235 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00244"/>00244 <emphasis role="keywordtype">void</emphasis>&#32;XFSMACHINESTATE::Clean()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00245"/>00245 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00246"/>00246 &#32;&#32;stateID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00247"/>00247 &#32;&#32;maxtransitions&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00248"/>00248 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00249"/>00249 &#32;&#32;inputs&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00250"/>00250 &#32;&#32;outputstates&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00251"/>00251 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00252"/>00252 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00253"/>00253 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00254"/>00254 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00255"/>00255 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00256"/>00256 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00257"/>00257 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_XFSMACHINE</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00258"/>00258 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00259"/>00259 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00269"/><link linkend="_group___x_u_t_i_l_s_1gabdea3dd151898971bb9485705d225298">00269</link> <link linkend="_group___x_u_t_i_l_s_1gabdea3dd151898971bb9485705d225298">XFSMACHINE::XFSMACHINE</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00270"/>00270 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00271"/>00271 &#32;&#32;Clean();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00272"/>00272 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00273"/>00273 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gabcbc6f518f88c8968722d3b4ed2b16bc">SetCurrentState</link>(stateID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00274"/>00274 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00275"/>00275 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00276"/>00276 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00285"/><link linkend="_group___x_u_t_i_l_s_1gaaf17f7ea7f6573b2bcbe82e55819177b">00285</link> <link linkend="_group___x_u_t_i_l_s_1gaaf17f7ea7f6573b2bcbe82e55819177b">XFSMACHINE::~XFSMACHINE</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00286"/>00286 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00287"/>00287 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga366258d1f60a2dc6591dd164267e2b21">DeleteAllStates</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00288"/>00288 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00289"/>00289 &#32;&#32;Clean();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00290"/>00290 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00291"/>00291 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00292"/>00292 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00302"/><link linkend="_group___x_u_t_i_l_s_1gae7a2cc2cad190a10cb7154ff24c0609e">00302</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gae7a2cc2cad190a10cb7154ff24c0609e">XFSMACHINE::GetEvent</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00303"/>00303 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00304"/>00304 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fsmevent;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00305"/>00305 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00306"/>00306 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00307"/>00307 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00319"/><link linkend="_group___x_u_t_i_l_s_1ga9cfb136fd0f76df9b29a7d7bbeadd30a">00319</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga9cfb136fd0f76df9b29a7d7bbeadd30a">XFSMACHINE::SetEvent</link>(<emphasis role="keywordtype">int</emphasis>&#32;event)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00320"/>00320 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00321"/>00321 &#32;&#32;fsmevent&#32;=&#32;event;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00322"/>00322 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00323"/>00323 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00324"/>00324 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00325"/>00325 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00326"/>00326 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00336"/><link linkend="_group___x_u_t_i_l_s_1ga02082325b435cf97f6b4c03a48cdfe86">00336</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga02082325b435cf97f6b4c03a48cdfe86">XFSMACHINE::GetCurrentState</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00337"/>00337 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00338"/>00338 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;currentstate;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00339"/>00339 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00340"/>00340 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00341"/>00341 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00351"/><link linkend="_group___x_u_t_i_l_s_1gabcbc6f518f88c8968722d3b4ed2b16bc">00351</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gabcbc6f518f88c8968722d3b4ed2b16bc">XFSMACHINE::SetCurrentState</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00352"/>00352 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00353"/>00353 &#32;&#32;currentstate&#32;=&#32;stateID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00354"/>00354 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00355"/>00355 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00356"/>00356 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00368"/><link linkend="_group___x_u_t_i_l_s_1ga1f143ce7a2981c7756db2ff798b34ca5">00368</link> <link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;<link linkend="_group___x_u_t_i_l_s_1ga1f143ce7a2981c7756db2ff798b34ca5">XFSMACHINE::GetState</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00369"/>00369 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00370"/>00370 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;state&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00371"/>00371 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(map.<link linkend="_class_x_m_a_p_1a5167609eddf3d655a9d17c052372a70a">IsEmpty</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00372"/>00372 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00373"/>00373 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;map.<link linkend="_class_x_m_a_p_1af059da1bdb01f7efce7faf5abf454d9c">Find</link>(stateID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00374"/>00374 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(index==-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00375"/>00375 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00376"/>00376 &#32;&#32;state&#32;=&#32;map.<link linkend="_class_x_m_a_p_1a7b4332f4b7696dd7da952cc17fe7c255">GetElement</link>(index);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00377"/>00377 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00378"/>00378 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00379"/>00379 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00380"/>00380 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00381"/>00381 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00393"/><link linkend="_group___x_u_t_i_l_s_1gae678dcfeb2f9d70b6f7c9d4a367c861e">00393</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gae678dcfeb2f9d70b6f7c9d4a367c861e">XFSMACHINE::AddState</link>(<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;state)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00394"/>00394 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00395"/>00395 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group___x_u_t_i_l_s_1ga1f143ce7a2981c7756db2ff798b34ca5">GetState</link>(state-&gt;<link linkend="_group___x_u_t_i_l_s_1ga9445c1c1a8d0e33f7a8421d5a61344ef">GetID</link>()))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00396"/>00396 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00397"/>00397 &#32;&#32;map.<link linkend="_class_x_m_a_p_1a6dd238dccfceb726042b588a23107318">Add</link>(state-&gt;<link linkend="_group___x_u_t_i_l_s_1ga9445c1c1a8d0e33f7a8421d5a61344ef">GetID</link>(),&#32;state);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00398"/>00398 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00399"/>00399 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00400"/>00400 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00401"/>00401 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00402"/>00402 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00417"/><link linkend="_group___x_u_t_i_l_s_1gad4515503131530debbca11eaab86c791">00417</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gae678dcfeb2f9d70b6f7c9d4a367c861e">XFSMACHINE::AddState</link>(<emphasis role="keywordtype">int</emphasis>&#32;state,&#32;<emphasis role="keywordtype">int</emphasis>&#32;event,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tostate,...)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00418"/>00418 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00419"/>00419 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;_state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00420"/>00420 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;narg&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00421"/>00421 &#32;&#32;va_list&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00422"/>00422 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00423"/>00423 &#32;&#32;va_start(arg,&#32;tostate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00424"/>00424 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(va_arg(arg,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;!=&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;narg++;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00428"/>00428 &#32;&#32;va_end(arg);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00429"/>00429 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00430"/>00430 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((narg)&amp;&amp;(narg%2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00431"/>00431 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00432"/>00432 &#32;&#32;narg+=2;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00433"/>00433 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00434"/>00434 &#32;&#32;_state&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>(state,(narg/2));
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00435"/>00435 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00436"/>00436 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00437"/>00437 &#32;&#32;_state-&gt;<link linkend="_group___x_u_t_i_l_s_1ga7294d80066582ecc24576887038faa6c">AddTransition</link>(event,tostate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00438"/>00438 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00439"/>00439 &#32;&#32;va_start(arg,tostate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00440"/>00440 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00441"/>00441 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_event;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00442"/>00442 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_tostate;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00443"/>00443 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00444"/>00444 &#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;_event&#32;&#32;&#32;=&#32;va_arg(arg,&#32;<emphasis role="keywordtype">int</emphasis>);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_event&#32;!=&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_tostate&#32;=&#32;va_arg(arg,&#32;<emphasis role="keywordtype">int</emphasis>);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_state-&gt;<link linkend="_group___x_u_t_i_l_s_1ga7294d80066582ecc24576887038faa6c">AddTransition</link>(_event,_tostate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00450"/>00450 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(_event&#32;!=&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00452"/>00452 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00453"/>00453 &#32;&#32;va_end(arg);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00454"/>00454 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00455"/>00455 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1gae678dcfeb2f9d70b6f7c9d4a367c861e">AddState</link>(_state))
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00460"/>00460 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00461"/>00461 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00462"/>00462 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00463"/>00463 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00464"/>00464 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00477"/><link linkend="_group___x_u_t_i_l_s_1gad474a64df436fe226fa30b2765fc2d32">00477</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gad474a64df436fe226fa30b2765fc2d32">XFSMACHINE::AddSecuencialStates</link>(<emphasis role="keywordtype">int</emphasis>&#32;state,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxsecuencialtransitions)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00478"/>00478 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00479"/>00479 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;_state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00480"/>00480 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00481"/>00481 &#32;&#32;_state&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>(state,maxsecuencialtransitions);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00482"/>00482 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00483"/>00483 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00484"/>00484 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;maxsecuencialtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;_state-&gt;<link linkend="_group___x_u_t_i_l_s_1ga7294d80066582ecc24576887038faa6c">AddTransition</link>(c,c);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00488"/>00488 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00489"/>00489 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___x_u_t_i_l_s_1gae678dcfeb2f9d70b6f7c9d4a367c861e">AddState</link>(_state))
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00494"/>00494 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00495"/>00495 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00496"/>00496 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00497"/>00497 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00498"/>00498 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00510"/><link linkend="_group___x_u_t_i_l_s_1ga4ed6cafa4114805eb2a7d5d5954c3da3">00510</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga4ed6cafa4114805eb2a7d5d5954c3da3">XFSMACHINE::DeleteState</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00511"/>00511 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00512"/>00512 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;state&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1ga1f143ce7a2981c7756db2ff798b34ca5">GetState</link>(stateID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00513"/>00513 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00514"/>00514 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00515"/>00515 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00516"/>00516 &#32;&#32;map.<link linkend="_class_x_m_a_p_1a9a42f1022bfb432e31ff1c3df7a81bf2">Delete</link>(stateID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00517"/>00517 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00518"/>00518 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00519"/>00519 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00520"/>00520 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00521"/>00521 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00522"/>00522 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00523"/>00523 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00533"/><link linkend="_group___x_u_t_i_l_s_1ga366258d1f60a2dc6591dd164267e2b21">00533</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga366258d1f60a2dc6591dd164267e2b21">XFSMACHINE::DeleteAllStates</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00534"/>00534 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00535"/>00535 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(map.<link linkend="_class_x_m_a_p_1a5167609eddf3d655a9d17c052372a70a">IsEmpty</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00536"/>00536 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00537"/>00537 &#32;&#32;map.<link linkend="_class_x_m_a_p_1a6b45f14c95691399c7e16b65a2c043db">DeleteElementContents</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00538"/>00538 &#32;&#32;map.<link linkend="_class_x_m_a_p_1a02e7b8a15144553d81f2e8ec217845f6">DeleteAll</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00539"/>00539 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00540"/>00540 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00541"/>00541 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00542"/>00542 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00543"/>00543 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00555"/><link linkend="_group___x_u_t_i_l_s_1ga4e991bedff5697fb8ab9d00ac52e4398">00555</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga4e991bedff5697fb8ab9d00ac52e4398">XFSMACHINE::StateTransition</link>(<emphasis role="keywordtype">int</emphasis>&#32;input)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00556"/>00556 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00557"/>00557 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;&#32;state&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1ga1f143ce7a2981c7756db2ff798b34ca5">GetState</link>(currentstate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00558"/>00558 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00559"/>00559 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!state)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00560"/>00560 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;currentstate&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;currentstate;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00564"/>00564 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00565"/>00565 &#32;&#32;currentstate&#32;=&#32;state-&gt;<link linkend="_group___x_u_t_i_l_s_1gaadfffca2012364631ecb94cec8cb149e">GetOutput</link>(input);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00566"/>00566 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00567"/>00567 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;currentstate;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00568"/>00568 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00569"/>00569 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00570"/>00570 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00582"/><link linkend="_group___x_u_t_i_l_s_1ga8210bbf1532d9f6a916d4b2204f04318">00582</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga412a55c723675c56ccd9050cf353c757">XFSMACHINE::CheckTransition</link>(<emphasis role="keywordtype">int</emphasis>&amp;&#32;event)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00583"/>00583 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00584"/>00584 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;state&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1ga02082325b435cf97f6b4c03a48cdfe86">GetCurrentState</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00585"/>00585 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00586"/>00586 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tevent&#32;=&#32;(int)<link linkend="_group___x_u_t_i_l_s_1gae7a2cc2cad190a10cb7154ff24c0609e">GetEvent</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00587"/>00587 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00588"/>00588 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga4e991bedff5697fb8ab9d00ac52e4398">StateTransition</link>(<link linkend="_group___x_u_t_i_l_s_1gae7a2cc2cad190a10cb7154ff24c0609e">GetEvent</link>());
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00589"/>00589 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00590"/>00590 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga9cfb136fd0f76df9b29a7d7bbeadd30a">SetEvent</link>(0);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00591"/>00591 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00592"/>00592 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group___x_u_t_i_l_s_1ga02082325b435cf97f6b4c03a48cdfe86">GetCurrentState</link>()==state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00593"/>00593 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00594"/>00594 &#32;&#32;<emphasis role="keyword">event</emphasis>&#32;=&#32;tevent;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00595"/>00595 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00596"/>00596 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00597"/>00597 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00598"/>00598 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00599"/>00599 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00609"/><link linkend="_group___x_u_t_i_l_s_1ga412a55c723675c56ccd9050cf353c757">00609</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga412a55c723675c56ccd9050cf353c757">XFSMACHINE::CheckTransition</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00610"/>00610 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00611"/>00611 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;state&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1ga02082325b435cf97f6b4c03a48cdfe86">GetCurrentState</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00612"/>00612 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00613"/>00613 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga4e991bedff5697fb8ab9d00ac52e4398">StateTransition</link>(<link linkend="_group___x_u_t_i_l_s_1gae7a2cc2cad190a10cb7154ff24c0609e">GetEvent</link>());
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00614"/>00614 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00615"/>00615 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga9cfb136fd0f76df9b29a7d7bbeadd30a">SetEvent</link>(0);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00616"/>00616 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00617"/>00617 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_group___x_u_t_i_l_s_1ga02082325b435cf97f6b4c03a48cdfe86">GetCurrentState</link>()==state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00618"/>00618 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00619"/>00619 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00620"/>00620 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00621"/>00621 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00622"/>00622 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00631"/>00631 <emphasis role="keywordtype">void</emphasis>&#32;XFSMACHINE::Clean()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00632"/>00632 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00633"/>00633 &#32;&#32;fsmevent&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00634"/>00634 &#32;&#32;currentstate&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00635"/>00635 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00636"/>00636 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00637"/>00637 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00638"/>00638 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00639"/>00639 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00640"/>00640 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00641"/>00641 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00642"/>00642 
</programlisting></section>
