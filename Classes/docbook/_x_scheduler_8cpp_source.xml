<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_scheduler_8cpp_source" xml:lang="en-US">
<title>XScheduler.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XScheduler.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_scheduler_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_scheduler_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_scheduler_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_scheduler_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_scheduler_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_scheduler_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_scheduler_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_scheduler_8h">XScheduler.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_scheduler_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_sleep_8h">XSleep.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_thread_8h">XThread.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_date_time_8h">XDateTime.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_timer_8h">XTimer.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00048"/>00048 
<anchor xml:id="__x_scheduler_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_scheduler___x_event_8h">XScheduler_XEvent.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00050"/>00050 
<anchor xml:id="__x_scheduler_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00052"/>00052 
<anchor xml:id="__x_scheduler_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00054"/>00054 
<anchor xml:id="__x_scheduler_8cpp_source_1l00055"/>00055 
<anchor xml:id="__x_scheduler_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_scheduler_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00060"/>00060 
<anchor xml:id="__x_scheduler_8cpp_source_1l00061"/>00061 
<anchor xml:id="__x_scheduler_8cpp_source_1l00062"/>00062 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00064"/>00064 
<anchor xml:id="__x_scheduler_8cpp_source_1l00065"/>00065 
<anchor xml:id="__x_scheduler_8cpp_source_1l00066"/>00066 <emphasis role="preprocessor">#pragma&#32;regionemphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00067"/>00067 
<anchor xml:id="__x_scheduler_8cpp_source_1l00068"/>00068 
<anchor xml:id="__x_scheduler_8cpp_source_1l00078"/><link linkend="_group___x_u_t_i_l_s_1ga3c83e14b14fae636b1af1588bad031e2">00078</link> <link linkend="_group___x_u_t_i_l_s_1ga3c83e14b14fae636b1af1588bad031e2">XSCHEDULERTASK::XSCHEDULERTASK</link>(<link linkend="_class_x_s_c_h_e_d_u_l_e_r">XSCHEDULER</link>*&#32;xscheduler)
<anchor xml:id="__x_scheduler_8cpp_source_1l00079"/>00079 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00080"/>00080 &#32;&#32;Clean();
<anchor xml:id="__x_scheduler_8cpp_source_1l00081"/>00081 
<anchor xml:id="__x_scheduler_8cpp_source_1l00082"/>00082 &#32;&#32;this-&gt;xscheduler&#32;&#32;=&#32;xscheduler;
<anchor xml:id="__x_scheduler_8cpp_source_1l00083"/>00083 
<anchor xml:id="__x_scheduler_8cpp_source_1l00084"/>00084 &#32;&#32;GEN_XFACTORY_CREATE(xtimer,&#32;CreateTimer())
<anchor xml:id="__x_scheduler_8cpp_source_1l00085"/>00085 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00086"/>00086 
<anchor xml:id="__x_scheduler_8cpp_source_1l00087"/>00087 
<anchor xml:id="__x_scheduler_8cpp_source_1l00096"/><link linkend="_group___x_u_t_i_l_s_1gaf67177c43f61dc34bb4b0282623b68e4">00096</link> <link linkend="_group___x_u_t_i_l_s_1gaf67177c43f61dc34bb4b0282623b68e4">XSCHEDULERTASK::~XSCHEDULERTASK</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00097"/>00097 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00098"/>00098 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xtimer)
<anchor xml:id="__x_scheduler_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.DeleteTimer(xtimer);
<anchor xml:id="__x_scheduler_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;xtimer&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00103"/>00103 
<anchor xml:id="__x_scheduler_8cpp_source_1l00104"/>00104 &#32;&#32;Clean();
<anchor xml:id="__x_scheduler_8cpp_source_1l00105"/>00105 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00106"/>00106 
<anchor xml:id="__x_scheduler_8cpp_source_1l00107"/>00107 
<anchor xml:id="__x_scheduler_8cpp_source_1l00117"/><link linkend="_group___x_u_t_i_l_s_1ga0c0ca6b68b1f02d867815a50a39646f3">00117</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga0c0ca6b68b1f02d867815a50a39646f3">XSCHEDULERTASK::IsActive</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00118"/>00118 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00119"/>00119 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;active;
<anchor xml:id="__x_scheduler_8cpp_source_1l00120"/>00120 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00121"/>00121 
<anchor xml:id="__x_scheduler_8cpp_source_1l00122"/>00122 
<anchor xml:id="__x_scheduler_8cpp_source_1l00134"/><link linkend="_group___x_u_t_i_l_s_1ga5e59c92a4529f014a9e9db4b9761586d">00134</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga5e59c92a4529f014a9e9db4b9761586d">XSCHEDULERTASK::SetIsActive</link>(<emphasis role="keywordtype">bool</emphasis>&#32;active)
<anchor xml:id="__x_scheduler_8cpp_source_1l00135"/>00135 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00136"/>00136 &#32;&#32;this-&gt;active&#32;&#32;=&#32;active;
<anchor xml:id="__x_scheduler_8cpp_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xtimer)&#32;xtimer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00138"/>00138 
<anchor xml:id="__x_scheduler_8cpp_source_1l00139"/>00139 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00140"/>00140 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00141"/>00141 
<anchor xml:id="__x_scheduler_8cpp_source_1l00142"/>00142 
<anchor xml:id="__x_scheduler_8cpp_source_1l00152"/><link linkend="_group___x_u_t_i_l_s_1ga498bc0307b75f7e5d8ac1fbba9cfe3a0">00152</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___x_u_t_i_l_s_1ga498bc0307b75f7e5d8ac1fbba9cfe3a0">XSCHEDULERTASK::GetID</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00153"/>00153 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00154"/>00154 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ID;
<anchor xml:id="__x_scheduler_8cpp_source_1l00155"/>00155 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00156"/>00156 
<anchor xml:id="__x_scheduler_8cpp_source_1l00157"/>00157 
<anchor xml:id="__x_scheduler_8cpp_source_1l00167"/><link linkend="_group___x_u_t_i_l_s_1ga59e7fe9c868a162daf2d37d7e637b7da">00167</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga59e7fe9c868a162daf2d37d7e637b7da">XSCHEDULERTASK::SetID</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;ID)
<anchor xml:id="__x_scheduler_8cpp_source_1l00168"/>00168 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00169"/>00169 &#32;&#32;this-&gt;ID&#32;=&#32;ID;
<anchor xml:id="__x_scheduler_8cpp_source_1l00170"/>00170 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00171"/>00171 
<anchor xml:id="__x_scheduler_8cpp_source_1l00172"/>00172 
<anchor xml:id="__x_scheduler_8cpp_source_1l00182"/><link linkend="_group___x_u_t_i_l_s_1gacb32be07ce22adbf4202fc2a5b24bd2b">00182</link> <link linkend="_class_x_t_i_m_e_r">XTIMER</link>*&#32;<link linkend="_group___x_u_t_i_l_s_1gacb32be07ce22adbf4202fc2a5b24bd2b">XSCHEDULERTASK::GetXTimer</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00183"/>00183 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00184"/>00184 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xtimer;
<anchor xml:id="__x_scheduler_8cpp_source_1l00185"/>00185 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00186"/>00186 
<anchor xml:id="__x_scheduler_8cpp_source_1l00187"/>00187 
<anchor xml:id="__x_scheduler_8cpp_source_1l00197"/><link linkend="_group___x_u_t_i_l_s_1gae6e303ed6f4b28c29ee3cd460cefb579">00197</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gae6e303ed6f4b28c29ee3cd460cefb579">XSCHEDULERTASK::IsInValidTimeLimit</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00198"/>00198 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00199"/>00199 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;isinvalidtimelimit;
<anchor xml:id="__x_scheduler_8cpp_source_1l00200"/>00200 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00201"/>00201 
<anchor xml:id="__x_scheduler_8cpp_source_1l00202"/>00202 
<anchor xml:id="__x_scheduler_8cpp_source_1l00212"/><link linkend="_group___x_u_t_i_l_s_1ga813d4d77716e4f29dd43dc2fb80e2bc8">00212</link> <link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;<link linkend="_group___x_u_t_i_l_s_1ga813d4d77716e4f29dd43dc2fb80e2bc8">XSCHEDULERTASK::GetTimeLimitStart</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00213"/>00213 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00214"/>00214 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;xdatetimelimitstart;
<anchor xml:id="__x_scheduler_8cpp_source_1l00215"/>00215 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00216"/>00216 
<anchor xml:id="__x_scheduler_8cpp_source_1l00217"/>00217 
<anchor xml:id="__x_scheduler_8cpp_source_1l00227"/><link linkend="_group___x_u_t_i_l_s_1ga0d4263262236612d90295fc2b82e87ff">00227</link> <link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;<link linkend="_group___x_u_t_i_l_s_1ga0d4263262236612d90295fc2b82e87ff">XSCHEDULERTASK::GetTimeLimitEnd</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00228"/>00228 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00229"/>00229 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;xdatetimelimitend;
<anchor xml:id="__x_scheduler_8cpp_source_1l00230"/>00230 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00231"/>00231 
<anchor xml:id="__x_scheduler_8cpp_source_1l00232"/>00232 
<anchor xml:id="__x_scheduler_8cpp_source_1l00242"/><link linkend="_group___x_u_t_i_l_s_1gaf16de4822e4c13f0daa0b742054c7cf8">00242</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gaf16de4822e4c13f0daa0b742054c7cf8">XSCHEDULERTASK::IsCyclic</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00243"/>00243 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00244"/>00244 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(!ncyclestodo)?<emphasis role="keyword">false</emphasis>:<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00245"/>00245 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00246"/>00246 
<anchor xml:id="__x_scheduler_8cpp_source_1l00247"/>00247 
<anchor xml:id="__x_scheduler_8cpp_source_1l00257"/><link linkend="_group___x_u_t_i_l_s_1ga62d17b0a69f9328316498039b95112ff">00257</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga62d17b0a69f9328316498039b95112ff">XSCHEDULERTASK::GetNCyclesTodo</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00258"/>00258 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00259"/>00259 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ncyclestodo;
<anchor xml:id="__x_scheduler_8cpp_source_1l00260"/>00260 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00261"/>00261 
<anchor xml:id="__x_scheduler_8cpp_source_1l00262"/>00262 
<anchor xml:id="__x_scheduler_8cpp_source_1l00275"/><link linkend="_group___x_u_t_i_l_s_1ga01a9c9cad767a1ecada80832ee64790b">00275</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga01a9c9cad767a1ecada80832ee64790b">XSCHEDULERTASK::SetNCycles</link>(<emphasis role="keywordtype">int</emphasis>&#32;ncyclestodo,&#32;<link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;xdatetimecadence)
<anchor xml:id="__x_scheduler_8cpp_source_1l00276"/>00276 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00277"/>00277 &#32;&#32;this-&gt;ncyclestodo&#32;=&#32;ncyclestodo;
<anchor xml:id="__x_scheduler_8cpp_source_1l00278"/>00278 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(this-&gt;ncyclestodo&lt;0)&#32;this-&gt;ncyclestodo&#32;=&#32;<link linkend="__x_scheduler_8h_1a0a0f7373bbd46e610b0529ce34f0bf46">XSCHEDULER_CYCLEFOREVER</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00279"/>00279 
<anchor xml:id="__x_scheduler_8cpp_source_1l00280"/>00280 &#32;&#32;this-&gt;ncyclesactual&#32;=&#32;this-&gt;ncyclestodo;
<anchor xml:id="__x_scheduler_8cpp_source_1l00281"/>00281 
<anchor xml:id="__x_scheduler_8cpp_source_1l00282"/>00282 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xdatetimecadence)&#32;this-&gt;xdatetimecadence.<link linkend="_group___x_u_t_i_l_s_1ga580f6018996774252bbae5660c4d1b91">CopyFrom</link>(xdatetimecadence);
<anchor xml:id="__x_scheduler_8cpp_source_1l00283"/>00283 
<anchor xml:id="__x_scheduler_8cpp_source_1l00284"/>00284 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00285"/>00285 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00286"/>00286 
<anchor xml:id="__x_scheduler_8cpp_source_1l00287"/>00287 
<anchor xml:id="__x_scheduler_8cpp_source_1l00300"/><link linkend="_group___x_u_t_i_l_s_1ga858f89d763ac109d6379102443222f4a">00300</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga01a9c9cad767a1ecada80832ee64790b">XSCHEDULERTASK::SetNCycles</link>(<emphasis role="keywordtype">int</emphasis>&#32;ncyclestodo,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;cadenceinseconds)
<anchor xml:id="__x_scheduler_8cpp_source_1l00301"/>00301 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00302"/>00302 &#32;&#32;<link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>&#32;xdatetimecadence;
<anchor xml:id="__x_scheduler_8cpp_source_1l00303"/>00303 &#32;&#32;<link linkend="_class_x_t_i_m_e_r">XTIMER</link>&#32;&#32;&#32;&#32;xtimercadence;
<anchor xml:id="__x_scheduler_8cpp_source_1l00304"/>00304 
<anchor xml:id="__x_scheduler_8cpp_source_1l00305"/>00305 &#32;&#32;xdatetimecadence.<link linkend="_group___x_u_t_i_l_s_1ga5f69e1fb5fa02a3d1346dbf8b00a114d">SetToZero</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00306"/>00306 
<anchor xml:id="__x_scheduler_8cpp_source_1l00307"/>00307 &#32;&#32;xtimercadence.<link linkend="_group___x_u_t_i_l_s_1ga461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00308"/>00308 &#32;&#32;xtimercadence.<link linkend="_group___x_u_t_i_l_s_1ga455248fbec8f5d7bd7ea56edc268cedc">AddSeconds</link>(cadenceinseconds);
<anchor xml:id="__x_scheduler_8cpp_source_1l00309"/>00309 
<anchor xml:id="__x_scheduler_8cpp_source_1l00310"/>00310 &#32;&#32;xtimercadence.<link linkend="_group___x_u_t_i_l_s_1ga04762e3b21e23e2e228d8d030ceefd8a">GetMeasureToDate</link>(&amp;xdatetimecadence);
<anchor xml:id="__x_scheduler_8cpp_source_1l00311"/>00311 
<anchor xml:id="__x_scheduler_8cpp_source_1l00312"/>00312 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga01a9c9cad767a1ecada80832ee64790b">SetNCycles</link>(ncyclestodo,&#32;&amp;xdatetimecadence);
<anchor xml:id="__x_scheduler_8cpp_source_1l00313"/>00313 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00314"/>00314 
<anchor xml:id="__x_scheduler_8cpp_source_1l00315"/>00315 
<anchor xml:id="__x_scheduler_8cpp_source_1l00328"/><link linkend="_group___x_u_t_i_l_s_1gab21b56096efe3d19ed655635d91959dd">00328</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga01a9c9cad767a1ecada80832ee64790b">XSCHEDULERTASK::SetNCycles</link>(<emphasis role="keywordtype">int</emphasis>&#32;ncyclestodo,&#32;<emphasis role="keywordtype">int</emphasis>&#32;cadenceinseconds)
<anchor xml:id="__x_scheduler_8cpp_source_1l00329"/>00329 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00330"/>00330 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga01a9c9cad767a1ecada80832ee64790b">SetNCycles</link>(ncyclestodo,&#32;(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>)cadenceinseconds);
<anchor xml:id="__x_scheduler_8cpp_source_1l00331"/>00331 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00332"/>00332 
<anchor xml:id="__x_scheduler_8cpp_source_1l00333"/>00333 
<anchor xml:id="__x_scheduler_8cpp_source_1l00343"/><link linkend="_group___x_u_t_i_l_s_1ga70b276116de2f5dff2461265b8560fcf">00343</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga70b276116de2f5dff2461265b8560fcf">XSCHEDULERTASK::IsStartImmediatelyCycles</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00344"/>00344 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00345"/>00345 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;isstartimmediatelycycles;
<anchor xml:id="__x_scheduler_8cpp_source_1l00346"/>00346 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00347"/>00347 
<anchor xml:id="__x_scheduler_8cpp_source_1l00348"/>00348 
<anchor xml:id="__x_scheduler_8cpp_source_1l00358"/><link linkend="_group___x_u_t_i_l_s_1ga55b32a8806e2a7459367f1e38325ae97">00358</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga55b32a8806e2a7459367f1e38325ae97">XSCHEDULERTASK::SetIsStartImmediatelyCycles</link>(<emphasis role="keywordtype">bool</emphasis>&#32;isstartimmediatelycycles)
<anchor xml:id="__x_scheduler_8cpp_source_1l00359"/>00359 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00360"/>00360 &#32;&#32;this-&gt;isstartimmediatelycycles&#32;=&#32;isstartimmediatelycycles;
<anchor xml:id="__x_scheduler_8cpp_source_1l00361"/>00361 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00362"/>00362 
<anchor xml:id="__x_scheduler_8cpp_source_1l00363"/>00363 
<anchor xml:id="__x_scheduler_8cpp_source_1l00376"/><link linkend="_group___x_u_t_i_l_s_1ga71c60cbe5bb615e1ad36661161af7ff2">00376</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga71c60cbe5bb615e1ad36661161af7ff2">XSCHEDULERTASK::SetTimeLimits</link>(<link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;xdatetimelimitstart,&#32;<link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;xdatetimelimitend)
<anchor xml:id="__x_scheduler_8cpp_source_1l00377"/>00377 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00378"/>00378 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xdatetimelimitstart)&#32;this-&gt;xdatetimelimitstart.<link linkend="_group___x_u_t_i_l_s_1ga580f6018996774252bbae5660c4d1b91">CopyFrom</link>(xdatetimelimitstart);
<anchor xml:id="__x_scheduler_8cpp_source_1l00379"/>00379 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xdatetimelimitend)&#32;&#32;&#32;this-&gt;xdatetimelimitend.<link linkend="_group___x_u_t_i_l_s_1ga580f6018996774252bbae5660c4d1b91">CopyFrom</link>(xdatetimelimitend);
<anchor xml:id="__x_scheduler_8cpp_source_1l00380"/>00380 
<anchor xml:id="__x_scheduler_8cpp_source_1l00381"/>00381 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00382"/>00382 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00383"/>00383 
<anchor xml:id="__x_scheduler_8cpp_source_1l00384"/>00384 
<anchor xml:id="__x_scheduler_8cpp_source_1l00394"/><link linkend="_group___x_u_t_i_l_s_1gae55c64c4770d04dc67608c269ab52a21">00394</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gae55c64c4770d04dc67608c269ab52a21">XSCHEDULERTASK::SetConditionDayWeek</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;mask)
<anchor xml:id="__x_scheduler_8cpp_source_1l00395"/>00395 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00396"/>00396 &#32;&#32;conditiondayweekmask&#32;=&#32;&#32;mask;
<anchor xml:id="__x_scheduler_8cpp_source_1l00397"/>00397 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00398"/>00398 
<anchor xml:id="__x_scheduler_8cpp_source_1l00399"/>00399 
<anchor xml:id="__x_scheduler_8cpp_source_1l00409"/><link linkend="_group___x_u_t_i_l_s_1ga1d591be0140cc14363ed003836bc0e79">00409</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga1d591be0140cc14363ed003836bc0e79">XSCHEDULERTASK::ResetCondition</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00410"/>00410 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00411"/>00411 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xtimer)
<anchor xml:id="__x_scheduler_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00415"/>00415 
<anchor xml:id="__x_scheduler_8cpp_source_1l00416"/>00416 &#32;&#32;xtimer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00417"/>00417 
<anchor xml:id="__x_scheduler_8cpp_source_1l00418"/>00418 &#32;&#32;ncyclesmade&#32;=&#32;0;
<anchor xml:id="__x_scheduler_8cpp_source_1l00419"/>00419 
<anchor xml:id="__x_scheduler_8cpp_source_1l00420"/>00420 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00421"/>00421 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00422"/>00422 
<anchor xml:id="__x_scheduler_8cpp_source_1l00423"/>00423 
<anchor xml:id="__x_scheduler_8cpp_source_1l00433"/><link linkend="_group___x_u_t_i_l_s_1ga242b4bc47051e949e6a8624b5ee8d911">00433</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga242b4bc47051e949e6a8624b5ee8d911">XSCHEDULERTASK::StartConditionImmediately</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00434"/>00434 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00435"/>00435 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xtimer)
<anchor xml:id="__x_scheduler_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00439"/>00439 
<anchor xml:id="__x_scheduler_8cpp_source_1l00440"/>00440 &#32;&#32;xtimer-&gt;<link linkend="_group___x_u_t_i_l_s_1ga455248fbec8f5d7bd7ea56edc268cedc">AddSeconds</link>(xdatetimecadence.<link linkend="_group___x_u_t_i_l_s_1ga8005b8d3f065b4cb2dd1a208165ad5b6">GetSeconsFromDate</link>()&#32;+&#32;1);
<anchor xml:id="__x_scheduler_8cpp_source_1l00441"/>00441 &#32;&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l00442"/>00442 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00443"/>00443 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00444"/>00444 
<anchor xml:id="__x_scheduler_8cpp_source_1l00445"/>00445 
<anchor xml:id="__x_scheduler_8cpp_source_1l00458"/><link linkend="_group___x_u_t_i_l_s_1ga346ca77ef8158f1b6ae78e57a9014144">00458</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga346ca77ef8158f1b6ae78e57a9014144">XSCHEDULERTASK::CheckCondition</link>(<link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;xdatetimeactual,&#32;<link linkend="_class_x_t_i_m_e_r">XTIMER</link>*&#32;xtimeractual)
<anchor xml:id="__x_scheduler_8cpp_source_1l00459"/>00459 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00460"/>00460 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xdatetimeactual)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00461"/>00461 
<anchor xml:id="__x_scheduler_8cpp_source_1l00462"/>00462 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;timeactualsec&#32;&#32;&#32;=&#32;xdatetimeactual-&gt;<link linkend="_group___x_u_t_i_l_s_1ga8005b8d3f065b4cb2dd1a208165ad5b6">GetSeconsFromDate</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00463"/>00463 
<anchor xml:id="__x_scheduler_8cpp_source_1l00464"/>00464 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xdatetimelimitstart.<link linkend="_group___x_u_t_i_l_s_1gaf8e81a81c48e8738383c1493849574cf">IsValidDate</link>())
<anchor xml:id="__x_scheduler_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(timeactualsec&#32;&lt;&#32;&#32;xdatetimelimitstart.<link linkend="_group___x_u_t_i_l_s_1ga8005b8d3f065b4cb2dd1a208165ad5b6">GetSeconsFromDate</link>())
<anchor xml:id="__x_scheduler_8cpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isinvalidtimelimit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00469"/>00469 
<anchor xml:id="__x_scheduler_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xtimeractual-&gt;<link linkend="_group___x_u_t_i_l_s_1ga461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;isinvalidtimelimit&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00475"/>00475 
<anchor xml:id="__x_scheduler_8cpp_source_1l00476"/>00476 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xdatetimelimitend.<link linkend="_group___x_u_t_i_l_s_1gaf8e81a81c48e8738383c1493849574cf">IsValidDate</link>())
<anchor xml:id="__x_scheduler_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(timeactualsec&#32;&gt;&#32;&#32;xdatetimelimitend.<link linkend="_group___x_u_t_i_l_s_1ga8005b8d3f065b4cb2dd1a208165ad5b6">GetSeconsFromDate</link>())
<anchor xml:id="__x_scheduler_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isinvalidtimelimit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00482"/>00482 
<anchor xml:id="__x_scheduler_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;isinvalidtimelimit&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00485"/>00485 
<anchor xml:id="__x_scheduler_8cpp_source_1l00486"/>00486 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(conditiondayweekmask&#32;!=&#32;<link linkend="__x_scheduler_8h_1a986bcffd95ffb6ee58d30002f6ba05b0">XSCHEDULER_DAYWEEK_NONE</link>)
<anchor xml:id="__x_scheduler_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!(GetDayOfWeekMask(xdatetimeactual)&#32;&amp;&#32;conditiondayweekmask))
<anchor xml:id="__x_scheduler_8cpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xtimeractual-&gt;<link linkend="_group___x_u_t_i_l_s_1ga461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00494"/>00494 
<anchor xml:id="__x_scheduler_8cpp_source_1l00495"/>00495 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ncyclesactual)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00496"/>00496 
<anchor xml:id="__x_scheduler_8cpp_source_1l00497"/>00497 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;checkcadence&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00498"/>00498 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(isstartimmediatelycycles)
<anchor xml:id="__x_scheduler_8cpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ncyclesmade)&#32;&#32;checkcadence&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00501"/>00501 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00502"/>00502 
<anchor xml:id="__x_scheduler_8cpp_source_1l00503"/>00503 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(checkcadence)
<anchor xml:id="__x_scheduler_8cpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xdatetimecadence.<link linkend="_group___x_u_t_i_l_s_1gaf8e81a81c48e8738383c1493849574cf">IsValidDate</link>())
<anchor xml:id="__x_scheduler_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xtimeractual-&gt;<link linkend="_group___x_u_t_i_l_s_1ga02ae3c82df51ec1ed16288fe102d9d8b">GetMeasureSeconds</link>()&#32;&lt;&#32;xdatetimecadence.<link linkend="_group___x_u_t_i_l_s_1ga8005b8d3f065b4cb2dd1a208165ad5b6">GetSeconsFromDate</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00509"/>00509 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00510"/>00510 
<anchor xml:id="__x_scheduler_8cpp_source_1l00511"/>00511 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(ncyclesactual&gt;0)&#32;&#32;ncyclesactual--;
<anchor xml:id="__x_scheduler_8cpp_source_1l00512"/>00512 
<anchor xml:id="__x_scheduler_8cpp_source_1l00513"/>00513 &#32;&#32;xtimeractual-&gt;<link linkend="_group___x_u_t_i_l_s_1ga461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00514"/>00514 
<anchor xml:id="__x_scheduler_8cpp_source_1l00515"/>00515 &#32;&#32;ncyclesmade++;
<anchor xml:id="__x_scheduler_8cpp_source_1l00516"/>00516 
<anchor xml:id="__x_scheduler_8cpp_source_1l00517"/>00517 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00518"/>00518 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00519"/>00519 
<anchor xml:id="__x_scheduler_8cpp_source_1l00520"/>00520 
<anchor xml:id="__x_scheduler_8cpp_source_1l00532"/>00532 <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;XSCHEDULERTASK::GetDayOfWeekMask(<link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;xtimeactual)
<anchor xml:id="__x_scheduler_8cpp_source_1l00533"/>00533 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00534"/>00534 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xtimeactual)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_scheduler_8h_1a986bcffd95ffb6ee58d30002f6ba05b0">XSCHEDULER_DAYWEEK_NONE</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00535"/>00535 
<anchor xml:id="__x_scheduler_8cpp_source_1l00536"/>00536 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;mask&#32;=&#32;<link linkend="__x_scheduler_8h_1a986bcffd95ffb6ee58d30002f6ba05b0">XSCHEDULER_DAYWEEK_NONE</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00537"/>00537 
<anchor xml:id="__x_scheduler_8cpp_source_1l00538"/>00538 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(xtimeactual-&gt;<link linkend="_group___x_u_t_i_l_s_1ga86a5d7b455930dfda4c0721c7db2996b">GetDayOfWeek</link>())
<anchor xml:id="__x_scheduler_8cpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_date_time_8h_1a8d3d68fee5e4cc1857488d1a8183930fa04370da3bf916e054611b6866e42363e">XDATETIME_DAYWEEK_SUNDAY</link>&#32;&#32;&#32;&#32;&#32;:&#32;mask&#32;=&#32;<link linkend="__x_scheduler_8h_1ae664bb4a404c6016c320fca7ddf7f153">XSCHEDULER_DAYWEEK_ISSUNDAY</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_date_time_8h_1a8d3d68fee5e4cc1857488d1a8183930fae303f405c531ed2c2723d0839c437636">XDATETIME_DAYWEEK_MONDAY</link>&#32;&#32;&#32;&#32;&#32;:&#32;mask&#32;=&#32;<link linkend="__x_scheduler_8h_1a141fa5ae80b277c70c868c2c349b0ef9">XSCHEDULER_DAYWEEK_ISMONDAY</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_date_time_8h_1a8d3d68fee5e4cc1857488d1a8183930fa6c0bdec9e24b0ee0103baa74993c3a39">XDATETIME_DAYWEEK_TUESDAY</link>&#32;&#32;&#32;&#32;:&#32;mask&#32;=&#32;<link linkend="__x_scheduler_8h_1ae64e669aec482387dbd9dd76ed27d556">XSCHEDULER_DAYWEEK_ISTUESDAY</link>;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_date_time_8h_1a8d3d68fee5e4cc1857488d1a8183930fa2319bad190a4b29bec300b3da2e87b81">XDATETIME_DAYWEEK_WEDNESDAY</link>&#32;&#32;:&#32;mask&#32;=&#32;<link linkend="__x_scheduler_8h_1af82eda9e5829aa3054689e63c9aca4e2">XSCHEDULER_DAYWEEK_ISWEDNESDAY</link>;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_date_time_8h_1a8d3d68fee5e4cc1857488d1a8183930fac6ff1a436d6ebb6dc769d362dce711a0">XDATETIME_DAYWEEK_THURSDAY</link>&#32;&#32;&#32;:&#32;mask&#32;=&#32;<link linkend="__x_scheduler_8h_1a4d0642588ecbef687c6213d90baf01f1">XSCHEDULER_DAYWEEK_ISTHURSDAY</link>;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_date_time_8h_1a8d3d68fee5e4cc1857488d1a8183930fa7ebf21b05ddd8655dd02a7c56460fc07">XDATETIME_DAYWEEK_FRIDAY</link>&#32;&#32;&#32;&#32;&#32;:&#32;mask&#32;=&#32;<link linkend="__x_scheduler_8h_1ac798e0beaf4f223985846631f21eac57">XSCHEDULER_DAYWEEK_ISFRIDAY</link>;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_date_time_8h_1a8d3d68fee5e4cc1857488d1a8183930fad97389061e5613922e480fbde30de1f8">XDATETIME_DAYWEEK_SATURDAY</link>&#32;&#32;&#32;:&#32;mask&#32;=&#32;<link linkend="__x_scheduler_8h_1a8c147cfd2641d0e7794bc6b756702b17">XSCHEDULER_DAYWEEK_ISSATURDAY</link>;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00547"/>00547 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00548"/>00548 
<anchor xml:id="__x_scheduler_8cpp_source_1l00549"/>00549 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mask;
<anchor xml:id="__x_scheduler_8cpp_source_1l00550"/>00550 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00551"/>00551 
<anchor xml:id="__x_scheduler_8cpp_source_1l00552"/>00552 
<anchor xml:id="__x_scheduler_8cpp_source_1l00561"/>00561 <emphasis role="keywordtype">void</emphasis>&#32;XSCHEDULERTASK::Clean()
<anchor xml:id="__x_scheduler_8cpp_source_1l00562"/>00562 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00563"/>00563 &#32;&#32;xscheduler&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00564"/>00564 &#32;&#32;xtimer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00565"/>00565 
<anchor xml:id="__x_scheduler_8cpp_source_1l00566"/>00566 &#32;&#32;ID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_scheduler_8cpp_source_1l00567"/>00567 
<anchor xml:id="__x_scheduler_8cpp_source_1l00568"/>00568 &#32;&#32;active&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00569"/>00569 
<anchor xml:id="__x_scheduler_8cpp_source_1l00570"/>00570 &#32;&#32;isstartimmediatelycycles&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00571"/>00571 &#32;&#32;ncyclesmade&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_scheduler_8cpp_source_1l00572"/>00572 &#32;&#32;ncyclestodo&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_scheduler_8cpp_source_1l00573"/>00573 &#32;&#32;ncyclesactual&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_scheduler_8cpp_source_1l00574"/>00574 
<anchor xml:id="__x_scheduler_8cpp_source_1l00575"/>00575 &#32;&#32;isinvalidtimelimit&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00576"/>00576 
<anchor xml:id="__x_scheduler_8cpp_source_1l00577"/>00577 &#32;&#32;conditiondayweekmask&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_scheduler_8h_1a986bcffd95ffb6ee58d30002f6ba05b0">XSCHEDULER_DAYWEEK_NONE</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00578"/>00578 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00579"/>00579 
<anchor xml:id="__x_scheduler_8cpp_source_1l00580"/>00580 
<anchor xml:id="__x_scheduler_8cpp_source_1l00581"/>00581 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00582"/>00582 
<anchor xml:id="__x_scheduler_8cpp_source_1l00583"/>00583 
<anchor xml:id="__x_scheduler_8cpp_source_1l00584"/>00584 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_XSCHEDULER</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l00585"/>00585 
<anchor xml:id="__x_scheduler_8cpp_source_1l00586"/>00586 
<anchor xml:id="__x_scheduler_8cpp_source_1l00594"/><link linkend="_group___x_u_t_i_l_s_1gaf87c6298ee92e36179801e4f82a68d07">00594</link> <link linkend="_group___x_u_t_i_l_s_1gaf87c6298ee92e36179801e4f82a68d07">XSCHEDULER::XSCHEDULER</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00595"/>00595 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00596"/>00596 &#32;&#32;Clean();
<anchor xml:id="__x_scheduler_8cpp_source_1l00597"/>00597 
<anchor xml:id="__x_scheduler_8cpp_source_1l00598"/>00598 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gac83006698567c749aecf727dddef5d9c">RegisterEvent</link>(<link linkend="__x_event_8h_1aabf5f0b55ced84b808fb2c2e45dbb1e8a15553b6b979ac77333c3538da7c70d4b">XEVENT_TYPE_SCHEDULER</link>);
<anchor xml:id="__x_scheduler_8cpp_source_1l00599"/>00599 
<anchor xml:id="__x_scheduler_8cpp_source_1l00600"/>00600 &#32;&#32;GEN_XFACTORY_CREATE(xtimerwait,&#32;CreateTimer())
<anchor xml:id="__x_scheduler_8cpp_source_1l00601"/>00601 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00602"/>00602 
<anchor xml:id="__x_scheduler_8cpp_source_1l00603"/>00603 
<anchor xml:id="__x_scheduler_8cpp_source_1l00612"/><link linkend="_group___x_u_t_i_l_s_1ga85ff57ab52d9b0b90d39387d2c721554">00612</link> <link linkend="_group___x_u_t_i_l_s_1ga85ff57ab52d9b0b90d39387d2c721554">XSCHEDULER::~XSCHEDULER</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00613"/>00613 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00614"/>00614 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gab78992063b09d37612e7719e37d415bc">DeRegisterEvent</link>(<link linkend="__x_event_8h_1aabf5f0b55ced84b808fb2c2e45dbb1e8a15553b6b979ac77333c3538da7c70d4b">XEVENT_TYPE_SCHEDULER</link>);
<anchor xml:id="__x_scheduler_8cpp_source_1l00615"/>00615 
<anchor xml:id="__x_scheduler_8cpp_source_1l00616"/>00616 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1gacd1cd5f35200130137116ec8ffa2ecfc">End</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00617"/>00617 
<anchor xml:id="__x_scheduler_8cpp_source_1l00618"/>00618 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xtimerwait)&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.DeleteTimer(xtimerwait);
<anchor xml:id="__x_scheduler_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00622"/>00622 
<anchor xml:id="__x_scheduler_8cpp_source_1l00623"/>00623 &#32;&#32;Clean();
<anchor xml:id="__x_scheduler_8cpp_source_1l00624"/>00624 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00625"/>00625 
<anchor xml:id="__x_scheduler_8cpp_source_1l00626"/>00626 
<anchor xml:id="__x_scheduler_8cpp_source_1l00636"/><link linkend="_group___x_u_t_i_l_s_1ga324cf5ad7c09fdaeb78fd46c12e13b12">00636</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga324cf5ad7c09fdaeb78fd46c12e13b12">XSCHEDULER::Ini</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00637"/>00637 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00638"/>00638 &#32;&#32;GEN_XFACTORY_CREATE(xmutexscheduler,&#32;Create_Mutex())
<anchor xml:id="__x_scheduler_8cpp_source_1l00639"/>00639 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmutexscheduler)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00640"/>00640 
<anchor xml:id="__x_scheduler_8cpp_source_1l00641"/>00641 &#32;&#32;GEN_XFACTORY_CREATE(xdatetimeactual,&#32;CreateDateTime())
<anchor xml:id="__x_scheduler_8cpp_source_1l00642"/>00642 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xdatetimeactual)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00643"/>00643 
<anchor xml:id="__x_scheduler_8cpp_source_1l00644"/>00644 &#32;&#32;xthreadscheduler&#32;=&#32;<link linkend="__x_thread_collected_8h_1aad503e3655b9ff78d3ac660d1f1f5534">CREATEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a60757c697f84ba3ee59e54ad99c3b6fe">XTHREADGROUPID_SCHEDULER</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;XSCHEDULER::Ini&quot;</emphasis>),ThreadScheduler,(<emphasis role="keywordtype">void</emphasis>*)<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__x_scheduler_8cpp_source_1l00645"/>00645 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xthreadscheduler)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00646"/>00646 
<anchor xml:id="__x_scheduler_8cpp_source_1l00647"/>00647 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xthreadscheduler-&gt;Ini())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00648"/>00648 
<anchor xml:id="__x_scheduler_8cpp_source_1l00649"/>00649 &#32;&#32;isactive&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00650"/>00650 
<anchor xml:id="__x_scheduler_8cpp_source_1l00651"/>00651 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00652"/>00652 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00653"/>00653 
<anchor xml:id="__x_scheduler_8cpp_source_1l00654"/>00654 
<anchor xml:id="__x_scheduler_8cpp_source_1l00664"/><link linkend="_group___x_u_t_i_l_s_1gaac04c2c17f0f4b28bbe579152a4ef0df">00664</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gaac04c2c17f0f4b28bbe579152a4ef0df">XSCHEDULER::IsActive</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00665"/>00665 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00666"/>00666 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;isactive;
<anchor xml:id="__x_scheduler_8cpp_source_1l00667"/>00667 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00668"/>00668 
<anchor xml:id="__x_scheduler_8cpp_source_1l00669"/>00669 
<anchor xml:id="__x_scheduler_8cpp_source_1l00679"/><link linkend="_group___x_u_t_i_l_s_1gad458e1aa85e652150fb08f9431e1438b">00679</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gad458e1aa85e652150fb08f9431e1438b">XSCHEDULER::Activate</link>(<emphasis role="keywordtype">bool</emphasis>&#32;on)
<anchor xml:id="__x_scheduler_8cpp_source_1l00680"/>00680 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00681"/>00681 &#32;&#32;this-&gt;isactive&#32;=&#32;on;
<anchor xml:id="__x_scheduler_8cpp_source_1l00682"/>00682 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00683"/>00683 
<anchor xml:id="__x_scheduler_8cpp_source_1l00684"/>00684 
<anchor xml:id="__x_scheduler_8cpp_source_1l00694"/><link linkend="_group___x_u_t_i_l_s_1gae1f404b133cd5a64c88128cc293798d4">00694</link> <link linkend="_class_x_m_u_t_e_x">XMUTEX</link>*&#32;<link linkend="_group___x_u_t_i_l_s_1gae1f404b133cd5a64c88128cc293798d4">XSCHEDULER::GetMutexScheduler</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00695"/>00695 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00696"/>00696 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xmutexscheduler;
<anchor xml:id="__x_scheduler_8cpp_source_1l00697"/>00697 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00698"/>00698 
<anchor xml:id="__x_scheduler_8cpp_source_1l00699"/>00699 
<anchor xml:id="__x_scheduler_8cpp_source_1l00709"/><link linkend="_group___x_u_t_i_l_s_1gad1a0615e8c0cd9c14661a080b3ece399">00709</link> <link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;<link linkend="_group___x_u_t_i_l_s_1gad1a0615e8c0cd9c14661a080b3ece399">XSCHEDULER::GetDateTimeActual</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00710"/>00710 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00711"/>00711 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xdatetimeactual;
<anchor xml:id="__x_scheduler_8cpp_source_1l00712"/>00712 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00713"/>00713 
<anchor xml:id="__x_scheduler_8cpp_source_1l00714"/>00714 
<anchor xml:id="__x_scheduler_8cpp_source_1l00726"/><link linkend="_group___x_u_t_i_l_s_1gaa87c3401008063bc3037f593dcaa7bbc">00726</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gaa87c3401008063bc3037f593dcaa7bbc">XSCHEDULER::Task_Add</link>(<link linkend="_class_x_s_c_h_e_d_u_l_e_r_t_a_s_k">XSCHEDULERTASK</link>*&#32;task)
<anchor xml:id="__x_scheduler_8cpp_source_1l00727"/>00727 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00728"/>00728 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!task)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00729"/>00729 
<anchor xml:id="__x_scheduler_8cpp_source_1l00730"/>00730 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmutexscheduler)&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00731"/>00731 
<anchor xml:id="__x_scheduler_8cpp_source_1l00732"/>00732 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(task-&gt;<link linkend="_group___x_u_t_i_l_s_1gacb32be07ce22adbf4202fc2a5b24bd2b">GetXTimer</link>())&#32;task-&gt;<link linkend="_group___x_u_t_i_l_s_1gacb32be07ce22adbf4202fc2a5b24bd2b">GetXTimer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00733"/>00733 
<anchor xml:id="__x_scheduler_8cpp_source_1l00734"/>00734 &#32;&#32;tasks.<link linkend="_class_x_v_e_c_t_o_r_1a51a790aac8efd4603aee608ddcc83423">Add</link>(task);
<anchor xml:id="__x_scheduler_8cpp_source_1l00735"/>00735 
<anchor xml:id="__x_scheduler_8cpp_source_1l00736"/>00736 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmutexscheduler)&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00737"/>00737 
<anchor xml:id="__x_scheduler_8cpp_source_1l00738"/>00738 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00739"/>00739 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00740"/>00740 
<anchor xml:id="__x_scheduler_8cpp_source_1l00741"/>00741 
<anchor xml:id="__x_scheduler_8cpp_source_1l00753"/><link linkend="_group___x_u_t_i_l_s_1ga44b17c728a4acee8123d08004f9a1a69">00753</link> <link linkend="_class_x_s_c_h_e_d_u_l_e_r_t_a_s_k">XSCHEDULERTASK</link>*&#32;<link linkend="_group___x_u_t_i_l_s_1ga44b17c728a4acee8123d08004f9a1a69">XSCHEDULER::Task_Get</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__x_scheduler_8cpp_source_1l00754"/>00754 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00755"/>00755 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(tasks.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00756"/>00756 
<anchor xml:id="__x_scheduler_8cpp_source_1l00757"/>00757 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_x_s_c_h_e_d_u_l_e_r_t_a_s_k">XSCHEDULERTASK</link>*)tasks.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(index);
<anchor xml:id="__x_scheduler_8cpp_source_1l00758"/>00758 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00759"/>00759 
<anchor xml:id="__x_scheduler_8cpp_source_1l00760"/>00760 
<anchor xml:id="__x_scheduler_8cpp_source_1l00772"/><link linkend="_group___x_u_t_i_l_s_1gad1927167ea8af8f14692a9cc9a4f025a">00772</link> <link linkend="_class_x_s_c_h_e_d_u_l_e_r_t_a_s_k">XSCHEDULERTASK</link>*&#32;<link linkend="_group___x_u_t_i_l_s_1gad1927167ea8af8f14692a9cc9a4f025a">XSCHEDULER::Task_GetForID</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;ID)
<anchor xml:id="__x_scheduler_8cpp_source_1l00773"/>00773 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00774"/>00774 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmutexscheduler)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00775"/>00775 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(tasks.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00776"/>00776 
<anchor xml:id="__x_scheduler_8cpp_source_1l00777"/>00777 &#32;&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00778"/>00778 
<anchor xml:id="__x_scheduler_8cpp_source_1l00779"/>00779 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;c&lt;tasks.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();c++)
<anchor xml:id="__x_scheduler_8cpp_source_1l00780"/>00780 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_c_h_e_d_u_l_e_r_t_a_s_k">XSCHEDULERTASK</link>*&#32;task&#32;=&#32;tasks.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__x_scheduler_8cpp_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(task)
<anchor xml:id="__x_scheduler_8cpp_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(task-&gt;<link linkend="_group___x_u_t_i_l_s_1ga498bc0307b75f7e5d8ac1fbba9cfe3a0">GetID</link>()==ID)
<anchor xml:id="__x_scheduler_8cpp_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;task;
<anchor xml:id="__x_scheduler_8cpp_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00790"/>00790 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00791"/>00791 
<anchor xml:id="__x_scheduler_8cpp_source_1l00792"/>00792 &#32;&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00793"/>00793 
<anchor xml:id="__x_scheduler_8cpp_source_1l00794"/>00794 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00795"/>00795 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00796"/>00796 
<anchor xml:id="__x_scheduler_8cpp_source_1l00797"/>00797 
<anchor xml:id="__x_scheduler_8cpp_source_1l00809"/><link linkend="_group___x_u_t_i_l_s_1ga3e2939c8c15407c0faf7c4bc5275f43c">00809</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga3e2939c8c15407c0faf7c4bc5275f43c">XSCHEDULER::Task_Del</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__x_scheduler_8cpp_source_1l00810"/>00810 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00811"/>00811 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmutexscheduler)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00812"/>00812 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(tasks.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00813"/>00813 
<anchor xml:id="__x_scheduler_8cpp_source_1l00814"/>00814 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00815"/>00815 
<anchor xml:id="__x_scheduler_8cpp_source_1l00816"/>00816 &#32;&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00817"/>00817 
<anchor xml:id="__x_scheduler_8cpp_source_1l00818"/>00818 &#32;&#32;<link linkend="_class_x_s_c_h_e_d_u_l_e_r_t_a_s_k">XSCHEDULERTASK</link>*&#32;task&#32;=&#32;<link linkend="_group___x_u_t_i_l_s_1ga44b17c728a4acee8123d08004f9a1a69">Task_Get</link>(index);
<anchor xml:id="__x_scheduler_8cpp_source_1l00819"/>00819 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(task)
<anchor xml:id="__x_scheduler_8cpp_source_1l00820"/>00820 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;tasks.<link linkend="_class_x_v_e_c_t_o_r_1a1b2817263806966a47e30481e1561c27">Delete</link>(task);
<anchor xml:id="__x_scheduler_8cpp_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;task;
<anchor xml:id="__x_scheduler_8cpp_source_1l00823"/>00823 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00824"/>00824 
<anchor xml:id="__x_scheduler_8cpp_source_1l00825"/>00825 &#32;&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00826"/>00826 
<anchor xml:id="__x_scheduler_8cpp_source_1l00827"/>00827 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_scheduler_8cpp_source_1l00828"/>00828 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00829"/>00829 
<anchor xml:id="__x_scheduler_8cpp_source_1l00830"/>00830 
<anchor xml:id="__x_scheduler_8cpp_source_1l00842"/><link linkend="_group___x_u_t_i_l_s_1ga8c525ff71b2655536cc616032864b59f">00842</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga8c525ff71b2655536cc616032864b59f">XSCHEDULER::Task_DelForID</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;ID)
<anchor xml:id="__x_scheduler_8cpp_source_1l00843"/>00843 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00844"/>00844 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmutexscheduler)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00845"/>00845 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(tasks.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00846"/>00846 
<anchor xml:id="__x_scheduler_8cpp_source_1l00847"/>00847 &#32;&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00848"/>00848 
<anchor xml:id="__x_scheduler_8cpp_source_1l00849"/>00849 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00850"/>00850 
<anchor xml:id="__x_scheduler_8cpp_source_1l00851"/>00851 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;c&lt;tasks.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();c++)
<anchor xml:id="__x_scheduler_8cpp_source_1l00852"/>00852 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_c_h_e_d_u_l_e_r_t_a_s_k">XSCHEDULERTASK</link>*&#32;task&#32;=&#32;tasks.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__x_scheduler_8cpp_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(task)
<anchor xml:id="__x_scheduler_8cpp_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(task-&gt;<link linkend="_group___x_u_t_i_l_s_1ga498bc0307b75f7e5d8ac1fbba9cfe3a0">GetID</link>()==ID)
<anchor xml:id="__x_scheduler_8cpp_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;tasks.<link linkend="_class_x_v_e_c_t_o_r_1a1b2817263806966a47e30481e1561c27">Delete</link>(task);
<anchor xml:id="__x_scheduler_8cpp_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;task;
<anchor xml:id="__x_scheduler_8cpp_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00863"/>00863 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00864"/>00864 
<anchor xml:id="__x_scheduler_8cpp_source_1l00865"/>00865 &#32;&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00866"/>00866 
<anchor xml:id="__x_scheduler_8cpp_source_1l00867"/>00867 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_scheduler_8cpp_source_1l00868"/>00868 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00869"/>00869 
<anchor xml:id="__x_scheduler_8cpp_source_1l00870"/>00870 
<anchor xml:id="__x_scheduler_8cpp_source_1l00880"/><link linkend="_group___x_u_t_i_l_s_1ga4ed9b69e1c0f27153f3fbf8c47ed5a74">00880</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1ga4ed9b69e1c0f27153f3fbf8c47ed5a74">XSCHEDULER::Task_DelAll</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00881"/>00881 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00882"/>00882 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(tasks.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00883"/>00883 
<anchor xml:id="__x_scheduler_8cpp_source_1l00884"/>00884 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmutexscheduler)&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00885"/>00885 
<anchor xml:id="__x_scheduler_8cpp_source_1l00886"/>00886 &#32;&#32;tasks.<link linkend="_class_x_v_e_c_t_o_r_1abae5097402824f18f274e21e18b23bea">DeleteContents</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00887"/>00887 &#32;&#32;tasks.<link linkend="_class_x_v_e_c_t_o_r_1a57c72ab04fd14c60d1026e0a7b4a1887">DeleteAll</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00888"/>00888 
<anchor xml:id="__x_scheduler_8cpp_source_1l00889"/>00889 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmutexscheduler)&#32;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00890"/>00890 
<anchor xml:id="__x_scheduler_8cpp_source_1l00891"/>00891 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00892"/>00892 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00893"/>00893 
<anchor xml:id="__x_scheduler_8cpp_source_1l00894"/>00894 
<anchor xml:id="__x_scheduler_8cpp_source_1l00904"/><link linkend="_group___x_u_t_i_l_s_1gacd1cd5f35200130137116ec8ffa2ecfc">00904</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___x_u_t_i_l_s_1gacd1cd5f35200130137116ec8ffa2ecfc">XSCHEDULER::End</link>()
<anchor xml:id="__x_scheduler_8cpp_source_1l00905"/>00905 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00906"/>00906 &#32;&#32;isactive&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00907"/>00907 
<anchor xml:id="__x_scheduler_8cpp_source_1l00908"/>00908 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xthreadscheduler)
<anchor xml:id="__x_scheduler_8cpp_source_1l00909"/>00909 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;xthreadscheduler-&gt;End();
<anchor xml:id="__x_scheduler_8cpp_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_thread_collected_8h_1a18fb843f5fbad51464b68d705ed29b8a">DELETEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a60757c697f84ba3ee59e54ad99c3b6fe">XTHREADGROUPID_SCHEDULER</link>,&#32;xthreadscheduler);
<anchor xml:id="__x_scheduler_8cpp_source_1l00912"/>00912 
<anchor xml:id="__x_scheduler_8cpp_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;xthreadscheduler&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00914"/>00914 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00915"/>00915 
<anchor xml:id="__x_scheduler_8cpp_source_1l00916"/>00916 &#32;&#32;<link linkend="_group___x_u_t_i_l_s_1ga4ed9b69e1c0f27153f3fbf8c47ed5a74">Task_DelAll</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00917"/>00917 
<anchor xml:id="__x_scheduler_8cpp_source_1l00918"/>00918 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmutexscheduler)
<anchor xml:id="__x_scheduler_8cpp_source_1l00919"/>00919 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.Delete_Mutex(xmutexscheduler);
<anchor xml:id="__x_scheduler_8cpp_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;xmutexscheduler&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00922"/>00922 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00923"/>00923 
<anchor xml:id="__x_scheduler_8cpp_source_1l00924"/>00924 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xdatetimeactual)
<anchor xml:id="__x_scheduler_8cpp_source_1l00925"/>00925 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.DeleteDateTime(xdatetimeactual);
<anchor xml:id="__x_scheduler_8cpp_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;xdatetimeactual&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00928"/>00928 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00929"/>00929 
<anchor xml:id="__x_scheduler_8cpp_source_1l00930"/>00930 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00931"/>00931 }
<anchor xml:id="__x_scheduler_8cpp_source_1l00932"/>00932 
<anchor xml:id="__x_scheduler_8cpp_source_1l00933"/>00933 
<anchor xml:id="__x_scheduler_8cpp_source_1l00943"/>00943 <emphasis role="keywordtype">void</emphasis>&#32;XSCHEDULER::ThreadScheduler(<emphasis role="keywordtype">void</emphasis>*&#32;data)
<anchor xml:id="__x_scheduler_8cpp_source_1l00944"/>00944 {
<anchor xml:id="__x_scheduler_8cpp_source_1l00945"/>00945 &#32;&#32;<link linkend="_class_x_s_c_h_e_d_u_l_e_r">XSCHEDULER</link>*&#32;xscheduler&#32;=&#32;(<link linkend="_class_x_s_c_h_e_d_u_l_e_r">XSCHEDULER</link>*)data;
<anchor xml:id="__x_scheduler_8cpp_source_1l00946"/>00946 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xscheduler)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l00947"/>00947 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00949"/>00949 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00950"/>00950 
<anchor xml:id="__x_scheduler_8cpp_source_1l00951"/>00951 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xscheduler-&gt;xmutexscheduler)&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l00952"/>00952 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00954"/>00954 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00955"/>00955 
<anchor xml:id="__x_scheduler_8cpp_source_1l00956"/>00956 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xscheduler-&gt;xdatetimeactual)&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l00957"/>00957 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00959"/>00959 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00960"/>00960 
<anchor xml:id="__x_scheduler_8cpp_source_1l00961"/>00961 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xscheduler-&gt;isactive)&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l00962"/>00962 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00964"/>00964 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00965"/>00965 
<anchor xml:id="__x_scheduler_8cpp_source_1l00966"/>00966 &#32;&#32;GEN_XSLEEP.MilliSeconds(10);
<anchor xml:id="__x_scheduler_8cpp_source_1l00967"/>00967 
<anchor xml:id="__x_scheduler_8cpp_source_1l00968"/>00968 &#32;&#32;xscheduler-&gt;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00969"/>00969 
<anchor xml:id="__x_scheduler_8cpp_source_1l00970"/>00970 &#32;&#32;<link linkend="_class_x_s_c_h_e_d_u_l_e_r_t_a_s_k">XSCHEDULERTASK</link>*&#32;task;
<anchor xml:id="__x_scheduler_8cpp_source_1l00971"/>00971 
<anchor xml:id="__x_scheduler_8cpp_source_1l00972"/>00972 &#32;&#32;task&#32;=&#32;xscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1ga44b17c728a4acee8123d08004f9a1a69">Task_Get</link>(xscheduler-&gt;indextask);
<anchor xml:id="__x_scheduler_8cpp_source_1l00973"/>00973 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!task)
<anchor xml:id="__x_scheduler_8cpp_source_1l00974"/>00974 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00975"/>00975 &#32;&#32;&#32;&#32;&#32;&#32;xscheduler-&gt;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;xscheduler-&gt;indextask&#32;=&#32;0;
<anchor xml:id="__x_scheduler_8cpp_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l00978"/>00978 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00979"/>00979 
<anchor xml:id="__x_scheduler_8cpp_source_1l00980"/>00980 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xscheduler-&gt;xdatetimeactual)&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l00981"/>00981 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;xscheduler-&gt;xdatetimeactual-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0e2f3589654fc19d26c588506994fb20">Read</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00983"/>00983 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l00984"/>00984 
<anchor xml:id="__x_scheduler_8cpp_source_1l00985"/>00985 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(task-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0c0ca6b68b1f02d867815a50a39646f3">IsActive</link>())
<anchor xml:id="__x_scheduler_8cpp_source_1l00986"/>00986 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(task-&gt;<link linkend="_group___x_u_t_i_l_s_1ga346ca77ef8158f1b6ae78e57a9014144">CheckCondition</link>(xscheduler-&gt;xdatetimeactual,&#32;task-&gt;<link linkend="_group___x_u_t_i_l_s_1gacb32be07ce22adbf4202fc2a5b24bd2b">GetXTimer</link>()))
<anchor xml:id="__x_scheduler_8cpp_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_scheduler_8cpp_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xscheduler-&gt;indextask++;
<anchor xml:id="__x_scheduler_8cpp_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xscheduler-&gt;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l00991"/>00991 
<anchor xml:id="__x_scheduler_8cpp_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_c_h_e_d_u_l_e_r___x_e_v_e_n_t">XSCHEDULER_XEVENT</link>&#32;xevent(xscheduler,&#32;<link linkend="__x_event_8h_1aabf5f0b55ced84b808fb2c2e45dbb1e8a15553b6b979ac77333c3538da7c70d4b">XEVENT_TYPE_SCHEDULER</link>);
<anchor xml:id="__x_scheduler_8cpp_source_1l00993"/>00993 
<anchor xml:id="__x_scheduler_8cpp_source_1l00994"/>00994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetScheduler(xscheduler);
<anchor xml:id="__x_scheduler_8cpp_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetTask(task);
<anchor xml:id="__x_scheduler_8cpp_source_1l00996"/>00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xevent.SetDateTime(xscheduler-&gt;xdatetimeactual);
<anchor xml:id="__x_scheduler_8cpp_source_1l00997"/>00997 
<anchor xml:id="__x_scheduler_8cpp_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gadb65926d5f56410c9243d2f7c69a87a3">PostEvent</link>(&amp;xevent);
<anchor xml:id="__x_scheduler_8cpp_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l01002"/>01002 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_scheduler_8cpp_source_1l01003"/>01003 &#32;&#32;&#32;
<anchor xml:id="__x_scheduler_8cpp_source_1l01004"/>01004 &#32;&#32;xscheduler-&gt;indextask++;
<anchor xml:id="__x_scheduler_8cpp_source_1l01005"/>01005 &#32;&#32;xscheduler-&gt;xmutexscheduler-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__x_scheduler_8cpp_source_1l01006"/>01006 }
<anchor xml:id="__x_scheduler_8cpp_source_1l01007"/>01007 
<anchor xml:id="__x_scheduler_8cpp_source_1l01008"/>01008 
<anchor xml:id="__x_scheduler_8cpp_source_1l01017"/>01017 <emphasis role="keywordtype">void</emphasis>&#32;XSCHEDULER::Clean&#32;()
<anchor xml:id="__x_scheduler_8cpp_source_1l01018"/>01018 {
<anchor xml:id="__x_scheduler_8cpp_source_1l01019"/>01019 &#32;&#32;xmutexscheduler&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l01020"/>01020 &#32;&#32;xthreadscheduler&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l01021"/>01021 &#32;&#32;xtimerwait&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l01022"/>01022 
<anchor xml:id="__x_scheduler_8cpp_source_1l01023"/>01023 &#32;&#32;isactive&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_scheduler_8cpp_source_1l01024"/>01024 
<anchor xml:id="__x_scheduler_8cpp_source_1l01025"/>01025 &#32;&#32;xdatetimeactual&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_scheduler_8cpp_source_1l01026"/>01026 &#32;&#32;indextask&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_scheduler_8cpp_source_1l01027"/>01027 }
<anchor xml:id="__x_scheduler_8cpp_source_1l01028"/>01028 
<anchor xml:id="__x_scheduler_8cpp_source_1l01029"/>01029 
<anchor xml:id="__x_scheduler_8cpp_source_1l01030"/>01030 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l01031"/>01031 
<anchor xml:id="__x_scheduler_8cpp_source_1l01032"/>01032 
<anchor xml:id="__x_scheduler_8cpp_source_1l01033"/>01033 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_scheduler_8cpp_source_1l01034"/>01034 
</programlisting></section>
