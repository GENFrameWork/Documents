<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__hash_c_o_m_p128v1_8cpp_source" xml:lang="en-US">
<title>HashCOMP128v1.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/HashCOMP128v1.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00001"/>00001 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00031"/>00031 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00033"/>00033 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00035"/>00035 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00036"/>00036 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00039"/>00039 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_c_o_m_p128v1_8h">HashCOMP128v1.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00041"/>00041 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00043"/>00043 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00045"/>00045 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00047"/>00047 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00049"/>00049 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00050"/>00050 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00051"/>00051 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00053"/>00053 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00054"/>00054 <emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;HASHCOMP128V1::table0[512]&#32;&#32;&#32;&#32;=&#32;&#32;&#32;{&#32;102,177,186,162,&#32;&#32;2,156,112,&#32;75,&#32;55,&#32;25,&#32;&#32;8,&#32;12,251,193,246,188,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;109,213,151,&#32;53,&#32;42,&#32;79,191,115,233,242,164,223,209,148,108,161,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;252,&#32;37,244,&#32;47,&#32;64,211,&#32;&#32;6,237,185,160,139,113,&#32;76,138,&#32;59,&#32;70,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;67,&#32;26,&#32;13,157,&#32;63,179,221,&#32;30,214,&#32;36,166,&#32;69,152,124,207,116,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;247,194,&#32;41,&#32;84,&#32;71,&#32;&#32;1,&#32;49,&#32;14,&#32;95,&#32;35,169,&#32;21,&#32;96,&#32;78,215,225,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;182,243,&#32;28,&#32;92,201,118,&#32;&#32;4,&#32;74,248,128,&#32;17,&#32;11,146,132,245,&#32;48,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;149,&#32;90,120,&#32;39,&#32;87,230,106,232,175,&#32;19,126,190,202,141,137,176,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;250,&#32;27,101,&#32;40,219,227,&#32;58,&#32;20,&#32;51,178,&#32;98,216,140,&#32;22,&#32;32,121,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;61,103,203,&#32;72,&#32;29,110,&#32;85,212,180,204,150,183,&#32;15,&#32;66,172,196,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;56,197,158,&#32;&#32;0,100,&#32;45,153,&#32;&#32;7,144,222,163,167,&#32;60,135,210,231,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;174,165,&#32;38,249,224,&#32;34,220,229,217,208,241,&#32;68,206,189,125,255,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;239,&#32;54,168,&#32;89,123,122,&#32;73,145,117,234,143,&#32;99,129,200,192,&#32;82,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;104,170,136,235,&#32;93,&#32;81,205,173,236,&#32;94,105,&#32;52,&#32;46,228,198,&#32;&#32;5,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;57,254,&#32;97,155,142,133,199,171,187,&#32;50,&#32;65,181,127,107,147,226,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;184,218,131,&#32;33,&#32;77,&#32;86,&#32;31,&#32;44,&#32;88,&#32;62,238,&#32;18,&#32;24,&#32;43,154,&#32;23,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;80,159,134,111,&#32;&#32;9,114,&#32;&#32;3,&#32;91,&#32;16,130,&#32;83,&#32;10,195,240,253,119,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;177,102,162,186,156,&#32;&#32;2,&#32;75,112,&#32;25,&#32;55,&#32;12,&#32;&#32;8,193,251,188,246,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;213,109,&#32;53,151,&#32;79,&#32;42,115,191,242,233,223,164,148,209,161,108,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;37,252,&#32;47,244,211,&#32;64,237,&#32;&#32;6,160,185,113,139,138,&#32;76,&#32;70,&#32;59,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;26,&#32;67,157,&#32;13,179,&#32;63,&#32;30,221,&#32;36,214,&#32;69,166,124,152,116,207,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;194,247,&#32;84,&#32;41,&#32;&#32;1,&#32;71,&#32;14,&#32;49,&#32;35,&#32;95,&#32;21,169,&#32;78,&#32;96,225,215,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;243,182,&#32;92,&#32;28,118,201,&#32;74,&#32;&#32;4,128,248,&#32;11,&#32;17,132,146,&#32;48,245,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;90,149,&#32;39,120,230,&#32;87,232,106,&#32;19,175,190,126,141,202,176,137,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;27,250,&#32;40,101,227,219,&#32;20,&#32;58,178,&#32;51,216,&#32;98,&#32;22,140,121,&#32;32,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;103,&#32;61,&#32;72,203,110,&#32;29,212,&#32;85,204,180,183,150,&#32;66,&#32;15,196,172,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;197,&#32;56,&#32;&#32;0,158,&#32;45,100,&#32;&#32;7,153,222,144,167,163,135,&#32;60,231,210,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;165,174,249,&#32;38,&#32;34,224,229,220,208,217,&#32;68,241,189,206,255,125,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;54,239,&#32;89,168,122,123,145,&#32;73,234,117,&#32;99,143,200,129,&#32;82,192,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;170,104,235,136,&#32;81,&#32;93,173,205,&#32;94,236,&#32;52,105,228,&#32;46,&#32;&#32;5,198,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;254,&#32;57,155,&#32;97,133,142,171,199,&#32;50,187,181,&#32;65,107,127,226,147,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;218,184,&#32;33,131,&#32;86,&#32;77,&#32;44,&#32;31,&#32;62,&#32;88,&#32;18,238,&#32;43,&#32;24,&#32;23,154,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;159,&#32;80,111,134,114,&#32;&#32;9,&#32;91,&#32;&#32;3,130,&#32;16,&#32;10,&#32;83,240,195,119,253
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00087"/>00087 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00088"/>00088 <emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;HASHCOMP128V1::table1[256]&#32;&#32;&#32;&#32;=&#32;&#32;&#32;{&#32;&#32;&#32;19,&#32;11,&#32;80,114,&#32;43,&#32;&#32;1,&#32;69,&#32;94,&#32;39,&#32;18,127,117,&#32;97,&#32;&#32;3,&#32;85,&#32;43,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;27,124,&#32;70,&#32;83,&#32;47,&#32;71,&#32;63,&#32;10,&#32;47,&#32;89,&#32;79,&#32;&#32;4,&#32;14,&#32;59,&#32;11,&#32;&#32;5,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;35,107,103,&#32;68,&#32;21,&#32;86,&#32;36,&#32;91,&#32;85,126,&#32;32,&#32;50,109,&#32;94,120,&#32;&#32;6,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;53,&#32;79,&#32;28,&#32;45,&#32;99,&#32;95,&#32;41,&#32;34,&#32;88,&#32;68,&#32;93,&#32;55,110,125,105,&#32;20,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;90,&#32;80,&#32;76,&#32;96,&#32;23,&#32;60,&#32;89,&#32;64,121,&#32;56,&#32;14,&#32;74,101,&#32;&#32;8,&#32;19,&#32;78,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;76,&#32;66,104,&#32;46,111,&#32;50,&#32;32,&#32;&#32;3,&#32;39,&#32;&#32;0,&#32;58,&#32;25,&#32;92,&#32;22,&#32;18,&#32;51,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;57,&#32;65,119,116,&#32;22,109,&#32;&#32;7,&#32;86,&#32;59,&#32;93,&#32;62,110,&#32;78,&#32;99,&#32;77,&#32;67,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;12,113,&#32;87,&#32;98,102,&#32;&#32;5,&#32;88,&#32;33,&#32;38,&#32;56,&#32;23,&#32;&#32;8,&#32;75,&#32;45,&#32;13,&#32;75,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;95,&#32;63,&#32;28,&#32;49,123,120,&#32;20,112,&#32;44,&#32;30,&#32;15,&#32;98,106,&#32;&#32;2,103,&#32;29,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;82,107,&#32;42,124,&#32;24,&#32;30,&#32;41,&#32;16,108,100,117,&#32;40,&#32;73,&#32;40,&#32;&#32;7,114,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;82,115,&#32;36,112,&#32;12,102,100,&#32;84,&#32;92,&#32;48,&#32;72,&#32;97,&#32;&#32;9,&#32;54,&#32;55,&#32;74,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;113,123,&#32;17,&#32;26,&#32;53,&#32;58,&#32;&#32;4,&#32;&#32;9,&#32;69,122,&#32;21,118,&#32;42,&#32;60,&#32;27,&#32;73,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;118,125,&#32;34,&#32;15,&#32;65,115,&#32;84,&#32;64,&#32;62,&#32;81,&#32;70,&#32;&#32;1,&#32;24,111,121,&#32;83,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;104,&#32;81,&#32;49,127,&#32;48,105,&#32;31,&#32;10,&#32;&#32;6,&#32;91,&#32;87,&#32;37,&#32;16,&#32;54,116,126,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;31,&#32;38,&#32;13,&#32;&#32;0,&#32;72,106,&#32;77,&#32;61,&#32;26,&#32;67,&#32;46,&#32;29,&#32;96,&#32;37,&#32;61,&#32;52,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;101,&#32;17,&#32;44,108,&#32;71,&#32;52,&#32;66,&#32;57,&#32;33,&#32;51,&#32;25,&#32;90,&#32;&#32;2,119,122,&#32;35
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00105"/>00105 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00106"/>00106 <emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;HASHCOMP128V1::table2[128]&#32;&#32;&#32;&#32;=&#32;&#32;&#32;{&#32;&#32;&#32;52,&#32;50,&#32;44,&#32;&#32;6,&#32;21,&#32;49,&#32;41,&#32;59,&#32;39,&#32;51,&#32;25,&#32;32,&#32;51,&#32;47,&#32;52,&#32;43,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;37,&#32;&#32;4,&#32;40,&#32;34,&#32;61,&#32;12,&#32;28,&#32;&#32;4,&#32;58,&#32;23,&#32;&#32;8,&#32;15,&#32;12,&#32;22,&#32;&#32;9,&#32;18,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;55,&#32;10,&#32;33,&#32;35,&#32;50,&#32;&#32;1,&#32;43,&#32;&#32;3,&#32;57,&#32;13,&#32;62,&#32;14,&#32;&#32;7,&#32;42,&#32;44,&#32;59,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;62,&#32;57,&#32;27,&#32;&#32;6,&#32;&#32;8,&#32;31,&#32;26,&#32;54,&#32;41,&#32;22,&#32;45,&#32;20,&#32;39,&#32;&#32;3,&#32;16,&#32;56,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;48,&#32;&#32;2,&#32;21,&#32;28,&#32;36,&#32;42,&#32;60,&#32;33,&#32;34,&#32;18,&#32;&#32;0,&#32;11,&#32;24,&#32;10,&#32;17,&#32;61,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;29,&#32;14,&#32;45,&#32;26,&#32;55,&#32;46,&#32;11,&#32;17,&#32;54,&#32;46,&#32;&#32;9,&#32;24,&#32;30,&#32;60,&#32;32,&#32;&#32;0,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;20,&#32;38,&#32;&#32;2,&#32;30,&#32;58,&#32;35,&#32;&#32;1,&#32;16,&#32;56,&#32;40,&#32;23,&#32;48,&#32;13,&#32;19,&#32;19,&#32;27,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;31,&#32;53,&#32;47,&#32;38,&#32;63,&#32;15,&#32;49,&#32;&#32;5,&#32;37,&#32;53,&#32;25,&#32;36,&#32;63,&#32;29,&#32;&#32;5,&#32;&#32;7
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00115"/>00115 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00116"/>00116 <emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;HASHCOMP128V1::table3[64]&#32;&#32;&#32;&#32;&#32;=&#32;&#32;&#32;{&#32;&#32;&#32;&#32;1,&#32;&#32;5,&#32;29,&#32;&#32;6,&#32;25,&#32;&#32;1,&#32;18,&#32;23,&#32;17,&#32;19,&#32;&#32;0,&#32;&#32;9,&#32;24,&#32;25,&#32;&#32;6,&#32;31,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;28,&#32;20,&#32;24,&#32;30,&#32;&#32;4,&#32;27,&#32;&#32;3,&#32;13,&#32;15,&#32;16,&#32;14,&#32;18,&#32;&#32;4,&#32;&#32;3,&#32;&#32;8,&#32;&#32;9,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;20,&#32;&#32;0,&#32;12,&#32;26,&#32;21,&#32;&#32;8,&#32;28,&#32;&#32;2,&#32;29,&#32;&#32;2,&#32;15,&#32;&#32;7,&#32;11,&#32;22,&#32;14,&#32;10,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;17,&#32;21,&#32;12,&#32;30,&#32;26,&#32;27,&#32;16,&#32;31,&#32;11,&#32;&#32;7,&#32;13,&#32;23,&#32;10,&#32;&#32;5,&#32;22,&#32;19
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00121"/>00121 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00122"/>00122 <emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;HASHCOMP128V1::table4[32]&#32;&#32;&#32;&#32;&#32;=&#32;&#32;&#32;{&#32;&#32;&#32;15,&#32;12,&#32;10,&#32;&#32;4,&#32;&#32;1,&#32;14,&#32;11,&#32;&#32;7,&#32;&#32;5,&#32;&#32;0,&#32;14,&#32;&#32;7,&#32;&#32;1,&#32;&#32;2,&#32;13,&#32;&#32;8,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;10,&#32;&#32;3,&#32;&#32;4,&#32;&#32;9,&#32;&#32;6,&#32;&#32;0,&#32;&#32;3,&#32;&#32;2,&#32;&#32;5,&#32;&#32;6,&#32;&#32;8,&#32;&#32;9,&#32;11,&#32;13,&#32;15,&#32;12
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00125"/>00125 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00126"/>00126 <emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;HASHCOMP128V1::table[5]&#32;&#32;&#32;&#32;&#32;&#32;=&#32;&#32;&#32;{&#32;&#32;table0,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;table1,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;table2,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;table3,
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;table4
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00132"/>00132 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00133"/>00133 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00134"/>00134 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00135"/>00135 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00136"/>00136 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00137"/>00137 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00138"/>00138 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00139"/>00139 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00147"/><link linkend="_group___c_i_p_h_e_r_1gadd7b39763f9d5e6a6b2aa5a7b8513f25">00147</link> <link linkend="_group___c_i_p_h_e_r_1gadd7b39763f9d5e6a6b2aa5a7b8513f25">HASHCOMP128V1::HASHCOMP128V1</link>()&#32;:&#32;<link linkend="_class_h_a_s_h">HASH</link>()
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00148"/>00148 {
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00149"/>00149 &#32;&#32;Clean();
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00150"/>00150 }
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00151"/>00151 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00152"/>00152 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00161"/><link linkend="_group___c_i_p_h_e_r_1ga9873e920835bc0fd53a787b0327f8bf4">00161</link> <link linkend="_group___c_i_p_h_e_r_1ga9873e920835bc0fd53a787b0327f8bf4">HASHCOMP128V1::~HASHCOMP128V1</link>()
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00162"/>00162 {
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00163"/>00163 &#32;&#32;Clean();
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00164"/>00164 }
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00165"/>00165 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00166"/>00166 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00180"/><link linkend="_group___c_i_p_h_e_r_1gac3f70bbc1544c85b77ac5761319b5578">00180</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1gac3f70bbc1544c85b77ac5761319b5578">HASHCOMP128V1::SetInput</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;rand,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;ki,<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;xbuffer)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00181"/>00181 {
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00182"/>00182 &#32;&#32;xbuffer.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(rand&#32;&#32;,&#32;<link linkend="__hash_c_o_m_p128v1_8h_1ad85c10479a056838f8dda446ae552038">HASHCOMP128V1_RAND_SIZE</link>);
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00183"/>00183 &#32;&#32;xbuffer.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(ki&#32;&#32;&#32;&#32;,&#32;<link linkend="__hash_c_o_m_p128v1_8h_1a0a16213316efef931b754d3a92cc2135">HASHCOMP128V1_KI_SIZE</link>);
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00184"/>00184 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00185"/>00185 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00186"/>00186 }
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00187"/>00187 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00188"/>00188 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00201"/><link linkend="_group___c_i_p_h_e_r_1gad5e64b9ce0b06a0fc05cfbf4bcde7669">00201</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1gad5e64b9ce0b06a0fc05cfbf4bcde7669">HASHCOMP128V1::Do</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00202"/>00202 {
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00203"/>00203 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(size!=&#32;(<link linkend="__hash_c_o_m_p128v1_8h_1ad85c10479a056838f8dda446ae552038">HASHCOMP128V1_RAND_SIZE</link>&#32;+&#32;<link linkend="__hash_c_o_m_p128v1_8h_1a0a16213316efef931b754d3a92cc2135">HASHCOMP128V1_KI_SIZE</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00204"/>00204 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00205"/>00205 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00206"/>00206 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00207"/>00207 &#32;&#32;Make(input);
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00208"/>00208 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00209"/>00209 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;<link linkend="__hash_c_o_m_p128v1_8h_1acadaeef87521bb81f8ae591f8e6b6740">HASHCOMP128V1_RESULT_SIZE</link>;c++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)digest[c]);
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00213"/>00213 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00214"/>00214 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00215"/>00215 }
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00216"/>00216 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00217"/>00217 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00227"/><link linkend="_group___c_i_p_h_e_r_1ga6e2a1d70cdd3f5b0f27270302af5abfe">00227</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga6e2a1d70cdd3f5b0f27270302af5abfe">HASHCOMP128V1::GetDefaultSize</link>()
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00228"/>00228 {
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00229"/>00229 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__hash_c_o_m_p128v1_8h_1acadaeef87521bb81f8ae591f8e6b6740">HASHCOMP128V1_RESULT_SIZE</link>;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00230"/>00230 }
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00231"/>00231 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00232"/>00232 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00244"/><link linkend="_group___c_i_p_h_e_r_1ga0010b3486ba56ddfd525f8bdd7eaa9c4">00244</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga0010b3486ba56ddfd525f8bdd7eaa9c4">HASHCOMP128V1::GetSRES</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;SRES)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00245"/>00245 {
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00246"/>00246 &#32;&#32;SRES.<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00247"/>00247 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00248"/>00248 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>()!=<link linkend="__hash_c_o_m_p128v1_8h_1acadaeef87521bb81f8ae591f8e6b6740">HASHCOMP128V1_RESULT_SIZE</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00249"/>00249 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00250"/>00250 &#32;&#32;SRES.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),<link linkend="__hash_c_o_m_p128v1_8h_1aaa6e083ad87b7e4ee2467df90e345562">HASHCOMP128V1_SRES_SIZE</link>);
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00251"/>00251 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00252"/>00252 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00253"/>00253 }
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00254"/>00254 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00255"/>00255 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00267"/><link linkend="_group___c_i_p_h_e_r_1ga21d55798e91021d1a36cfeec554b09a3">00267</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga21d55798e91021d1a36cfeec554b09a3">HASHCOMP128V1::GetKc</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;Kc)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00268"/>00268 {
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00269"/>00269 &#32;&#32;Kc.<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00270"/>00270 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00271"/>00271 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>()!=<link linkend="__hash_c_o_m_p128v1_8h_1acadaeef87521bb81f8ae591f8e6b6740">HASHCOMP128V1_RESULT_SIZE</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00272"/>00272 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00273"/>00273 &#32;&#32;Kc.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(&amp;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()[<link linkend="__hash_c_o_m_p128v1_8h_1aaa6e083ad87b7e4ee2467df90e345562">HASHCOMP128V1_SRES_SIZE</link>],&#32;<link linkend="__hash_c_o_m_p128v1_8h_1ae68bc5df0d91596a375523fb889e321d">HASHCOMP128V1_KC_SIZE</link>);
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00274"/>00274 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00275"/>00275 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00276"/>00276 }
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00277"/>00277 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00278"/>00278 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00288"/>00288 <emphasis role="keywordtype">void</emphasis>&#32;HASHCOMP128V1::Make(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00289"/>00289 {
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00290"/>00290 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;x[32];
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00291"/>00291 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;bit[128];
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00292"/>00292 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;i;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00293"/>00293 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;j;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00294"/>00294 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;k;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00295"/>00295 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;l;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00296"/>00296 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;m;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00297"/>00297 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;n;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00298"/>00298 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;y;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00299"/>00299 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;z;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00300"/>00300 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;next_bit;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00301"/>00301 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00302"/>00302 &#32;&#32;<emphasis role="comment">//&#32;Load&#32;RAND&#32;into&#32;last&#32;16&#32;bytes&#32;of&#32;input</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00303"/>00303 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=16;&#32;i&lt;32;&#32;i++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;x[i]&#32;=&#32;input[i];
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00307"/>00307 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00308"/>00308 &#32;&#32;<emphasis role="comment">//&#32;&#32;Loop&#32;eight&#32;times</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00309"/>00309 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=1;i&lt;9;i++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Load&#32;ki&#32;into&#32;first&#32;16&#32;bytes&#32;of&#32;input</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=0;j&lt;16;j++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[j]&#32;=&#32;input[j];
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00316"/>00316 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Perform&#32;substitutions</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=0;j&lt;5;j++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(k=0;&#32;k&lt;(1&lt;&lt;j);k++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(l=0;&#32;l&lt;(1&lt;&lt;(4-j));l++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m&#32;&#32;&#32;&#32;=&#32;l&#32;+&#32;k*(1&lt;&lt;(5-j));
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;&#32;&#32;&#32;=&#32;m&#32;+&#32;(1&lt;&lt;(4-j));
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;&#32;&#32;&#32;=&#32;(x[m]+2*x[n])&#32;%&#32;(1&lt;&lt;(9-j));
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;&#32;&#32;&#32;=&#32;(2*x[m]+x[n])&#32;%&#32;(1&lt;&lt;(9-j));
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[m]&#32;=&#32;table[j][y];
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[n]&#32;=&#32;table[j][z];
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00333"/>00333 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;(&#32;Form&#32;bits&#32;from&#32;bytes&#32;)&#32;*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=0;j&lt;32;j++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(k=0;k&lt;4;k++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bit[4*j+k]&#32;=&#32;(x[j]&gt;&gt;(3-k))&#32;&amp;&#32;1;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00342"/>00342 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;(&#32;Permutation&#32;but&#32;not&#32;on&#32;the&#32;last&#32;loop&#32;)&#32;*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&lt;8)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=0;j&lt;16;j++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[j+16]&#32;=&#32;0;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(k=0;k&lt;8;k++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;next_bit&#32;=&#32;((8*j&#32;+&#32;k)*17)&#32;%&#32;128;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x[j+16]&#32;|=&#32;bit[next_bit]&#32;&lt;&lt;&#32;(7-k);
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00356"/>00356 &#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00357"/>00357 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00358"/>00358 &#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00359"/>00359 <emphasis role="comment">&#32;&#32;&#32;*&#32;(&#32;At&#32;this&#32;stage&#32;the&#32;vector&#32;x[]&#32;consists&#32;of&#32;32&#32;nibbles.</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00360"/>00360 <emphasis role="comment">&#32;&#32;&#32;*&#32;&#32;&#32;The&#32;first&#32;8&#32;of&#32;these&#32;are&#32;taken&#32;as&#32;the&#32;output&#32;SRES.&#32;)</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00361"/>00361 <emphasis role="comment">&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00362"/>00362 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00363"/>00363 &#32;&#32;<emphasis role="comment">/*&#32;The&#32;remainder&#32;of&#32;the&#32;code&#32;is&#32;not&#32;given&#32;explicitly&#32;in&#32;the</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00364"/>00364 <emphasis role="comment">&#32;&#32;&#32;*&#32;standard,&#32;but&#32;was&#32;derived&#32;by&#32;reverse-engineering.</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00365"/>00365 <emphasis role="comment">&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00366"/>00366 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00367"/>00367 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00368"/>00368 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;i&lt;4;i++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;digest[i]&#32;&#32;&#32;=&#32;(x[2*i]&lt;&lt;4)&#32;|&#32;x[2*i+1];
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00372"/>00372 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00373"/>00373 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;i&lt;6;i++)
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;digest[4+i]&#32;=&#32;(x[2*i+18]&lt;&lt;6)&#32;|&#32;(x[2*i+18+1]&lt;&lt;2)&#32;|&#32;(x[2*i+18+2]&gt;&gt;2);
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00377"/>00377 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00378"/>00378 &#32;&#32;digest[4+6]&#32;=&#32;(x[2*6+18]&lt;&lt;6)&#32;|&#32;(x[2*6+18+1]&lt;&lt;2);
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00379"/>00379 &#32;&#32;digest[4+7]&#32;=&#32;0;
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00380"/>00380 }
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00381"/>00381 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00382"/>00382 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00391"/>00391 <emphasis role="keywordtype">void</emphasis>&#32;HASHCOMP128V1::Clean()
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00392"/>00392 {
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00393"/>00393 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00394"/>00394 }
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00395"/>00395 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00396"/>00396 
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00397"/>00397 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8cpp_source_1l00398"/>00398 
</programlisting></section>
