<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__hash_c_r_c32_8cpp_source" xml:lang="en-US">
<title>HashCRC32.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/HashCRC32.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__hash_c_r_c32_8cpp_source_1l00001"/>00001 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00031"/>00031 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00033"/>00033 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00035"/>00035 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00036"/>00036 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00039"/>00039 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_c_r_c32_8h">HashCRC32.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00041"/>00041 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00043"/>00043 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00047"/>00047 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00049"/>00049 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00051"/>00051 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00052"/>00052 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00053"/>00053 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00055"/>00055 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00056"/><link linkend="__hash_c_r_c32_8cpp_1a6c0f2853cb742d293fc6c1cc4cae0bbd">00056</link> <emphasis role="preprocessor">#define&#32;&#32;HASHCRC32_INI&#32;&#32;&#32;&#32;&#32;&#32;0xEDB88320</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00057"/>00057 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00058"/>00058 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00059"/>00059 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00060"/>00060 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00061"/>00061 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00062"/>00062 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00063"/>00063 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00064"/>00064 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00072"/><link linkend="_group___c_i_p_h_e_r_1ga308a61662f2dc30e72bcc87d938633b6">00072</link> <link linkend="_group___c_i_p_h_e_r_1ga308a61662f2dc30e72bcc87d938633b6">HASHCRC32::HASHCRC32</link>()&#32;:&#32;<link linkend="_class_h_a_s_h">HASH</link>()
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00073"/>00073 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00074"/>00074 &#32;&#32;Clean();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00075"/>00075 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00076"/>00076 &#32;&#32;<link linkend="_class_h_a_s_h_1ad5af89903501908c4dcda95b37a5a785">type</link>&#32;=&#32;<link linkend="__hash_8h_1acf4dd3cf891bcd5c364340e2828a7ec9a296be8405ebed561f3c4c27c5f7a09bd">HASHTYPE_CRC32</link>;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00077"/>00077 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00078"/>00078 &#32;&#32;resulttmp&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00079"/>00079 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00080"/>00080 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;value&#32;=&#32;0xffffffff;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00081"/>00081 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)value);
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00082"/>00082 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00083"/>00083 &#32;&#32;Ini();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00084"/>00084 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00085"/>00085 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00086"/>00086 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00095"/><link linkend="_group___c_i_p_h_e_r_1ga21e9aac0d98635727b204194e7346d8a">00095</link> <link linkend="_group___c_i_p_h_e_r_1ga21e9aac0d98635727b204194e7346d8a">HASHCRC32::~HASHCRC32</link>()
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00096"/>00096 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00097"/>00097 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(resulttmp)
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;resulttmp;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;resulttmp&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00102"/>00102 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00103"/>00103 &#32;&#32;Clean();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00104"/>00104 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00105"/>00105 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00106"/>00106 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00119"/><link linkend="_group___c_i_p_h_e_r_1ga170fa5c716219e92d4724553d6e8e0ce">00119</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga170fa5c716219e92d4724553d6e8e0ce">HASHCRC32::Do</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size)
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00120"/>00120 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00121"/>00121 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00122"/>00122 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00123"/>00123 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;value&#32;=&#32;0;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00124"/>00124 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00125"/>00125 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(value);
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00126"/>00126 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00127"/>00127 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;c&lt;size;c++)
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;Update(value,&#32;(*input));
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;input++;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00132"/>00132 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00133"/>00133 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)value);
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00134"/>00134 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00135"/>00135 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00136"/>00136 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00137"/>00137 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00138"/>00138 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00148"/><link linkend="_group___c_i_p_h_e_r_1gab01cc6a04a2c4ee67dcca98c7b233913">00148</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1gab01cc6a04a2c4ee67dcca98c7b233913">HASHCRC32::ResetResult</link>()
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00149"/>00149 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00150"/>00150 &#32;&#32;<link linkend="_group___c_i_p_h_e_r_1ga6844bc505aecfe2b878ef45f9d905e3e">HASH::ResetResult</link>();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00151"/>00151 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00152"/>00152 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00153"/>00153 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;value&#32;=&#32;0xffffffff;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00154"/>00154 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)value);
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00155"/>00155 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00156"/>00156 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00157"/>00157 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00158"/>00158 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00159"/>00159 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00169"/><link linkend="_group___c_i_p_h_e_r_1ga3193a4f79d28acdb75c83c2e64721b8e">00169</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga3193a4f79d28acdb75c83c2e64721b8e">HASHCRC32::GetDefaultSize</link>()
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00170"/>00170 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00171"/>00171 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00172"/>00172 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00173"/>00173 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00174"/>00174 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00184"/><link linkend="_group___c_i_p_h_e_r_1ga6383d206183b75a327dc10303b572578">00184</link> <link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;<link linkend="_group___c_i_p_h_e_r_1ga6383d206183b75a327dc10303b572578">HASHCRC32::GetResult</link>()
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00185"/>00185 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00186"/>00186 &#32;&#32;<link linkend="_group___c_i_p_h_e_r_1gab33e363f6374a0e559e99f2f80e5abf6">GetResultCRC32</link>();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00187"/>00187 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00188"/>00188 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00189"/>00189 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00190"/>00190 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00191"/>00191 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00203"/><link linkend="_group___c_i_p_h_e_r_1gae46571cf27e25682f1bce183adf6e52a">00203</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;<link linkend="_group___c_i_p_h_e_r_1ga6383d206183b75a327dc10303b572578">HASHCRC32::GetResult</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;resultsize)
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00204"/>00204 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00205"/>00205 &#32;&#32;<link linkend="_group___c_i_p_h_e_r_1gab33e363f6374a0e559e99f2f80e5abf6">GetResultCRC32</link>();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00206"/>00206 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00207"/>00207 &#32;&#32;resultsize&#32;&#32;=&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00208"/>00208 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00209"/>00209 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00210"/>00210 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00211"/>00211 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00212"/>00212 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00222"/><link linkend="_group___c_i_p_h_e_r_1gab33e363f6374a0e559e99f2f80e5abf6">00222</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___c_i_p_h_e_r_1gab33e363f6374a0e559e99f2f80e5abf6">HASHCRC32::GetResultCRC32</link>()
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00223"/>00223 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00224"/>00224 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;value&#32;=&#32;0;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00225"/>00225 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00226"/>00226 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00227"/>00227 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00228"/>00228 &#32;&#32;resulttmp-&gt;<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(value);
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00229"/>00229 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00230"/>00230 &#32;&#32;value&#32;^=&#32;0xffffffff;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00231"/>00231 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00232"/>00232 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)value);
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00233"/>00233 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00234"/>00234 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00235"/>00235 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00236"/>00236 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00237"/>00237 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00245"/>00245 <emphasis role="keywordtype">void</emphasis>&#32;HASHCRC32::Ini()
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00246"/>00246 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00247"/>00247 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;crc;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00248"/>00248 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;i;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00249"/>00249 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;j;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00250"/>00250 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00251"/>00251 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;256;&#32;i++)
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;crc&#32;=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;i;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00254"/>00254 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=0;&#32;j&lt;8;&#32;j++)
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(crc&#32;&amp;&#32;0x00000001)
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;crc&#32;=&#32;(&#32;crc&#32;&gt;&gt;&#32;1&#32;)&#32;^&#32;<link linkend="__hash_c_r_c32_8cpp_1a6c0f2853cb742d293fc6c1cc4cae0bbd">HASHCRC32_INI</link>;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;crc&#32;=&#32;&#32;&#32;crc&#32;&gt;&gt;&#32;1;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00261"/>00261 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;table[i]&#32;=&#32;crc;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00264"/>00264 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00265"/>00265 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00266"/>00266 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00279"/>00279 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;HASHCRC32::Update(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;CRC32,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;data)
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00280"/>00280 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00281"/>00281 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;tmp;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00282"/>00282 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;long_c;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00283"/>00283 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00284"/>00284 &#32;&#32;long_c&#32;=&#32;0x000000FF&#32;&amp;&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;data;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00285"/>00285 &#32;&#32;tmp&#32;&#32;&#32;&#32;=&#32;CRC32&#32;^&#32;long_c;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00286"/>00286 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00287"/>00287 &#32;&#32;CRC32&#32;=&#32;(CRC32&#32;&gt;&gt;&#32;8)&#32;^&#32;table[&#32;tmp&#32;&amp;&#32;0xff&#32;];
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00288"/>00288 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00289"/>00289 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CRC32;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00290"/>00290 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00291"/>00291 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00292"/>00292 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00293"/>00293 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00302"/>00302 <emphasis role="keywordtype">void</emphasis>&#32;HASHCRC32::Clean()
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00303"/>00303 {
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00304"/>00304 &#32;&#32;resulttmp&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00305"/>00305 }
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00306"/>00306 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00307"/>00307 
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00308"/>00308 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_r_c32_8cpp_source_1l00309"/>00309 
</programlisting></section>
