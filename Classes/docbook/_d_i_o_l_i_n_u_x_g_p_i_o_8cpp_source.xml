<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source" xml:lang="en-US">
<title>DIOLINUXGPIO.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Linux/DIOLINUXGPIO.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00031"/>00031 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00033"/>00033 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00035"/>00035 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_l_i_n_u_x_g_p_i_o_8h">DIOLINUXGPIO.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00041"/>00041 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&lt;fcntl.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&lt;ctype.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&lt;sys/mman.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&lt;sys/types.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#include&#32;&lt;sys/stat.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&lt;sys/ioctl.h&gt;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00052"/>00052 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00055"/>00055 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_file_8h">XFile.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00056"/>00056 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00060"/>00060 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00061"/>00061 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00062"/>00062 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00064"/>00064 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00065"/>00065 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00066"/>00066 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00067"/>00067 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00068"/>00068 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00069"/>00069 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00070"/>00070 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00071"/>00071 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00079"/><link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gac96e23d1ed639f3a624ce4568f8e29ad">00079</link> <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gac96e23d1ed639f3a624ce4568f8e29ad">DIOLINUXGPIO::DIOLINUXGPIO</link>()&#32;:&#32;<link linkend="_class_d_i_o_g_p_i_o">DIOGPIO</link>()
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00080"/>00080 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00081"/>00081 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00082"/>00082 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00083"/>00083 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00084"/>00084 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00093"/><link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gaaeb5528febbdaf25b4554ca51e373b7c">00093</link> <link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gaaeb5528febbdaf25b4554ca51e373b7c">DIOLINUXGPIO::~DIOLINUXGPIO</link>()
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00094"/>00094 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00095"/>00095 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00096"/>00096 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00097"/>00097 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00098"/>00098 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00108"/><link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gace212bcbb05b758a01dc007b4f78eee2">00108</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gace212bcbb05b758a01dc007b4f78eee2">DIOLINUXGPIO::Ini</link>()
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00109"/>00109 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00110"/>00110 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00111"/>00111 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00113"/>00113 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00126"/><link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gaa39c3e629ce993866a3c624c95be102b">00126</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gaa39c3e629ce993866a3c624c95be102b">DIOLINUXGPIO::SetMode</link>(<link linkend="_class_d_i_o_g_p_i_o___e_n_t_r_y">DIOGPIO_ENTRY</link>*&#32;entry,&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;mode)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00127"/>00127 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00128"/>00128 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!entry)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00129"/>00129 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(GPIOExport_Add(entry-&gt;<link linkend="_group___d_a_t_a_i_o_1gadd16102922ecf6ff81f302e19e4c2d62">GetGPIO</link>()))
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIO_Export(entry-&gt;<link linkend="_group___d_a_t_a_i_o_1gadd16102922ecf6ff81f302e19e4c2d62">GetGPIO</link>(),&#32;<emphasis role="keyword">true</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00134"/>00134 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isinput&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00136"/>00136 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((mode&#32;&amp;&#32;<link linkend="__d_i_o_g_p_i_o_8h_1a35602bfdf7d8cd6a558027a378f50041">DIOGPIO_MODE_INPUT</link>)&#32;&#32;==&#32;<link linkend="__d_i_o_g_p_i_o_8h_1a35602bfdf7d8cd6a558027a378f50041">DIOGPIO_MODE_INPUT</link>)&#32;&#32;&#32;isinput&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00138"/>00138 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((mode&#32;&amp;&#32;<link linkend="__d_i_o_g_p_i_o_8h_1af43e26d0701212b8857b22becaa4c416">DIOGPIO_MODE_OUTPUT</link>)&#32;==&#32;<link linkend="__d_i_o_g_p_i_o_8h_1af43e26d0701212b8857b22becaa4c416">DIOGPIO_MODE_OUTPUT</link>)&#32;&#32;isinput&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GPIO_SetDirection(entry-&gt;<link linkend="_group___d_a_t_a_i_o_1gadd16102922ecf6ff81f302e19e4c2d62">GetGPIO</link>(),&#32;isinput);&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00141"/>00141 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00142"/>00142 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00143"/>00143 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00155"/><link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga3e967afabd02ae0f3095c57f02d00552">00155</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga3e967afabd02ae0f3095c57f02d00552">DIOLINUXGPIO::GetValue</link>(<link linkend="_class_d_i_o_g_p_i_o___e_n_t_r_y">DIOGPIO_ENTRY</link>*&#32;entry)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00156"/>00156 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!entry)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00158"/>00158 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(GPIOExport_Add(entry-&gt;<link linkend="_group___d_a_t_a_i_o_1gadd16102922ecf6ff81f302e19e4c2d62">GetGPIO</link>()))&#32;GPIO_Export(entry-&gt;<link linkend="_group___d_a_t_a_i_o_1gadd16102922ecf6ff81f302e19e4c2d62">GetGPIO</link>(),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00160"/>00160 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GPIO_GetData(entry-&gt;<link linkend="_group___d_a_t_a_i_o_1gadd16102922ecf6ff81f302e19e4c2d62">GetGPIO</link>());&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00162"/>00162 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00163"/>00163 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00164"/>00164 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00177"/><link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gaed5d4f3ae628becc9bfc382ab8a190c1">00177</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1gaed5d4f3ae628becc9bfc382ab8a190c1">DIOLINUXGPIO::SetValue</link>(<link linkend="_class_d_i_o_g_p_i_o___e_n_t_r_y">DIOGPIO_ENTRY</link>*&#32;entry,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;value)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00178"/>00178 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!entry)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00180"/>00180 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(GPIOExport_Add(entry-&gt;<link linkend="_group___d_a_t_a_i_o_1gadd16102922ecf6ff81f302e19e4c2d62">GetGPIO</link>()))&#32;GPIO_Export(entry-&gt;<link linkend="_group___d_a_t_a_i_o_1gadd16102922ecf6ff81f302e19e4c2d62">GetGPIO</link>(),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00182"/>00182 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00183"/>00183 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GPIO_SetData(entry-&gt;<link linkend="_group___d_a_t_a_i_o_1gadd16102922ecf6ff81f302e19e4c2d62">GetGPIO</link>(),&#32;value);&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00184"/>00184 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00185"/>00185 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00186"/>00186 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00196"/><link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga9c8653f3e01512d20e3904812c00ac15">00196</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___p_l_a_t_f_o_r_m___l_i_n_u_x_1ga9c8653f3e01512d20e3904812c00ac15">DIOLINUXGPIO::End</link>()
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00197"/>00197 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<link linkend="_class_x_v_e_c_t_o_r">XVECTOR&lt;XDWORD&gt;</link>*&#32;GPIO_exports&#32;=&#32;GPIOExport_Get();&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(GPIO_exports)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;GPIO_exports-&gt;<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();&#32;c++)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIO&#32;=&#32;GPIO_exports-&gt;<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(GPIO)&#32;GPIO_Export(GPIO,&#32;<emphasis role="keyword">false</emphasis>);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00206"/>00206 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIOExport_DeleteAll();
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00209"/>00209 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00210"/>00210 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00211"/>00211 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00212"/>00212 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00213"/>00213 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00225"/>00225 <emphasis role="keywordtype">bool</emphasis>&#32;DIOLINUXGPIO::GPIOExport_Add(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIO)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00226"/>00226 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00227"/>00227 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GPIOExport_IsExport(GPIO))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00228"/>00228 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00229"/>00229 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GPIOexports.<link linkend="_class_x_v_e_c_t_o_r_1a51a790aac8efd4603aee608ddcc83423">Add</link>(GPIO);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00230"/>00230 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00231"/>00231 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00232"/>00232 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00244"/>00244 <emphasis role="keywordtype">bool</emphasis>&#32;DIOLINUXGPIO::GPIOExport_IsExport(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIO)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00245"/>00245 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00246"/>00246 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;GPIOexports.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();&#32;c++)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;_GPIO&#32;=&#32;GPIOexports.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(GPIO&#32;==&#32;_GPIO)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00251"/>00251 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00252"/>00252 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00253"/>00253 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00254"/>00254 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00255"/>00255 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00265"/>00265 <link linkend="_class_x_v_e_c_t_o_r">XVECTOR&lt;XDWORD&gt;</link>*&#32;DIOLINUXGPIO::GPIOExport_Get()
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00266"/>00266 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00267"/>00267 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;GPIOexports;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00268"/>00268 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00269"/>00269 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00270"/>00270 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00280"/>00280 <emphasis role="keywordtype">bool</emphasis>&#32;DIOLINUXGPIO::GPIOExport_DeleteAll()&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00281"/>00281 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00282"/>00282 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(GPIOexports.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00283"/>00283 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00284"/>00284 &#32;&#32;GPIOexports.<link linkend="_class_x_v_e_c_t_o_r_1a57c72ab04fd14c60d1026e0a7b4a1887">DeleteAll</link>();
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00285"/>00285 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00286"/>00286 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00287"/>00287 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00288"/>00288 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00289"/>00289 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00302"/>00302 <emphasis role="keywordtype">bool</emphasis>&#32;DIOLINUXGPIO::GPIO_Export(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIO,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isexport)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00303"/>00303 {&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;<link linkend="_class_x_p_a_t_h">XPATH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xpath;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;GPIOdatastr;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00307"/>00307 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;xpath.<link linkend="_group___x_u_t_i_l_s_1ga2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%s/%s&quot;</emphasis>),&#32;<link linkend="__d_i_o_l_i_n_u_x_g_p_i_o_8h_1ad17264a1ea3c659a39fb4f9d52e29a5f">DIOLINUXGPIO_PATH</link>,&#32;(isexport?<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;export&quot;</emphasis>):<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;unexport&quot;</emphasis>)));
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00309"/>00309 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00310"/>00310 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;pathchar;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00311"/>00311 &#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00312"/>00312 &#32;&#32;xpath.<link linkend="_group___x_u_t_i_l_s_1gacdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(pathchar);&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(pathchar.<link linkend="_group___x_u_t_i_l_s_1ga66e2dbd897e717ce38e395d6ad87b754">GetPtrChar</link>(),&#32;O_WRONLY);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fd&#32;&gt;=&#32;0)&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIOdatastr.<link linkend="_group___x_u_t_i_l_s_1ga2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%d&quot;</emphasis>),&#32;GPIO);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;GPIOdatachar;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;GPIOdatastr.<link linkend="_group___x_u_t_i_l_s_1gacdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(GPIOdatachar);&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;write(fd,&#32;(<emphasis role="keywordtype">char</emphasis>*)GPIOdatachar.<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;GPIOdatastr.<link linkend="_group___x_u_t_i_l_s_1ga7c3fa0dd7b650399470c76192fbd4916">GetSize</link>());
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;close(fd);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>((status?<link linkend="__x_trace_8h_1ade81e1905d604ef7eb03d194ba1332d4">XTRACE_COLOR_BLUE</link>:<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>),&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[Linux&#32;GPIO]&#32;Export&#32;%s&#32;%s&quot;</emphasis>),&#32;xpath.Get(),&#32;GPIOdatastr.Get());
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00329"/>00329 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00331"/>00331 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00332"/>00332 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00333"/>00333 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00346"/>00346 <emphasis role="keywordtype">bool</emphasis>&#32;DIOLINUXGPIO::GPIO_SetDirection(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIO,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isinput)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00347"/>00347 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;<link linkend="_class_x_p_a_t_h">XPATH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xpath;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;GPIOdatastr;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;xpath.<link linkend="_group___x_u_t_i_l_s_1ga2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%s/gpio%d/direction&quot;</emphasis>),&#32;<link linkend="__d_i_o_l_i_n_u_x_g_p_i_o_8h_1ad17264a1ea3c659a39fb4f9d52e29a5f">DIOLINUXGPIO_PATH</link>,&#32;GPIO);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00354"/>00354 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;pathchar;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00355"/>00355 &#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00356"/>00356 &#32;&#32;xpath.<link linkend="_group___x_u_t_i_l_s_1gacdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(pathchar);&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(pathchar.<link linkend="_group___x_u_t_i_l_s_1ga66e2dbd897e717ce38e395d6ad87b754">GetPtrChar</link>(),&#32;O_WRONLY);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fd&#32;&gt;=&#32;0)&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIOdatastr.<link linkend="_group___x_u_t_i_l_s_1ga2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%s&quot;</emphasis>),&#32;(isinput?<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;in&quot;</emphasis>):<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;out&quot;</emphasis>)));
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00361"/>00361 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;GPIOdatachar;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;GPIOdatastr.<link linkend="_group___x_u_t_i_l_s_1gacdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(GPIOdatachar);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;write(fd,&#32;(<emphasis role="keywordtype">char</emphasis>*)GPIOdatachar.<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;GPIOdatastr.<link linkend="_group___x_u_t_i_l_s_1ga7c3fa0dd7b650399470c76192fbd4916">GetSize</link>());
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;close(fd);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>((status?<link linkend="__x_trace_8h_1ade81e1905d604ef7eb03d194ba1332d4">XTRACE_COLOR_BLUE</link>:<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>),&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[Linux&#32;GPIO]&#32;Set&#32;Direction&#32;%s&#32;%s&quot;</emphasis>),&#32;xpath.Get(),&#32;GPIOdatastr.Get());
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00373"/>00373 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00375"/>00375 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00376"/>00376 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00377"/>00377 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00389"/>00389 <emphasis role="keywordtype">bool</emphasis>&#32;DIOLINUXGPIO::GPIO_GetData(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIO)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00390"/>00390 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;<link linkend="_class_x_p_a_t_h">XPATH</link>&#32;&#32;&#32;xpath;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;xpath.<link linkend="_group___x_u_t_i_l_s_1ga2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%s/gpio%d/value&quot;</emphasis>),&#32;<link linkend="__d_i_o_l_i_n_u_x_g_p_i_o_8h_1ad17264a1ea3c659a39fb4f9d52e29a5f">DIOLINUXGPIO_PATH</link>,&#32;GPIO);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00396"/>00396 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;pathchar;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00397"/>00397 &#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00398"/>00398 &#32;&#32;xpath.<link linkend="_group___x_u_t_i_l_s_1gacdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(pathchar);&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(pathchar.<link linkend="_group___x_u_t_i_l_s_1ga66e2dbd897e717ce38e395d6ad87b754">GetPtrChar</link>(),&#32;O_RDONLY);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fd&#32;&gt;=&#32;0)&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;ch;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00403"/>00403 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read(fd,&#32;&amp;ch,&#32;1);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00405"/>00405 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ch&#32;==&#32;<emphasis role="charliteral">&apos;1&apos;</emphasis>)&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;close(fd);&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00412"/>00412 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>((status?<link linkend="__x_trace_8h_1ade81e1905d604ef7eb03d194ba1332d4">XTRACE_COLOR_BLUE</link>:<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>),&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[Linux&#32;GPIO]&#32;Get&#32;Data&#32;%s&#32;%s&quot;</emphasis>),&#32;xpath.Get(),&#32;status?<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;1&quot;</emphasis>):<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;0&quot;</emphasis>));
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00417"/>00417 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00419"/>00419 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00420"/>00420 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00421"/>00421 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00434"/>00434 <emphasis role="keywordtype">bool</emphasis>&#32;DIOLINUXGPIO::GPIO_SetData(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIO,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;on)
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00435"/>00435 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;<link linkend="_class_x_p_a_t_h">XPATH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xpath;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;GPIOdatastr;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;xpath.<link linkend="_group___x_u_t_i_l_s_1ga2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%s/gpio%d/value&quot;</emphasis>),&#32;<link linkend="__d_i_o_l_i_n_u_x_g_p_i_o_8h_1ad17264a1ea3c659a39fb4f9d52e29a5f">DIOLINUXGPIO_PATH</link>,&#32;GPIO);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00441"/>00441 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00442"/>00442 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;pathchar;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00443"/>00443 &#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00444"/>00444 &#32;&#32;xpath.<link linkend="_group___x_u_t_i_l_s_1gacdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(pathchar);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(pathchar.<link linkend="_group___x_u_t_i_l_s_1ga66e2dbd897e717ce38e395d6ad87b754">GetPtrChar</link>(),&#32;O_WRONLY);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fd&#32;&gt;=&#32;0)&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIOdatastr.<link linkend="_group___x_u_t_i_l_s_1ga2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%s&quot;</emphasis>),&#32;(on?<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;1&quot;</emphasis>):<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;0&quot;</emphasis>)));
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00449"/>00449 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;GPIOdatachar;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;GPIOdatastr.<link linkend="_group___x_u_t_i_l_s_1gacdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(GPIOdatachar);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;write(fd,&#32;(<emphasis role="keywordtype">char</emphasis>*)GPIOdatachar.<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;GPIOdatastr.<link linkend="_group___x_u_t_i_l_s_1ga7c3fa0dd7b650399470c76192fbd4916">GetSize</link>());
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00454"/>00454 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;close(fd);
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00459"/>00459 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>((status?<link linkend="__x_trace_8h_1ade81e1905d604ef7eb03d194ba1332d4">XTRACE_COLOR_BLUE</link>:<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>),&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[Linux&#32;GPIO]&#32;Set&#32;Data&#32;%s&#32;%s&quot;</emphasis>),&#32;xpath.Get(),&#32;GPIOdatastr.Get());&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00461"/>00461 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00463"/>00463 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00464"/>00464 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00465"/>00465 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00474"/>00474 <emphasis role="keywordtype">void</emphasis>&#32;DIOLINUXGPIO::Clean()
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00475"/>00475 {
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00476"/>00476 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00477"/>00477 }
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00478"/>00478 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00479"/>00479 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00480"/>00480 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00481"/>00481 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00482"/>00482 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00483"/>00483 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00484"/>00484 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00485"/>00485 
<anchor xml:id="__d_i_o_l_i_n_u_x_g_p_i_o_8cpp_source_1l00486"/>00486 
</programlisting></section>
