<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_stream_cipher_8cpp_source" xml:lang="en-US">
<title>DIOStreamCipher.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/DataIO/Streams/DIOStreamCipher.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00031"/>00031 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00033"/>00033 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00035"/>00035 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_cipher_8h">DIOStreamCipher.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00041"/>00041 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00044"/>00044 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_factory_8h">DIOFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_8h">DIOStream.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00047"/>00047 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_c_r_c32_8h">HashCRC32.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__cipher_8h">Cipher.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00050"/>00050 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00052"/>00052 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00055"/>00055 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00060"/>00060 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00061"/>00061 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00062"/>00062 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00064"/>00064 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00065"/>00065 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00076"/><link linkend="_group___d_a_t_a_i_o_1ga9d3c3766181c4e538c728fbd98583905">00076</link> <link linkend="_group___d_a_t_a_i_o_1ga9d3c3766181c4e538c728fbd98583905">DIOSTREAMCIPHER::DIOSTREAMCIPHER</link>(<link linkend="_class_d_i_o_s_t_r_e_a_m_c_o_n_f_i_g">DIOSTREAMCONFIG</link>*&#32;config,&#32;<link linkend="_class_c_i_p_h_e_r">CIPHER</link>*&#32;cipher):&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m">DIOSTREAM</link>()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00077"/>00077 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00078"/>00078 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00079"/>00079 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00080"/>00080 &#32;&#32;this-&gt;config&#32;&#32;&#32;&#32;&#32;&#32;=&#32;config;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00081"/>00081 &#32;&#32;this-&gt;cipher&#32;&#32;&#32;&#32;&#32;&#32;=&#32;cipher;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00082"/>00082 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00083"/>00083 &#32;&#32;hashcrc32&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_h_a_s_h_c_r_c32">HASHCRC32</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00084"/>00084 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(hashcrc32)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;diostream&#32;=&#32;(<link linkend="_class_d_i_o_s_t_r_e_a_m">DIOSTREAM</link>*)GEN_DIOFACTORY.CreateStreamIO(config);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00087"/>00087 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY_CREATE(mutexread&#32;&#32;&#32;,&#32;Create_Mutex())
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY_CREATE(mutexwrite&#32;&#32;,&#32;Create_Mutex())
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00090"/>00090 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream&#32;&amp;&amp;&#32;mutexread&#32;&amp;&amp;&#32;mutexwrite)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xthreadconnection&#32;&#32;=&#32;<link linkend="__x_thread_collected_8h_1aad503e3655b9ff78d3ac660d1f1f5534">CREATEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6af27fef13ef4a6c463e7a4be2795e126c">XTHREADGROUPID_DIOSTREAMCIPHER</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;DIOSTREAMCIPHER::DIOSTREAMCIPHER&quot;</emphasis>),&#32;ThreadRunFunction,&#32;(<emphasis role="keywordtype">void</emphasis>*)<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xthreadconnection)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xthreadconnection-&gt;Ini();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00100"/>00100 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00101"/>00101 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00102"/>00102 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00111"/><link linkend="_group___d_a_t_a_i_o_1ga0ff24555fa04233ede0e69195773b06e">00111</link> <link linkend="_group___d_a_t_a_i_o_1ga0ff24555fa04233ede0e69195773b06e">DIOSTREAMCIPHER::~DIOSTREAMCIPHER</link>()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00112"/>00112 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00113"/>00113 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xthreadconnection)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;xthreadconnection-&gt;End();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_thread_collected_8h_1a18fb843f5fbad51464b68d705ed29b8a">DELETEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6af27fef13ef4a6c463e7a4be2795e126c">XTHREADGROUPID_DIOSTREAMCIPHER</link>,&#32;xthreadconnection);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00118"/>00118 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00119"/>00119 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mutexread)&#32;&#32;&#32;GEN_XFACTORY.Delete_Mutex(mutexread);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00120"/>00120 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mutexwrite)&#32;&#32;GEN_XFACTORY.Delete_Mutex(mutexwrite);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00121"/>00121 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00122"/>00122 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream)&#32;GEN_DIOFACTORY.DeleteStreamIO(diostream);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00123"/>00123 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00124"/>00124 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(hashcrc32)&#32;<emphasis role="keyword">delete</emphasis>&#32;hashcrc32;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00125"/>00125 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00126"/>00126 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00127"/>00127 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00128"/>00128 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00129"/>00129 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00139"/><link linkend="_group___d_a_t_a_i_o_1ga80103fa3ee4bac635499267239fcc658">00139</link> <link linkend="_class_d_i_o_s_t_r_e_a_m_c_o_n_f_i_g">DIOSTREAMCONFIG</link>*&#32;<link linkend="_group___d_a_t_a_i_o_1ga80103fa3ee4bac635499267239fcc658">DIOSTREAMCIPHER::GetConfig</link>()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00140"/>00140 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00141"/>00141 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;config;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00142"/>00142 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00143"/>00143 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00144"/>00144 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00156"/><link linkend="_group___d_a_t_a_i_o_1ga930f221600133eff2dc4d4ef63e7f0fa">00156</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga930f221600133eff2dc4d4ef63e7f0fa">DIOSTREAMCIPHER::SetConfig</link>(<link linkend="_class_d_i_o_s_t_r_e_a_m_c_o_n_f_i_g">DIOSTREAMCONFIG</link>*&#32;config)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00157"/>00157 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00158"/>00158 &#32;&#32;this-&gt;config&#32;=&#32;config;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00159"/>00159 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00160"/>00160 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00161"/>00161 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00162"/>00162 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00172"/><link linkend="_group___d_a_t_a_i_o_1ga82c19bc06c5e30705fceda956b89ec89">00172</link> <link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0f">DIOSTREAMSTATUS</link>&#32;<link linkend="_group___d_a_t_a_i_o_1ga82c19bc06c5e30705fceda956b89ec89">DIOSTREAMCIPHER::GetConnectStatus</link>()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00173"/>00173 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00174"/>00174 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa516b51b4debec043e34f66f0d4710fa2">DIOSTREAMSTATUS_DISCONNECTED</link>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00175"/>00175 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;diostream-&gt;<link linkend="_group___d_a_t_a_i_o_1ga076ead754b614eb3ba77ccb3a9e45455">GetConnectStatus</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00176"/>00176 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00177"/>00177 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00178"/>00178 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00188"/><link linkend="_group___d_a_t_a_i_o_1ga7c59e52df239886f6207897e1ba721c0">00188</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga7c59e52df239886f6207897e1ba721c0">DIOSTREAMCIPHER::Open</link>()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00189"/>00189 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00190"/>00190 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00191"/>00191 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1aabb682ec186c5290636d82b3e5fa1a5c">Open</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00192"/>00192 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00193"/>00193 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00194"/>00194 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00204"/><link linkend="_group___d_a_t_a_i_o_1gae2db34c3db4936b541fa08929c8e2c08">00204</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1gae2db34c3db4936b541fa08929c8e2c08">DIOSTREAMCIPHER::Disconnect</link>()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00205"/>00205 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00206"/>00206 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00207"/>00207 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;diostream-&gt;<link linkend="_group___d_a_t_a_i_o_1ga991d1dfd674c74025988be197ce7ec9f">Disconnect</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00208"/>00208 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00209"/>00209 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00210"/>00210 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00220"/><link linkend="_group___d_a_t_a_i_o_1ga2dd68dc6325979174b5c364c1ec07e16">00220</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___d_a_t_a_i_o_1ga2dd68dc6325979174b5c364c1ec07e16">DIOSTREAMCIPHER::Close</link>()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00221"/>00221 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00222"/>00222 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00223"/>00223 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1ac96f340bb4dde0df51163901fd5cb617">Close</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00224"/>00224 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00225"/>00225 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00226"/>00226 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00239"/><link linkend="_group___d_a_t_a_i_o_1ga002246ac811f7c4ca89cbd5398c33aa3">00239</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___d_a_t_a_i_o_1ga002246ac811f7c4ca89cbd5398c33aa3">DIOSTREAMCIPHER::Read</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00240"/>00240 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00241"/>00241 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mutexread)&#32;&#32;&#32;mutexread-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00242"/>00242 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00243"/>00243 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;br&#32;=&#32;<link linkend="_group___d_a_t_a_i_o_1ga20cd6c3635818f96468dee8bc601aec1">DIOSTREAM::Read</link>(buffer,&#32;size);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00244"/>00244 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00245"/>00245 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mutexread)&#32;&#32;&#32;mutexread-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00246"/>00246 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00247"/>00247 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;br;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00248"/>00248 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00249"/>00249 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00250"/>00250 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00263"/><link linkend="_group___d_a_t_a_i_o_1ga9b7758b200852a9745ead70f6757bf1f">00263</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_group___d_a_t_a_i_o_1ga9b7758b200852a9745ead70f6757bf1f">DIOSTREAMCIPHER::Write</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00264"/>00264 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00265"/>00265 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mutexwrite)&#32;&#32;mutexwrite-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00266"/>00266 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00267"/>00267 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;wr&#32;=&#32;<link linkend="_group___d_a_t_a_i_o_1gac04f4ad8ff28b97128a876063103dd50">DIOSTREAM::Write</link>(buffer,&#32;size);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00268"/>00268 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00269"/>00269 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mutexwrite)&#32;&#32;mutexwrite-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00270"/>00270 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00271"/>00271 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;wr;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00272"/>00272 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00273"/>00273 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00274"/>00274 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00284"/><link linkend="_group___d_a_t_a_i_o_1ga0380a2a4f17ba27c35b1d5162c424b20">00284</link> <link linkend="_class_d_i_o_s_t_r_e_a_m">DIOSTREAM</link>*&#32;<link linkend="_group___d_a_t_a_i_o_1ga0380a2a4f17ba27c35b1d5162c424b20">DIOSTREAMCIPHER::GetDIOStreamBase</link>()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00285"/>00285 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00286"/>00286 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;diostream;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00287"/>00287 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00288"/>00288 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00289"/>00289 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00299"/><link linkend="_group___d_a_t_a_i_o_1gaf1461ac66bf23572399d0ce448246af4">00299</link> <link linkend="_class_c_i_p_h_e_r">CIPHER</link>*&#32;<link linkend="_group___d_a_t_a_i_o_1gaf1461ac66bf23572399d0ce448246af4">DIOSTREAMCIPHER::GetCipher</link>()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00300"/>00300 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00301"/>00301 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cipher;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00302"/>00302 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00303"/>00303 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00304"/>00304 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00314"/>00314 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTREAMCIPHER::ThreadRunFunction(<emphasis role="keywordtype">void</emphasis>*&#32;param)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00315"/>00315 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00316"/>00316 &#32;&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_c_i_p_h_e_r">DIOSTREAMCIPHER</link>*&#32;diostreamcipher&#32;=&#32;(<link linkend="_class_d_i_o_s_t_r_e_a_m_c_i_p_h_e_r">DIOSTREAMCIPHER</link>*)param;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00317"/>00317 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostreamcipher)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00318"/>00318 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00319"/>00319 &#32;&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m">DIOSTREAM</link>*&#32;diostream&#32;=&#32;diostreamcipher-&gt;diostream;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00320"/>00320 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00321"/>00321 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00322"/>00322 &#32;&#32;<link linkend="_class_c_i_p_h_e_r">CIPHER</link>*&#32;cipher&#32;&#32;&#32;=&#32;diostreamcipher-&gt;cipher;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00323"/>00323 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!cipher)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00324"/>00324 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00325"/>00325 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;br&#32;=&#32;diostream-&gt;<link linkend="_group___d_a_t_a_i_o_1gaa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00326"/>00326 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(br&gt;<link linkend="__d_i_o_stream_cipher_8h_1a82b23363a22b74437612641fb99a00e3">DIOSTREAMCIPHER_HEAD_SIZE</link>)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostreamcipher-&gt;mutexread)&#32;&#32;diostreamcipher-&gt;mutexread-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00329"/>00329 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;magicnumber;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;ciphertype;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;cipherpadding;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;sizebuffer;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CRC32[2];
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;input;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00336"/>00336 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_group___x_u_t_i_l_s_1gacf69e379f1d0bf812ae9c1157eac172c">Resize</link>(<link linkend="__d_i_o_stream_cipher_8h_1a82b23363a22b74437612641fb99a00e3">DIOSTREAMCIPHER_HEAD_SIZE</link>);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00338"/>00338 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;<link linkend="_group___d_a_t_a_i_o_1gaa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(input.<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;<link linkend="__d_i_o_stream_cipher_8h_1a82b23363a22b74437612641fb99a00e3">DIOSTREAMCIPHER_HEAD_SIZE</link>,&#32;0);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00340"/>00340 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;diostreamcipher-&gt;hashcrc32-&gt;<link linkend="_group___c_i_p_h_e_r_1gab01cc6a04a2c4ee67dcca98c7b233913">ResetResult</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;CRC32[0]&#32;=&#32;diostreamcipher-&gt;hashcrc32-&gt;<link linkend="_group___c_i_p_h_e_r_1ga170fa5c716219e92d4724553d6e8e0ce">Do</link>(input.<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;<link linkend="__d_i_o_stream_cipher_8h_1a82b23363a22b74437612641fb99a00e3">DIOSTREAMCIPHER_HEAD_SIZE</link>&#32;-&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00343"/>00343 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(magicnumber&#32;&#32;&#32;,&#32;0);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(ciphertype&#32;&#32;&#32;&#32;,&#32;0);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(cipherpadding&#32;,&#32;0);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(sizebuffer&#32;&#32;&#32;&#32;,&#32;0);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(CRC32[1]&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00349"/>00349 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((magicnumber&#32;==&#32;<link linkend="__d_i_o_stream_cipher_8h_1a9b898ac83c77186de2ead47d366b6732">DIOSTREAMCIPHER_HEAD_MAGICNUMBER</link>)&#32;&amp;&amp;&#32;&#32;(CRC32[0]&#32;==&#32;CRC32[1]))
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;<link linkend="_group___d_a_t_a_i_o_1gaa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>()&#32;&gt;=&#32;sizebuffer&#32;+&#32;<link linkend="__d_i_o_stream_cipher_8h_1a82b23363a22b74437612641fb99a00e3">DIOSTREAMCIPHER_HEAD_SIZE</link>)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_group___x_u_t_i_l_s_1ga3c14ba0ca9dfbf20b5127c87b275cb93">Empty</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00355"/>00355 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_group___x_u_t_i_l_s_1gacf69e379f1d0bf812ae9c1157eac172c">Resize</link>(<link linkend="__d_i_o_stream_cipher_8h_1a82b23363a22b74437612641fb99a00e3">DIOSTREAMCIPHER_HEAD_SIZE</link>&#32;+&#32;sizebuffer);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00357"/>00357 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;<link linkend="_group___d_a_t_a_i_o_1gaa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(input.<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;0,&#32;sizebuffer&#32;+&#32;<link linkend="__d_i_o_stream_cipher_8h_1a82b23363a22b74437612641fb99a00e3">DIOSTREAMCIPHER_HEAD_SIZE</link>);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0,&#32;<link linkend="__d_i_o_stream_cipher_8h_1a82b23363a22b74437612641fb99a00e3">DIOSTREAMCIPHER_HEAD_SIZE</link>);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00360"/>00360 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cipher-&gt;<link linkend="_group___c_i_p_h_e_r_1ga33b7770a971251b24deb1bb01e75eed8">Uncipher</link>(input);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00362"/>00362 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostreamcipher-&gt;<link linkend="_group___d_a_t_a_i_o_1gaa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(cipher-&gt;<link linkend="_group___c_i_p_h_e_r_1gad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>()-&gt;Get(),&#32;cipher-&gt;<link linkend="_group___c_i_p_h_e_r_1gad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>()-&gt;GetSize()&#32;-&#32;cipherpadding);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00366"/>00366 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostreamcipher-&gt;mutexread)&#32;&#32;diostreamcipher-&gt;mutexread-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00369"/>00369 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00370"/>00370 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00371"/>00371 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;bw&#32;=&#32;diostreamcipher-&gt;<link linkend="_group___d_a_t_a_i_o_1gabba2f238a0d8360b0208fca4041a52d0">GetOutXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00372"/>00372 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(bw)
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostreamcipher-&gt;mutexwrite)&#32;diostreamcipher-&gt;mutexwrite-&gt;<link linkend="_group___x_u_t_i_l_s_1gae6d5410f1787702c59c2eae9e8b85b74">Lock</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00375"/>00375 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;output;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00377"/>00377 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;cipher-&gt;<link linkend="_group___c_i_p_h_e_r_1ga0fc06658fae446ff6610e286e158eb77">Cipher</link>(diostreamcipher-&gt;<link linkend="_group___d_a_t_a_i_o_1gabba2f238a0d8360b0208fca4041a52d0">GetOutXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;diostreamcipher-&gt;<link linkend="_group___d_a_t_a_i_o_1gabba2f238a0d8360b0208fca4041a52d0">GetOutXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>());
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00379"/>00379 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;output.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)<link linkend="__d_i_o_stream_cipher_8h_1a9b898ac83c77186de2ead47d366b6732">DIOSTREAMCIPHER_HEAD_MAGICNUMBER</link>);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;output.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)cipher-&gt;<link linkend="_group___c_i_p_h_e_r_1ga2301712d3f4d431676584eba37730aed">GetType</link>());
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;output.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(cipher-&gt;<link linkend="_group___c_i_p_h_e_r_1gad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>()-&gt;GetSize()&#32;-&#32;bw));
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;output.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)cipher-&gt;<link linkend="_group___c_i_p_h_e_r_1gad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>()-&gt;GetSize());
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00384"/>00384 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;diostreamcipher-&gt;hashcrc32-&gt;<link linkend="_group___c_i_p_h_e_r_1gab01cc6a04a2c4ee67dcca98c7b233913">ResetResult</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;output.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)diostreamcipher-&gt;hashcrc32-&gt;<link linkend="_group___c_i_p_h_e_r_1ga170fa5c716219e92d4724553d6e8e0ce">Do</link>(output));
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;output.<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)cipher-&gt;<link linkend="_group___c_i_p_h_e_r_1gad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>()-&gt;Get(),&#32;cipher-&gt;<link linkend="_group___c_i_p_h_e_r_1gad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>()-&gt;GetSize());
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00388"/>00388 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;<link linkend="_group___d_a_t_a_i_o_1gac04f4ad8ff28b97128a876063103dd50">Write</link>(output)&#32;==&#32;output.<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>())
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if(diostream-&gt;WaitToFlushOutXBuffer())</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostreamcipher-&gt;<link linkend="_group___d_a_t_a_i_o_1gabba2f238a0d8360b0208fca4041a52d0">GetOutXBuffer</link>()-&gt;<link linkend="_group___x_u_t_i_l_s_1gaa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0&#32;,&#32;bw);
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00394"/>00394 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostreamcipher-&gt;mutexwrite)&#32;diostreamcipher-&gt;mutexwrite-&gt;<link linkend="_group___x_u_t_i_l_s_1gafed160c15de8de926a73f4ce978f0bc0">UnLock</link>();
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00397"/>00397 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00398"/>00398 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00399"/>00399 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00408"/>00408 <emphasis role="keywordtype">void</emphasis>&#32;DIOSTREAMCIPHER::Clean()
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00409"/>00409 {
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00410"/>00410 &#32;&#32;config&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00411"/>00411 &#32;&#32;cipher&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00412"/>00412 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00413"/>00413 &#32;&#32;hashcrc32&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00414"/>00414 &#32;&#32;diostream&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00415"/>00415 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00416"/>00416 &#32;&#32;mutexread&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00417"/>00417 &#32;&#32;mutexwrite&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00418"/>00418 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00419"/>00419 &#32;&#32;xthreadconnection&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00420"/>00420 }
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00421"/>00421 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00422"/>00422 
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00423"/>00423 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_stream_cipher_8cpp_source_1l00424"/>00424 
</programlisting></section>
