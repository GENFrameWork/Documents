<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__cipher_key_8cpp_source" xml:lang="en-US">
<title>CipherKey.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/CipherKey.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__cipher_key_8cpp_source_1l00001"/>00001 
<anchor xml:id="__cipher_key_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00031"/>00031 
<anchor xml:id="__cipher_key_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00033"/>00033 
<anchor xml:id="__cipher_key_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00035"/>00035 
<anchor xml:id="__cipher_key_8cpp_source_1l00036"/>00036 
<anchor xml:id="__cipher_key_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00039"/>00039 
<anchor xml:id="__cipher_key_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__cipher_key_8h">CipherKey.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00041"/>00041 
<anchor xml:id="__cipher_key_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00043"/>00043 
<anchor xml:id="__cipher_key_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00045"/>00045 
<anchor xml:id="__cipher_key_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00047"/>00047 
<anchor xml:id="__cipher_key_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00049"/>00049 
<anchor xml:id="__cipher_key_8cpp_source_1l00050"/>00050 
<anchor xml:id="__cipher_key_8cpp_source_1l00051"/>00051 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00053"/>00053 
<anchor xml:id="__cipher_key_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00055"/>00055 
<anchor xml:id="__cipher_key_8cpp_source_1l00056"/>00056 
<anchor xml:id="__cipher_key_8cpp_source_1l00057"/>00057 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00058"/>00058 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00059"/>00059 
<anchor xml:id="__cipher_key_8cpp_source_1l00060"/>00060 
<anchor xml:id="__cipher_key_8cpp_source_1l00061"/>00061 <emphasis role="preprocessor">#pragma&#32;region&#32;CIPHERKEY</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00062"/>00062 
<anchor xml:id="__cipher_key_8cpp_source_1l00063"/>00063 
<anchor xml:id="__cipher_key_8cpp_source_1l00071"/><link linkend="_group___c_i_p_h_e_r_1gaac869517f328f150807898c2f8029cdb">00071</link> <link linkend="_group___c_i_p_h_e_r_1gaac869517f328f150807898c2f8029cdb">CIPHERKEY::CIPHERKEY</link>()
<anchor xml:id="__cipher_key_8cpp_source_1l00072"/>00072 {&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00073"/>00073 &#32;&#32;Clean();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00074"/>00074 }
<anchor xml:id="__cipher_key_8cpp_source_1l00075"/>00075 
<anchor xml:id="__cipher_key_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00085"/><link linkend="_group___c_i_p_h_e_r_1ga4dffa547a057f06242ecea77df422044">00085</link> <link linkend="_group___c_i_p_h_e_r_1ga4dffa547a057f06242ecea77df422044">CIPHERKEY::~CIPHERKEY</link>()
<anchor xml:id="__cipher_key_8cpp_source_1l00086"/>00086 {&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00087"/>00087 &#32;&#32;Clean();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00088"/>00088 }
<anchor xml:id="__cipher_key_8cpp_source_1l00089"/>00089 
<anchor xml:id="__cipher_key_8cpp_source_1l00090"/>00090 
<anchor xml:id="__cipher_key_8cpp_source_1l00100"/><link linkend="_group___c_i_p_h_e_r_1gabc3d72dff111cf700f8d1ed5a51a5e74">00100</link> <link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;<link linkend="_group___c_i_p_h_e_r_1gabc3d72dff111cf700f8d1ed5a51a5e74">CIPHERKEY::GetType</link>()
<anchor xml:id="__cipher_key_8cpp_source_1l00101"/>00101 {&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00102"/>00102 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_1ad6c501ce84700c9fb626771e635899a1">type</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00103"/>00103 }
<anchor xml:id="__cipher_key_8cpp_source_1l00104"/>00104 
<anchor xml:id="__cipher_key_8cpp_source_1l00105"/>00105 
<anchor xml:id="__cipher_key_8cpp_source_1l00115"/><link linkend="_group___c_i_p_h_e_r_1ga27f0508542c5e30fdcf526ab200a3106">00115</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga27f0508542c5e30fdcf526ab200a3106">CIPHERKEY::SetType</link>(<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;type)
<anchor xml:id="__cipher_key_8cpp_source_1l00116"/>00116 {&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00117"/>00117 &#32;&#32;this-&gt;type&#32;=&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_1ad6c501ce84700c9fb626771e635899a1">type</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00118"/>00118 }
<anchor xml:id="__cipher_key_8cpp_source_1l00119"/>00119 
<anchor xml:id="__cipher_key_8cpp_source_1l00120"/>00120 
<anchor xml:id="__cipher_key_8cpp_source_1l00130"/><link linkend="_group___c_i_p_h_e_r_1ga1940b9081ce06724af45c8cd15a88b19">00130</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga1940b9081ce06724af45c8cd15a88b19">CIPHERKEY::GetSizeInBytes</link>()
<anchor xml:id="__cipher_key_8cpp_source_1l00131"/>00131 {&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00132"/>00132 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00133"/>00133 }
<anchor xml:id="__cipher_key_8cpp_source_1l00134"/>00134 
<anchor xml:id="__cipher_key_8cpp_source_1l00135"/>00135 
<anchor xml:id="__cipher_key_8cpp_source_1l00145"/><link linkend="_group___c_i_p_h_e_r_1ga76c3a5db33563c9b25d5131ba2251e4a">00145</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga76c3a5db33563c9b25d5131ba2251e4a">CIPHERKEY::GetSizeInBits</link>()
<anchor xml:id="__cipher_key_8cpp_source_1l00146"/>00146 {&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00147"/>00147 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_group___c_i_p_h_e_r_1ga1940b9081ce06724af45c8cd15a88b19">GetSizeInBytes</link>()*8);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00148"/>00148 }
<anchor xml:id="__cipher_key_8cpp_source_1l00149"/>00149 
<anchor xml:id="__cipher_key_8cpp_source_1l00150"/>00150 
<anchor xml:id="__cipher_key_8cpp_source_1l00162"/><link linkend="_group___c_i_p_h_e_r_1ga509e56fa1c881619edfa23d8049a1ef7">00162</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga509e56fa1c881619edfa23d8049a1ef7">CIPHERKEY::CopyFrom</link>(<link linkend="_class_c_i_p_h_e_r_k_e_y">CIPHERKEY</link>*&#32;key)
<anchor xml:id="__cipher_key_8cpp_source_1l00163"/>00163 {
<anchor xml:id="__cipher_key_8cpp_source_1l00164"/>00164 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_key_8cpp_source_1l00165"/>00165 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_1ad6c501ce84700c9fb626771e635899a1">type</link>&#32;=&#32;key-&gt;<link linkend="_group___c_i_p_h_e_r_1gabc3d72dff111cf700f8d1ed5a51a5e74">GetType</link>();
<anchor xml:id="__cipher_key_8cpp_source_1l00166"/>00166 
<anchor xml:id="__cipher_key_8cpp_source_1l00167"/>00167 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_key_8cpp_source_1l00168"/>00168 }
<anchor xml:id="__cipher_key_8cpp_source_1l00169"/>00169 
<anchor xml:id="__cipher_key_8cpp_source_1l00170"/>00170 
<anchor xml:id="__cipher_key_8cpp_source_1l00179"/>00179 <emphasis role="keywordtype">void</emphasis>&#32;CIPHERKEY::Clean()
<anchor xml:id="__cipher_key_8cpp_source_1l00180"/>00180 {
<anchor xml:id="__cipher_key_8cpp_source_1l00181"/>00181 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_1ad6c501ce84700c9fb626771e635899a1">type</link>&#32;=&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0ad35ef2ec365d4927cb263f7a335fb09c">CIPHERKEYTYPE_UNKNOWN</link>;
<anchor xml:id="__cipher_key_8cpp_source_1l00182"/>00182 }
<anchor xml:id="__cipher_key_8cpp_source_1l00183"/>00183 
<anchor xml:id="__cipher_key_8cpp_source_1l00184"/>00184 
<anchor xml:id="__cipher_key_8cpp_source_1l00185"/>00185 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00186"/>00186 
<anchor xml:id="__cipher_key_8cpp_source_1l00187"/>00187 
<anchor xml:id="__cipher_key_8cpp_source_1l00188"/>00188 <emphasis role="preprocessor">#pragma&#32;region&#32;CIPHERKEYSYMMETRICAL</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00189"/>00189 
<anchor xml:id="__cipher_key_8cpp_source_1l00190"/>00190 
<anchor xml:id="__cipher_key_8cpp_source_1l00198"/><link linkend="_group___c_i_p_h_e_r_1ga386b3f6beded4b2404c51de1e6f30854">00198</link> <link linkend="_group___c_i_p_h_e_r_1ga386b3f6beded4b2404c51de1e6f30854">CIPHERKEYSYMMETRICAL::CIPHERKEYSYMMETRICAL</link>()&#32;:&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y">CIPHERKEY</link>()
<anchor xml:id="__cipher_key_8cpp_source_1l00199"/>00199 {
<anchor xml:id="__cipher_key_8cpp_source_1l00200"/>00200 &#32;&#32;Clean();
<anchor xml:id="__cipher_key_8cpp_source_1l00201"/>00201 
<anchor xml:id="__cipher_key_8cpp_source_1l00202"/>00202 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_1ad6c501ce84700c9fb626771e635899a1">type</link>&#32;=&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a056f2d04cee58f83158540595715d079">CIPHERKEYTYPE_SYMMETRICAL</link>;
<anchor xml:id="__cipher_key_8cpp_source_1l00203"/>00203 
<anchor xml:id="__cipher_key_8cpp_source_1l00204"/>00204 &#32;&#32;xbufferkey&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>();
<anchor xml:id="__cipher_key_8cpp_source_1l00205"/>00205 }
<anchor xml:id="__cipher_key_8cpp_source_1l00206"/>00206 
<anchor xml:id="__cipher_key_8cpp_source_1l00207"/>00207 
<anchor xml:id="__cipher_key_8cpp_source_1l00216"/><link linkend="_group___c_i_p_h_e_r_1ga8ca45d390962d21ed7f5777276c3d811">00216</link> <link linkend="_group___c_i_p_h_e_r_1ga8ca45d390962d21ed7f5777276c3d811">CIPHERKEYSYMMETRICAL::~CIPHERKEYSYMMETRICAL</link>()
<anchor xml:id="__cipher_key_8cpp_source_1l00217"/>00217 {
<anchor xml:id="__cipher_key_8cpp_source_1l00218"/>00218 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xbufferkey)&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;xbufferkey;
<anchor xml:id="__cipher_key_8cpp_source_1l00219"/>00219 
<anchor xml:id="__cipher_key_8cpp_source_1l00220"/>00220 &#32;&#32;Clean();
<anchor xml:id="__cipher_key_8cpp_source_1l00221"/>00221 }
<anchor xml:id="__cipher_key_8cpp_source_1l00222"/>00222 
<anchor xml:id="__cipher_key_8cpp_source_1l00223"/>00223 
<anchor xml:id="__cipher_key_8cpp_source_1l00235"/><link linkend="_group___c_i_p_h_e_r_1ga491605bfd782fc1524b9f94d0d982dd2">00235</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;<link linkend="_group___c_i_p_h_e_r_1ga30b19340e072659a75fd2d53fc7d4559">CIPHERKEYSYMMETRICAL::Get</link>(<emphasis role="keywordtype">int</emphasis>&amp;&#32;size)
<anchor xml:id="__cipher_key_8cpp_source_1l00236"/>00236 {
<anchor xml:id="__cipher_key_8cpp_source_1l00237"/>00237 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xbufferkey)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__cipher_key_8cpp_source_1l00238"/>00238 
<anchor xml:id="__cipher_key_8cpp_source_1l00239"/>00239 &#32;&#32;size&#32;=&#32;xbufferkey-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>();
<anchor xml:id="__cipher_key_8cpp_source_1l00240"/>00240 
<anchor xml:id="__cipher_key_8cpp_source_1l00241"/>00241 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xbufferkey-&gt;<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>();
<anchor xml:id="__cipher_key_8cpp_source_1l00242"/>00242 }
<anchor xml:id="__cipher_key_8cpp_source_1l00243"/>00243 
<anchor xml:id="__cipher_key_8cpp_source_1l00244"/>00244 
<anchor xml:id="__cipher_key_8cpp_source_1l00254"/><link linkend="_group___c_i_p_h_e_r_1ga30b19340e072659a75fd2d53fc7d4559">00254</link> <link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;<link linkend="_group___c_i_p_h_e_r_1ga30b19340e072659a75fd2d53fc7d4559">CIPHERKEYSYMMETRICAL::Get</link>()
<anchor xml:id="__cipher_key_8cpp_source_1l00255"/>00255 {
<anchor xml:id="__cipher_key_8cpp_source_1l00256"/>00256 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xbufferkey;
<anchor xml:id="__cipher_key_8cpp_source_1l00257"/>00257 }
<anchor xml:id="__cipher_key_8cpp_source_1l00258"/>00258 
<anchor xml:id="__cipher_key_8cpp_source_1l00259"/>00259 
<anchor xml:id="__cipher_key_8cpp_source_1l00272"/><link linkend="_group___c_i_p_h_e_r_1gac6251d005c00cafb8af02a17e8410cf8">00272</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1gac6251d005c00cafb8af02a17e8410cf8">CIPHERKEYSYMMETRICAL::Set</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;key,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__cipher_key_8cpp_source_1l00273"/>00273 {
<anchor xml:id="__cipher_key_8cpp_source_1l00274"/>00274 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_key_8cpp_source_1l00275"/>00275 
<anchor xml:id="__cipher_key_8cpp_source_1l00276"/>00276 &#32;&#32;this-&gt;xbufferkey-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_key_8cpp_source_1l00277"/>00277 
<anchor xml:id="__cipher_key_8cpp_source_1l00278"/>00278 &#32;&#32;this-&gt;xbufferkey-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(key,&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)size);
<anchor xml:id="__cipher_key_8cpp_source_1l00279"/>00279 
<anchor xml:id="__cipher_key_8cpp_source_1l00280"/>00280 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_key_8cpp_source_1l00281"/>00281 }
<anchor xml:id="__cipher_key_8cpp_source_1l00282"/>00282 
<anchor xml:id="__cipher_key_8cpp_source_1l00283"/>00283 
<anchor xml:id="__cipher_key_8cpp_source_1l00295"/><link linkend="_group___c_i_p_h_e_r_1gad3403b28337dc42bcbb7f086d9bccc5a">00295</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1gac6251d005c00cafb8af02a17e8410cf8">CIPHERKEYSYMMETRICAL::Set</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;key)
<anchor xml:id="__cipher_key_8cpp_source_1l00296"/>00296 {
<anchor xml:id="__cipher_key_8cpp_source_1l00297"/>00297 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1gac6251d005c00cafb8af02a17e8410cf8">Set</link>(key.<link linkend="_group___x_u_t_i_l_s_1ga59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;key.<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>());
<anchor xml:id="__cipher_key_8cpp_source_1l00298"/>00298 }
<anchor xml:id="__cipher_key_8cpp_source_1l00299"/>00299 
<anchor xml:id="__cipher_key_8cpp_source_1l00300"/>00300 
<anchor xml:id="__cipher_key_8cpp_source_1l00310"/><link linkend="_group___c_i_p_h_e_r_1gaad79e0d61d9af43148457b871e8dbca7">00310</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1gaad79e0d61d9af43148457b871e8dbca7">CIPHERKEYSYMMETRICAL::GetSizeInBytes</link>()
<anchor xml:id="__cipher_key_8cpp_source_1l00311"/>00311 {&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00312"/>00312 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xbufferkey-&gt;<link linkend="_group___x_u_t_i_l_s_1ga726a6143d8a9293a199f8033c8198a0a">GetSize</link>();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00313"/>00313 }
<anchor xml:id="__cipher_key_8cpp_source_1l00314"/>00314 
<anchor xml:id="__cipher_key_8cpp_source_1l00315"/>00315 
<anchor xml:id="__cipher_key_8cpp_source_1l00327"/><link linkend="_group___c_i_p_h_e_r_1ga5bf47a05fe5d252358271cf48685a1e5">00327</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_group___c_i_p_h_e_r_1ga5bf47a05fe5d252358271cf48685a1e5">CIPHERKEYSYMMETRICAL::CopyFrom</link>(<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l">CIPHERKEYSYMMETRICAL</link>*&#32;key)
<anchor xml:id="__cipher_key_8cpp_source_1l00328"/>00328 {
<anchor xml:id="__cipher_key_8cpp_source_1l00329"/>00329 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_key_8cpp_source_1l00330"/>00330 
<anchor xml:id="__cipher_key_8cpp_source_1l00331"/>00331 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_group___c_i_p_h_e_r_1ga509e56fa1c881619edfa23d8049a1ef7">CIPHERKEY::CopyFrom</link>((<link linkend="_class_c_i_p_h_e_r_k_e_y">CIPHERKEY</link>*)key))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_key_8cpp_source_1l00332"/>00332 
<anchor xml:id="__cipher_key_8cpp_source_1l00333"/>00333 &#32;&#32;xbufferkey-&gt;<link linkend="_group___x_u_t_i_l_s_1ga0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_key_8cpp_source_1l00334"/>00334 &#32;&#32;xbufferkey-&gt;<link linkend="_group___x_u_t_i_l_s_1ga03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(key-&gt;<link linkend="_group___c_i_p_h_e_r_1ga491605bfd782fc1524b9f94d0d982dd2">Get</link>()-&gt;Get(),&#32;key-&gt;<link linkend="_group___c_i_p_h_e_r_1ga491605bfd782fc1524b9f94d0d982dd2">Get</link>()-&gt;GetSize());
<anchor xml:id="__cipher_key_8cpp_source_1l00335"/>00335 
<anchor xml:id="__cipher_key_8cpp_source_1l00336"/>00336 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_key_8cpp_source_1l00337"/>00337 }
<anchor xml:id="__cipher_key_8cpp_source_1l00338"/>00338 
<anchor xml:id="__cipher_key_8cpp_source_1l00339"/>00339 &#32;&#32;
<anchor xml:id="__cipher_key_8cpp_source_1l00348"/>00348 <emphasis role="keywordtype">void</emphasis>&#32;CIPHERKEYSYMMETRICAL::Clean()
<anchor xml:id="__cipher_key_8cpp_source_1l00349"/>00349 {
<anchor xml:id="__cipher_key_8cpp_source_1l00350"/>00350 &#32;&#32;xbufferkey&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__cipher_key_8cpp_source_1l00351"/>00351 }
<anchor xml:id="__cipher_key_8cpp_source_1l00352"/>00352 
<anchor xml:id="__cipher_key_8cpp_source_1l00353"/>00353 
<anchor xml:id="__cipher_key_8cpp_source_1l00354"/>00354 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00355"/>00355 
<anchor xml:id="__cipher_key_8cpp_source_1l00356"/>00356 
<anchor xml:id="__cipher_key_8cpp_source_1l00357"/>00357 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_key_8cpp_source_1l00358"/>00358 
<anchor xml:id="__cipher_key_8cpp_source_1l00359"/>00359 
<anchor xml:id="__cipher_key_8cpp_source_1l00360"/>00360 
<anchor xml:id="__cipher_key_8cpp_source_1l00361"/>00361 
<anchor xml:id="__cipher_key_8cpp_source_1l00362"/>00362 
</programlisting></section>
