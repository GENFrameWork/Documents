<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_f_s_machine_8cpp_source" xml:lang="en-US">
<title>XFSMachine.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XFSMachine.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_f_s_machine_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_f_s_machine_8h">XFSMachine.h</link>&quot;</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00047"/>00047 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00048"/>00048 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00049"/>00049 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00053"/>00053 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00054"/>00054 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00055"/>00055 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00057"/>00057 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_XFSMACHINESTATE</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00060"/>00060 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00061"/>00061 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00074"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a21a6529ba99a20c141f9105c65be34a1">00074</link> <link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a21a6529ba99a20c141f9105c65be34a1">XFSMACHINESTATE::XFSMACHINESTATE</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ntransitions)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00075"/>00075 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00076"/>00076 &#32;&#32;Clean();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00077"/>00077 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00078"/>00078 &#32;&#32;this-&gt;maxtransitions&#32;=&#32;ntransitions?ntransitions:1;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00079"/>00079 &#32;&#32;this-&gt;stateID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;stateID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00080"/>00080 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00081"/>00081 &#32;&#32;inputs&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00082"/>00082 &#32;&#32;outputstates&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00083"/>00083 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00084"/>00084 &#32;&#32;inputs&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[this-&gt;maxtransitions];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00085"/>00085 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!inputs)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00086"/>00086 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00087"/>00087 &#32;&#32;outputstates&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>[this-&gt;maxtransitions];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00088"/>00088 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outputstates)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;inputs;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00093"/>00093 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00094"/>00094 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;this-&gt;maxtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;outputstates[c]&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00099"/>00099 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00100"/>00100 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00101"/>00101 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00112"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1acf6e7c4291caa7bcfa535c85ad20afde">00112</link> <link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1acf6e7c4291caa7bcfa535c85ad20afde">XFSMACHINESTATE::~XFSMACHINESTATE</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00113"/>00113 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00114"/>00114 &#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;inputs;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00115"/>00115 &#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;outputstates;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00116"/>00116 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00117"/>00117 &#32;&#32;Clean();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00118"/>00118 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00119"/>00119 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00120"/>00120 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00130"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a9445c1c1a8d0e33f7a8421d5a61344ef">00130</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a9445c1c1a8d0e33f7a8421d5a61344ef">XFSMACHINESTATE::GetID</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00131"/>00131 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00132"/>00132 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;stateID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00133"/>00133 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00134"/>00134 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00135"/>00135 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00148"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a7294d80066582ecc24576887038faa6c">00148</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a7294d80066582ecc24576887038faa6c">XFSMACHINESTATE::AddTransition</link>(<emphasis role="keywordtype">int</emphasis>&#32;input,<emphasis role="keywordtype">int</emphasis>&#32;outputID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00149"/>00149 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00150"/>00150 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00151"/>00151 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00152"/>00152 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(c=0;c&lt;maxtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outputstates[c])&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00156"/>00156 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00157"/>00157 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(c&lt;maxtransitions)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;outputstates[c]&#32;=&#32;outputID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;input;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00161"/>00161 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00164"/>00164 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00165"/>00165 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00166"/>00166 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00167"/>00167 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00168"/>00168 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00180"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1aadfffca2012364631ecb94cec8cb149e">00180</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1aadfffca2012364631ecb94cec8cb149e">XFSMACHINESTATE::GetOutput</link>(<emphasis role="keywordtype">int</emphasis>&#32;input)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00181"/>00181 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00182"/>00182 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;outputID&#32;=&#32;stateID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00183"/>00183 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00184"/>00184 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;maxtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outputstates[c])&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00187"/>00187 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(input&#32;==&#32;inputs[c])
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outputID&#32;=&#32;outputstates[c];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00194"/>00194 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00195"/>00195 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(outputID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00196"/>00196 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00197"/>00197 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00198"/>00198 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00210"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1af9246ded7403844dad2368f11af15541">00210</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1af9246ded7403844dad2368f11af15541">XFSMACHINESTATE::DeleteTransition</link>(<emphasis role="keywordtype">int</emphasis>&#32;outputID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00211"/>00211 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00212"/>00212 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00213"/>00213 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00214"/>00214 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(c=0;c&lt;maxtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(outputstates[c]==outputID)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00218"/>00218 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00219"/>00219 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(c&gt;=maxtransitions)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00220"/>00220 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00221"/>00221 &#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00222"/>00222 &#32;&#32;outputstates[c]&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00223"/>00223 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00224"/>00224 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(;c&lt;(maxtransitions-1);c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!outputstates[c])&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00227"/>00227 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;inputs[c+1];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;outputstates[c]&#32;=&#32;outputstates[c+1];
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00231"/>00231 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00232"/>00232 &#32;&#32;inputs[c]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00233"/>00233 &#32;&#32;outputstates[c]&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00234"/>00234 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00235"/>00235 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00236"/>00236 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00237"/>00237 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00238"/>00238 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00249"/>00249 <emphasis role="keywordtype">void</emphasis>&#32;XFSMACHINESTATE::Clean()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00250"/>00250 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00251"/>00251 &#32;&#32;stateID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00252"/>00252 &#32;&#32;maxtransitions&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00253"/>00253 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00254"/>00254 &#32;&#32;inputs&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00255"/>00255 &#32;&#32;outputstates&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00256"/>00256 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00257"/>00257 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00258"/>00258 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00259"/>00259 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00260"/>00260 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00261"/>00261 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00262"/>00262 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_XFSMACHINE</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00263"/>00263 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00264"/>00264 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00276"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1abdea3dd151898971bb9485705d225298">00276</link> <link linkend="_class_x_f_s_m_a_c_h_i_n_e_1abdea3dd151898971bb9485705d225298">XFSMACHINE::XFSMACHINE</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00277"/>00277 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00278"/>00278 &#32;&#32;Clean();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00279"/>00279 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00280"/>00280 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1abcbc6f518f88c8968722d3b4ed2b16bc">SetCurrentState</link>(stateID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00281"/>00281 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00282"/>00282 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00283"/>00283 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00294"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1aaf17f7ea7f6573b2bcbe82e55819177b">00294</link> <link linkend="_class_x_f_s_m_a_c_h_i_n_e_1aaf17f7ea7f6573b2bcbe82e55819177b">XFSMACHINE::~XFSMACHINE</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00295"/>00295 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00296"/>00296 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a366258d1f60a2dc6591dd164267e2b21">DeleteAllStates</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00297"/>00297 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00298"/>00298 &#32;&#32;Clean();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00299"/>00299 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00300"/>00300 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00301"/>00301 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00311"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae7a2cc2cad190a10cb7154ff24c0609e">00311</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae7a2cc2cad190a10cb7154ff24c0609e">XFSMACHINE::GetEvent</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00312"/>00312 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00313"/>00313 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fsmevent;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00314"/>00314 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00315"/>00315 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00316"/>00316 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00328"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a9cfb136fd0f76df9b29a7d7bbeadd30a">00328</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a9cfb136fd0f76df9b29a7d7bbeadd30a">XFSMACHINE::SetEvent</link>(<emphasis role="keywordtype">int</emphasis>&#32;event)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00329"/>00329 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00330"/>00330 &#32;&#32;fsmevent&#32;=&#32;event;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00331"/>00331 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00332"/>00332 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00333"/>00333 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00334"/>00334 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00335"/>00335 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00345"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a02082325b435cf97f6b4c03a48cdfe86">00345</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a02082325b435cf97f6b4c03a48cdfe86">XFSMACHINE::GetCurrentState</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00346"/>00346 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00347"/>00347 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;currentstate;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00348"/>00348 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00349"/>00349 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00350"/>00350 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00362"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1abcbc6f518f88c8968722d3b4ed2b16bc">00362</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1abcbc6f518f88c8968722d3b4ed2b16bc">XFSMACHINE::SetCurrentState</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00363"/>00363 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00364"/>00364 &#32;&#32;currentstate&#32;=&#32;stateID;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00365"/>00365 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00366"/>00366 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00367"/>00367 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00379"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a1f143ce7a2981c7756db2ff798b34ca5">00379</link> <link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a1f143ce7a2981c7756db2ff798b34ca5">XFSMACHINE::GetState</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00380"/>00380 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00381"/>00381 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;state&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00382"/>00382 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(map.<link linkend="_class_x_m_a_p_1a5167609eddf3d655a9d17c052372a70a">IsEmpty</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00383"/>00383 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00384"/>00384 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;map.<link linkend="_class_x_m_a_p_1af059da1bdb01f7efce7faf5abf454d9c">Find</link>(stateID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00385"/>00385 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(index==-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00386"/>00386 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00387"/>00387 &#32;&#32;state&#32;=&#32;map.<link linkend="_class_x_m_a_p_1a7b4332f4b7696dd7da952cc17fe7c255">GetElement</link>(index);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00388"/>00388 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00389"/>00389 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00390"/>00390 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00391"/>00391 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00392"/>00392 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00404"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae678dcfeb2f9d70b6f7c9d4a367c861e">00404</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae678dcfeb2f9d70b6f7c9d4a367c861e">XFSMACHINE::AddState</link>(<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;state)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00405"/>00405 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00406"/>00406 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a1f143ce7a2981c7756db2ff798b34ca5">GetState</link>(state-&gt;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a9445c1c1a8d0e33f7a8421d5a61344ef">GetID</link>()))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00407"/>00407 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00408"/>00408 &#32;&#32;map.<link linkend="_class_x_m_a_p_1a6dd238dccfceb726042b588a23107318">Add</link>(state-&gt;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a9445c1c1a8d0e33f7a8421d5a61344ef">GetID</link>(),&#32;state);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00409"/>00409 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00410"/>00410 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00411"/>00411 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00412"/>00412 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00413"/>00413 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00428"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ad4515503131530debbca11eaab86c791">00428</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae678dcfeb2f9d70b6f7c9d4a367c861e">XFSMACHINE::AddState</link>(<emphasis role="keywordtype">int</emphasis>&#32;state,&#32;<emphasis role="keywordtype">int</emphasis>&#32;event,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tostate,...)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00429"/>00429 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00430"/>00430 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;_state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00431"/>00431 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;narg&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00432"/>00432 &#32;&#32;va_list&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00433"/>00433 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00434"/>00434 &#32;&#32;va_start(arg,&#32;tostate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00435"/>00435 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(va_arg(arg,&#32;<emphasis role="keywordtype">int</emphasis>)&#32;!=&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;narg++;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00439"/>00439 &#32;&#32;va_end(arg);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00440"/>00440 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00441"/>00441 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((narg)&amp;&amp;(narg%2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00442"/>00442 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00443"/>00443 &#32;&#32;narg+=2;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00444"/>00444 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00445"/>00445 &#32;&#32;_state&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>(state,(narg/2));
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00446"/>00446 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00447"/>00447 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00448"/>00448 &#32;&#32;_state-&gt;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a7294d80066582ecc24576887038faa6c">AddTransition</link>(event,tostate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00449"/>00449 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00450"/>00450 &#32;&#32;va_start(arg,tostate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00451"/>00451 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00452"/>00452 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_event;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00453"/>00453 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_tostate;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00454"/>00454 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00455"/>00455 &#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;_event&#32;&#32;&#32;=&#32;va_arg(arg,&#32;<emphasis role="keywordtype">int</emphasis>);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_event&#32;!=&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_tostate&#32;=&#32;va_arg(arg,&#32;<emphasis role="keywordtype">int</emphasis>);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_state-&gt;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a7294d80066582ecc24576887038faa6c">AddTransition</link>(_event,_tostate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00461"/>00461 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(_event&#32;!=&#32;<link linkend="__x_f_s_machine_8h_1a33b7db38a7e9ca04fb2aa62ea3b2af33">XFSMACHINESTATE_EVENTDEFEND</link>);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00463"/>00463 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00464"/>00464 &#32;&#32;va_end(arg);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00465"/>00465 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00466"/>00466 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae678dcfeb2f9d70b6f7c9d4a367c861e">AddState</link>(_state))
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00471"/>00471 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00472"/>00472 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00473"/>00473 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00474"/>00474 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00475"/>00475 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00488"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ad474a64df436fe226fa30b2765fc2d32">00488</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ad474a64df436fe226fa30b2765fc2d32">XFSMACHINE::AddSecuencialStates</link>(<emphasis role="keywordtype">int</emphasis>&#32;state,&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxsecuencialtransitions)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00489"/>00489 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00490"/>00490 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;_state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00491"/>00491 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00492"/>00492 &#32;&#32;_state&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>(state,maxsecuencialtransitions);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00493"/>00493 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00494"/>00494 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00495"/>00495 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;maxsecuencialtransitions;c++)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;_state-&gt;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1a7294d80066582ecc24576887038faa6c">AddTransition</link>(c,c);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00498"/>00498 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00499"/>00499 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00500"/>00500 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae678dcfeb2f9d70b6f7c9d4a367c861e">AddState</link>(_state))
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00501"/>00501 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00505"/>00505 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00506"/>00506 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00507"/>00507 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00508"/>00508 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00509"/>00509 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00521"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a4ed6cafa4114805eb2a7d5d5954c3da3">00521</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a4ed6cafa4114805eb2a7d5d5954c3da3">XFSMACHINE::DeleteState</link>(<emphasis role="keywordtype">int</emphasis>&#32;stateID)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00522"/>00522 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00523"/>00523 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;state&#32;=&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a1f143ce7a2981c7756db2ff798b34ca5">GetState</link>(stateID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00524"/>00524 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00525"/>00525 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00526"/>00526 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00527"/>00527 &#32;&#32;map.<link linkend="_class_x_m_a_p_1a9a42f1022bfb432e31ff1c3df7a81bf2">Delete</link>(stateID);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00528"/>00528 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00529"/>00529 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;state;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00530"/>00530 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00531"/>00531 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00532"/>00532 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00533"/>00533 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00534"/>00534 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00544"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a366258d1f60a2dc6591dd164267e2b21">00544</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a366258d1f60a2dc6591dd164267e2b21">XFSMACHINE::DeleteAllStates</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00545"/>00545 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00546"/>00546 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(map.<link linkend="_class_x_m_a_p_1a5167609eddf3d655a9d17c052372a70a">IsEmpty</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00547"/>00547 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00548"/>00548 &#32;&#32;map.<link linkend="_class_x_m_a_p_1a6b45f14c95691399c7e16b65a2c043db">DeleteElementContents</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00549"/>00549 &#32;&#32;map.<link linkend="_class_x_m_a_p_1a02e7b8a15144553d81f2e8ec217845f6">DeleteAll</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00550"/>00550 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00551"/>00551 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00552"/>00552 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00553"/>00553 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00554"/>00554 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00566"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a4e991bedff5697fb8ab9d00ac52e4398">00566</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a4e991bedff5697fb8ab9d00ac52e4398">XFSMACHINE::StateTransition</link>(<emphasis role="keywordtype">int</emphasis>&#32;input)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00567"/>00567 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00568"/>00568 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e">XFSMACHINESTATE</link>*&#32;&#32;state&#32;=&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a1f143ce7a2981c7756db2ff798b34ca5">GetState</link>(currentstate);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00569"/>00569 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00570"/>00570 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!state)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;currentstate&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;currentstate;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00574"/>00574 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00575"/>00575 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00576"/>00576 &#32;&#32;currentstate&#32;=&#32;state-&gt;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_s_t_a_t_e_1aadfffca2012364631ecb94cec8cb149e">GetOutput</link>(input);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00577"/>00577 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00578"/>00578 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;currentstate;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00579"/>00579 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00580"/>00580 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00581"/>00581 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00593"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a8210bbf1532d9f6a916d4b2204f04318">00593</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a412a55c723675c56ccd9050cf353c757">XFSMACHINE::CheckTransition</link>(<emphasis role="keywordtype">int</emphasis>&amp;&#32;event)
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00594"/>00594 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00595"/>00595 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;state&#32;=&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a02082325b435cf97f6b4c03a48cdfe86">GetCurrentState</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00596"/>00596 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00597"/>00597 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tevent&#32;=&#32;(int)<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae7a2cc2cad190a10cb7154ff24c0609e">GetEvent</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00598"/>00598 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00599"/>00599 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a4e991bedff5697fb8ab9d00ac52e4398">StateTransition</link>(<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae7a2cc2cad190a10cb7154ff24c0609e">GetEvent</link>());
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00600"/>00600 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00601"/>00601 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a9cfb136fd0f76df9b29a7d7bbeadd30a">SetEvent</link>(0);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00602"/>00602 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00603"/>00603 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a02082325b435cf97f6b4c03a48cdfe86">GetCurrentState</link>()==state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00604"/>00604 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00605"/>00605 &#32;&#32;<emphasis role="keyword">event</emphasis>&#32;=&#32;tevent;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00606"/>00606 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00607"/>00607 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00608"/>00608 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00609"/>00609 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00610"/>00610 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00620"/><link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a412a55c723675c56ccd9050cf353c757">00620</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a412a55c723675c56ccd9050cf353c757">XFSMACHINE::CheckTransition</link>()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00621"/>00621 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00622"/>00622 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;state&#32;=&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a02082325b435cf97f6b4c03a48cdfe86">GetCurrentState</link>();
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00623"/>00623 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00624"/>00624 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a4e991bedff5697fb8ab9d00ac52e4398">StateTransition</link>(<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1ae7a2cc2cad190a10cb7154ff24c0609e">GetEvent</link>());
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00625"/>00625 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00626"/>00626 &#32;&#32;<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a9cfb136fd0f76df9b29a7d7bbeadd30a">SetEvent</link>(0);
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00627"/>00627 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00628"/>00628 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_f_s_m_a_c_h_i_n_e_1a02082325b435cf97f6b4c03a48cdfe86">GetCurrentState</link>()==state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00629"/>00629 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00630"/>00630 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00631"/>00631 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00632"/>00632 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00633"/>00633 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00644"/>00644 <emphasis role="keywordtype">void</emphasis>&#32;XFSMACHINE::Clean()
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00645"/>00645 {
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00646"/>00646 &#32;&#32;fsmevent&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00647"/>00647 &#32;&#32;currentstate&#32;=&#32;0;
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00648"/>00648 }
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00649"/>00649 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00650"/>00650 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00651"/>00651 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00652"/>00652 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00653"/>00653 
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00654"/>00654 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_s_machine_8cpp_source_1l00655"/>00655 
</programlisting></section>
