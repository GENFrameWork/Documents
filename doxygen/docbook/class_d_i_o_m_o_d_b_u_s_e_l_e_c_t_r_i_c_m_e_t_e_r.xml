<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r" xml:lang="en-US">
<title>DIOMODBUSELECTRICMETER Class Reference</title>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary></indexterm>
<para>

<para>Data Input/Output ModBus Electric Meter class. </para>
 
</para>
<para>
<computeroutput>#include &lt;DIOModBusElectricMeter.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for DIOMODBUSELECTRICMETER:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1aab650c2873cd5f4ea8c22628fe28bf14">DIOMODBUSELECTRICMETER</link> (<link linkend="_class_d_i_o_s_t_r_e_a_m">DIOSTREAM</link> *diostream, <link linkend="__d_i_o_mod_bus___client_8h_1af75a27698edb9b21e2c21cbe9c46cace">DIOMODBUS_CLIENTMODE</link> mode=<link linkend="__d_i_o_mod_bus___client_8h_1af75a27698edb9b21e2c21cbe9c46cacea701afcff51ecb482daacefd8409710d3">DIOMODBUS_CLIENTMODE_RTU</link>)</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>virtual <link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a66cf199c9627316ddd1fc0d12a2401c9">~DIOMODBUSELECTRICMETER</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para><link linkend="_class_d_i_o_m_o_d_b_u_s___c_l_i_e_n_t">DIOMODBUS_CLIENT</link> * <link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1afc1c7cfe15c33f7c4bbf73d003463e56">GetModBusProtocol</link> ()</para>

<para>GetModBusProtocol. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1acc8712b2e1273d8b7c0e6d1729032955">Connect</link> (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> unit, bool inlittleendian, int <link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>=<link linkend="__d_i_o_mod_bus_electric_meter_8h_1a6dbb04fc4729a33201f593cba492297c">DIOMODBUSELECTRICMETER_CONNECTTIMEOUT</link>)</para>

<para>Connect. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1ac2b77cfe25a326e56c682df165c4d853">CMD_C_CI_NU_2_ReadAllValues</link> (int TM, <link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link> *timestart, <link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link> *timeend, <link linkend="_class_x_v_e_c_t_o_r">XVECTOR</link>&lt; <link linkend="_class_d_i_o___c___c_i___n_u__2___r_e_s_u_l_t">DIO_C_CI_NU_2_RESULT</link> * &gt; *results, int <link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>=<link linkend="__d_i_o_mod_bus_electric_meter_8h_1a3ccc5006e43ea971bc7f1eed60f97bed">DIOMODBUSELECTRICMETER_READTIMEOUT</link>)</para>

<para>CMD_C_CI_NU_2_ReadAllValues. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a62ac97a08b514ada235ce70021afeb3d">CMD_C_CI_NU_2_DeleteResults</link> (<link linkend="_class_x_v_e_c_t_o_r">XVECTOR</link>&lt; <link linkend="_class_d_i_o___c___c_i___n_u__2___r_e_s_u_l_t">DIO_C_CI_NU_2_RESULT</link> * &gt; *results)</para>

<para>CMD_C_CI_NU_2_DeleteResults. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a70e465b95991de36ba95e660313e055c">CMD_C_TR_AA_ReadValues</link> (<link linkend="_class_d_i_o___c___t_r___a_a___r_e_s_u_l_t">DIO_C_TR_AA_RESULT</link> *result, int <link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>=<link linkend="__d_i_o_mod_bus_electric_meter_8h_1a3ccc5006e43ea971bc7f1eed60f97bed">DIOMODBUSELECTRICMETER_READTIMEOUT</link>)</para>

<para>CMD_C_TR_AA_ReadValues. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a4777b744f590776195719130183ab8d8">CancelOperations</link> ()</para>

<para>CancelOperations. </para>
</listitem>
            <listitem><para>void <link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1afd417f8f63884d17763bdcb1c4d5f7d9">Disconnect</link> ()</para>

<para>Disconnect. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_x_s_u_b_j_e_c_t">XSUBJECT</link>        <itemizedlist>
            <listitem><para><link linkend="_class_x_s_u_b_j_e_c_t_1ae130690234a70d3540b7c7922f02c02f">XSUBJECT</link> ()</para>

<para>Constructor. </para>
</listitem>
            <listitem><para>virtual <link linkend="_class_x_s_u_b_j_e_c_t_1ac4115cdc203f11f06dd104bb3f2c7d71">~XSUBJECT</link> ()</para>

<para>Destructor. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_x_s_u_b_j_e_c_t_1ac83006698567c749aecf727dddef5d9c">RegisterEvent</link> (<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> type)</para>

<para>RegisterEvent. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_x_s_u_b_j_e_c_t_1ab78992063b09d37612e7719e37d415bc">DeRegisterEvent</link> (<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> type)</para>

<para>DeRegisterEvent. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_x_s_u_b_j_e_c_t_1a9fe0e2c7eab3136fda3f09ac832f8013">DeRegisterAllEvents</link> ()</para>

<para>DeRegisterAllEvents. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_x_s_u_b_j_e_c_t_1adb65926d5f56410c9243d2f7c69a87a3">PostEvent</link> (<link linkend="_class_x_e_v_e_n_t">XEVENT</link> *event)</para>

<para>PostEvent. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_x_s_u_b_j_e_c_t_1af15352985b23157f6735fa863f6e8b2e">PostEvent</link> (<link linkend="_class_x_e_v_e_n_t">XEVENT</link> *event, <link linkend="_class_x_s_u_b_j_e_c_t">XSUBJECT</link> *xsubject)</para>

<para>PostEvent. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_x_m_a_p">XMAP</link>&lt; <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>, <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link> &gt; <link linkend="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a3ef41f69791d8caa239127c4967fc79a">registermap</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Data Input/Output ModBus Electric Meter class. </para>



<para><formalpara><title>Copyright</title>

<para>GEN Group. All rights reserved. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8h_source_1l00123">123</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8h_source">DIOModBusElectricMeter.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1aab650c2873cd5f4ea8c22628fe28bf14"/><section>
    <title>DIOMODBUSELECTRICMETER()</title>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<para><computeroutput>DIOMODBUSELECTRICMETER::DIOMODBUSELECTRICMETER (<link linkend="_class_d_i_o_s_t_r_e_a_m">DIOSTREAM</link> * diostream, <link linkend="__d_i_o_mod_bus___client_8h_1af75a27698edb9b21e2c21cbe9c46cace">DIOMODBUS_CLIENTMODE</link> mode = <computeroutput><link linkend="__d_i_o_mod_bus___client_8h_1af75a27698edb9b21e2c21cbe9c46cacea701afcff51ecb482daacefd8409710d3">DIOMODBUS_CLIENTMODE_RTU</link></computeroutput>
)</computeroutput></para><para>

<para>Constructor. </para>
</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>DIOSTREAM*</entry><entry>
<para>: </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>DIOMODBUS_CLIENTMODE</entry><entry>
<para>mode :</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Does not return anything.</para>
</formalpara>
<informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source_1l00141">141</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source">DIOModBusElectricMeter.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a66cf199c9627316ddd1fc0d12a2401c9"/><section>
    <title>~DIOMODBUSELECTRICMETER()</title>
<indexterm><primary>~DIOMODBUSELECTRICMETER</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>~DIOMODBUSELECTRICMETER</secondary></indexterm>
<para><computeroutput>DIOMODBUSELECTRICMETER::~DIOMODBUSELECTRICMETER ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Destructor. </para>
</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para><note><title>Note</title>

<para>VIRTUAL</para>
</note>
<formalpara><title>Returns</title>

<para>Does not return anything.</para>
</formalpara>
<informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source_1l00166">166</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source">DIOModBusElectricMeter.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a4777b744f590776195719130183ab8d8"/><section>
    <title>CancelOperations()</title>
<indexterm><primary>CancelOperations</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>CancelOperations</secondary></indexterm>
<para><computeroutput>bool DIOMODBUSELECTRICMETER::CancelOperations ( )</computeroutput></para><para>

<para>CancelOperations. </para>
</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para><formalpara><title>Returns</title>

<para>bool : true if is succesful.</para>
</formalpara>
<informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source_1l00404">404</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source">DIOModBusElectricMeter.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a62ac97a08b514ada235ce70021afeb3d"/><section>
    <title>CMD_C_CI_NU_2_DeleteResults()</title>
<indexterm><primary>CMD_C_CI_NU_2_DeleteResults</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>CMD_C_CI_NU_2_DeleteResults</secondary></indexterm>
<para><computeroutput>bool DIOMODBUSELECTRICMETER::CMD_C_CI_NU_2_DeleteResults (<link linkend="_class_x_v_e_c_t_o_r">XVECTOR</link>&lt; <link linkend="_class_d_i_o___c___c_i___n_u__2___r_e_s_u_l_t">DIO_C_CI_NU_2_RESULT</link> * &gt; * results)</computeroutput></para><para>

<para>CMD_C_CI_NU_2_DeleteResults. </para>
</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>results</entry><entry>
<para>:</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>bool : true if is succesful.</para>
</formalpara>
<informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source_1l00321">321</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source">DIOModBusElectricMeter.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1ac2b77cfe25a326e56c682df165c4d853"/><section>
    <title>CMD_C_CI_NU_2_ReadAllValues()</title>
<indexterm><primary>CMD_C_CI_NU_2_ReadAllValues</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>CMD_C_CI_NU_2_ReadAllValues</secondary></indexterm>
<para><computeroutput>bool DIOMODBUSELECTRICMETER::CMD_C_CI_NU_2_ReadAllValues (int TM, <link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link> * timestart, <link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link> * timeend, <link linkend="_class_x_v_e_c_t_o_r">XVECTOR</link>&lt; <link linkend="_class_d_i_o___c___c_i___n_u__2___r_e_s_u_l_t">DIO_C_CI_NU_2_RESULT</link> * &gt; * results, int timeout = <computeroutput><link linkend="__d_i_o_mod_bus_electric_meter_8h_1a3ccc5006e43ea971bc7f1eed60f97bed">DIOMODBUSELECTRICMETER_READTIMEOUT</link></computeroutput>
)</computeroutput></para><para>

<para>CMD_C_CI_NU_2_ReadAllValues. </para>
</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>TM</entry><entry>
<para>: </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>timestart</entry><entry>
<para>: </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>timeend</entry><entry>
<para>: </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>results</entry><entry>
<para>: </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>timeout</entry><entry>
<para>:</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>bool : true if is succesful.</para>
</formalpara>
<informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source_1l00242">242</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source">DIOModBusElectricMeter.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a70e465b95991de36ba95e660313e055c"/><section>
    <title>CMD_C_TR_AA_ReadValues()</title>
<indexterm><primary>CMD_C_TR_AA_ReadValues</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>CMD_C_TR_AA_ReadValues</secondary></indexterm>
<para><computeroutput>bool DIOMODBUSELECTRICMETER::CMD_C_TR_AA_ReadValues (<link linkend="_class_d_i_o___c___t_r___a_a___r_e_s_u_l_t">DIO_C_TR_AA_RESULT</link> * result, int timeout = <computeroutput><link linkend="__d_i_o_mod_bus_electric_meter_8h_1a3ccc5006e43ea971bc7f1eed60f97bed">DIOMODBUSELECTRICMETER_READTIMEOUT</link></computeroutput>
)</computeroutput></para><para>

<para>CMD_C_TR_AA_ReadValues. </para>
</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>result</entry><entry>
<para>: </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>timeout</entry><entry>
<para>:</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>bool : true if is succesful.</para>
</formalpara>
<informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source_1l00346">346</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source">DIOModBusElectricMeter.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1acc8712b2e1273d8b7c0e6d1729032955"/><section>
    <title>Connect()</title>
<indexterm><primary>Connect</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>Connect</secondary></indexterm>
<para><computeroutput>bool DIOMODBUSELECTRICMETER::Connect (<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link> unit, bool inlittleendian, int timeout = <computeroutput><link linkend="__d_i_o_mod_bus_electric_meter_8h_1a6dbb04fc4729a33201f593cba492297c">DIOMODBUSELECTRICMETER_CONNECTTIMEOUT</link></computeroutput>
)</computeroutput></para><para>

<para>Connect. </para>
</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>unit</entry><entry>
<para>: </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>inlittleendian</entry><entry>
<para>: </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>timeout</entry><entry>
<para>:</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>bool : true if is succesful.</para>
</formalpara>
<informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source_1l00209">209</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source">DIOModBusElectricMeter.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1afd417f8f63884d17763bdcb1c4d5f7d9"/><section>
    <title>Disconnect()</title>
<indexterm><primary>Disconnect</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>Disconnect</secondary></indexterm>
<para><computeroutput>void DIOMODBUSELECTRICMETER::Disconnect ( )</computeroutput></para><para>

<para>Disconnect. </para>
</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para><formalpara><title>Returns</title>

<para>void : does not return anything.</para>
</formalpara>
<informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source_1l00420">420</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source">DIOModBusElectricMeter.cpp</link>.</para>
</section>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1afc1c7cfe15c33f7c4bbf73d003463e56"/><section>
    <title>GetModBusProtocol()</title>
<indexterm><primary>GetModBusProtocol</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>GetModBusProtocol</secondary></indexterm>
<para><computeroutput><link linkend="_class_d_i_o_m_o_d_b_u_s___c_l_i_e_n_t">DIOMODBUS_CLIENT</link> * DIOMODBUSELECTRICMETER::GetModBusProtocol ( )</computeroutput></para><para>

<para>GetModBusProtocol. </para>
</para>

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
</para>

<para><formalpara><title>Returns</title>

<para>DIOMODBUS_CLIENT* :</para>
</formalpara>
<informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source_1l00190">190</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8cpp_source">DIOModBusElectricMeter.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_d_i_o_m_o_d_b_u_s_e_l_e_c_t_r_i_c_m_e_t_e_r_1a3ef41f69791d8caa239127c4967fc79a"/><section>
    <title>registermap</title>
<indexterm><primary>registermap</primary><secondary>DIOMODBUSELECTRICMETER</secondary></indexterm>
<indexterm><primary>DIOMODBUSELECTRICMETER</primary><secondary>registermap</secondary></indexterm>
<para><computeroutput><link linkend="_class_x_m_a_p">XMAP</link>&lt;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>,<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&gt; DIOMODBUSELECTRICMETER::registermap<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__d_i_o_mod_bus_electric_meter_8h_source_1l00144">144</link> of file <link linkend="__d_i_o_mod_bus_electric_meter_8h_source">DIOModBusElectricMeter.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
D:/Projects/GENFrameWork/GEN/DataIO/<link linkend="__d_i_o_mod_bus_electric_meter_8h">DIOModBusElectricMeter.h</link>D:/Projects/GENFrameWork/GEN/DataIO/<link linkend="__d_i_o_mod_bus_electric_meter_8cpp">DIOModBusElectricMeter.cpp</link></section>
</section>
