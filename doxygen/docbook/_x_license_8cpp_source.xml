<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_license_8cpp_source" xml:lang="en-US">
<title>XLicense.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XLicense.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_license_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_license_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_license_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_license_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_license_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_license_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_license_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_license_8h">XLicense.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_license_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_publisher_8h">XPublisher.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_file_hash_8h">XFileHash.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_file_8h">XFile.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_file_i_n_i_8h">XFileINI.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00047"/>00047 
<anchor xml:id="__x_license_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_s_h_a1_8h">HashSHA1.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__cipher_a_e_s_8h">CipherAES.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00050"/>00050 
<anchor xml:id="__x_license_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_factory_8h">DIOFactory.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_m_a_c_8h">DIOMAC.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_web_client_8h">DIOWebClient.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_device_i_p_8h">DIOStreamDeviceIP.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00055"/>00055 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_i_p_local_enum_devices_8h">DIOStreamIPLocalEnumDevices.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00056"/>00056 
<anchor xml:id="__x_license_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_license_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00060"/>00060 
<anchor xml:id="__x_license_8cpp_source_1l00061"/>00061 
<anchor xml:id="__x_license_8cpp_source_1l00062"/>00062 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00064"/>00064 
<anchor xml:id="__x_license_8cpp_source_1l00065"/>00065 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00066"/>00066 
<anchor xml:id="__x_license_8cpp_source_1l00067"/>00067 
<anchor xml:id="__x_license_8cpp_source_1l00068"/>00068 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00069"/>00069 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00070"/>00070 
<anchor xml:id="__x_license_8cpp_source_1l00071"/>00071 
<anchor xml:id="__x_license_8cpp_source_1l00072"/>00072 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_XLICENSEID</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00073"/>00073 
<anchor xml:id="__x_license_8cpp_source_1l00074"/>00074 
<anchor xml:id="__x_license_8cpp_source_1l00084"/><link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a61b81eac668549f82abea796f4eaa923">00084</link> <link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a61b81eac668549f82abea796f4eaa923">XLICENSEID::XLICENSEID</link>()
<anchor xml:id="__x_license_8cpp_source_1l00085"/>00085 {
<anchor xml:id="__x_license_8cpp_source_1l00086"/>00086 &#32;&#32;Clean();
<anchor xml:id="__x_license_8cpp_source_1l00087"/>00087 }
<anchor xml:id="__x_license_8cpp_source_1l00088"/>00088 
<anchor xml:id="__x_license_8cpp_source_1l00089"/>00089 
<anchor xml:id="__x_license_8cpp_source_1l00100"/><link linkend="_class_x_l_i_c_e_n_s_e_i_d_1ae08739c6833d90b7acbc700f440807e2">00100</link> <link linkend="_class_x_l_i_c_e_n_s_e_i_d_1ae08739c6833d90b7acbc700f440807e2">XLICENSEID::~XLICENSEID</link>()
<anchor xml:id="__x_license_8cpp_source_1l00101"/>00101 {
<anchor xml:id="__x_license_8cpp_source_1l00102"/>00102 &#32;&#32;Clean();
<anchor xml:id="__x_license_8cpp_source_1l00103"/>00103 }
<anchor xml:id="__x_license_8cpp_source_1l00104"/>00104 
<anchor xml:id="__x_license_8cpp_source_1l00105"/>00105 
<anchor xml:id="__x_license_8cpp_source_1l00118"/><link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a35434db9ae18743b7b73a6a0fed591a4">00118</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a35434db9ae18743b7b73a6a0fed591a4">XLICENSEID::GetPart</link>(<emphasis role="keywordtype">int</emphasis>&#32;npart,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;part)
<anchor xml:id="__x_license_8cpp_source_1l00119"/>00119 {
<anchor xml:id="__x_license_8cpp_source_1l00120"/>00120 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(npart&lt;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00121"/>00121 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(npart&gt;=<link linkend="__x_license_8h_1a6f2c1e81b5bb0887a0d1e78ecc49173c">XLICENSE_MAXIDPARTS</link>)&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00122"/>00122 
<anchor xml:id="__x_license_8cpp_source_1l00123"/>00123 &#32;&#32;part&#32;=&#32;this-&gt;part[npart];
<anchor xml:id="__x_license_8cpp_source_1l00124"/>00124 
<anchor xml:id="__x_license_8cpp_source_1l00125"/>00125 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00126"/>00126 }
<anchor xml:id="__x_license_8cpp_source_1l00127"/>00127 
<anchor xml:id="__x_license_8cpp_source_1l00128"/>00128 
<anchor xml:id="__x_license_8cpp_source_1l00141"/><link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a929e297fd5915daba6a081ffe1e23dd5">00141</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a929e297fd5915daba6a081ffe1e23dd5">XLICENSEID::SetPart</link>(<emphasis role="keywordtype">int</emphasis>&#32;npart,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;part)
<anchor xml:id="__x_license_8cpp_source_1l00142"/>00142 {
<anchor xml:id="__x_license_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(npart&lt;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00144"/>00144 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(npart&gt;=<link linkend="__x_license_8h_1a6f2c1e81b5bb0887a0d1e78ecc49173c">XLICENSE_MAXIDPARTS</link>)&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00145"/>00145 
<anchor xml:id="__x_license_8cpp_source_1l00146"/>00146 &#32;&#32;this-&gt;part[npart]&#32;=&#32;part;
<anchor xml:id="__x_license_8cpp_source_1l00147"/>00147 
<anchor xml:id="__x_license_8cpp_source_1l00148"/>00148 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00149"/>00149 }
<anchor xml:id="__x_license_8cpp_source_1l00150"/>00150 
<anchor xml:id="__x_license_8cpp_source_1l00151"/>00151 
<anchor xml:id="__x_license_8cpp_source_1l00161"/><link linkend="_class_x_l_i_c_e_n_s_e_i_d_1ad499f141b864328899af2e898e7a1f5f">00161</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;<link linkend="_class_x_l_i_c_e_n_s_e_i_d_1ad499f141b864328899af2e898e7a1f5f">XLICENSEID::GetParts</link>()
<anchor xml:id="__x_license_8cpp_source_1l00162"/>00162 {
<anchor xml:id="__x_license_8cpp_source_1l00163"/>00163 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;part;
<anchor xml:id="__x_license_8cpp_source_1l00164"/>00164 }
<anchor xml:id="__x_license_8cpp_source_1l00165"/>00165 
<anchor xml:id="__x_license_8cpp_source_1l00166"/>00166 
<anchor xml:id="__x_license_8cpp_source_1l00178"/><link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a026a5a1bf5d9308affebb4c4288a74aa">00178</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a026a5a1bf5d9308affebb4c4288a74aa">XLICENSEID::GetXBuffer</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;xbuffer)
<anchor xml:id="__x_license_8cpp_source_1l00179"/>00179 {
<anchor xml:id="__x_license_8cpp_source_1l00180"/>00180 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;<link linkend="__x_license_8h_1a6f2c1e81b5bb0887a0d1e78ecc49173c">XLICENSE_MAXIDPARTS</link>;&#32;c++)
<anchor xml:id="__x_license_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)part[c]);
<anchor xml:id="__x_license_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00184"/>00184 }
<anchor xml:id="__x_license_8cpp_source_1l00185"/>00185 
<anchor xml:id="__x_license_8cpp_source_1l00186"/>00186 
<anchor xml:id="__x_license_8cpp_source_1l00198"/><link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a4905e8d03caa8530a2a9d75ca252b6e6">00198</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a4905e8d03caa8530a2a9d75ca252b6e6">XLICENSEID::GetXString</link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;IDstring)
<anchor xml:id="__x_license_8cpp_source_1l00199"/>00199 {
<anchor xml:id="__x_license_8cpp_source_1l00200"/>00200 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;partstring;
<anchor xml:id="__x_license_8cpp_source_1l00201"/>00201 
<anchor xml:id="__x_license_8cpp_source_1l00202"/>00202 &#32;&#32;IDstring.<link linkend="_class_x_s_t_r_i_n_g_1a9275997c1605fa79646c301e63a77d06">Empty</link>();
<anchor xml:id="__x_license_8cpp_source_1l00203"/>00203 
<anchor xml:id="__x_license_8cpp_source_1l00204"/>00204 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;<link linkend="__x_license_8h_1a6f2c1e81b5bb0887a0d1e78ecc49173c">XLICENSE_MAXIDPARTS</link>;&#32;c++)
<anchor xml:id="__x_license_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;partstring.<link linkend="_class_x_s_t_r_i_n_g_1a2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%08X&quot;</emphasis>),&#32;part[c]);
<anchor xml:id="__x_license_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;IDstring&#32;+=&#32;partstring;
<anchor xml:id="__x_license_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(c&#32;!=&#32;(<link linkend="__x_license_8h_1a6f2c1e81b5bb0887a0d1e78ecc49173c">XLICENSE_MAXIDPARTS</link>-1))&#32;&#32;IDstring&#32;+=<link linkend="__x_string_8h_1ab483f167129a5d1941ea1d30f3df8d8a">__C</link>(<emphasis role="charliteral">&apos;-&apos;</emphasis>);
<anchor xml:id="__x_license_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00210"/>00210 }
<anchor xml:id="__x_license_8cpp_source_1l00211"/>00211 
<anchor xml:id="__x_license_8cpp_source_1l00212"/>00212 
<anchor xml:id="__x_license_8cpp_source_1l00223"/>00223 <emphasis role="keywordtype">void</emphasis>&#32;XLICENSEID::Clean()
<anchor xml:id="__x_license_8cpp_source_1l00224"/>00224 {
<anchor xml:id="__x_license_8cpp_source_1l00225"/>00225 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;<link linkend="__x_license_8h_1a6f2c1e81b5bb0887a0d1e78ecc49173c">XLICENSE_MAXIDPARTS</link>;&#32;c++)
<anchor xml:id="__x_license_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;part[c]&#32;=&#32;0;
<anchor xml:id="__x_license_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00229"/>00229 }
<anchor xml:id="__x_license_8cpp_source_1l00230"/>00230 
<anchor xml:id="__x_license_8cpp_source_1l00231"/>00231 
<anchor xml:id="__x_license_8cpp_source_1l00232"/>00232 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00233"/>00233 
<anchor xml:id="__x_license_8cpp_source_1l00234"/>00234 
<anchor xml:id="__x_license_8cpp_source_1l00235"/>00235 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_XLICENSE</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00236"/>00236 
<anchor xml:id="__x_license_8cpp_source_1l00237"/>00237 
<anchor xml:id="__x_license_8cpp_source_1l00247"/><link linkend="_class_x_l_i_c_e_n_s_e_1ad9e04daabfe7bf52070898368ee31a1e">00247</link> <link linkend="_class_x_l_i_c_e_n_s_e_1ad9e04daabfe7bf52070898368ee31a1e">XLICENSE::XLICENSE</link>()
<anchor xml:id="__x_license_8cpp_source_1l00248"/>00248 {
<anchor xml:id="__x_license_8cpp_source_1l00249"/>00249 &#32;&#32;Clean();
<anchor xml:id="__x_license_8cpp_source_1l00250"/>00250 
<anchor xml:id="__x_license_8cpp_source_1l00251"/>00251 &#32;&#32;license&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>();
<anchor xml:id="__x_license_8cpp_source_1l00252"/>00252 
<anchor xml:id="__x_license_8cpp_source_1l00253"/>00253 &#32;&#32;<link linkend="_class_x_s_u_b_j_e_c_t_1ac83006698567c749aecf727dddef5d9c">RegisterEvent</link>(<link linkend="__x_license___x_event_8h_1a29c2d02828dfbdefdaef313693453889ad5e0095429da16f033b9bad56776202c">XLICENSEXEVENT_TYPE_INVALID</link>);
<anchor xml:id="__x_license_8cpp_source_1l00254"/>00254 &#32;&#32;<link linkend="_class_x_s_u_b_j_e_c_t_1ac83006698567c749aecf727dddef5d9c">RegisterEvent</link>(<link linkend="__x_license___x_event_8h_1a29c2d02828dfbdefdaef313693453889aa565ab40c18320efcf4dbf5c52390f27">XLICENSEXEVENT_TYPE_EXPIRED</link>);
<anchor xml:id="__x_license_8cpp_source_1l00255"/>00255 }
<anchor xml:id="__x_license_8cpp_source_1l00256"/>00256 
<anchor xml:id="__x_license_8cpp_source_1l00257"/>00257 
<anchor xml:id="__x_license_8cpp_source_1l00268"/><link linkend="_class_x_l_i_c_e_n_s_e_1ab6658ba9a6156e45a753d91a5bd1a82f">00268</link> <link linkend="_class_x_l_i_c_e_n_s_e_1ab6658ba9a6156e45a753d91a5bd1a82f">XLICENSE::~XLICENSE</link>()
<anchor xml:id="__x_license_8cpp_source_1l00269"/>00269 {
<anchor xml:id="__x_license_8cpp_source_1l00270"/>00270 &#32;&#32;<link linkend="_class_x_s_u_b_j_e_c_t_1ab78992063b09d37612e7719e37d415bc">DeRegisterEvent</link>(<link linkend="__x_license___x_event_8h_1a29c2d02828dfbdefdaef313693453889ad5e0095429da16f033b9bad56776202c">XLICENSEXEVENT_TYPE_INVALID</link>);
<anchor xml:id="__x_license_8cpp_source_1l00271"/>00271 &#32;&#32;<link linkend="_class_x_s_u_b_j_e_c_t_1ab78992063b09d37612e7719e37d415bc">DeRegisterEvent</link>(<link linkend="__x_license___x_event_8h_1a29c2d02828dfbdefdaef313693453889aa565ab40c18320efcf4dbf5c52390f27">XLICENSEXEVENT_TYPE_EXPIRED</link>);
<anchor xml:id="__x_license_8cpp_source_1l00272"/>00272 
<anchor xml:id="__x_license_8cpp_source_1l00273"/>00273 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;license;
<anchor xml:id="__x_license_8cpp_source_1l00274"/>00274 
<anchor xml:id="__x_license_8cpp_source_1l00275"/>00275 &#32;&#32;Clean();
<anchor xml:id="__x_license_8cpp_source_1l00276"/>00276 }
<anchor xml:id="__x_license_8cpp_source_1l00277"/>00277 
<anchor xml:id="__x_license_8cpp_source_1l00278"/>00278 
<anchor xml:id="__x_license_8cpp_source_1l00290"/><link linkend="_class_x_l_i_c_e_n_s_e_1ac7ee32ad07f9a6e3d1fd950aad86f08b">00290</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1ac7ee32ad07f9a6e3d1fd950aad86f08b">XLICENSE::GenerateMachineID</link>(<link linkend="_class_x_l_i_c_e_n_s_e_i_d">XLICENSEID</link>&amp;&#32;licenseID)
<anchor xml:id="__x_license_8cpp_source_1l00291"/>00291 {
<anchor xml:id="__x_license_8cpp_source_1l00292"/>00292 &#32;&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_i_p_l_o_c_a_l_e_n_u_m_d_e_v_i_c_e_s">DIOSTREAMIPLOCALENUMDEVICES</link>*&#32;enumdevices&#32;=&#32;(<link linkend="_class_d_i_o_s_t_r_e_a_m_i_p_l_o_c_a_l_e_n_u_m_d_e_v_i_c_e_s">DIOSTREAMIPLOCALENUMDEVICES</link>*)GEN_DIOFACTORY.CreateStreamEnumDevices(<link linkend="__d_i_o_stream_enum_devices_8h_1a002fa6ddc871265914f8862eefde794ea38b1c621f1083fe75b0ac08241706793">DIOSTREAMENUMTYPE_IP_LOCAL</link>);
<anchor xml:id="__x_license_8cpp_source_1l00293"/>00293 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(enumdevices)
<anchor xml:id="__x_license_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;enumdevices-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_i_p_l_o_c_a_l_e_n_u_m_d_e_v_i_c_e_s_1a0373bec505bbc9c353b1ae738cc11c8b">Search</link>();
<anchor xml:id="__x_license_8cpp_source_1l00296"/>00296 
<anchor xml:id="__x_license_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;&#32;basicID&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_license_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;basicstring;
<anchor xml:id="__x_license_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;basicxbuffer;
<anchor xml:id="__x_license_8cpp_source_1l00300"/>00300 
<anchor xml:id="__x_license_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;(int)enumdevices-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_e_n_u_m_d_e_v_i_c_e_s_1ace3b6536060dcc534847e7483ab2d8b7">GetDevices</link>()-&gt;<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();c++)
<anchor xml:id="__x_license_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_s_t_r_e_a_m_d_e_v_i_c_e_i_p">DIOSTREAMDEVICEIP</link>*&#32;device&#32;=&#32;(<link linkend="_class_d_i_o_s_t_r_e_a_m_d_e_v_i_c_e_i_p">DIOSTREAMDEVICEIP</link>*)enumdevices-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_e_n_u_m_d_e_v_i_c_e_s_1ace3b6536060dcc534847e7483ab2d8b7">GetDevices</link>()-&gt;<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__x_license_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(device)
<anchor xml:id="__x_license_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_m_a_c">DIOMAC</link>*&#32;mac&#32;=&#32;device-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_d_e_v_i_c_e_i_p_1a2d5b74a633b66cb73177ff8d214fe7aa">GetMAC</link>();
<anchor xml:id="__x_license_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(mac)
<anchor xml:id="__x_license_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;macID&#32;=&#32;0;
<anchor xml:id="__x_license_8cpp_source_1l00310"/>00310 
<anchor xml:id="__x_license_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;d=0;&#32;d&lt;<link linkend="__d_i_o_m_a_c_8h_1af8a3ad8c555f985e0dd518dea6496e27">DIOMAC_MAXSIZE</link>;&#32;d++)
<anchor xml:id="__x_license_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;macID&#32;|=&#32;mac-&gt;<link linkend="_class_d_i_o_m_a_c_1afe8137a6c1d5581f2b5480fe3e91573b">Get</link>()[d];
<anchor xml:id="__x_license_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;macID&lt;&lt;=8;
<anchor xml:id="__x_license_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00316"/>00316 
<anchor xml:id="__x_license_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;basicID&#32;^=&#32;macID;
<anchor xml:id="__x_license_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00321"/>00321 
<anchor xml:id="__x_license_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;GEN_DIOFACTORY.DeleteStreamEnumDevices(enumdevices);
<anchor xml:id="__x_license_8cpp_source_1l00323"/>00323 
<anchor xml:id="__x_license_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;basicstring.<link linkend="_class_x_s_t_r_i_n_g_1a2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%02X%02X%llX%llX%02X%02X&quot;</emphasis>),&#32;<link linkend="__x_license_8h_1aae6e4f2f34decdcf0ad261176a7afce6">XLICENSE_VERSION</link>,&#32;<link linkend="__x_license_8h_1af0ccb0b8931e3d8634735dc89338fab6">XLICENSE_SUBVERSION</link>,&#32;basicID,&#32;~basicID,&#32;<link linkend="__x_license_8h_1aae6e4f2f34decdcf0ad261176a7afce6">XLICENSE_VERSION</link>,&#32;<link linkend="__x_license_8h_1af0ccb0b8931e3d8634735dc89338fab6">XLICENSE_SUBVERSION</link>);
<anchor xml:id="__x_license_8cpp_source_1l00325"/>00325 
<anchor xml:id="__x_license_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_h_a_s_h_s_h_a1">HASHSHA1</link>*&#32;sha1&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_h_a_s_h_s_h_a1">HASHSHA1</link>();
<anchor xml:id="__x_license_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(sha1)
<anchor xml:id="__x_license_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;basicstring.<link linkend="_class_x_s_t_r_i_n_g_1af1013ead045ae732e36dd6af9b5b5bc1">ConvertHexStringToBuffer</link>(basicxbuffer);
<anchor xml:id="__x_license_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sha1-&gt;<link linkend="_class_h_a_s_h_s_h_a1_1a2ce86beb262a0aa3a251f84bfcfa9a10">Do</link>(basicxbuffer);
<anchor xml:id="__x_license_8cpp_source_1l00331"/>00331 
<anchor xml:id="__x_license_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;index&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_license_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;partID&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_license_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;sizeofpart&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)/<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>);
<anchor xml:id="__x_license_8cpp_source_1l00335"/>00335 
<anchor xml:id="__x_license_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;<link linkend="__x_license_8h_1a6f2c1e81b5bb0887a0d1e78ecc49173c">XLICENSE_MAXIDPARTS</link>;&#32;c++)
<anchor xml:id="__x_license_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;partID&#32;=&#32;0;
<anchor xml:id="__x_license_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;d=0;&#32;d&lt;sizeofpart;&#32;d++)
<anchor xml:id="__x_license_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;partID&#32;|=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)sha1-&gt;<link linkend="_class_h_a_s_h_1a4b0200f295e136f81ec538fe28913879">GetResult</link>()-&gt;<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(index++);
<anchor xml:id="__x_license_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(d!=(sizeofpart-1))&#32;partID&lt;&lt;=8;
<anchor xml:id="__x_license_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(index&gt;=sha1-&gt;<link linkend="_class_h_a_s_h_1a4b0200f295e136f81ec538fe28913879">GetResult</link>()-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>())&#32;index&#32;=&#32;0;
<anchor xml:id="__x_license_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00345"/>00345 
<anchor xml:id="__x_license_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;licenseID.<link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a929e297fd5915daba6a081ffe1e23dd5">SetPart</link>(c,&#32;partID);
<anchor xml:id="__x_license_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00348"/>00348 
<anchor xml:id="__x_license_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;sha1;
<anchor xml:id="__x_license_8cpp_source_1l00350"/>00350 
<anchor xml:id="__x_license_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00354"/>00354 
<anchor xml:id="__x_license_8cpp_source_1l00355"/>00355 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00356"/>00356 }
<anchor xml:id="__x_license_8cpp_source_1l00357"/>00357 
<anchor xml:id="__x_license_8cpp_source_1l00358"/>00358 
<anchor xml:id="__x_license_8cpp_source_1l00372"/><link linkend="_class_x_l_i_c_e_n_s_e_1ab85e5207798ab50fba51857096244e90">00372</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1ab85e5207798ab50fba51857096244e90">XLICENSE::Generate</link>(<link linkend="_class_x_l_i_c_e_n_s_e_i_d">XLICENSEID</link>&amp;&#32;licenseID,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;applicationID,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;license)
<anchor xml:id="__x_license_8cpp_source_1l00373"/>00373 {
<anchor xml:id="__x_license_8cpp_source_1l00374"/>00374 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_a_e_s">CIPHERAES</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cipherAES;
<anchor xml:id="__x_license_8cpp_source_1l00375"/>00375 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l">CIPHERKEYSYMMETRICAL</link>&#32;&#32;key;
<anchor xml:id="__x_license_8cpp_source_1l00376"/>00376 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xbufferkey;
<anchor xml:id="__x_license_8cpp_source_1l00377"/>00377 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xbuffercipher;
<anchor xml:id="__x_license_8cpp_source_1l00378"/>00378 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_license&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;license;
<anchor xml:id="__x_license_8cpp_source_1l00379"/>00379 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_applicationID&#32;=&#32;applicationID;
<anchor xml:id="__x_license_8cpp_source_1l00380"/>00380 
<anchor xml:id="__x_license_8cpp_source_1l00381"/>00381 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_license)&#32;_license&#32;=&#32;this-&gt;license;
<anchor xml:id="__x_license_8cpp_source_1l00382"/>00382 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_license)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00383"/>00383 
<anchor xml:id="__x_license_8cpp_source_1l00384"/>00384 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_applicationID)&#32;_applicationID&#32;=&#32;&amp;this-&gt;applicationID;
<anchor xml:id="__x_license_8cpp_source_1l00385"/>00385 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_applicationID)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00386"/>00386 
<anchor xml:id="__x_license_8cpp_source_1l00387"/>00387 &#32;&#32;_license-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__x_license_8cpp_source_1l00388"/>00388 &#32;&#32;licenseID.<link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a026a5a1bf5d9308affebb4c4288a74aa">GetXBuffer</link>(xbuffercipher);
<anchor xml:id="__x_license_8cpp_source_1l00389"/>00389 
<anchor xml:id="__x_license_8cpp_source_1l00390"/>00390 &#32;&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1ad82ec0c91993cfd9d7a757291150e142">GetBufferKeyFromMachineID</link>((*_applicationID),&#32;xbufferkey);
<anchor xml:id="__x_license_8cpp_source_1l00391"/>00391 
<anchor xml:id="__x_license_8cpp_source_1l00392"/>00392 &#32;&#32;key.<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l_1ac6251d005c00cafb8af02a17e8410cf8">Set</link>(xbufferkey);
<anchor xml:id="__x_license_8cpp_source_1l00393"/>00393 
<anchor xml:id="__x_license_8cpp_source_1l00394"/>00394 &#32;&#32;cipherAES.<link linkend="_class_c_i_p_h_e_r_1ae2655d45967a87437e48a437c89e2d60">SetKey</link>(&amp;key);
<anchor xml:id="__x_license_8cpp_source_1l00395"/>00395 &#32;&#32;cipherAES.<link linkend="_class_c_i_p_h_e_r_1adb6eeabf5dbd8ce6ac81f1044da2e9ac">SetChainingMode</link>(<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa390a87788a71c68b9c62022c6c6c3c21">CIPHERCHAININGMODE_CBC</link>);
<anchor xml:id="__x_license_8cpp_source_1l00396"/>00396 &#32;&#32;cipherAES.<link linkend="_class_c_i_p_h_e_r_1a8d60fdb0bc07274dc9a3db02397fac6f">SetPaddingType</link>(<link linkend="__x_buffer_8h_1ac248004dbafba62384287a2eba38cd35aa2fccdb92c2ee954bbdf4083351347de">XBUFFER_PADDINGTYPE_NONE</link>);
<anchor xml:id="__x_license_8cpp_source_1l00397"/>00397 
<anchor xml:id="__x_license_8cpp_source_1l00398"/>00398 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(cipherAES.<link linkend="_class_c_i_p_h_e_r_a_e_s_1a5fdf271b608b25341f86b0c2f6c8485f">Cipher</link>(xbuffercipher))
<anchor xml:id="__x_license_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;_license-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__x_license_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;_license-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(cipherAES.<link linkend="_class_c_i_p_h_e_r_1ad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>());
<anchor xml:id="__x_license_8cpp_source_1l00402"/>00402 
<anchor xml:id="__x_license_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00405"/>00405 
<anchor xml:id="__x_license_8cpp_source_1l00406"/>00406 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00407"/>00407 }
<anchor xml:id="__x_license_8cpp_source_1l00408"/>00408 
<anchor xml:id="__x_license_8cpp_source_1l00409"/>00409 
<anchor xml:id="__x_license_8cpp_source_1l00422"/><link linkend="_class_x_l_i_c_e_n_s_e_1ad82ec0c91993cfd9d7a757291150e142">00422</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1ad82ec0c91993cfd9d7a757291150e142">XLICENSE::GetBufferKeyFromMachineID</link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;applicationID,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;xbufferkey)
<anchor xml:id="__x_license_8cpp_source_1l00423"/>00423 {
<anchor xml:id="__x_license_8cpp_source_1l00424"/>00424 &#32;&#32;<link linkend="_class_h_a_s_h_s_h_a1">HASHSHA1</link>&#32;sha1;
<anchor xml:id="__x_license_8cpp_source_1l00425"/>00425 
<anchor xml:id="__x_license_8cpp_source_1l00426"/>00426 &#32;&#32;xbufferkey.<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__x_license_8cpp_source_1l00427"/>00427 
<anchor xml:id="__x_license_8cpp_source_1l00428"/>00428 &#32;&#32;
<anchor xml:id="__x_license_8cpp_source_1l00429"/>00429 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;charstr;
<anchor xml:id="__x_license_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;
<anchor xml:id="__x_license_8cpp_source_1l00431"/>00431 &#32;&#32;applicationID.<link linkend="_class_x_s_t_r_i_n_g_1acdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(charstr);
<anchor xml:id="__x_license_8cpp_source_1l00432"/>00432 &#32;&#32;xbufferkey.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)charstr.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;applicationID.<link linkend="_class_x_s_t_r_i_n_g_1a7c3fa0dd7b650399470c76192fbd4916">GetSize</link>());
<anchor xml:id="__x_license_8cpp_source_1l00433"/>00433 
<anchor xml:id="__x_license_8cpp_source_1l00434"/>00434 &#32;&#32;sha1.<link linkend="_class_h_a_s_h_s_h_a1_1a2ce86beb262a0aa3a251f84bfcfa9a10">Do</link>(xbufferkey);
<anchor xml:id="__x_license_8cpp_source_1l00435"/>00435 
<anchor xml:id="__x_license_8cpp_source_1l00436"/>00436 &#32;&#32;xbufferkey.<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__x_license_8cpp_source_1l00437"/>00437 &#32;&#32;xbufferkey.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(sha1.<link linkend="_class_h_a_s_h_1a4b0200f295e136f81ec538fe28913879">GetResult</link>());
<anchor xml:id="__x_license_8cpp_source_1l00438"/>00438 
<anchor xml:id="__x_license_8cpp_source_1l00439"/>00439 &#32;&#32;xbufferkey.<link linkend="_class_x_b_u_f_f_e_r_1acf69e379f1d0bf812ae9c1157eac172c">Resize</link>(16);
<anchor xml:id="__x_license_8cpp_source_1l00440"/>00440 
<anchor xml:id="__x_license_8cpp_source_1l00441"/>00441 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xbufferkey.<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>()?<emphasis role="keyword">true</emphasis>:<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00442"/>00442 }
<anchor xml:id="__x_license_8cpp_source_1l00443"/>00443 
<anchor xml:id="__x_license_8cpp_source_1l00444"/>00444 
<anchor xml:id="__x_license_8cpp_source_1l00458"/><link linkend="_class_x_l_i_c_e_n_s_e_1aeb8bdd70c32c3e502b1d1513cf83aba5">00458</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1aeb8bdd70c32c3e502b1d1513cf83aba5">XLICENSE::CipherExpirationDate</link>(<emphasis role="keywordtype">bool</emphasis>&#32;cipher,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;applicationID,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;expirationdate)
<anchor xml:id="__x_license_8cpp_source_1l00459"/>00459 {
<anchor xml:id="__x_license_8cpp_source_1l00460"/>00460 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xbufferkey;
<anchor xml:id="__x_license_8cpp_source_1l00461"/>00461 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_a_e_s">CIPHERAES</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cipherAES;
<anchor xml:id="__x_license_8cpp_source_1l00462"/>00462 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l">CIPHERKEYSYMMETRICAL</link>&#32;&#32;key;
<anchor xml:id="__x_license_8cpp_source_1l00463"/>00463 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00464"/>00464 
<anchor xml:id="__x_license_8cpp_source_1l00465"/>00465 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_l_i_c_e_n_s_e_1ad82ec0c91993cfd9d7a757291150e142">GetBufferKeyFromMachineID</link>(applicationID,&#32;xbufferkey))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00466"/>00466 
<anchor xml:id="__x_license_8cpp_source_1l00467"/>00467 &#32;&#32;key.<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l_1ac6251d005c00cafb8af02a17e8410cf8">Set</link>(xbufferkey);
<anchor xml:id="__x_license_8cpp_source_1l00468"/>00468 
<anchor xml:id="__x_license_8cpp_source_1l00469"/>00469 &#32;&#32;cipherAES.<link linkend="_class_c_i_p_h_e_r_1ae2655d45967a87437e48a437c89e2d60">SetKey</link>(&amp;key);
<anchor xml:id="__x_license_8cpp_source_1l00470"/>00470 &#32;&#32;cipherAES.<link linkend="_class_c_i_p_h_e_r_1adb6eeabf5dbd8ce6ac81f1044da2e9ac">SetChainingMode</link>(<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa390a87788a71c68b9c62022c6c6c3c21">CIPHERCHAININGMODE_CBC</link>);
<anchor xml:id="__x_license_8cpp_source_1l00471"/>00471 &#32;&#32;cipherAES.<link linkend="_class_c_i_p_h_e_r_1a8d60fdb0bc07274dc9a3db02397fac6f">SetPaddingType</link>(<link linkend="__x_buffer_8h_1ac248004dbafba62384287a2eba38cd35ae7a60919fb522a3dfbec58611890bdda">XBUFFER_PADDINGTYPE_SPACES</link>);
<anchor xml:id="__x_license_8cpp_source_1l00472"/>00472 
<anchor xml:id="__x_license_8cpp_source_1l00473"/>00473 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(cipher)
<anchor xml:id="__x_license_8cpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;charstr;
<anchor xml:id="__x_license_8cpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_license_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;expirationdate.<link linkend="_class_x_s_t_r_i_n_g_1acdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(charstr);
<anchor xml:id="__x_license_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;
<anchor xml:id="__x_license_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;cipherAES.<link linkend="_class_c_i_p_h_e_r_a_e_s_1a5fdf271b608b25341f86b0c2f6c8485f">Cipher</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)charstr.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;expirationdate.<link linkend="_class_x_s_t_r_i_n_g_1a7c3fa0dd7b650399470c76192fbd4916">GetSize</link>());
<anchor xml:id="__x_license_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)
<anchor xml:id="__x_license_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cipherAES.<link linkend="_class_c_i_p_h_e_r_1ad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>()-&gt;ConvertToBase64(expirationdate);
<anchor xml:id="__x_license_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;xbuffer;
<anchor xml:id="__x_license_8cpp_source_1l00489"/>00489 
<anchor xml:id="__x_license_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1afdcaba31a1f968d78d0c5ba3c481e6fc">ConvertFromBase64</link>(expirationdate);
<anchor xml:id="__x_license_8cpp_source_1l00491"/>00491 
<anchor xml:id="__x_license_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;cipherAES.<link linkend="_class_c_i_p_h_e_r_a_e_s_1a447a104f78b94ce05ec5667e4c4f9ca8">Uncipher</link>(xbuffer);
<anchor xml:id="__x_license_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)
<anchor xml:id="__x_license_8cpp_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expirationdate.<link linkend="_class_x_s_t_r_i_n_g_1a9275997c1605fa79646c301e63a77d06">Empty</link>();
<anchor xml:id="__x_license_8cpp_source_1l00496"/>00496 
<anchor xml:id="__x_license_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;&#32;c&lt;cipherAES.<link linkend="_class_c_i_p_h_e_r_1ad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>()-&gt;GetSize();&#32;c++)
<anchor xml:id="__x_license_8cpp_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expirationdate.<link linkend="_class_x_s_t_r_i_n_g_1ae19f84471c20a914d10a8ac757cacb9a">Add</link>((<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>)cipherAES.<link linkend="_class_c_i_p_h_e_r_1ad9a63cedccb6bb057c88b0ebbcd74f24">GetResult</link>()-&gt;GetByte(c));
<anchor xml:id="__x_license_8cpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00501"/>00501 
<anchor xml:id="__x_license_8cpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expirationdate.<link linkend="_class_x_s_t_r_i_n_g_1acae4462012fcb5ee07db15505877d40a">DeleteCharacter</link>(0x20,&#32;<link linkend="__x_string_8h_1a5399fd4ffd356751bde3732db3435dfaaf637cd12b204455cf7aae0c1a2eae8f2">XSTRINGCONTEXT_TO_END</link>);
<anchor xml:id="__x_license_8cpp_source_1l00503"/>00503 
<anchor xml:id="__x_license_8cpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00507"/>00507 
<anchor xml:id="__x_license_8cpp_source_1l00508"/>00508 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_license_8cpp_source_1l00509"/>00509 }
<anchor xml:id="__x_license_8cpp_source_1l00510"/>00510 
<anchor xml:id="__x_license_8cpp_source_1l00511"/>00511 
<anchor xml:id="__x_license_8cpp_source_1l00521"/><link linkend="_class_x_l_i_c_e_n_s_e_1a51aabe4c8c4896476b2ca03d6c064f3b">00521</link> <link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1a51aabe4c8c4896476b2ca03d6c064f3b">XLICENSE::GetApplicationID</link>()
<anchor xml:id="__x_license_8cpp_source_1l00522"/>00522 {
<anchor xml:id="__x_license_8cpp_source_1l00523"/>00523 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;applicationID;
<anchor xml:id="__x_license_8cpp_source_1l00524"/>00524 }
<anchor xml:id="__x_license_8cpp_source_1l00525"/>00525 
<anchor xml:id="__x_license_8cpp_source_1l00526"/>00526 
<anchor xml:id="__x_license_8cpp_source_1l00536"/><link linkend="_class_x_l_i_c_e_n_s_e_1aa49cd75600eb905cdaaeff2cc997a7a7">00536</link> <link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1aa49cd75600eb905cdaaeff2cc997a7a7">XLICENSE::GetExpirationDateTime</link>()
<anchor xml:id="__x_license_8cpp_source_1l00537"/>00537 {
<anchor xml:id="__x_license_8cpp_source_1l00538"/>00538 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;expirationdatetime;
<anchor xml:id="__x_license_8cpp_source_1l00539"/>00539 }
<anchor xml:id="__x_license_8cpp_source_1l00540"/>00540 
<anchor xml:id="__x_license_8cpp_source_1l00541"/>00541 
<anchor xml:id="__x_license_8cpp_source_1l00551"/><link linkend="_class_x_l_i_c_e_n_s_e_1a72d49efe1d3f5622714d60766fee9116">00551</link> <link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1a72d49efe1d3f5622714d60766fee9116">XLICENSE::Get</link>()
<anchor xml:id="__x_license_8cpp_source_1l00552"/>00552 {
<anchor xml:id="__x_license_8cpp_source_1l00553"/>00553 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;license;
<anchor xml:id="__x_license_8cpp_source_1l00554"/>00554 }
<anchor xml:id="__x_license_8cpp_source_1l00555"/>00555 
<anchor xml:id="__x_license_8cpp_source_1l00556"/>00556 
<anchor xml:id="__x_license_8cpp_source_1l00568"/><link linkend="_class_x_l_i_c_e_n_s_e_1a6d63eab4eeabd17f82724c8a171d39f1">00568</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1a72d49efe1d3f5622714d60766fee9116">XLICENSE::Get</link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;licensestring)
<anchor xml:id="__x_license_8cpp_source_1l00569"/>00569 {
<anchor xml:id="__x_license_8cpp_source_1l00570"/>00570 &#32;&#32;licensestring.<link linkend="_class_x_s_t_r_i_n_g_1a9275997c1605fa79646c301e63a77d06">Empty</link>();
<anchor xml:id="__x_license_8cpp_source_1l00571"/>00571 
<anchor xml:id="__x_license_8cpp_source_1l00572"/>00572 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!license)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00573"/>00573 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!license-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00574"/>00574 
<anchor xml:id="__x_license_8cpp_source_1l00575"/>00575 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;license-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>();&#32;c++)
<anchor xml:id="__x_license_8cpp_source_1l00576"/>00576 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;hexchar;
<anchor xml:id="__x_license_8cpp_source_1l00578"/>00578 
<anchor xml:id="__x_license_8cpp_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;hexchar.<link linkend="_class_x_s_t_r_i_n_g_1a2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%02X&quot;</emphasis>),&#32;license-&gt;<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(c));
<anchor xml:id="__x_license_8cpp_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;licensestring&#32;+=&#32;hexchar;
<anchor xml:id="__x_license_8cpp_source_1l00581"/>00581 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00582"/>00582 
<anchor xml:id="__x_license_8cpp_source_1l00583"/>00583 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00584"/>00584 }
<anchor xml:id="__x_license_8cpp_source_1l00585"/>00585 
<anchor xml:id="__x_license_8cpp_source_1l00586"/>00586 
<anchor xml:id="__x_license_8cpp_source_1l00601"/><link linkend="_class_x_l_i_c_e_n_s_e_1a8cd2c5dbdbe74970b17bb76c6cc19318">00601</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1a8cd2c5dbdbe74970b17bb76c6cc19318">XLICENSE::LoadFromFile</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;applicationID,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;license,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;expirationdate)
<anchor xml:id="__x_license_8cpp_source_1l00602"/>00602 {
<anchor xml:id="__x_license_8cpp_source_1l00603"/>00603 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!license)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00604"/>00604 
<anchor xml:id="__x_license_8cpp_source_1l00605"/>00605 &#32;&#32;<link linkend="_class_x_f_i_l_e">XFILE</link>*&#32;&#32;&#32;&#32;xfile&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_license_8cpp_source_1l00606"/>00606 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;xbuffer;
<anchor xml:id="__x_license_8cpp_source_1l00607"/>00607 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;status&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00608"/>00608 
<anchor xml:id="__x_license_8cpp_source_1l00609"/>00609 &#32;&#32;GEN_XFACTORY_CREATE(xfile,&#32;Create_File())
<anchor xml:id="__x_license_8cpp_source_1l00610"/>00610 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xfile)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00611"/>00611 
<anchor xml:id="__x_license_8cpp_source_1l00612"/>00612 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xfile-&gt;<link linkend="_class_x_f_i_l_e_1a43349ac3160e391c95164fe83825fdfc">Open</link>(xpath))
<anchor xml:id="__x_license_8cpp_source_1l00613"/>00613 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1acf69e379f1d0bf812ae9c1157eac172c">Resize</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)xfile-&gt;<link linkend="_class_x_f_i_l_e_1a3d5b9c0020c23ffb0ded5aeb105a6fb1">GetSize</link>());
<anchor xml:id="__x_license_8cpp_source_1l00615"/>00615 
<anchor xml:id="__x_license_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;xfile-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>());
<anchor xml:id="__x_license_8cpp_source_1l00617"/>00617 
<anchor xml:id="__x_license_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;xfile-&gt;<link linkend="_class_x_f_i_l_e_1af7d78f174cb8eeb52cafe94524d3885b">Close</link>();
<anchor xml:id="__x_license_8cpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.Delete_File(xfile);
<anchor xml:id="__x_license_8cpp_source_1l00620"/>00620 
<anchor xml:id="__x_license_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)&#32;status&#32;=&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1ad6332d3010d60294d4dbdb1e2f146d99">LoadFromBuffer</link>(xbuffer,&#32;applicationID,&#32;license,&#32;expirationdate);
<anchor xml:id="__x_license_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00623"/>00623 
<anchor xml:id="__x_license_8cpp_source_1l00624"/>00624 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_license_8cpp_source_1l00625"/>00625 }
<anchor xml:id="__x_license_8cpp_source_1l00626"/>00626 
<anchor xml:id="__x_license_8cpp_source_1l00627"/>00627 
<anchor xml:id="__x_license_8cpp_source_1l00644"/><link linkend="_class_x_l_i_c_e_n_s_e_1a0901ce19c7298b67411d4a71fb743757">00644</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1a0901ce19c7298b67411d4a71fb743757">XLICENSE::LoadFromURL</link>(<link linkend="_class_d_i_o_u_r_l">DIOURL</link>&amp;&#32;url,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;IPlocal,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;applicationID,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;license,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;expirationdate)
<anchor xml:id="__x_license_8cpp_source_1l00645"/>00645 {
<anchor xml:id="__x_license_8cpp_source_1l00646"/>00646 &#32;&#32;<link linkend="_class_d_i_o_w_e_b_c_l_i_e_n_t">DIOWEBCLIENT</link>*&#32;webclient&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_i_o_w_e_b_c_l_i_e_n_t">DIOWEBCLIENT</link>;
<anchor xml:id="__x_license_8cpp_source_1l00647"/>00647 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!webclient)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00648"/>00648 
<anchor xml:id="__x_license_8cpp_source_1l00649"/>00649 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;xbuffer;
<anchor xml:id="__x_license_8cpp_source_1l00650"/>00650 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;status;
<anchor xml:id="__x_license_8cpp_source_1l00651"/>00651 
<anchor xml:id="__x_license_8cpp_source_1l00652"/>00652 &#32;&#32;status&#32;=&#32;webclient-&gt;<link linkend="_class_d_i_o_w_e_b_c_l_i_e_n_t_1a7f8df7195e3162e7eade548357171d5d">Get</link>(url.<link linkend="_class_x_s_t_r_i_n_g_1ad1470753a96f93e2feb3ee54e6fef95f">Get</link>(),&#32;xbuffer,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>,&#32;IPlocal);
<anchor xml:id="__x_license_8cpp_source_1l00653"/>00653 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)&#32;status&#32;=&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1ad6332d3010d60294d4dbdb1e2f146d99">LoadFromBuffer</link>(xbuffer,&#32;applicationID,&#32;license,&#32;expirationdate);
<anchor xml:id="__x_license_8cpp_source_1l00654"/>00654 
<anchor xml:id="__x_license_8cpp_source_1l00655"/>00655 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;webclient;
<anchor xml:id="__x_license_8cpp_source_1l00656"/>00656 
<anchor xml:id="__x_license_8cpp_source_1l00657"/>00657 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_license_8cpp_source_1l00658"/>00658 }
<anchor xml:id="__x_license_8cpp_source_1l00659"/>00659 
<anchor xml:id="__x_license_8cpp_source_1l00660"/>00660 
<anchor xml:id="__x_license_8cpp_source_1l00675"/><link linkend="_class_x_l_i_c_e_n_s_e_1ad6332d3010d60294d4dbdb1e2f146d99">00675</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1ad6332d3010d60294d4dbdb1e2f146d99">XLICENSE::LoadFromBuffer</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;xbuffer,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;applicationID,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;license,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;expirationdate)
<anchor xml:id="__x_license_8cpp_source_1l00676"/>00676 {
<anchor xml:id="__x_license_8cpp_source_1l00677"/>00677 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!license)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00678"/>00678 
<anchor xml:id="__x_license_8cpp_source_1l00679"/>00679 &#32;&#32;<link linkend="_class_x_f_i_l_e_i_n_i">XFILEINI</link>&#32;&#32;&#32;&#32;fileini;
<anchor xml:id="__x_license_8cpp_source_1l00680"/>00680 &#32;&#32;<link linkend="_class_x_l_i_c_e_n_s_e_i_d">XLICENSEID</link>&#32;&#32;licenseID;
<anchor xml:id="__x_license_8cpp_source_1l00681"/>00681 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;licenseIDstring;
<anchor xml:id="__x_license_8cpp_source_1l00682"/>00682 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;licenseIDstring2;
<anchor xml:id="__x_license_8cpp_source_1l00683"/>00683 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;licensestring;
<anchor xml:id="__x_license_8cpp_source_1l00684"/>00684 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;licenseexprirationstring;
<anchor xml:id="__x_license_8cpp_source_1l00685"/>00685 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;&#32;&#32;&#32;_license&#32;=&#32;license;
<anchor xml:id="__x_license_8cpp_source_1l00686"/>00686 
<anchor xml:id="__x_license_8cpp_source_1l00687"/>00687 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_license)&#32;_license&#32;=&#32;this-&gt;license;
<anchor xml:id="__x_license_8cpp_source_1l00688"/>00688 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_license)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00689"/>00689 
<anchor xml:id="__x_license_8cpp_source_1l00690"/>00690 &#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_t_x_t_1a4c595dd2a0b60a724f099fbd3477978a">AddBufferLines</link>(<link linkend="__x_file_t_x_t_8h_1ab03c36fa7bec003bf9949b3a5aece0b2ac5fe5b96008ffe31d208a781f89cb802">XFILETXTFORMATCHAR_ASCII</link>,&#32;xbuffer);
<anchor xml:id="__x_license_8cpp_source_1l00691"/>00691 
<anchor xml:id="__x_license_8cpp_source_1l00692"/>00692 &#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1af8a085adebce021d221ea155cddaacad">ConvertFromLines</link>();
<anchor xml:id="__x_license_8cpp_source_1l00693"/>00693 
<anchor xml:id="__x_license_8cpp_source_1l00694"/>00694 &#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a66716f530f30b0d609d1d019ad8865c4">ReadValue</link>(<link linkend="__x_license_8h_1ab3b04c6ce13464fd6cba0c11753bc49d">XLICENSE_FILESECTION</link>,&#32;<link linkend="__x_license_8h_1a6a16e10ebba35100061747c86283f46a">XLICENSE_FILEVALUE_ID</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;licenseIDstring);
<anchor xml:id="__x_license_8cpp_source_1l00695"/>00695 &#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a66716f530f30b0d609d1d019ad8865c4">ReadValue</link>(<link linkend="__x_license_8h_1ab3b04c6ce13464fd6cba0c11753bc49d">XLICENSE_FILESECTION</link>,&#32;<link linkend="__x_license_8h_1a5896a32ead416e07108fdfa9271e569f">XLICENSE_FILEVALUE_LICENSE</link>&#32;&#32;&#32;&#32;,&#32;licensestring);
<anchor xml:id="__x_license_8cpp_source_1l00696"/>00696 &#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a66716f530f30b0d609d1d019ad8865c4">ReadValue</link>(<link linkend="__x_license_8h_1ab3b04c6ce13464fd6cba0c11753bc49d">XLICENSE_FILESECTION</link>,&#32;<link linkend="__x_license_8h_1a35d6e80d92ac02fc159060bfc46a52cc">XLICENSE_FILEVALUE_EXPIRATION</link>&#32;,&#32;licenseexprirationstring);
<anchor xml:id="__x_license_8cpp_source_1l00697"/>00697 
<anchor xml:id="__x_license_8cpp_source_1l00698"/>00698 &#32;&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1ac7ee32ad07f9a6e3d1fd950aad86f08b">GenerateMachineID</link>(licenseID);
<anchor xml:id="__x_license_8cpp_source_1l00699"/>00699 &#32;&#32;licenseID.<link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a4905e8d03caa8530a2a9d75ca252b6e6">GetXString</link>(licenseIDstring2);
<anchor xml:id="__x_license_8cpp_source_1l00700"/>00700 
<anchor xml:id="__x_license_8cpp_source_1l00701"/>00701 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(licenseIDstring.<link linkend="_class_x_s_t_r_i_n_g_1aa41b9d6abe3eca02494d6eb043ed50c2">Compare</link>(licenseIDstring2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00702"/>00702 
<anchor xml:id="__x_license_8cpp_source_1l00703"/>00703 &#32;&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1aeb8bdd70c32c3e502b1d1513cf83aba5">CipherExpirationDate</link>(<emphasis role="keyword">false</emphasis>,&#32;applicationID,&#32;licenseexprirationstring);
<anchor xml:id="__x_license_8cpp_source_1l00704"/>00704 
<anchor xml:id="__x_license_8cpp_source_1l00705"/>00705 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(expirationdate)&#32;(*expirationdate)&#32;=&#32;licenseexprirationstring;
<anchor xml:id="__x_license_8cpp_source_1l00706"/>00706 
<anchor xml:id="__x_license_8cpp_source_1l00707"/>00707 &#32;&#32;licensestring.<link linkend="_class_x_s_t_r_i_n_g_1af1013ead045ae732e36dd6af9b5b5bc1">ConvertHexStringToBuffer</link>((*_license));
<anchor xml:id="__x_license_8cpp_source_1l00708"/>00708 
<anchor xml:id="__x_license_8cpp_source_1l00709"/>00709 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00710"/>00710 }
<anchor xml:id="__x_license_8cpp_source_1l00711"/>00711 
<anchor xml:id="__x_license_8cpp_source_1l00712"/>00712 
<anchor xml:id="__x_license_8cpp_source_1l00727"/><link linkend="_class_x_l_i_c_e_n_s_e_1ae16398e0db7f965f7846776616a020cf">00727</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1ae16398e0db7f965f7846776616a020cf">XLICENSE::CheckMasterCreation</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="_class_x_l_i_c_e_n_s_e_i_d">XLICENSEID</link>&amp;&#32;licenseID,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;applicationID,&#32;<emphasis role="keywordtype">int</emphasis>&#32;expirationseconds)
<anchor xml:id="__x_license_8cpp_source_1l00728"/>00728 {
<anchor xml:id="__x_license_8cpp_source_1l00729"/>00729 &#32;&#32;<link linkend="_class_x_f_i_l_e_i_n_i">XFILEINI</link>&#32;&#32;&#32;&#32;fileini;
<anchor xml:id="__x_license_8cpp_source_1l00730"/>00730 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;licensestring;
<anchor xml:id="__x_license_8cpp_source_1l00731"/>00731 
<anchor xml:id="__x_license_8cpp_source_1l00732"/>00732 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a2bbf156b57f0ae43713568ddfadf6003">Open</link>(xpath))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00733"/>00733 &#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a66716f530f30b0d609d1d019ad8865c4">ReadValue</link>(<link linkend="__x_license_8h_1ab3b04c6ce13464fd6cba0c11753bc49d">XLICENSE_FILESECTION</link>,&#32;<link linkend="__x_license_8h_1a5896a32ead416e07108fdfa9271e569f">XLICENSE_FILEVALUE_LICENSE</link>,&#32;licensestring);
<anchor xml:id="__x_license_8cpp_source_1l00734"/>00734 &#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a321cd5d7c4171cd2b3a915d55bcbfc2e">Close</link>();
<anchor xml:id="__x_license_8cpp_source_1l00735"/>00735 
<anchor xml:id="__x_license_8cpp_source_1l00736"/>00736 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!applicationID.<link linkend="_class_x_s_t_r_i_n_g_1aa41b9d6abe3eca02494d6eb043ed50c2">Compare</link>(licensestring))
<anchor xml:id="__x_license_8cpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_f_i_l_e_i_n_i">XFILEINI</link>&#32;&#32;&#32;&#32;fileini;
<anchor xml:id="__x_license_8cpp_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;licenseIDstring;
<anchor xml:id="__x_license_8cpp_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;licensestring;
<anchor xml:id="__x_license_8cpp_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;licenseexpiration;
<anchor xml:id="__x_license_8cpp_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;&#32;&#32;licencia;
<anchor xml:id="__x_license_8cpp_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_d_a_t_e_t_i_m_e">XDATETIME</link>*&#32;&#32;expirationdatetime;
<anchor xml:id="__x_license_8cpp_source_1l00744"/>00744 
<anchor xml:id="__x_license_8cpp_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;licenseID.<link linkend="_class_x_l_i_c_e_n_s_e_i_d_1a4905e8d03caa8530a2a9d75ca252b6e6">GetXString</link>(licenseIDstring);
<anchor xml:id="__x_license_8cpp_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_l_i_c_e_n_s_e_1ab85e5207798ab50fba51857096244e90">Generate</link>(licenseID,&#32;&amp;applicationID,&#32;&amp;licencia))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00747"/>00747 
<anchor xml:id="__x_license_8cpp_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;licensestring.<link linkend="_class_x_s_t_r_i_n_g_1a098aaa9c9e9f55c795addaab0d05a82f">ConvertHexStringFromBuffer</link>(licencia);
<anchor xml:id="__x_license_8cpp_source_1l00749"/>00749 
<anchor xml:id="__x_license_8cpp_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY_CREATE(expirationdatetime,&#32;CreateDateTime())
<anchor xml:id="__x_license_8cpp_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!expirationdatetime)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00752"/>00752 
<anchor xml:id="__x_license_8cpp_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;expirationdatetime-&gt;<link linkend="_class_x_d_a_t_e_t_i_m_e_1a5f69e1fb5fa02a3d1346dbf8b00a114d">SetToZero</link>();
<anchor xml:id="__x_license_8cpp_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(expirationseconds)
<anchor xml:id="__x_license_8cpp_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_license_8cpp_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expirationdatetime-&gt;<link linkend="_class_x_d_a_t_e_t_i_m_e_1a0e2f3589654fc19d26c588506994fb20">Read</link>();
<anchor xml:id="__x_license_8cpp_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expirationdatetime-&gt;<link linkend="_class_x_d_a_t_e_t_i_m_e_1ad566682e128db1927cd42bcf65af936c">AddSeconds</link>((<emphasis role="keywordtype">int</emphasis>)expirationseconds);
<anchor xml:id="__x_license_8cpp_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00759"/>00759 
<anchor xml:id="__x_license_8cpp_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;expirationdatetime-&gt;<link linkend="_class_x_d_a_t_e_t_i_m_e_1a3a247c83ef32fb5db005272ba679c25b">GetDateTimeToString</link>(<link linkend="__x_date_time_8h_1aa889ebf322bcebdb9b55ee85d1c5a729">XDATETIME_FORMAT_STANDARD</link>,&#32;&#32;licenseexpiration);
<anchor xml:id="__x_license_8cpp_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;GEN_XFACTORY.DeleteDateTime(expirationdatetime);
<anchor xml:id="__x_license_8cpp_source_1l00762"/>00762 
<anchor xml:id="__x_license_8cpp_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_l_i_c_e_n_s_e_1aeb8bdd70c32c3e502b1d1513cf83aba5">CipherExpirationDate</link>(<emphasis role="keyword">true</emphasis>,&#32;applicationID,&#32;licenseexpiration))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00764"/>00764 
<anchor xml:id="__x_license_8cpp_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!fileini.<link linkend="_class_x_f_i_l_e_t_x_t_1a2487ddeffced69e5f799aa480a58b1ce">Create</link>(xpath))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00766"/>00766 
<anchor xml:id="__x_license_8cpp_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1ab22adee0f9a4b7c9f54ee7ad610bdfa1">CreateSection</link>(<link linkend="__x_license_8h_1ab3b04c6ce13464fd6cba0c11753bc49d">XLICENSE_FILESECTION</link>);
<anchor xml:id="__x_license_8cpp_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a6dd49f4602d0f79087be8cbcb6db7261">WriteValue</link>(<link linkend="__x_license_8h_1ab3b04c6ce13464fd6cba0c11753bc49d">XLICENSE_FILESECTION</link>,&#32;<link linkend="__x_license_8h_1a6a16e10ebba35100061747c86283f46a">XLICENSE_FILEVALUE_ID</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;licenseIDstring);
<anchor xml:id="__x_license_8cpp_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a6dd49f4602d0f79087be8cbcb6db7261">WriteValue</link>(<link linkend="__x_license_8h_1ab3b04c6ce13464fd6cba0c11753bc49d">XLICENSE_FILESECTION</link>,&#32;<link linkend="__x_license_8h_1a5896a32ead416e07108fdfa9271e569f">XLICENSE_FILEVALUE_LICENSE</link>&#32;&#32;&#32;,&#32;licensestring);
<anchor xml:id="__x_license_8cpp_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a6dd49f4602d0f79087be8cbcb6db7261">WriteValue</link>(<link linkend="__x_license_8h_1ab3b04c6ce13464fd6cba0c11753bc49d">XLICENSE_FILESECTION</link>,&#32;<link linkend="__x_license_8h_1a35d6e80d92ac02fc159060bfc46a52cc">XLICENSE_FILEVALUE_EXPIRATION</link>,&#32;licenseexpiration);
<anchor xml:id="__x_license_8cpp_source_1l00771"/>00771 
<anchor xml:id="__x_license_8cpp_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;fileini.<link linkend="_class_x_f_i_l_e_i_n_i_1a321cd5d7c4171cd2b3a915d55bcbfc2e">Close</link>();
<anchor xml:id="__x_license_8cpp_source_1l00773"/>00773 
<anchor xml:id="__x_license_8cpp_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00775"/>00775 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_license_8cpp_source_1l00776"/>00776 
<anchor xml:id="__x_license_8cpp_source_1l00777"/>00777 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00778"/>00778 }
<anchor xml:id="__x_license_8cpp_source_1l00779"/>00779 
<anchor xml:id="__x_license_8cpp_source_1l00780"/>00780 
<anchor xml:id="__x_license_8cpp_source_1l00792"/><link linkend="_class_x_l_i_c_e_n_s_e_1afb56b32dbe23c55e436f1e2693604833">00792</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_c_e_n_s_e_1afb56b32dbe23c55e436f1e2693604833">XLICENSE::SetEvent</link>(<link linkend="__x_license___x_event_8h_1a29c2d02828dfbdefdaef313693453889">XLICENSEXEVENT_TYPE</link>&#32;type)
<anchor xml:id="__x_license_8cpp_source_1l00793"/>00793 {
<anchor xml:id="__x_license_8cpp_source_1l00794"/>00794 &#32;&#32;<link linkend="_class_x_l_i_c_e_n_s_e_x_e_v_e_n_t">XLICENSEXEVENT</link>&#32;xlicenseevent(<emphasis role="keyword">this</emphasis>,&#32;type);
<anchor xml:id="__x_license_8cpp_source_1l00795"/>00795 
<anchor xml:id="__x_license_8cpp_source_1l00796"/>00796 &#32;&#32;xlicenseevent.<link linkend="_class_x_l_i_c_e_n_s_e_x_e_v_e_n_t_1a9c1f93a5ef224cc8abd4b1d395058417">Set</link>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__x_license_8cpp_source_1l00797"/>00797 &#32;&#32;<link linkend="_class_x_s_u_b_j_e_c_t_1adb65926d5f56410c9243d2f7c69a87a3">PostEvent</link>(&amp;xlicenseevent);
<anchor xml:id="__x_license_8cpp_source_1l00798"/>00798 
<anchor xml:id="__x_license_8cpp_source_1l00799"/>00799 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_license_8cpp_source_1l00800"/>00800 }
<anchor xml:id="__x_license_8cpp_source_1l00801"/>00801 
<anchor xml:id="__x_license_8cpp_source_1l00802"/>00802 
<anchor xml:id="__x_license_8cpp_source_1l00813"/>00813 <emphasis role="keywordtype">void</emphasis>&#32;XLICENSE::Clean()
<anchor xml:id="__x_license_8cpp_source_1l00814"/>00814 {
<anchor xml:id="__x_license_8cpp_source_1l00815"/>00815 &#32;&#32;license&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_license_8cpp_source_1l00816"/>00816 }
<anchor xml:id="__x_license_8cpp_source_1l00817"/>00817 
<anchor xml:id="__x_license_8cpp_source_1l00818"/>00818 
<anchor xml:id="__x_license_8cpp_source_1l00819"/>00819 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00820"/>00820 
<anchor xml:id="__x_license_8cpp_source_1l00821"/>00821 
<anchor xml:id="__x_license_8cpp_source_1l00822"/>00822 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_license_8cpp_source_1l00823"/>00823 
</programlisting></section>
