<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_e_s_p32_date_time_8cpp_source" xml:lang="en-US">
<title>XESP32DateTime.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/ESP32/XESP32DateTime.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_e_s_p32_date_time_8h">XESP32DateTime.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00046"/>00046 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00047"/>00047 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00049"/>00049 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00050"/>00050 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00052"/>00052 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00053"/>00053 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00054"/>00054 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00055"/>00055 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00056"/>00056 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00066"/><link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1a60e182a4c0c26f6eaf8055fc421607d0">00066</link> <link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1a60e182a4c0c26f6eaf8055fc421607d0">XESP32DATETIME::XESP32DATETIME</link>()
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00067"/>00067 {
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00068"/>00068 &#32;&#32;
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00069"/>00069 }
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00070"/>00070 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00071"/>00071 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00082"/><link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1abd8f1c83d38cade979a9deed824f67ee">00082</link> <link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1abd8f1c83d38cade979a9deed824f67ee">XESP32DATETIME::~XESP32DATETIME</link>()
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00083"/>00083 {
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00084"/>00084 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00085"/>00085 }
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00086"/>00086 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00087"/>00087 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00097"/><link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1af17d320f21a85031e6208be4e49e90f7">00097</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1af17d320f21a85031e6208be4e49e90f7">XESP32DATETIME::Read</link>()
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00098"/>00098 {
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00099"/>00099 &#32;&#32;<emphasis role="comment">//GetActualDateTime(this);</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00100"/>00100 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00101"/>00101 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00102"/>00102 }
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00103"/>00103 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00104"/>00104 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00114"/><link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1a72ce8c48a62521c31850e8e502f9aafc">00114</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1a72ce8c48a62521c31850e8e502f9aafc">XESP32DATETIME::Write</link>()
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00115"/>00115 {
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00116"/>00116 &#32;&#32;<emphasis role="comment">//SetActualDateTime(this);</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00117"/>00117 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00118"/>00118 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00119"/>00119 }
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00120"/>00120 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00121"/>00121 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00131"/><link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1aa81919009ddf8ac34807936a702171b0">00131</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1aa81919009ddf8ac34807936a702171b0">XESP32DATETIME::GetMeridianDifference</link>()
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00132"/>00132 {
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00133"/>00133 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)0;
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00134"/>00134 }
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00135"/>00135 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00136"/>00136 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00148"/><link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1a8f4a6e486f5e4b8110618ddf740b645e">00148</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_d_a_t_e_t_i_m_e_1a8f4a6e486f5e4b8110618ddf740b645e">XESP32DATETIME::IsDayLigthSavingTime</link>(<emphasis role="keywordtype">int</emphasis>*&#32;bias)
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00149"/>00149 {
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00150"/>00150 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00151"/>00151 }
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00152"/>00152 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00153"/>00153 
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00154"/>00154 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_date_time_8cpp_source_1l00155"/>00155 
</programlisting></section>
