<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__cipher_a_e_s_8cpp_source" xml:lang="en-US">
<title>CipherAES.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/CipherAES.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__cipher_a_e_s_8cpp_source_1l00001"/>00001 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00031"/>00031 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00033"/>00033 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00035"/>00035 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00036"/>00036 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00039"/>00039 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__cipher_a_e_s_8h">CipherAES.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00041"/>00041 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00043"/>00043 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00045"/>00045 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00047"/>00047 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00049"/>00049 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00050"/>00050 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00051"/>00051 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00053"/>00053 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00054"/><link linkend="__cipher_a_e_s_8cpp_1aa8312024ea68d3d616163d2de65ae251">00054</link> <emphasis role="preprocessor">#define&#32;GET_UINT32_LE(n,b,i)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;(n)&#32;=&#32;&#32;&#32;(&#32;(XDWORD)&#32;(b)[(i)&#32;&#32;&#32;&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00055"/>00055 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|&#32;(&#32;(XDWORD)&#32;(b)[(i)&#32;+&#32;1]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|&#32;(&#32;(XDWORD)&#32;(b)[(i)&#32;+&#32;2]&#32;&lt;&lt;&#32;16&#32;)&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|&#32;(&#32;(XDWORD)&#32;(b)[(i)&#32;+&#32;3]&#32;&lt;&lt;&#32;24&#32;);&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00058"/>00058 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00059"/>00059 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00060"/><link linkend="__cipher_a_e_s_8cpp_1a71862ad5d56423720862af2f5606588c">00060</link> <emphasis role="preprocessor">#define&#32;PUT_UINT32_LE(n,b,i)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;(b)[(i)&#32;&#32;&#32;&#32;]&#32;=&#32;(XBYTE)&#32;(&#32;(n)&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00061"/>00061 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(b)[(i)&#32;+&#32;1]&#32;=&#32;(XBYTE)&#32;(&#32;(n)&#32;&gt;&gt;&#32;&#32;8&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00062"/>00062 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(b)[(i)&#32;+&#32;2]&#32;=&#32;(XBYTE)&#32;(&#32;(n)&#32;&gt;&gt;&#32;16&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(b)[(i)&#32;+&#32;3]&#32;=&#32;(XBYTE)&#32;(&#32;(n)&#32;&gt;&gt;&#32;24&#32;);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00064"/>00064 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00065"/>00065 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00066"/><link linkend="__cipher_a_e_s_8cpp_1a944a93400dc147647b4f7c8089b54eff">00066</link> <emphasis role="preprocessor">#define&#32;AES_FROUND(X0,X1,X2,X3,Y0,Y1,Y2,Y3)&#32;&#32;&#32;{&#32;&#32;&#32;X0&#32;=&#32;*RK++&#32;^&#32;FT0[&#32;(&#32;Y0&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00067"/>00067 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT1[&#32;(&#32;Y1&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00068"/>00068 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT2[&#32;(&#32;Y2&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00069"/>00069 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT3[&#32;(&#32;Y3&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;];&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00070"/>00070 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00071"/>00071 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X1&#32;=&#32;*RK++&#32;^&#32;FT0[&#32;(&#32;Y1&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00072"/>00072 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT1[&#32;(&#32;Y2&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00073"/>00073 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT2[&#32;(&#32;Y3&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00074"/>00074 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT3[&#32;(&#32;Y0&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;];&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00075"/>00075 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00076"/>00076 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X2&#32;=&#32;*RK++&#32;^&#32;FT0[&#32;(&#32;Y2&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00077"/>00077 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT1[&#32;(&#32;Y3&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00078"/>00078 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT2[&#32;(&#32;Y0&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00079"/>00079 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT3[&#32;(&#32;Y1&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;];&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00080"/>00080 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00081"/>00081 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X3&#32;=&#32;*RK++&#32;^&#32;FT0[&#32;(&#32;Y3&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00082"/>00082 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT1[&#32;(&#32;Y0&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00083"/>00083 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT2[&#32;(&#32;Y1&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00084"/>00084 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FT3[&#32;(&#32;Y2&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;];&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00085"/>00085 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00086"/>00086 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00087"/><link linkend="__cipher_a_e_s_8cpp_1a080004ddc3bc16fcb705a71bdd4f7907">00087</link> <emphasis role="preprocessor">#define&#32;AES_RROUND(X0,X1,X2,X3,Y0,Y1,Y2,Y3)&#32;&#32;&#32;{&#32;&#32;&#32;X0&#32;=&#32;*RK++&#32;^&#32;RT0[&#32;(&#32;Y0&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00088"/>00088 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT1[&#32;(&#32;Y3&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00089"/>00089 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT2[&#32;(&#32;Y2&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00090"/>00090 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT3[&#32;(&#32;Y1&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;];&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00091"/>00091 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00092"/>00092 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X1&#32;=&#32;*RK++&#32;^&#32;RT0[&#32;(&#32;Y1&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00093"/>00093 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT1[&#32;(&#32;Y0&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00094"/>00094 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT2[&#32;(&#32;Y3&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00095"/>00095 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT3[&#32;(&#32;Y2&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;];&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00096"/>00096 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00097"/>00097 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X2&#32;=&#32;*RK++&#32;^&#32;RT0[&#32;(&#32;Y2&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00098"/>00098 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT1[&#32;(&#32;Y1&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00099"/>00099 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT2[&#32;(&#32;Y0&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00100"/>00100 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT3[&#32;(&#32;Y3&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;];&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00101"/>00101 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00102"/>00102 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;X3&#32;=&#32;*RK++&#32;^&#32;RT0[&#32;(&#32;Y3&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00103"/>00103 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT1[&#32;(&#32;Y2&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00104"/>00104 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT2[&#32;(&#32;Y1&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;^&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00105"/>00105 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT3[&#32;(&#32;Y0&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;];&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00106"/>00106 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00107"/>00107 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00108"/>00108 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00109"/>00109 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00110"/><link linkend="__cipher_a_e_s_8cpp_1a4055397e36a18b7d3228d125784aadae">00110</link> <emphasis role="preprocessor">#define&#32;ROTL8(x)&#32;&#32;((&#32;x&#32;&lt;&lt;&#32;8&#32;)&#32;&amp;&#32;0xFFFFFFFF&#32;)&#32;|&#32;(&#32;x&#32;&gt;&gt;&#32;24&#32;)</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00111"/><link linkend="__cipher_a_e_s_8cpp_1a2d0e2bef2df143a8301a37e9686c13d1">00111</link> <emphasis role="preprocessor">#define&#32;XTIME(x)&#32;&#32;((&#32;x&#32;&lt;&lt;&#32;1&#32;)&#32;^&#32;(&#32;(&#32;x&#32;&amp;&#32;0x80&#32;)&#32;?&#32;0x1B&#32;:&#32;0x00&#32;))</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00112"/><link linkend="__cipher_a_e_s_8cpp_1a3181b6978c9b47c96208263c73c8c4a7">00112</link> <emphasis role="preprocessor">#define&#32;MUL(x,y)&#32;&#32;((&#32;x&#32;&amp;&amp;&#32;y&#32;)&#32;?&#32;pow[(log[x]+log[y])&#32;%&#32;255]&#32;:&#32;0)</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00113"/>00113 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00114"/>00114 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00115"/>00115 <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;CIPHERAES::FSb[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00116"/>00116 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CIPHERAES::FT0[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00117"/>00117 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CIPHERAES::FT1[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00118"/>00118 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CIPHERAES::FT2[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00119"/>00119 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CIPHERAES::FT3[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00120"/>00120 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00121"/>00121 <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;CIPHERAES::RSb[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00122"/>00122 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CIPHERAES::RT0[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00123"/>00123 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CIPHERAES::RT1[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00124"/>00124 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CIPHERAES::RT2[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00125"/>00125 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CIPHERAES::RT3[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00126"/>00126 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00127"/>00127 <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;CIPHERAES::RCON[10];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00128"/>00128 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00129"/>00129 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00130"/>00130 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00131"/>00131 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00132"/>00132 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00133"/>00133 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00134"/>00134 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00135"/>00135 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00145"/><link linkend="_class_c_i_p_h_e_r_a_e_s_1a7de10e554005577355e9efbdce28d6f3">00145</link> <link linkend="_class_c_i_p_h_e_r_a_e_s_1a7de10e554005577355e9efbdce28d6f3">CIPHERAES::CIPHERAES</link>()
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00146"/>00146 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00147"/>00147 &#32;&#32;Clean();
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00148"/>00148 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00149"/>00149 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a416572c28446389769158d381de9d24f">type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__cipher_8h_1a52cc908e38756716669a3bcb38a61cf7a7966c2a4b584ae910a4546a6c4fb723b">CIPHERTYPE_AES</link>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00150"/>00150 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a80d51b9bdea87754bd8144999eeb5f2e">paddingadjustsize</link>&#32;=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00151"/>00151 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00152"/>00152 &#32;&#32;AESGenTables();
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00153"/>00153 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00154"/>00154 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00155"/>00155 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00166"/><link linkend="_class_c_i_p_h_e_r_a_e_s_1abfb84bd2d4f3b256a94b54c9feb951ef">00166</link> <link linkend="_class_c_i_p_h_e_r_a_e_s_1abfb84bd2d4f3b256a94b54c9feb951ef">CIPHERAES::~CIPHERAES</link>()
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00167"/>00167 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00168"/>00168 &#32;&#32;Clean();
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00169"/>00169 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00170"/>00170 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00171"/>00171 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00184"/><link linkend="_class_c_i_p_h_e_r_a_e_s_1a5fdf271b608b25341f86b0c2f6c8485f">00184</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_a_e_s_1a5fdf271b608b25341f86b0c2f6c8485f">CIPHERAES::Cipher</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00185"/>00185 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00186"/>00186 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00187"/>00187 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00188"/>00188 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inputpadding;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00189"/>00189 &#32;&#32;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>&#32;&#32;&#32;ctx;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00190"/>00190 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iv[16];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00191"/>00191 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00192"/>00192 &#32;&#32;memset(iv,&#32;0,&#32;16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00193"/>00193 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_c_i_p_h_e_r_1aaf021d9a81c4cf827bcc1fac1008d15b">inivector</link>&#32;&amp;&amp;&#32;<link linkend="_class_c_i_p_h_e_r_1aaf021d9a81c4cf827bcc1fac1008d15b">inivector</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>()&gt;=16)&#32;memcpy(iv,&#32;<link linkend="_class_c_i_p_h_e_r_1aaf021d9a81c4cf827bcc1fac1008d15b">inivector</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00194"/>00194 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00195"/>00195 &#32;&#32;inputpadding.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(input,&#32;size);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00196"/>00196 &#32;&#32;inputpadding.<link linkend="_class_x_b_u_f_f_e_r_1a5db6b2fa07edc08e214e0543439de409">Padding_Add</link>(<link linkend="_class_c_i_p_h_e_r_1a80d51b9bdea87754bd8144999eeb5f2e">paddingadjustsize</link>,&#32;<link linkend="_class_c_i_p_h_e_r_1a07eb94b4c2c26e21bfa3ec3942777e0c">paddingtype</link>);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00197"/>00197 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00198"/>00198 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00199"/>00199 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(input,&#32;size);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00200"/>00200 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a5db6b2fa07edc08e214e0543439de409">Padding_Add</link>(<link linkend="_class_c_i_p_h_e_r_1a80d51b9bdea87754bd8144999eeb5f2e">paddingadjustsize</link>,&#32;<link linkend="_class_c_i_p_h_e_r_1a07eb94b4c2c26e21bfa3ec3942777e0c">paddingtype</link>);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00201"/>00201 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00202"/>00202 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l">CIPHERKEYSYMMETRICAL</link>*&#32;key&#32;=&#32;(<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l">CIPHERKEYSYMMETRICAL</link>*)<link linkend="_class_c_i_p_h_e_r_1a617de7ca065e58b8b29d54c246ab7e05">GetKey</link>();
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00203"/>00203 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00204"/>00204 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l_1a491605bfd782fc1524b9f94d0d982dd2">Get</link>()-&gt;Get())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00205"/>00205 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00206"/>00206 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;AESSetKeyCipher(&amp;ctx,&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;*)key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l_1a491605bfd782fc1524b9f94d0d982dd2">Get</link>()-&gt;Get(),&#32;key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l_1a491605bfd782fc1524b9f94d0d982dd2">Get</link>()-&gt;GetSize()*8);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00207"/>00207 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00208"/>00208 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00209"/>00209 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;stream_block[16];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00210"/>00210 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;nonce_counter[16];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00211"/>00211 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;offset&#32;&#32;=&#32;0;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00212"/>00212 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00213"/>00213 &#32;&#32;memset(stream_block&#32;&#32;,0&#32;&#32;,&#32;16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00214"/>00214 &#32;&#32;memset(nonce_counter&#32;,0&#32;&#32;,&#32;16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00215"/>00215 &#32;&#32;memcpy(nonce_counter&#32;,iv&#32;,&#32;16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00216"/>00216 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00217"/>00217 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(this-&gt;<link linkend="_class_c_i_p_h_e_r_1ac4534db114136a559c8fb09f7c8b42ab">GetChainingMode</link>())
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa71efc2d0b0eed2196b0cf8e866f7d600">CIPHERCHAININGMODE_UNKNOWN</link>&#32;:&#32;status&#32;=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00221"/>00221 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa267f1454bea32b8e1d4300e5f6cede10">CIPHERCHAININGMODE_ECB</link>&#32;&#32;&#32;&#32;&#32;:&#32;status&#32;=&#32;AESCipher_ECB(&amp;ctx,&#32;<link linkend="__cipher_a_e_s_8h_1a37fa8f0264ac2d2a2138cc152e662912">CIPHERAES_ENCRYPT</link>&#32;,&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>(),&#32;inputpadding.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>());
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00224"/>00224 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa390a87788a71c68b9c62022c6c6c3c21">CIPHERCHAININGMODE_CBC</link>&#32;&#32;&#32;&#32;&#32;:&#32;status&#32;=&#32;AESCipher_CBC(&amp;ctx,&#32;<link linkend="__cipher_a_e_s_8h_1a37fa8f0264ac2d2a2138cc152e662912">CIPHERAES_ENCRYPT</link>&#32;,&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>(),&#32;iv,&#32;inputpadding.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>());
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00227"/>00227 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa4cab989b71fb1e98de0680805d6de4d7">CIPHERCHAININGMODE_CFB</link>&#32;&#32;&#32;&#32;&#32;:&#32;status&#32;=&#32;AESCipher_CFB128(&amp;ctx,&#32;<link linkend="__cipher_a_e_s_8h_1a37fa8f0264ac2d2a2138cc152e662912">CIPHERAES_ENCRYPT</link>&#32;,&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>(),&#32;&amp;offset,&#32;iv,&#32;inputpadding.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>());
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00230"/>00230 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa14c62ca7d1a00253919388bae4c92de8">CIPHERCHAININGMODE_CTR</link>&#32;&#32;&#32;&#32;&#32;:&#32;status&#32;=&#32;AESCipher_CTR(&amp;ctx,&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>(),&#32;&amp;offset,&#32;nonce_counter,&#32;stream_block,&#32;inputpadding.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>());
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00234"/>00234 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00235"/>00235 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00236"/>00236 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00237"/>00237 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00238"/>00238 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00251"/><link linkend="_class_c_i_p_h_e_r_a_e_s_1a447a104f78b94ce05ec5667e4c4f9ca8">00251</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_a_e_s_1a447a104f78b94ce05ec5667e4c4f9ca8">CIPHERAES::Uncipher</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00252"/>00252 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00253"/>00253 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00254"/>00254 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00255"/>00255 &#32;&#32;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>&#32;ctx;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00256"/>00256 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iv[16];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00257"/>00257 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00258"/>00258 &#32;&#32;memset(iv,0,16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00259"/>00259 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_c_i_p_h_e_r_1aaf021d9a81c4cf827bcc1fac1008d15b">inivector</link>&#32;&amp;&amp;&#32;<link linkend="_class_c_i_p_h_e_r_1aaf021d9a81c4cf827bcc1fac1008d15b">inivector</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>()&gt;=8)&#32;memcpy(iv,&#32;<link linkend="_class_c_i_p_h_e_r_1aaf021d9a81c4cf827bcc1fac1008d15b">inivector</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00260"/>00260 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00261"/>00261 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00262"/>00262 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(input,&#32;size);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00263"/>00263 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00264"/>00264 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l">CIPHERKEYSYMMETRICAL</link>*&#32;key&#32;=&#32;(<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l">CIPHERKEYSYMMETRICAL</link>*)<link linkend="_class_c_i_p_h_e_r_1a617de7ca065e58b8b29d54c246ab7e05">GetKey</link>();
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00265"/>00265 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00266"/>00266 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l_1a491605bfd782fc1524b9f94d0d982dd2">Get</link>()-&gt;Get())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00267"/>00267 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00268"/>00268 &#32;&#32;AESSetKeyUncipher(&amp;ctx,&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;*)key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l_1a491605bfd782fc1524b9f94d0d982dd2">Get</link>()-&gt;Get(),&#32;key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_s_y_m_m_e_t_r_i_c_a_l_1a491605bfd782fc1524b9f94d0d982dd2">Get</link>()-&gt;GetSize()*8);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00269"/>00269 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00270"/>00270 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;stream_block[16];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00271"/>00271 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;nonce_counter[16];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00272"/>00272 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;status&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00273"/>00273 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;offset&#32;&#32;=&#32;0;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00274"/>00274 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00275"/>00275 &#32;&#32;memset(stream_block&#32;&#32;,0&#32;,&#32;16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00276"/>00276 &#32;&#32;memset(nonce_counter&#32;,0&#32;,&#32;16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00277"/>00277 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00278"/>00278 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(this-&gt;<link linkend="_class_c_i_p_h_e_r_1ac4534db114136a559c8fb09f7c8b42ab">GetChainingMode</link>())
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa71efc2d0b0eed2196b0cf8e866f7d600">CIPHERCHAININGMODE_UNKNOWN</link>&#32;:&#32;status&#32;=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00282"/>00282 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa267f1454bea32b8e1d4300e5f6cede10">CIPHERCHAININGMODE_ECB</link>&#32;&#32;&#32;&#32;&#32;:&#32;status&#32;=&#32;AESCipher_ECB(&amp;ctx,&#32;<link linkend="__cipher_a_e_s_8h_1a8e636a0d2144a559eac6fa13b73f99bd">CIPHERAES_DECRYPT</link>&#32;,&#32;size,&#32;input,&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>());
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00285"/>00285 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa390a87788a71c68b9c62022c6c6c3c21">CIPHERCHAININGMODE_CBC</link>&#32;&#32;&#32;&#32;&#32;:&#32;status&#32;=&#32;AESCipher_CBC(&amp;ctx,&#32;<link linkend="__cipher_a_e_s_8h_1a8e636a0d2144a559eac6fa13b73f99bd">CIPHERAES_DECRYPT</link>&#32;,&#32;size,&#32;iv,&#32;input,&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>());
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00288"/>00288 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa4cab989b71fb1e98de0680805d6de4d7">CIPHERCHAININGMODE_CFB</link>&#32;&#32;&#32;&#32;&#32;:&#32;status&#32;=&#32;AESCipher_CFB128(&amp;ctx,&#32;<link linkend="__cipher_a_e_s_8h_1a8e636a0d2144a559eac6fa13b73f99bd">CIPHERAES_DECRYPT</link>&#32;,&#32;size,&#32;&amp;offset,&#32;iv,&#32;input,&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>());
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00291"/>00291 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_8h_1ae802f26095cf19cb1a0d793a5156812fa14c62ca7d1a00253919388bae4c92de8">CIPHERCHAININGMODE_CTR</link>&#32;&#32;&#32;&#32;&#32;:&#32;status&#32;=&#32;AESCipher_CTR(&amp;ctx,&#32;size,&#32;&amp;offset,&#32;nonce_counter,&#32;stream_block,&#32;input,&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>());
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00294"/>00294 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00296"/>00296 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00297"/>00297 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a4c0dba30c747eea8e17417333d4972f7">Padding_Delete</link>();
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00298"/>00298 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00299"/>00299 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00300"/>00300 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00301"/>00301 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00302"/>00302 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00314"/>00314 <emphasis role="keywordtype">void</emphasis>&#32;CIPHERAES::AESGenTables(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00315"/>00315 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00316"/>00316 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pow[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00317"/>00317 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;log[256];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00318"/>00318 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00319"/>00319 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;x;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00320"/>00320 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;y;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00321"/>00321 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;z;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00322"/>00322 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00323"/>00323 &#32;&#32;<emphasis role="comment">//&#32;Compute&#32;pow&#32;and&#32;log&#32;tables&#32;over&#32;GF(2^8)</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00324"/>00324 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00325"/>00325 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0,&#32;x=1;&#32;i&lt;256;&#32;i++)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;pow[i]&#32;=&#32;x;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;log[x]&#32;=&#32;i;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;(&#32;x&#32;^&#32;<link linkend="__cipher_a_e_s_8cpp_1a2d0e2bef2df143a8301a37e9686c13d1">XTIME</link>(&#32;x&#32;)&#32;)&#32;&amp;&#32;0xFF;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00331"/>00331 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00332"/>00332 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00333"/>00333 &#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;round&#32;constants</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00334"/>00334 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00335"/>00335 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0,&#32;x=1;&#32;i&lt;10;&#32;i++)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;RCON[i]&#32;=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;x;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;<link linkend="__cipher_a_e_s_8cpp_1a2d0e2bef2df143a8301a37e9686c13d1">XTIME</link>(&#32;x&#32;)&#32;&amp;&#32;0xFF;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00340"/>00340 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00341"/>00341 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00342"/>00342 &#32;&#32;<emphasis role="comment">//&#32;Generate&#32;the&#32;forward&#32;and&#32;reverse&#32;S-boxes</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00343"/>00343 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00344"/>00344 &#32;&#32;FSb[0x00]&#32;=&#32;0x63;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00345"/>00345 &#32;&#32;RSb[0x63]&#32;=&#32;0x00;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00346"/>00346 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00347"/>00347 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=1;&#32;i&lt;256;&#32;i++)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;pow[255&#32;-&#32;log[i]];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00350"/>00350 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;y&#32;&#32;=&#32;x;&#32;y&#32;=&#32;(&#32;(y&#32;&lt;&lt;&#32;1)&#32;|&#32;(y&#32;&gt;&gt;&#32;7)&#32;)&#32;&amp;&#32;0xFF;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;^=&#32;y;&#32;y&#32;=&#32;(&#32;(y&#32;&lt;&lt;&#32;1)&#32;|&#32;(y&#32;&gt;&gt;&#32;7)&#32;)&#32;&amp;&#32;0xFF;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;^=&#32;y;&#32;y&#32;=&#32;(&#32;(y&#32;&lt;&lt;&#32;1)&#32;|&#32;(y&#32;&gt;&gt;&#32;7)&#32;)&#32;&amp;&#32;0xFF;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;^=&#32;y;&#32;y&#32;=&#32;(&#32;(y&#32;&lt;&lt;&#32;1)&#32;|&#32;(y&#32;&gt;&gt;&#32;7)&#32;)&#32;&amp;&#32;0xFF;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;^=&#32;y&#32;^&#32;0x63;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00356"/>00356 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;FSb[i]&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)&#32;x;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;RSb[x]&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)&#32;i;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00360"/>00360 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00361"/>00361 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00362"/>00362 &#32;&#32;<emphasis role="comment">//&#32;Generate&#32;the&#32;forward&#32;and&#32;reverse&#32;tables</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00363"/>00363 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00364"/>00364 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;256;&#32;i++&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;FSb[i];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;<link linkend="__cipher_a_e_s_8cpp_1a2d0e2bef2df143a8301a37e9686c13d1">XTIME</link>(&#32;x&#32;)&#32;&amp;&#32;0xFF;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;&#32;(&#32;y&#32;^&#32;x&#32;)&#32;&amp;&#32;0xFF;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00369"/>00369 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;FT0[i]&#32;=&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;y&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;x&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;x&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;z&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00374"/>00374 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;FT1[i]&#32;=&#32;<link linkend="__cipher_a_e_s_8cpp_1a4055397e36a18b7d3228d125784aadae">ROTL8</link>(&#32;FT0[i]&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;FT2[i]&#32;=&#32;<link linkend="__cipher_a_e_s_8cpp_1a4055397e36a18b7d3228d125784aadae">ROTL8</link>(&#32;FT1[i]&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;FT3[i]&#32;=&#32;<link linkend="__cipher_a_e_s_8cpp_1a4055397e36a18b7d3228d125784aadae">ROTL8</link>(&#32;FT2[i]&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00378"/>00378 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;RSb[i];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00380"/>00380 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;RT0[i]&#32;=&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;<link linkend="__cipher_a_e_s_8cpp_1a3181b6978c9b47c96208263c73c8c4a7">MUL</link>(&#32;0x0E,&#32;x&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;<link linkend="__cipher_a_e_s_8cpp_1a3181b6978c9b47c96208263c73c8c4a7">MUL</link>(&#32;0x09,&#32;x&#32;)&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;<link linkend="__cipher_a_e_s_8cpp_1a3181b6978c9b47c96208263c73c8c4a7">MUL</link>(&#32;0x0D,&#32;x&#32;)&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;<link linkend="__cipher_a_e_s_8cpp_1a3181b6978c9b47c96208263c73c8c4a7">MUL</link>(&#32;0x0B,&#32;x&#32;)&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00385"/>00385 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;RT1[i]&#32;=&#32;<link linkend="__cipher_a_e_s_8cpp_1a4055397e36a18b7d3228d125784aadae">ROTL8</link>(&#32;RT0[i]&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;RT2[i]&#32;=&#32;<link linkend="__cipher_a_e_s_8cpp_1a4055397e36a18b7d3228d125784aadae">ROTL8</link>(&#32;RT1[i]&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;RT3[i]&#32;=&#32;<link linkend="__cipher_a_e_s_8cpp_1a4055397e36a18b7d3228d125784aadae">ROTL8</link>(&#32;RT2[i]&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00390"/>00390 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00391"/>00391 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00392"/>00392 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00406"/>00406 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERAES::AESSetKeyCipher(<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>*&#32;ctx,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;key,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;keysize)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00407"/>00407 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00408"/>00408 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;RK;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00409"/>00409 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00410"/>00410 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(&#32;keysize&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;128&#32;:&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;=&#32;10;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;192&#32;:&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;=&#32;12;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;256&#32;:&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;=&#32;14;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00417"/>00417 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00418"/>00418 &#32;&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a0cbb9b7a23a17378e2eb1b56c04aafd8">rk</link>&#32;=&#32;RK&#32;=&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1aa859493da944be7e3366f97604432b99">buf</link>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00419"/>00419 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00420"/>00420 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;(keysize&#32;&gt;&gt;&#32;5);&#32;i++&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1aa8312024ea68d3d616163d2de65ae251">GET_UINT32_LE</link>(&#32;RK[i],&#32;key,&#32;i&#32;&lt;&lt;&#32;2&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00424"/>00424 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00425"/>00425 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;10:&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;10;&#32;i++,&#32;RK&#32;+=&#32;4&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[4]&#32;&#32;=&#32;RK[0]&#32;^&#32;RCON[i]&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[3]&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[3]&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[3]&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[3]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00434"/>00434 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[5]&#32;&#32;=&#32;RK[1]&#32;^&#32;RK[4];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[6]&#32;&#32;=&#32;RK[2]&#32;^&#32;RK[5];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[7]&#32;&#32;=&#32;RK[3]&#32;^&#32;RK[6];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00440"/>00440 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;12:&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;i++,&#32;RK&#32;+=&#32;6&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[6]&#32;&#32;=&#32;RK[0]&#32;^&#32;RCON[i]&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[5]&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[5]&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[5]&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[5]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00448"/>00448 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[7]&#32;&#32;=&#32;RK[1]&#32;^&#32;RK[6];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[8]&#32;&#32;=&#32;RK[2]&#32;^&#32;RK[7];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[9]&#32;&#32;=&#32;RK[3]&#32;^&#32;RK[8];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[10]&#32;=&#32;RK[4]&#32;^&#32;RK[9];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[11]&#32;=&#32;RK[5]&#32;^&#32;RK[10];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00456"/>00456 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;14:&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;7;&#32;i++,&#32;RK&#32;+=&#32;8&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[8]&#32;&#32;=&#32;RK[0]&#32;^&#32;RCON[i]&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[7]&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[7]&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[7]&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[7]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00464"/>00464 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[9]&#32;&#32;=&#32;RK[1]&#32;^&#32;RK[8];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[10]&#32;=&#32;RK[2]&#32;^&#32;RK[9];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[11]&#32;=&#32;RK[3]&#32;^&#32;RK[10];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00468"/>00468 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[12]&#32;=&#32;RK[4]&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[11]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[11]&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[11]&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;RK[11]&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00474"/>00474 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[13]&#32;=&#32;RK[5]&#32;^&#32;RK[12];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[14]&#32;=&#32;RK[6]&#32;^&#32;RK[13];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK[15]&#32;=&#32;RK[7]&#32;^&#32;RK[14];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00480"/>00480 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00483"/>00483 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00484"/>00484 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00485"/>00485 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00486"/>00486 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00487"/>00487 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00501"/>00501 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERAES::AESSetKeyUncipher(<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>*&#32;ctx,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;key,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;keysize)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00502"/>00502 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00503"/>00503 &#32;&#32;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>&#32;cty;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00504"/>00504 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00505"/>00505 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00506"/>00506 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RK;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00507"/>00507 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SK;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00508"/>00508 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00509"/>00509 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(keysize)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00510"/>00510 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;128:&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;=&#32;10;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;192:&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;=&#32;12;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;256:&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;=&#32;14;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;default&#32;:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00515"/>00515 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00516"/>00516 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00517"/>00517 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00518"/>00518 &#32;&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a0cbb9b7a23a17378e2eb1b56c04aafd8">rk</link>&#32;=&#32;RK&#32;=&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1aa859493da944be7e3366f97604432b99">buf</link>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00519"/>00519 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00520"/>00520 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!AESSetKeyCipher(&#32;&amp;cty,&#32;key,&#32;keysize&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00521"/>00521 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00522"/>00522 &#32;&#32;SK&#32;=&#32;cty.<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a0cbb9b7a23a17378e2eb1b56c04aafd8">rk</link>&#32;+&#32;cty.<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;*&#32;4;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00523"/>00523 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00524"/>00524 &#32;&#32;*RK++&#32;=&#32;*SK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00525"/>00525 &#32;&#32;*RK++&#32;=&#32;*SK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00526"/>00526 &#32;&#32;*RK++&#32;=&#32;*SK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00527"/>00527 &#32;&#32;*RK++&#32;=&#32;*SK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00528"/>00528 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00529"/>00529 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>-1,&#32;SK-=8;&#32;i&gt;0;&#32;i--,&#32;SK-=&#32;8)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=0;&#32;j&lt;4;&#32;j++,&#32;SK++)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*RK++&#32;=&#32;RT0[&#32;FSb[&#32;(&#32;*SK&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;]&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT1[&#32;FSb[&#32;(&#32;*SK&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;]&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT2[&#32;FSb[&#32;(&#32;*SK&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;]&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RT3[&#32;FSb[&#32;(&#32;*SK&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00538"/>00538 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00539"/>00539 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00540"/>00540 &#32;&#32;*RK++&#32;=&#32;*SK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00541"/>00541 &#32;&#32;*RK++&#32;=&#32;*SK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00542"/>00542 &#32;&#32;*RK++&#32;=&#32;*SK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00543"/>00543 &#32;&#32;*RK++&#32;=&#32;*SK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00544"/>00544 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00545"/>00545 &#32;&#32;memset(&#32;&amp;cty,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>&#32;)&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00546"/>00546 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00547"/>00547 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00548"/>00548 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00549"/>00549 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00550"/>00550 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00565"/>00565 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERAES::AESCipher_ECB_Block(<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>*&#32;ctx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mode,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;input[16],&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;output[16])
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00566"/>00566 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00567"/>00567 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ctx)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00568"/>00568 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00569"/>00569 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;RK;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00570"/>00570 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;X0;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00571"/>00571 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;X1;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00572"/>00572 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;X2;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00573"/>00573 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;X3;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00574"/>00574 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;Y0;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00575"/>00575 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;Y1;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00576"/>00576 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;Y2;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00577"/>00577 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;Y3;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00578"/>00578 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;i;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00579"/>00579 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00580"/>00580 &#32;&#32;RK&#32;=&#32;ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a0cbb9b7a23a17378e2eb1b56c04aafd8">rk</link>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00581"/>00581 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00582"/>00582 &#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1aa8312024ea68d3d616163d2de65ae251">GET_UINT32_LE</link>(&#32;X0,&#32;input,&#32;&#32;0&#32;);&#32;X0&#32;^=&#32;*RK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00583"/>00583 &#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1aa8312024ea68d3d616163d2de65ae251">GET_UINT32_LE</link>(&#32;X1,&#32;input,&#32;&#32;4&#32;);&#32;X1&#32;^=&#32;*RK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00584"/>00584 &#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1aa8312024ea68d3d616163d2de65ae251">GET_UINT32_LE</link>(&#32;X2,&#32;input,&#32;&#32;8&#32;);&#32;X2&#32;^=&#32;*RK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00585"/>00585 &#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1aa8312024ea68d3d616163d2de65ae251">GET_UINT32_LE</link>(&#32;X3,&#32;input,&#32;12&#32;);&#32;X3&#32;^=&#32;*RK++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00586"/>00586 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00587"/>00587 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mode&#32;==&#32;<link linkend="__cipher_a_e_s_8h_1a8e636a0d2144a559eac6fa13b73f99bd">CIPHERAES_DECRYPT</link>)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00588"/>00588 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i&#32;=&#32;(ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;&gt;&gt;&#32;1)&#32;-&#32;1;&#32;i&#32;&gt;&#32;0;&#32;i--&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a080004ddc3bc16fcb705a71bdd4f7907">AES_RROUND</link>(&#32;Y0,&#32;Y1,&#32;Y2,&#32;Y3,&#32;X0,&#32;X1,&#32;X2,&#32;X3&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a080004ddc3bc16fcb705a71bdd4f7907">AES_RROUND</link>(&#32;X0,&#32;X1,&#32;X2,&#32;X3,&#32;Y0,&#32;Y1,&#32;Y2,&#32;Y3&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00594"/>00594 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a080004ddc3bc16fcb705a71bdd4f7907">AES_RROUND</link>(&#32;Y0,&#32;Y1,&#32;Y2,&#32;Y3,&#32;X0,&#32;X1,&#32;X2,&#32;X3&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00596"/>00596 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;X0&#32;=&#32;*RK++&#32;^&#32;\
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y0&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y3&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y2&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y1&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00602"/>00602 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;X1&#32;=&#32;*RK++&#32;^&#32;\
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y1&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y0&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y3&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y2&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00608"/>00608 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;X2&#32;=&#32;*RK++&#32;^&#32;\
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y2&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y1&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y0&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y3&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00614"/>00614 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;X3&#32;=&#32;*RK++&#32;^&#32;\
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y3&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y2&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y1&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;RSb[&#32;(&#32;Y0&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i&#32;=&#32;(ctx-&gt;<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t_1a9879ebb871e3ac6299a14a022ac3828b">nr</link>&#32;&gt;&gt;&#32;1)&#32;-&#32;1;&#32;i&#32;&gt;&#32;0;&#32;i--&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a944a93400dc147647b4f7c8089b54eff">AES_FROUND</link>(&#32;Y0,&#32;Y1,&#32;Y2,&#32;Y3,&#32;X0,&#32;X1,&#32;X2,&#32;X3&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a944a93400dc147647b4f7c8089b54eff">AES_FROUND</link>(&#32;X0,&#32;X1,&#32;X2,&#32;X3,&#32;Y0,&#32;Y1,&#32;Y2,&#32;Y3&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00628"/>00628 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a944a93400dc147647b4f7c8089b54eff">AES_FROUND</link>(&#32;Y0,&#32;Y1,&#32;Y2,&#32;Y3,&#32;X0,&#32;X1,&#32;X2,&#32;X3&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00630"/>00630 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;X0&#32;=&#32;*RK++&#32;^&#32;\
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y0&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y1&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y2&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y3&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00636"/>00636 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;X1&#32;=&#32;*RK++&#32;^&#32;\
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y1&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y2&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y3&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y0&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00642"/>00642 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;X2&#32;=&#32;*RK++&#32;^&#32;\
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y2&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y3&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y0&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y1&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00648"/>00648 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;X3&#32;=&#32;*RK++&#32;^&#32;\
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y3&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y0&#32;&gt;&gt;&#32;&#32;8&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;&#32;8&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y1&#32;&gt;&gt;&#32;16&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;16&#32;)&#32;^
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)&#32;FSb[&#32;(&#32;Y2&#32;&gt;&gt;&#32;24&#32;)&#32;&amp;&#32;0xFF&#32;]&#32;&lt;&lt;&#32;24&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00655"/>00655 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00656"/>00656 &#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a71862ad5d56423720862af2f5606588c">PUT_UINT32_LE</link>(&#32;X0,&#32;output,&#32;&#32;0&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00657"/>00657 &#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a71862ad5d56423720862af2f5606588c">PUT_UINT32_LE</link>(&#32;X1,&#32;output,&#32;&#32;4&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00658"/>00658 &#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a71862ad5d56423720862af2f5606588c">PUT_UINT32_LE</link>(&#32;X2,&#32;output,&#32;&#32;8&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00659"/>00659 &#32;&#32;<link linkend="__cipher_a_e_s_8cpp_1a71862ad5d56423720862af2f5606588c">PUT_UINT32_LE</link>(&#32;X3,&#32;output,&#32;12&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00660"/>00660 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00661"/>00661 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00662"/>00662 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00663"/>00663 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00664"/>00664 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00680"/>00680 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERAES::AESCipher_ECB(<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>*&#32;ctx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mode,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;output)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00681"/>00681 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00682"/>00682 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;%&#32;16)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00683"/>00683 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00684"/>00684 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(size&#32;&gt;&#32;0)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;AESCipher_ECB_Block(ctx,&#32;mode,&#32;input,&#32;output);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00687"/>00687 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;input&#32;&#32;+=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;output&#32;+=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;size&#32;&#32;&#32;-=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00691"/>00691 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00692"/>00692 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00693"/>00693 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00694"/>00694 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00695"/>00695 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00696"/>00696 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00713"/>00713 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERAES::AESCipher_CBC(<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>*&#32;ctx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mode,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;iv[16],&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;output)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00714"/>00714 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00715"/>00715 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;temp[16];
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00716"/>00716 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;i;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00717"/>00717 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00718"/>00718 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;%&#32;16)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00719"/>00719 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00720"/>00720 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(mode&#32;==&#32;<link linkend="__cipher_a_e_s_8h_1a8e636a0d2144a559eac6fa13b73f99bd">CIPHERAES_DECRYPT</link>)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(size&#32;&gt;&#32;0)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(temp,&#32;input,&#32;16);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AESCipher_ECB_Block(ctx,&#32;mode,&#32;input,&#32;output);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00726"/>00726 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;0;&#32;i&lt;16;&#32;i++)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[i]&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(&#32;output[i]&#32;^&#32;iv[i]);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00731"/>00731 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(&#32;iv,&#32;temp,&#32;16&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00733"/>00733 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input&#32;&#32;+=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output&#32;+=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;&#32;&#32;-=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00738"/>00738 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00739"/>00739 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00740"/>00740 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(size&#32;&gt;&#32;0)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;16;&#32;i++)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output[i]&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(&#32;input[i]&#32;^&#32;iv[i]&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00747"/>00747 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AESCipher_ECB_Block(ctx,&#32;mode,&#32;output,&#32;output);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(&#32;iv,&#32;output,&#32;16&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00750"/>00750 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input&#32;&#32;+=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output&#32;+=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;&#32;&#32;-=&#32;16;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00755"/>00755 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00756"/>00756 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00757"/>00757 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00758"/>00758 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00759"/>00759 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00760"/>00760 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00778"/>00778 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERAES::AESCipher_CFB128(<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>*&#32;ctx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mode,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;iv_off,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;iv[16],&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;output)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00779"/>00779 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00780"/>00780 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00781"/>00781 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;n&#32;=&#32;*iv_off;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00782"/>00782 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00783"/>00783 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;mode&#32;==&#32;<link linkend="__cipher_a_e_s_8h_1a8e636a0d2144a559eac6fa13b73f99bd">CIPHERAES_DECRYPT</link>&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00784"/>00784 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(size--)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(n&#32;==&#32;0)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AESCipher_ECB_Block(&#32;ctx,&#32;<link linkend="__cipher_a_e_s_8h_1a37fa8f0264ac2d2a2138cc152e662912">CIPHERAES_ENCRYPT</link>,&#32;iv,&#32;iv&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00791"/>00791 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;*input++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*output++&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(&#32;c&#32;^&#32;iv[n]&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iv[n]&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)&#32;c;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00795"/>00795 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;(n&#32;+&#32;1)&#32;&amp;&#32;0x0F;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00798"/>00798 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00799"/>00799 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00800"/>00800 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(size&#32;--)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(n&#32;==&#32;0)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AESCipher_ECB_Block(&#32;ctx,&#32;<link linkend="__cipher_a_e_s_8h_1a37fa8f0264ac2d2a2138cc152e662912">CIPHERAES_ENCRYPT</link>,&#32;iv,&#32;iv);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00807"/>00807 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iv[n]&#32;=&#32;*output++&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(&#32;iv[n]&#32;^&#32;*input++&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00809"/>00809 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;(n&#32;+&#32;1)&#32;&amp;&#32;0x0F;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00812"/>00812 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00813"/>00813 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00814"/>00814 &#32;&#32;*iv_off&#32;=&#32;(int)n;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00815"/>00815 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00816"/>00816 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00817"/>00817 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00818"/>00818 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00819"/>00819 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00837"/>00837 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERAES::AESCipher_CTR(<link linkend="_struct_c_i_p_h_e_r_a_e_s___c_o_n_t_e_x_t">CIPHERAES_CONTEXT</link>*&#32;ctx,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<emphasis role="keywordtype">int</emphasis>*&#32;nc_off,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;nonce_counter[16],&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;stream_block[16],&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;output)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00838"/>00838 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00839"/>00839 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00840"/>00840 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00841"/>00841 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;*nc_off;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00842"/>00842 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00843"/>00843 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(size--)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00844"/>00844 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(n&#32;==&#32;0)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;AESCipher_ECB_Block(&#32;ctx,&#32;<link linkend="__cipher_a_e_s_8h_1a37fa8f0264ac2d2a2138cc152e662912">CIPHERAES_ENCRYPT</link>,&#32;nonce_counter,&#32;stream_block&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00848"/>00848 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i&#32;=&#32;16;&#32;i&#32;&gt;&#32;0;&#32;i--&#32;)
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(++nonce_counter[i&#32;-&#32;1]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;*input++;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;*output++&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(&#32;c&#32;^&#32;stream_block[n]&#32;);
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00856"/>00856 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;(n&#32;+&#32;1)&#32;&amp;&#32;0x0F;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00858"/>00858 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00859"/>00859 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00860"/>00860 &#32;&#32;*nc_off&#32;=&#32;n;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00861"/>00861 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00862"/>00862 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00863"/>00863 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00864"/>00864 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00865"/>00865 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00876"/>00876 <emphasis role="keywordtype">void</emphasis>&#32;CIPHERAES::Clean()
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00877"/>00877 {
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00878"/>00878 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00879"/>00879 }
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00880"/>00880 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00881"/>00881 
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00882"/>00882 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_a_e_s_8cpp_source_1l00883"/>00883 
</programlisting></section>
