<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_s_t_m32_date_time_8cpp_source" xml:lang="en-US">
<title>XSTM32DateTime.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/XSTM32DateTime.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;CONTROL&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00030"/>00030 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00032"/>00032 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00034"/>00034 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_date_time_8h">XSTM32DateTime.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00037"/>00037 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00042"/>00042 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00044"/>00044 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00054"/><link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1af75c97a03ae1bbc827759825a56f0136">00054</link> <link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1af75c97a03ae1bbc827759825a56f0136">XSTM32DATETIME::XSTM32DATETIME</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00055"/>00055 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00056"/>00056 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00057"/>00057 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00059"/>00059 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00060"/>00060 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00071"/><link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1a06a51e413677585e46a98d0c5bd63f14">00071</link> <link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1a06a51e413677585e46a98d0c5bd63f14">XSTM32DATETIME::~XSTM32DATETIME</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00072"/>00072 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00073"/>00073 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00074"/>00074 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00075"/>00075 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00076"/>00076 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00077"/>00077 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00087"/><link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1adca7e1b2cdef1e59e753e6527ead52e0">00087</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1adca7e1b2cdef1e59e753e6527ead52e0">XSTM32DATETIME::Read</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00088"/>00088 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00089"/>00089 &#32;&#32;<emphasis role="comment">//GetActualDateTime(this);</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00090"/>00090 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00091"/>00091 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00092"/>00092 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00093"/>00093 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00094"/>00094 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00095"/>00095 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00105"/><link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1a108faad13c5bd1ab6ff8a391e871c8c9">00105</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1a108faad13c5bd1ab6ff8a391e871c8c9">XSTM32DATETIME::Write</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00106"/>00106 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00107"/>00107 &#32;&#32;<emphasis role="comment">//SetActualDateTime(this);</emphasis>
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00108"/>00108 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00109"/>00109 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00110"/>00110 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00111"/>00111 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00112"/>00112 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00113"/>00113 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00123"/><link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1adcdd3202ff23a5c4ca607ff3513387b7">00123</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1adcdd3202ff23a5c4ca607ff3513387b7">XSTM32DATETIME::GetMeridianDifference</link>()
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00124"/>00124 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00125"/>00125 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)0;
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00126"/>00126 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00127"/>00127 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00128"/>00128 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00129"/>00129 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00141"/><link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1a9803b220ab416975e11b3e8b9072a03b">00141</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_s_t_m32_d_a_t_e_t_i_m_e_1a9803b220ab416975e11b3e8b9072a03b">XSTM32DATETIME::IsDayLigthSavingTime</link>(<emphasis role="keywordtype">int</emphasis>*&#32;bias)
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00142"/>00142 {
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00144"/>00144 }
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00145"/>00145 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00146"/>00146 
<anchor xml:id="__x_s_t_m32_date_time_8cpp_source_1l00147"/>00147 
</programlisting></section>
