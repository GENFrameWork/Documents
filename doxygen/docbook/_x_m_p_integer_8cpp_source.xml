<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_m_p_integer_8cpp_source" xml:lang="en-US">
<title>XMPInteger.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XMPInteger.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_m_p_integer_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_m_p_integer_8h">XMPInteger.h</link>&quot;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00044"/>00044 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00046"/>00046 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00048"/>00048 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00049"/>00049 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00050"/>00050 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00052"/>00052 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00053"/>00053 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;SmallPrime[]&#32;=&#32;{&#32;&#32;&#32;3,&#32;&#32;&#32;&#32;5,&#32;&#32;&#32;&#32;7,&#32;&#32;&#32;11,&#32;&#32;&#32;13,&#32;&#32;&#32;17,&#32;&#32;&#32;19,&#32;&#32;&#32;23,&#32;&#32;29,&#32;&#32;&#32;31,&#32;&#32;&#32;37,&#32;&#32;&#32;41,&#32;&#32;&#32;43,&#32;&#32;&#32;47,&#32;&#32;&#32;53,&#32;&#32;&#32;59,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;61,&#32;&#32;&#32;67,&#32;&#32;&#32;71,&#32;&#32;&#32;73,&#32;&#32;&#32;79,&#32;&#32;&#32;83,&#32;&#32;&#32;89,&#32;&#32;&#32;97,&#32;&#32;101,&#32;&#32;103,&#32;&#32;107,&#32;&#32;109,&#32;&#32;113,&#32;&#32;127,&#32;&#32;131,&#32;&#32;137,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;139,&#32;&#32;149,&#32;&#32;151,&#32;&#32;157,&#32;&#32;163,&#32;&#32;167,&#32;&#32;173,&#32;&#32;179,&#32;&#32;181,&#32;&#32;191,&#32;&#32;193,&#32;&#32;197,&#32;&#32;199,&#32;&#32;211,&#32;&#32;223,&#32;&#32;227,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;229,&#32;&#32;233,&#32;&#32;239,&#32;&#32;241,&#32;&#32;251,&#32;&#32;257,&#32;&#32;263,&#32;&#32;269,&#32;&#32;271,&#32;&#32;277,&#32;&#32;281,&#32;&#32;283,&#32;&#32;293,&#32;&#32;307,&#32;&#32;311,&#32;&#32;313,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;317,&#32;&#32;331,&#32;&#32;337,&#32;&#32;347,&#32;&#32;349,&#32;&#32;353,&#32;&#32;359,&#32;&#32;367,&#32;&#32;373,&#32;&#32;379,&#32;&#32;383,&#32;&#32;389,&#32;&#32;397,&#32;&#32;401,&#32;&#32;409,&#32;&#32;419,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;421,&#32;&#32;431,&#32;&#32;433,&#32;&#32;439,&#32;&#32;443,&#32;&#32;449,&#32;&#32;457,&#32;&#32;461,&#32;&#32;463,&#32;&#32;467,&#32;&#32;479,&#32;&#32;487,&#32;&#32;491,&#32;&#32;499,&#32;&#32;503,&#32;&#32;509,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;521,&#32;&#32;523,&#32;&#32;541,&#32;&#32;547,&#32;&#32;557,&#32;&#32;563,&#32;&#32;569,&#32;&#32;571,&#32;&#32;577,&#32;&#32;587,&#32;&#32;593,&#32;&#32;599,&#32;&#32;601,&#32;&#32;607,&#32;&#32;613,&#32;&#32;617,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;619,&#32;&#32;631,&#32;&#32;641,&#32;&#32;643,&#32;&#32;647,&#32;&#32;653,&#32;&#32;659,&#32;&#32;661,&#32;&#32;673,&#32;&#32;677,&#32;&#32;683,&#32;&#32;691,&#32;&#32;701,&#32;&#32;709,&#32;&#32;719,&#32;&#32;727,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;733,&#32;&#32;739,&#32;&#32;743,&#32;&#32;751,&#32;&#32;757,&#32;&#32;761,&#32;&#32;769,&#32;&#32;773,&#32;&#32;787,&#32;&#32;797,&#32;&#32;809,&#32;&#32;811,&#32;&#32;821,&#32;&#32;823,&#32;&#32;827,&#32;&#32;829,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;839,&#32;&#32;853,&#32;&#32;857,&#32;&#32;859,&#32;&#32;863,&#32;&#32;877,&#32;&#32;881,&#32;&#32;883,&#32;&#32;887,&#32;&#32;907,&#32;&#32;911,&#32;&#32;919,&#32;&#32;929,&#32;&#32;937,&#32;&#32;941,&#32;&#32;947,
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;953,&#32;&#32;967,&#32;&#32;971,&#32;&#32;977,&#32;&#32;983,&#32;&#32;991,&#32;&#32;997,&#32;-103
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00065"/>00065 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00066"/>00066 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00067"/>00067 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00068"/>00068 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00069"/>00069 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00070"/>00070 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00071"/>00071 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00072"/>00072 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00082"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1aa0ac2b363bd3290e6cf6b2fd6f9fb871">00082</link> <link linkend="_class_x_m_p_i_n_t_e_g_e_r_1aa0ac2b363bd3290e6cf6b2fd6f9fb871">XMPINTEGER::XMPINTEGER</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00083"/>00083 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00084"/>00084 &#32;&#32;Clean();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00085"/>00085 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00086"/>00086 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00087"/>00087 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00098"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1aefc29eb60c46ad436a42a143566a20c1">00098</link> <link linkend="_class_x_m_p_i_n_t_e_g_e_r_1aefc29eb60c46ad436a42a143566a20c1">XMPINTEGER::~XMPINTEGER</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00099"/>00099 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00100"/>00100 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00101"/>00101 &#32;&#32;Clean();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00102"/>00102 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00103"/>00103 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00104"/>00104 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00114"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">00114</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">XMPINTEGER::GetSign</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00115"/>00115 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00116"/>00116 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sign;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00117"/>00117 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00118"/>00118 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00119"/>00119 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00129"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">00129</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">XMPINTEGER::GetNLimbs</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00130"/>00130 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00131"/>00131 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nlimbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00132"/>00132 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00133"/>00133 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00134"/>00134 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00144"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">00144</link> <link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">XMPINTEGER::GetLimbs</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00145"/>00145 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00146"/>00146 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;limbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00147"/>00147 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00148"/>00148 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00149"/>00149 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00161"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">00161</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">XMPINTEGER::SetSign</link>(<emphasis role="keywordtype">int</emphasis>&#32;sign)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00162"/>00162 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00163"/>00163 &#32;&#32;this-&gt;sign&#32;&#32;&#32;=&#32;sign;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00164"/>00164 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00165"/>00165 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00166"/>00166 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00178"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab4f80712e219e4e6364a6142d3c1d5b9">00178</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab4f80712e219e4e6364a6142d3c1d5b9">XMPINTEGER::SetNLimbs</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;nlimbs)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00179"/>00179 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00180"/>00180 &#32;&#32;this-&gt;nlimbs&#32;=&#32;nlimbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00181"/>00181 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00182"/>00182 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00183"/>00183 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00195"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad6218b2f38d8e5329568d0689e0683dc">00195</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad6218b2f38d8e5329568d0689e0683dc">XMPINTEGER::SetLimbs</link>(<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;limbs)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00196"/>00196 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00197"/>00197 &#32;&#32;this-&gt;limbs&#32;=&#32;limbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00198"/>00198 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00199"/>00199 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00200"/>00200 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00210"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">00210</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">XMPINTEGER::Ini</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00211"/>00211 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00212"/>00212 &#32;&#32;sign&#32;&#32;&#32;&#32;=&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00213"/>00213 &#32;&#32;nlimbs&#32;&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00214"/>00214 &#32;&#32;limbs&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00215"/>00215 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00216"/>00216 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00217"/>00217 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00218"/>00218 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00219"/>00219 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00231"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">00231</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">XMPINTEGER::Grow</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;nblimbs)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00232"/>00232 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00233"/>00233 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;newlimbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00234"/>00234 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00235"/>00235 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(nblimbs&#32;&gt;&#32;&#32;<link linkend="__x_m_p_integer_8h_1ac81ed71d5c19660b48946cf11c8cf30c">XMPINTEGER_MAXLIMBS</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00236"/>00236 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00237"/>00237 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;&lt;&#32;nblimbs)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;newlimbs&#32;=&#32;(<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*)&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[nblimbs&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!newlimbs)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00241"/>00241 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;memset(newlimbs,&#32;0,&#32;nblimbs&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00243"/>00243 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(limbs)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(newlimbs,&#32;limbs,&#32;nlimbs&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memset(limbs,&#32;0,&#32;nlimbs&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;limbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00250"/>00250 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;nlimbs&#32;=&#32;nblimbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;limbs&#32;=&#32;newlimbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00254"/>00254 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00255"/>00255 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00256"/>00256 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00257"/>00257 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00258"/>00258 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00270"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a945c66838f36042dfb64dd8afb85ce04">00270</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a945c66838f36042dfb64dd8afb85ce04">XMPINTEGER::Shrink</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;nblimbs)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00271"/>00271 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00272"/>00272 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;&#32;newlimbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00273"/>00273 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;c;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00274"/>00274 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00275"/>00275 &#32;&#32;<emphasis role="comment">//&#32;Actually&#32;resize&#32;up&#32;in&#32;this&#32;case</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00276"/>00276 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;nlimbs&#32;&lt;=&#32;nblimbs)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(nblimbs);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00277"/>00277 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00278"/>00278 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(c=nlimbs-1;&#32;c&gt;0;&#32;c--&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(limbs[c])&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00282"/>00282 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00283"/>00283 &#32;&#32;c++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00284"/>00284 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00285"/>00285 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(c&lt;nblimbs&#32;)&#32;c&#32;=&#32;nblimbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00286"/>00286 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00287"/>00287 &#32;&#32;newlimbs&#32;=&#32;(<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*)<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[&#32;c&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00288"/>00288 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(newlimbs)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00289"/>00289 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00290"/>00290 &#32;&#32;memset(newlimbs,&#32;0,&#32;(c&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00291"/>00291 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00292"/>00292 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(limbs)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(newlimbs,&#32;limbs,&#32;(c&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;memset(limbs,&#32;0,&#32;(nlimbs&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;limbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00298"/>00298 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00299"/>00299 &#32;&#32;nlimbs&#32;=&#32;c;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00300"/>00300 &#32;&#32;limbs&#32;=&#32;newlimbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00301"/>00301 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00302"/>00302 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00303"/>00303 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00304"/>00304 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00305"/>00305 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00317"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">00317</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">XMPINTEGER::CopyFrom</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00318"/>00318 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00319"/>00319 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00320"/>00320 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00321"/>00321 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>&#32;==&#32;xmpinteger)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00322"/>00322 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00323"/>00323 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmpinteger-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>())
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00328"/>00328 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00329"/>00329 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(c=xmpinteger-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()-&#32;1;&#32;c&gt;0;&#32;c--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[c]&#32;!=&#32;0&#32;)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00333"/>00333 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00334"/>00334 &#32;&#32;c++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00335"/>00335 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00336"/>00336 &#32;&#32;this-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(xmpinteger-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>());
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00337"/>00337 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00338"/>00338 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(c);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00339"/>00339 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00340"/>00340 &#32;&#32;memset(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;0,&#32;(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00341"/>00341 &#32;&#32;memcpy(&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;xmpinteger-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;(c&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00342"/>00342 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00343"/>00343 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00344"/>00344 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00345"/>00345 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00346"/>00346 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00358"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad8c5d754d6b803de1c3df205430b63cd">00358</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad8c5d754d6b803de1c3df205430b63cd">XMPINTEGER::Swap</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00359"/>00359 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00360"/>00360 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;xmpitempo;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00361"/>00361 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00362"/>00362 &#32;&#32;xmpitempo.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00363"/>00363 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00364"/>00364 &#32;&#32;xmpitempo.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00365"/>00365 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00366"/>00366 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(xmpinteger);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00367"/>00367 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00368"/>00368 &#32;&#32;xmpinteger-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;xmpitempo);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00369"/>00369 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00370"/>00370 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00371"/>00371 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00383"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">00383</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">XMPINTEGER::LeftSet</link>(<emphasis role="keywordtype">int</emphasis>&#32;z)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00384"/>00384 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00385"/>00385 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00386"/>00386 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00387"/>00387 &#32;&#32;memset(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;0,&#32;(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00388"/>00388 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00389"/>00389 &#32;&#32;limbs[0]&#32;=&#32;(<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>)((&#32;z&#32;&lt;&#32;0&#32;)&#32;?-z&#32;:&#32;z);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00390"/>00390 &#32;&#32;sign&#32;&#32;&#32;&#32;&#32;=&#32;((&#32;z&#32;&lt;&#32;0&#32;)&#32;?&#32;-1&#32;:&#32;1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00391"/>00391 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00392"/>00392 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00393"/>00393 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00394"/>00394 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00395"/>00395 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00407"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1af0c76b9c7c54a988e46073f75ce8ff11">00407</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1af0c76b9c7c54a988e46073f75ce8ff11">XMPINTEGER::GetBit</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;position)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00408"/>00408 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00409"/>00409 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(nlimbs&#32;*&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;&lt;=&#32;position)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00410"/>00410 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00411"/>00411 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&#32;limbs[position&#32;/&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>]&#32;&gt;&gt;&#32;(position&#32;%&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>)&#32;)&#32;&amp;&#32;0x01;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00412"/>00412 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00413"/>00413 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00414"/>00414 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00427"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a05caf0d3c7f51339bd0048b29d170073">00427</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a05caf0d3c7f51339bd0048b29d170073">XMPINTEGER::SetBit</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;position,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;value)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00428"/>00428 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00429"/>00429 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;off&#32;=&#32;position&#32;/&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00430"/>00430 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;idx&#32;=&#32;position&#32;%&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00431"/>00431 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00432"/>00432 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((value&#32;!=&#32;0)&#32;&amp;&amp;&#32;(value&#32;!=&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00433"/>00433 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00434"/>00434 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(nlimbs&#32;*&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;&lt;=&#32;position)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(value&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00437"/>00437 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(off&#32;+&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00440"/>00440 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00441"/>00441 &#32;&#32;limbs[off]&#32;&amp;=&#32;~((<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>)(0x01)&#32;&#32;&lt;&lt;&#32;idx);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00442"/>00442 &#32;&#32;limbs[off]&#32;|=&#32;&#32;((<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>)(value)&#32;&lt;&lt;&#32;idx);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00443"/>00443 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00444"/>00444 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00445"/>00445 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00446"/>00446 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00447"/>00447 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00457"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a998e00885ae19da08d6e5df3f5184f35">00457</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a998e00885ae19da08d6e5df3f5184f35">XMPINTEGER::GetLSB</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00458"/>00458 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00459"/>00459 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00460"/>00460 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00461"/>00461 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00462"/>00462 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00463"/>00463 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;nlimbs;&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;j&#32;=&#32;0;&#32;j&lt;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>;&#32;j++,&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>++&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(&#32;(limbs[i]&#32;&gt;&gt;&#32;j&#32;)&#32;&amp;&#32;1&#32;)&#32;!=&#32;0&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00470"/>00470 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00471"/>00471 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0&#32;;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00472"/>00472 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00473"/>00473 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00474"/>00474 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00484"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">00484</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">XMPINTEGER::GetMSB</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00485"/>00485 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00486"/>00486 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00487"/>00487 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00488"/>00488 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00489"/>00489 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=nlimbs-1;&#32;i&gt;0;&#32;i--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(limbs[i]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00493"/>00493 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00494"/>00494 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(j&#32;=&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>;&#32;j&gt;0;&#32;j--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00495"/>00495 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(((limbs[i]&#32;&gt;&gt;&#32;(&#32;j&#32;-&#32;1&#32;)&#32;)&#32;&amp;&#32;1&#32;)&#32;!=&#32;0&#32;)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00498"/>00498 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00499"/>00499 &#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((i&#32;*&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>)&#32;+&#32;j);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00500"/>00500 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00501"/>00501 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00502"/>00502 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00512"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a77c2140402833bbf789bf15377d5d675">00512</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a77c2140402833bbf789bf15377d5d675">XMPINTEGER::GetSize</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00513"/>00513 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00514"/>00514 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()+7)&#32;&gt;&gt;&#32;3);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00515"/>00515 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00516"/>00516 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00517"/>00517 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00530"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac9c7c57dc47957741b871fa7e99bba0c">00530</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac9c7c57dc47957741b871fa7e99bba0c">XMPINTEGER::ImportFromBinary</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00531"/>00531 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00532"/>00532 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00533"/>00533 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00534"/>00534 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00535"/>00535 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00536"/>00536 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(n=0;&#32;n&lt;size;&#32;n++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00537"/>00537 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(buffer[n]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00540"/>00540 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00541"/>00541 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(<link linkend="__x_m_p_integer_8h_1adc97fd5d48aab29051378da6b5b5581b">XMPINTEGER_CHARSTOLIMBS</link>(size-&#32;n)))
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00542"/>00542 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00544"/>00544 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00545"/>00545 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00546"/>00546 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00547"/>00547 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=size,&#32;j=0;&#32;i&gt;nlimbs;&#32;i--,&#32;j++&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00548"/>00548 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;limbs[j&#32;/&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>]&#32;|=&#32;((<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>)&#32;buffer[i-1])&#32;&lt;&lt;&#32;((j&#32;%&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>)&#32;&lt;&lt;&#32;3);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00550"/>00550 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00551"/>00551 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00552"/>00552 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00553"/>00553 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00554"/>00554 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00555"/>00555 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00568"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a47e96df115d900b6e89a4f00cb444a42">00568</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a47e96df115d900b6e89a4f00cb444a42">XMPINTEGER::ExportToBinary</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00569"/>00569 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00570"/>00570 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00571"/>00571 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00572"/>00572 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00573"/>00573 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00574"/>00574 &#32;&#32;n&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a77c2140402833bbf789bf15377d5d675">GetSize</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00575"/>00575 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00576"/>00576 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;&lt;&#32;n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00577"/>00577 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00578"/>00578 &#32;&#32;memset((<emphasis role="keywordtype">void</emphasis>*)buffer,&#32;0,&#32;size);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00579"/>00579 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00580"/>00580 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i&#32;=&#32;size&#32;-&#32;1,&#32;j&#32;=&#32;0;&#32;n&#32;&gt;&#32;0;&#32;i--,&#32;j++,&#32;n--&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00581"/>00581 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;buffer[i]&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(&#32;limbs[j&#32;/&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>]&#32;&gt;&gt;&#32;((j&#32;%&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>)&#32;&lt;&lt;&#32;3));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00583"/>00583 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00584"/>00584 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00585"/>00585 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00586"/>00586 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00587"/>00587 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00588"/>00588 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00600"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">00600</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">XMPINTEGER::LeftShift</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00601"/>00601 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00602"/>00602 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00603"/>00603 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;v0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00604"/>00604 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;t1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00605"/>00605 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;r0&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00606"/>00606 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;r1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00607"/>00607 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00608"/>00608 &#32;&#32;v0&#32;=&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>&#32;/&#32;(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00609"/>00609 &#32;&#32;t1&#32;=&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>&#32;&amp;&#32;(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;-&#32;1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00610"/>00610 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00611"/>00611 &#32;&#32;i&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;+&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00612"/>00612 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00613"/>00613 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(nlimbs&#32;*&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;&lt;&#32;i)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00614"/>00614 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(<link linkend="__x_m_p_integer_8h_1ab5aa2dddd7dfbbf316bd3164afc35db0">XMPINTEGER_BITSTOLIMBS</link>(i)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00617"/>00617 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00618"/>00618 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00619"/>00619 &#32;&#32;<emphasis role="comment">//&#32;shift&#32;by&#32;count&#32;/&#32;limb_size</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00620"/>00620 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(v0&gt;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=nlimbs;&#32;i&gt;v0;&#32;i--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limbs[i&#32;-&#32;1]&#32;=&#32;limbs[i&#32;-&#32;v0&#32;-&#32;1];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00626"/>00626 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;i&#32;&gt;&#32;0;&#32;i--&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limbs[i&#32;-&#32;1]&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00632"/>00632 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00633"/>00633 &#32;&#32;<emphasis role="comment">//&#32;shift&#32;by&#32;count&#32;%&#32;limb_size</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00634"/>00634 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(t1&#32;&gt;&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i&#32;=&#32;v0;&#32;i&#32;&lt;&#32;nlimbs;&#32;i++&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r1&#32;=&#32;limbs[i]&#32;&gt;&gt;&#32;(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;-&#32;t1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limbs[i]&#32;&lt;&lt;=&#32;t1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limbs[i]&#32;|=&#32;r0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r0&#32;=&#32;r1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00644"/>00644 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00645"/>00645 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00646"/>00646 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00647"/>00647 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00648"/>00648 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00660"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">00660</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">XMPINTEGER::RightShift</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00661"/>00661 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00662"/>00662 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00663"/>00663 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;v0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00664"/>00664 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;v1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00665"/>00665 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;r0&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00666"/>00666 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;r1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00667"/>00667 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00668"/>00668 &#32;&#32;v0&#32;=&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>&#32;/&#32;&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00669"/>00669 &#32;&#32;v1&#32;=&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>&#32;&amp;&#32;(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;-&#32;1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00670"/>00670 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00671"/>00671 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((v0&#32;&gt;&#32;nlimbs)&#32;||&#32;(v0&#32;==&#32;nlimbs&#32;&amp;&amp;&#32;v1&#32;&gt;&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00672"/>00672 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00673"/>00673 &#32;&#32;<emphasis role="comment">//&#32;shift&#32;by&#32;count&#32;/&#32;limb_size</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00674"/>00674 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(v0&gt;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00675"/>00675 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;nlimbs-v0;&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limbs[i]&#32;=&#32;limbs[i&#32;+&#32;v0];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00680"/>00680 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;i&lt;nlimbs;&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limbs[i]&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00686"/>00686 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00687"/>00687 &#32;&#32;<emphasis role="comment">//&#32;shift&#32;by&#32;count&#32;%&#32;limb_size</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00688"/>00688 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(v1&gt;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00690"/>00690 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=nlimbs;&#32;i&gt;0;&#32;i--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r1&#32;=&#32;limbs[i&#32;-&#32;1]&#32;&lt;&lt;&#32;(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;-&#32;v1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limbs[i&#32;-&#32;1]&#32;&gt;&gt;=&#32;v1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;limbs[i&#32;-&#32;1]&#32;|=&#32;r0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r0&#32;=&#32;r1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00697"/>00697 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00698"/>00698 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00699"/>00699 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00700"/>00700 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00701"/>00701 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00702"/>00702 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00714"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2cfd05e7f51f0863995409222fe35cf">00714</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2cfd05e7f51f0863995409222fe35cf">XMPINTEGER::CompareABSValues</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;xmpinteger)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00715"/>00715 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00716"/>00716 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00717"/>00717 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00718"/>00718 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00719"/>00719 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=nlimbs;&#32;i&gt;0;&#32;i--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00720"/>00720 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(limbs[i&#32;-&#32;1]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00722"/>00722 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00723"/>00723 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00724"/>00724 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(j&#32;=&#32;xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>();&#32;j&gt;0;&#32;j--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00725"/>00725 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[j&#32;-&#32;1]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00727"/>00727 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00728"/>00728 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00729"/>00729 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((i&#32;==&#32;0)&#32;&amp;&amp;&#32;(j&#32;==&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00730"/>00730 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00731"/>00731 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&#32;&gt;&#32;j)&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00732"/>00732 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(j&#32;&gt;&#32;i)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00733"/>00733 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00734"/>00734 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;i&gt;0;&#32;i--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00735"/>00735 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(limbs[i&#32;-&#32;1]&#32;&gt;&#32;xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;1]&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(limbs[i&#32;-&#32;1]&#32;&lt;&#32;xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;1]&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00738"/>00738 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00739"/>00739 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00740"/>00740 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00741"/>00741 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00742"/>00742 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00743"/>00743 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00755"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">00755</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">XMPINTEGER::CompareSignedValues</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;xmpinteger)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00756"/>00756 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00757"/>00757 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00758"/>00758 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00759"/>00759 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00760"/>00760 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=nlimbs;&#32;i&gt;0;&#32;i--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00761"/>00761 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;limbs[i&#32;-&#32;1]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00763"/>00763 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00764"/>00764 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00765"/>00765 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>();&#32;j&gt;0;&#32;j--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00766"/>00766 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[j&#32;-&#32;1]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00768"/>00768 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00769"/>00769 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00770"/>00770 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((i&#32;==&#32;0)&#32;&amp;&amp;&#32;(j&#32;==&#32;0))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00771"/>00771 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00772"/>00772 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;i&#32;&gt;&#32;j&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00773"/>00773 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;j&#32;&gt;&#32;i&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;-xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00774"/>00774 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00775"/>00775 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;&gt;&#32;0)&#32;&amp;&amp;&#32;xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;&lt;&#32;0&#32;)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00776"/>00776 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;&gt;&#32;0)&#32;&amp;&amp;&#32;&#32;(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;&lt;&#32;0))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00777"/>00777 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00778"/>00778 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;i&#32;&gt;&#32;0;&#32;i--&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00779"/>00779 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(limbs[i&#32;-&#32;1]&#32;&gt;&#32;xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;1]&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(limbs[i&#32;-&#32;1]&#32;&lt;&#32;xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;1]&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00782"/>00782 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00783"/>00783 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00784"/>00784 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00785"/>00785 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00786"/>00786 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00787"/>00787 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00799"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a7da4688b4f9e3966295138708a7d6ed4">00799</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">XMPINTEGER::CompareSignedValues</link>(<emphasis role="keywordtype">int</emphasis>&#32;integer)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00800"/>00800 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00801"/>00801 &#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;xmpinteger;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00802"/>00802 &#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;&#32;&#32;&#32;&#32;pointer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00803"/>00803 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00804"/>00804 &#32;(*pointer)&#32;&#32;=&#32;(&#32;integer&#32;&lt;&#32;0&#32;)&#32;?&#32;-integer&#32;:&#32;integer;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00805"/>00805 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00806"/>00806 &#32;xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>((integer&#32;&lt;&#32;0&#32;)&#32;?&#32;-1&#32;:&#32;1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00807"/>00807 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00808"/>00808 &#32;xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab4f80712e219e4e6364a6142d3c1d5b9">SetNLimbs</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00809"/>00809 &#32;xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad6218b2f38d8e5329568d0689e0683dc">SetLimbs</link>(pointer);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00810"/>00810 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00811"/>00811 &#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(xmpinteger);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00812"/>00812 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00813"/>00813 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00814"/>00814 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00827"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac22e5c3dcf691667d8437c529e1413f3">00827</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac22e5c3dcf691667d8437c529e1413f3">XMPINTEGER::AdditionABS</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger1,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger2)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00828"/>00828 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00829"/>00829 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00830"/>00830 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00831"/>00831 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;o;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00832"/>00832 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;p;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00833"/>00833 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;c;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00834"/>00834 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00835"/>00835 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<emphasis role="keyword">this</emphasis>&#32;==&#32;xmpinteger2)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00836"/>00836 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;tempoxmpinteger&#32;=&#32;xmpinteger1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00838"/>00838 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;xmpinteger1&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;xmpinteger2&#32;=&#32;tempoxmpinteger;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00841"/>00841 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00842"/>00842 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00843"/>00843 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00844"/>00844 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>&#32;!=&#32;xmpinteger1)&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(xmpinteger1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00845"/>00845 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00846"/>00846 &#32;&#32;<emphasis role="comment">//&#32;X&#32;should&#32;always&#32;be&#32;positive&#32;as&#32;a&#32;result&#32;of&#32;unsigned&#32;additions.</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00847"/>00847 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00848"/>00848 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00849"/>00849 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00850"/>00850 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>();&#32;j&gt;0;&#32;j--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00851"/>00851 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[j&#32;-&#32;1]&#32;!=&#32;0&#32;)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00853"/>00853 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00854"/>00854 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00855"/>00855 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(j))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00856"/>00856 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00857"/>00857 &#32;&#32;o&#32;=&#32;xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00858"/>00858 &#32;&#32;p&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00859"/>00859 &#32;&#32;c&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00860"/>00860 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00861"/>00861 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;j;&#32;i++,&#32;o++,&#32;p++&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00862"/>00862 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;*p&#32;+=&#32;&#32;c;&#32;c&#32;&#32;=&#32;(&#32;*p&#32;&lt;&#32;&#32;c&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;*p&#32;+=&#32;*o;&#32;c&#32;+=&#32;(&#32;*p&#32;&lt;&#32;*o&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00865"/>00865 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00866"/>00866 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00867"/>00867 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(c&#32;!=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00868"/>00868 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;i&#32;&gt;=&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>())
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(i&#32;+&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()&#32;+&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00874"/>00874 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;*p&#32;+=&#32;c;&#32;c&#32;=&#32;(&#32;*p&#32;&lt;&#32;c&#32;);&#32;i++;&#32;p++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00876"/>00876 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00877"/>00877 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00878"/>00878 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00879"/>00879 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00880"/>00880 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00881"/>00881 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00894"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a19b1408dabe209f42ed797491d431b82">00894</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a19b1408dabe209f42ed797491d431b82">XMPINTEGER::SubtractionABS</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger1,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger2)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00895"/>00895 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00896"/>00896 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;tb;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00897"/>00897 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00898"/>00898 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00899"/>00899 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2cfd05e7f51f0863995409222fe35cf">CompareABSValues</link>((*xmpinteger2))&#32;&lt;&#32;0&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00900"/>00900 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00901"/>00901 &#32;&#32;tb.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00902"/>00902 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00903"/>00903 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>&#32;==&#32;xmpinteger2)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00904"/>00904 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;tb.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(xmpinteger2);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;xmpinteger2&#32;=&#32;&amp;tb;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00907"/>00907 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00908"/>00908 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00909"/>00909 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>&#32;!=&#32;xmpinteger1)&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(xmpinteger1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00910"/>00910 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00911"/>00911 &#32;&#32;<emphasis role="comment">//&#32;X&#32;should&#32;always&#32;be&#32;positive&#32;as&#32;a&#32;result&#32;of&#32;unsigned&#32;subtractions.</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00912"/>00912 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00913"/>00913 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00914"/>00914 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;n&#32;=&#32;xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>();&#32;n&#32;&gt;&#32;0;&#32;n--&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00915"/>00915 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[n&#32;-&#32;1]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00917"/>00917 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00918"/>00918 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00919"/>00919 &#32;&#32;SubtractionHelper(&#32;n,&#32;xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>());
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00920"/>00920 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00921"/>00921 &#32;&#32;tb.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00922"/>00922 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00923"/>00923 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00924"/>00924 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00925"/>00925 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00926"/>00926 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00939"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">00939</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">XMPINTEGER::AdditionSigned</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger1,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger2)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00940"/>00940 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00941"/>00941 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tempsign&#32;=&#32;xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00942"/>00942 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00943"/>00943 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;*&#32;xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>())&#32;&lt;&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00944"/>00944 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2cfd05e7f51f0863995409222fe35cf">CompareABSValues</link>((*xmpinteger2))&#32;&gt;=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a19b1408dabe209f42ed797491d431b82">SubtractionABS</link>(xmpinteger1,&#32;xmpinteger2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(tempsign);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00949"/>00949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a19b1408dabe209f42ed797491d431b82">SubtractionABS</link>(xmpinteger2,&#32;xmpinteger1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(-tempsign);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00955"/>00955 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00956"/>00956 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00957"/>00957 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac22e5c3dcf691667d8437c529e1413f3">AdditionABS</link>(xmpinteger1,&#32;xmpinteger2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(tempsign);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00960"/>00960 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00961"/>00961 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00962"/>00962 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00963"/>00963 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00964"/>00964 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00965"/>00965 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00978"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">00978</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">XMPINTEGER::SubtractionSigned</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger1,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger2)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00979"/>00979 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00980"/>00980 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tempsign&#32;=&#32;xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00981"/>00981 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00982"/>00982 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;*&#32;xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>())&#32;&gt;&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00983"/>00983 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2cfd05e7f51f0863995409222fe35cf">CompareABSValues</link>((*xmpinteger2))&#32;&gt;=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00986"/>00986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a19b1408dabe209f42ed797491d431b82">SubtractionABS</link>(xmpinteger1,&#32;xmpinteger2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(tempsign);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a19b1408dabe209f42ed797491d431b82">SubtractionABS</link>(xmpinteger2,&#32;xmpinteger1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(-tempsign);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00993"/>00993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00994"/>00994 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00995"/>00995 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00996"/>00996 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac22e5c3dcf691667d8437c529e1413f3">AdditionABS</link>(xmpinteger1,&#32;xmpinteger2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(tempsign);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l00999"/>00999 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01000"/>01000 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01001"/>01001 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01002"/>01002 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01003"/>01003 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01004"/>01004 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01017"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8a3120a6e3da82176e4b5a4bef0cb770">01017</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">XMPINTEGER::AdditionSigned</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger,&#32;<emphasis role="keywordtype">int</emphasis>&#32;integer)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01018"/>01018 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01019"/>01019 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;_xmpinteger2;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01020"/>01020 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;&#32;&#32;&#32;&#32;&#32;pointer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01021"/>01021 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01022"/>01022 &#32;&#32;(*pointer)&#32;=&#32;(&#32;integer&#32;&lt;&#32;0&#32;)&#32;?&#32;-integer&#32;:&#32;integer;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01023"/>01023 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01024"/>01024 &#32;&#32;_xmpinteger2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>((&#32;integer&#32;&lt;&#32;0&#32;)&#32;?&#32;-1&#32;:&#32;1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01025"/>01025 &#32;&#32;_xmpinteger2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab4f80712e219e4e6364a6142d3c1d5b9">SetNLimbs</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01026"/>01026 &#32;&#32;_xmpinteger2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad6218b2f38d8e5329568d0689e0683dc">SetLimbs</link>(pointer);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01027"/>01027 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01028"/>01028 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(xmpinteger,&#32;&amp;_xmpinteger2);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01029"/>01029 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01030"/>01030 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01031"/>01031 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01044"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abe896e526933c23a2f57049db1ac0d71">01044</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">XMPINTEGER::SubtractionSigned</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger,&#32;<emphasis role="keywordtype">int</emphasis>&#32;integer)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01045"/>01045 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01046"/>01046 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;_xmpinteger2;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01047"/>01047 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;&#32;&#32;&#32;&#32;&#32;pointer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01048"/>01048 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01049"/>01049 &#32;(*pointer)&#32;=&#32;(integer&#32;&lt;&#32;0&#32;)&#32;?&#32;-integer&#32;:&#32;integer;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01050"/>01050 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01051"/>01051 &#32;&#32;_xmpinteger2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>((&#32;integer&#32;&lt;&#32;0&#32;)&#32;?&#32;-1&#32;:&#32;1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01052"/>01052 &#32;&#32;_xmpinteger2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab4f80712e219e4e6364a6142d3c1d5b9">SetNLimbs</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01053"/>01053 &#32;&#32;_xmpinteger2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad6218b2f38d8e5329568d0689e0683dc">SetLimbs</link>(pointer);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01054"/>01054 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01055"/>01055 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(xmpinteger,&#32;&amp;_xmpinteger2));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01056"/>01056 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01057"/>01057 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01058"/>01058 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01071"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">01071</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">XMPINTEGER::Multiplication</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger1,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger2)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01072"/>01072 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01073"/>01073 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01074"/>01074 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01075"/>01075 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;TA;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01076"/>01076 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;TB;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01077"/>01077 <emphasis role="comment">//bool&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;true;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01078"/>01078 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01079"/>01079 &#32;&#32;TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01080"/>01080 &#32;&#32;TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01081"/>01081 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01082"/>01082 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>&#32;==&#32;xmpinteger1)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01083"/>01083 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(xmpinteger1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01085"/>01085 &#32;&#32;&#32;&#32;&#32;&#32;xmpinteger1&#32;=&#32;&amp;TA;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01086"/>01086 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01087"/>01087 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01088"/>01088 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<emphasis role="keyword">this</emphasis>&#32;==&#32;xmpinteger2)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01089"/>01089 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01090"/>01090 &#32;&#32;&#32;&#32;&#32;&#32;TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(xmpinteger2);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;xmpinteger2&#32;=&#32;&amp;TB;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01092"/>01092 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01093"/>01093 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01094"/>01094 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>();&#32;i&gt;0;&#32;i--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01095"/>01095 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;1]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01097"/>01097 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01098"/>01098 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01099"/>01099 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>();&#32;j&gt;0;&#32;j--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01100"/>01100 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01101"/>01101 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[j&#32;-&#32;1]&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01102"/>01102 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01103"/>01103 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01104"/>01104 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(i&#32;+&#32;j))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01105"/>01105 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01106"/>01106 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01107"/>01107 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i++;&#32;j&#32;&gt;&#32;0;&#32;j--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01108"/>01108 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;MultiplicationHelper(&#32;i&#32;-&#32;1,&#32;xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()&#32;+&#32;j&#32;-&#32;1,&#32;xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[j&#32;-&#32;1]);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01110"/>01110 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01111"/>01111 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01112"/>01112 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(xmpinteger1-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;*&#32;xmpinteger2-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>());
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01113"/>01113 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01114"/>01114 &#32;&#32;TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01115"/>01115 &#32;&#32;TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01116"/>01116 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01117"/>01117 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01118"/>01118 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01119"/>01119 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01120"/>01120 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01133"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a5cecab6ac254125c6a0305b0984f9ece">01133</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">XMPINTEGER::Multiplication</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpinteger,&#32;<emphasis role="keywordtype">int</emphasis>&#32;integer)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01134"/>01134 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01135"/>01135 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;_xmpinteger;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01136"/>01136 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;&#32;&#32;&#32;&#32;&#32;pointer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01137"/>01137 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01138"/>01138 &#32;&#32;_xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01139"/>01139 &#32;&#32;_xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab4f80712e219e4e6364a6142d3c1d5b9">SetNLimbs</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01140"/>01140 &#32;&#32;_xmpinteger.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad6218b2f38d8e5329568d0689e0683dc">SetLimbs</link>(pointer);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01141"/>01141 &#32;&#32;(*pointer)&#32;=&#32;integer;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01142"/>01142 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01143"/>01143 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(xmpinteger,&#32;&amp;_xmpinteger);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01144"/>01144 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01145"/>01145 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01146"/>01146 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01161"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6a235d588c815a00cfc947abf7ee5cef">01161</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6a235d588c815a00cfc947abf7ee5cef">XMPINTEGER::Division</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerQ,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerR,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerA,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerB)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01162"/>01162 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01163"/>01163 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01164"/>01164 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01165"/>01165 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;t;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01166"/>01166 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01167"/>01167 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01168"/>01168 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;X;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01169"/>01169 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;Y;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01170"/>01170 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;Z;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01171"/>01171 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;T1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01172"/>01172 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;T2;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01173"/>01173 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01174"/>01174 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmpintegerB-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01175"/>01175 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01176"/>01176 &#32;&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01177"/>01177 &#32;&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01178"/>01178 &#32;&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01179"/>01179 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01180"/>01180 &#32;&#32;T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01181"/>01181 &#32;&#32;T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01182"/>01182 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01183"/>01183 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpintegerA-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2cfd05e7f51f0863995409222fe35cf">CompareABSValues</link>((*xmpintegerB))&#32;&lt;&#32;0&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01184"/>01184 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xmpintegerQ&#32;!=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmpintegerQ-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01188"/>01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01189"/>01189 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xmpintegerR&#32;!=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01192"/>01192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmpintegerR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(xmpintegerA))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01194"/>01194 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01196"/>01196 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01197"/>01197 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01198"/>01198 &#32;&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(xmpintegerA);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01199"/>01199 &#32;&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(xmpintegerB);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01200"/>01200 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01201"/>01201 &#32;&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01202"/>01202 &#32;&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01203"/>01203 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01204"/>01204 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(xmpintegerA-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;+&#32;2&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01205"/>01205 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01206"/>01206 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(2))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01207"/>01207 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(3))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01208"/>01208 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01209"/>01209 &#32;&#32;k&#32;=&#32;(Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;%&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01210"/>01210 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(k&#32;&lt;&#32;(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;-&#32;1))
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01211"/>01211 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;k&#32;=&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;-&#32;1&#32;-&#32;k;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01213"/>01213 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">LeftShift</link>(k))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01215"/>01215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">LeftShift</link>(k))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01216"/>01216 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01217"/>01217 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;k&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01218"/>01218 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01219"/>01219 &#32;&#32;n&#32;=&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;-&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01220"/>01220 &#32;&#32;t&#32;=&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;-&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01221"/>01221 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">LeftShift</link>(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;*&#32;(n&#32;-&#32;t)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01222"/>01222 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01223"/>01223 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(Y)&#32;&gt;=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01224"/>01224 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01225"/>01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[n&#32;-&#32;t]++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;X,&#32;&amp;Y))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01227"/>01227 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01228"/>01228 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01229"/>01229 &#32;&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;*&#32;(n&#32;-&#32;t));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01230"/>01230 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01231"/>01231 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i&#32;=&#32;n;&#32;i&#32;&gt;&#32;t&#32;;&#32;i--&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01232"/>01232 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i]&#32;&gt;=&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[t]&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01235"/>01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;t&#32;-&#32;1]&#32;=&#32;~0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01237"/>01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01238"/>01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a00861ce075605e9651d0e6b48de040c3">XUDBL</link>&#32;r;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01240"/>01240 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;&#32;=&#32;(<link linkend="__x_m_p_integer_8h_1a00861ce075605e9651d0e6b48de040c3">XUDBL</link>)&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i]&#32;&lt;&lt;&#32;&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;|=&#32;(<link linkend="__x_m_p_integer_8h_1a00861ce075605e9651d0e6b48de040c3">XUDBL</link>)&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;1];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;/=&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[t];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01244"/>01244 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01245"/>01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(r&gt;((<link linkend="__x_m_p_integer_8h_1a00861ce075605e9651d0e6b48de040c3">XUDBL</link>)&#32;1&#32;&lt;&lt;&#32;&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>)-1)&#32;&#32;r&#32;=&#32;((<link linkend="__x_m_p_integer_8h_1a00861ce075605e9651d0e6b48de040c3">XUDBL</link>)&#32;1&#32;&lt;&lt;&#32;&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>)&#32;-&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01246"/>01246 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01247"/>01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;t&#32;-&#32;1]&#32;=&#32;(<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>)&#32;r;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01249"/>01249 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01250"/>01250 &#32;&#32;&#32;&#32;&#32;&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;t&#32;-&#32;1]++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01251"/>01251 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;t&#32;-&#32;1]--;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01253"/>01253 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01255"/>01255 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;=&#32;(t&#32;&lt;&#32;1)&#32;?&#32;0&#32;:&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[t&#32;-&#32;1];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01257"/>01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[1]&#32;=&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[t];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01258"/>01258 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;T1,&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;t&#32;-&#32;1]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01260"/>01260 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01262"/>01262 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01263"/>01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;=&#32;(i&#32;&lt;&#32;2)&#32;?&#32;0&#32;:&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;2];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[1]&#32;=&#32;(i&#32;&lt;&#32;1)&#32;?&#32;0&#32;:&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;1];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[2]&#32;=&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01266"/>01266 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01267"/>01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(T2)&#32;&gt;&#32;0&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01268"/>01268 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01269"/>01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;Y,&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;t&#32;-&#32;1]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01270"/>01270 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01271"/>01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">LeftShift</link>(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;*&#32;(i&#32;-&#32;t&#32;-&#32;1)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01272"/>01272 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01273"/>01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;X,&#32;&amp;T1&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01274"/>01274 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01275"/>01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;&lt;&#32;0&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01276"/>01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01277"/>01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;Y))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01278"/>01278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">LeftShift</link>(<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;*&#32;(i&#32;-&#32;t&#32;-&#32;1)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01279"/>01279 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(&amp;X,&#32;&amp;T1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01281"/>01281 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;t&#32;-&#32;1]--;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01284"/>01284 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01285"/>01285 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01286"/>01286 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpintegerQ&#32;!=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01287"/>01287 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01288"/>01288 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmpintegerQ-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;Z))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01289"/>01289 &#32;&#32;&#32;&#32;&#32;&#32;xmpintegerQ-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(xmpintegerA-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;*&#32;xmpintegerB-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>());
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01290"/>01290 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01291"/>01291 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01292"/>01292 &#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpintegerR&#32;!=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01293"/>01293 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01294"/>01294 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(k))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(xmpintegerA-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>());
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01296"/>01296 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmpintegerR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;X))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01298"/>01298 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpintegerR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)==0)&#32;&#32;xmpintegerR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01300"/>01300 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01301"/>01301 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01302"/>01302 &#32;&#32;X.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01303"/>01303 &#32;&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01304"/>01304 &#32;&#32;Z.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01305"/>01305 &#32;&#32;T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01306"/>01306 &#32;&#32;T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01307"/>01307 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01308"/>01308 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01309"/>01309 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01310"/>01310 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01311"/>01311 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01326"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a175e9695c8bca949dc9970657719908d">01326</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6a235d588c815a00cfc947abf7ee5cef">XMPINTEGER::Division</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerQ,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerR,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerA,&#32;<emphasis role="keywordtype">int</emphasis>&#32;integerb)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01327"/>01327 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01328"/>01328 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;_B;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01329"/>01329 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;&#32;&#32;&#32;&#32;&#32;pointer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01330"/>01330 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01331"/>01331 &#32;&#32;(*pointer)&#32;=&#32;(&#32;integerb&#32;&lt;&#32;0&#32;)&#32;?&#32;-integerb&#32;:&#32;integerb;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01332"/>01332 &#32;&#32;_B.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>((&#32;integerb&#32;&lt;&#32;0&#32;)&#32;?&#32;-1&#32;:&#32;1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01333"/>01333 &#32;&#32;_B.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab4f80712e219e4e6364a6142d3c1d5b9">SetNLimbs</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01334"/>01334 &#32;&#32;_B.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad6218b2f38d8e5329568d0689e0683dc">SetLimbs</link>(pointer);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01335"/>01335 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01336"/>01336 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6a235d588c815a00cfc947abf7ee5cef">Division</link>(&#32;xmpintegerQ,&#32;xmpintegerR,&#32;xmpintegerA,&#32;&amp;_B&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01337"/>01337 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01338"/>01338 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01339"/>01339 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01353"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">01353</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">XMPINTEGER::Module</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerR,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerA,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerB)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01354"/>01354 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01355"/>01355 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xmpintegerB-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01356"/>01356 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01357"/>01357 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6a235d588c815a00cfc947abf7ee5cef">Division</link>(&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;xmpintegerR,&#32;xmpintegerA,&#32;xmpintegerB&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01358"/>01358 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01359"/>01359 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(xmpintegerR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;&lt;&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01360"/>01360 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmpintegerR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(xmpintegerR,&#32;xmpintegerB))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01362"/>01362 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01363"/>01363 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01364"/>01364 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(xmpintegerR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>((*xmpintegerB))&#32;&gt;=&#32;0&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01365"/>01365 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xmpintegerR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(xmpintegerR,&#32;xmpintegerB))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01367"/>01367 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01368"/>01368 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01369"/>01369 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01370"/>01370 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01371"/>01371 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01372"/>01372 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01386"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a68f137b7c948d3f46638a387d7e4d40e">01386</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">XMPINTEGER::Module</link>(<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;r,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;xmpintegerA,&#32;<emphasis role="keywordtype">int</emphasis>&#32;integerb)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01387"/>01387 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01388"/>01388 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;x,&#32;y,&#32;z;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01389"/>01389 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01390"/>01390 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01391"/>01391 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(integerb&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01392"/>01392 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(integerb&#32;&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01393"/>01393 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01394"/>01394 &#32;&#32;<emphasis role="comment">//&#32;handle&#32;trivial&#32;cases</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01395"/>01395 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01396"/>01396 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(integerb&#32;==&#32;1&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01397"/>01397 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;(*r)&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01399"/>01399 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01400"/>01400 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01401"/>01401 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01402"/>01402 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(integerb&#32;==&#32;2&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01403"/>01403 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01404"/>01404 &#32;&#32;&#32;&#32;&#32;&#32;(*r)&#32;=&#32;xmpintegerA-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01406"/>01406 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01407"/>01407 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01408"/>01408 &#32;&#32;<emphasis role="comment">//&#32;general&#32;case</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01409"/>01409 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;xmpintegerA-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>(),&#32;y=0;&#32;i&gt;0;&#32;i--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01410"/>01410 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01411"/>01411 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;&#32;=&#32;xmpintegerA-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i&#32;-&#32;1];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01412"/>01412 &#32;&#32;&#32;&#32;&#32;&#32;y&#32;&#32;=&#32;(&#32;y&#32;&lt;&lt;&#32;<link linkend="__x_m_p_integer_8h_1ac9a048968e70268e8eddbb1700318c66">XMPINTEGER_HALFLIMBSIZE</link>&#32;)&#32;|&#32;(&#32;x&#32;&gt;&gt;&#32;<link linkend="__x_m_p_integer_8h_1ac9a048968e70268e8eddbb1700318c66">XMPINTEGER_HALFLIMBSIZE</link>&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01413"/>01413 &#32;&#32;&#32;&#32;&#32;&#32;z&#32;&#32;=&#32;y&#32;/&#32;integerb;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01414"/>01414 &#32;&#32;&#32;&#32;&#32;&#32;y&#32;-=&#32;z&#32;*&#32;integerb;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01415"/>01415 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01416"/>01416 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;&lt;&lt;=&#32;<link linkend="__x_m_p_integer_8h_1ac9a048968e70268e8eddbb1700318c66">XMPINTEGER_HALFLIMBSIZE</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;y&#32;&#32;=&#32;(&#32;y&#32;&lt;&lt;&#32;<link linkend="__x_m_p_integer_8h_1ac9a048968e70268e8eddbb1700318c66">XMPINTEGER_HALFLIMBSIZE</link>&#32;)&#32;|&#32;(&#32;x&#32;&gt;&gt;&#32;<link linkend="__x_m_p_integer_8h_1ac9a048968e70268e8eddbb1700318c66">XMPINTEGER_HALFLIMBSIZE</link>&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01418"/>01418 &#32;&#32;&#32;&#32;&#32;&#32;z&#32;&#32;=&#32;y&#32;/&#32;integerb;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01419"/>01419 &#32;&#32;&#32;&#32;&#32;&#32;y&#32;-=&#32;z&#32;*&#32;integerb;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01420"/>01420 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01421"/>01421 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01422"/>01422 &#32;&#32;<emphasis role="comment">//&#32;If&#32;A&#32;is&#32;negative,&#32;then&#32;the&#32;current&#32;y&#32;represents&#32;a&#32;negative&#32;value.&#32;Flipping&#32;it&#32;to&#32;the&#32;positive&#32;side.</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01423"/>01423 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01424"/>01424 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;xmpintegerA-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;&lt;&#32;0&#32;&amp;&amp;&#32;y&#32;!=&#32;0&#32;)&#32;y&#32;=&#32;(integerb&#32;-&#32;y);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01425"/>01425 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01426"/>01426 &#32;&#32;*r&#32;=&#32;y;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01427"/>01427 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01428"/>01428 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01429"/>01429 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01430"/>01430 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01431"/>01431 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01444"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a23ae81e30c8041fb0453f4ac82c78e40">01444</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a23ae81e30c8041fb0453f4ac82c78e40">XMPINTEGER::MontgomeryIni</link>(<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;*mm,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;N)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01445"/>01445 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01446"/>01446 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;x;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01447"/>01447 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;m0&#32;=&#32;N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01448"/>01448 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01449"/>01449 &#32;&#32;x&#32;&#32;=&#32;m0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01450"/>01450 &#32;&#32;x&#32;+=&#32;(&#32;(&#32;m0&#32;+&#32;2&#32;)&#32;&amp;&#32;4&#32;)&#32;&lt;&lt;&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01451"/>01451 &#32;&#32;x&#32;*=&#32;(&#32;2&#32;-&#32;(&#32;m0&#32;*&#32;x&#32;)&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01452"/>01452 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01453"/>01453 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;&gt;=&#32;16&#32;)&#32;x&#32;*=&#32;(&#32;2&#32;-&#32;(&#32;m0&#32;*&#32;x&#32;)&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01454"/>01454 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;&gt;=&#32;32&#32;)&#32;x&#32;*=&#32;(&#32;2&#32;-&#32;(&#32;m0&#32;*&#32;x&#32;)&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01455"/>01455 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>&#32;&gt;=&#32;64&#32;)&#32;x&#32;*=&#32;(&#32;2&#32;-&#32;(&#32;m0&#32;*&#32;x&#32;)&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01456"/>01456 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01457"/>01457 &#32;&#32;*mm&#32;=&#32;~x&#32;+&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01458"/>01458 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01459"/>01459 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01460"/>01460 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01476"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">01476</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">XMPINTEGER::MontgomeryMultiplication</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;A,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;B,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;N,&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;mm,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;T)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01477"/>01477 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01478"/>01478 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;&#32;u0,&#32;u1,&#32;*d;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01479"/>01479 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;i&#32;,&#32;n&#32;,&#32;m;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01480"/>01480 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01481"/>01481 &#32;&#32;memset(&#32;T-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;0,&#32;T-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01482"/>01482 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01483"/>01483 &#32;&#32;d&#32;=&#32;T-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01484"/>01484 &#32;&#32;n&#32;=&#32;N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01485"/>01485 &#32;&#32;m&#32;=&#32;(B-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;&lt;&#32;n)&#32;?&#32;B-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;:&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01486"/>01486 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01487"/>01487 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;n;&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01488"/>01488 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01489"/>01489 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;T&#32;=&#32;(T&#32;+&#32;u0*B&#32;+&#32;u1*N)&#32;/&#32;2^XMPINTEGER_BITSINLIMB</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01490"/>01490 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01491"/>01491 &#32;&#32;&#32;&#32;&#32;&#32;u0&#32;=&#32;A-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01492"/>01492 &#32;&#32;&#32;&#32;&#32;&#32;u1&#32;=&#32;(&#32;d[0]&#32;+&#32;u0&#32;*&#32;B-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;)&#32;*&#32;mm;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01493"/>01493 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01494"/>01494 &#32;&#32;&#32;&#32;&#32;&#32;MultiplicationHelper(&#32;m,&#32;B-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;d,&#32;u0&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01495"/>01495 &#32;&#32;&#32;&#32;&#32;&#32;MultiplicationHelper(&#32;n,&#32;N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;d,&#32;u1&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01496"/>01496 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01497"/>01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;*d++&#32;=&#32;u0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01498"/>01498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;d[n&#32;+&#32;1]&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01499"/>01499 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01500"/>01500 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01501"/>01501 &#32;&#32;memcpy(A-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;d,&#32;(n&#32;+&#32;1)&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01502"/>01502 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01503"/>01503 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(A-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2cfd05e7f51f0863995409222fe35cf">CompareABSValues</link>((*N))&gt;=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01504"/>01504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SubtractionHelper(n,&#32;N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;A-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>());
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01505"/>01505 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;SubtractionHelper(n,&#32;A-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;T-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>());<emphasis role="comment">/*&#32;prevent&#32;timing&#32;attacks&#32;*/</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01506"/>01506 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01507"/>01507 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01508"/>01508 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01523"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8c09f142000d00ab1c7a9ebe62a84c33">01523</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8c09f142000d00ab1c7a9ebe62a84c33">XMPINTEGER::MontgomeryReduction</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;A,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;N,&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;mm,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;T)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01524"/>01524 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01525"/>01525 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01526"/>01526 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;U;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01527"/>01527 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01528"/>01528 &#32;&#32;(*z)&#32;=&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01529"/>01529 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01530"/>01530 &#32;&#32;U.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab4f80712e219e4e6364a6142d3c1d5b9">SetNLimbs</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01531"/>01531 &#32;&#32;U.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01532"/>01532 &#32;&#32;U.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad6218b2f38d8e5329568d0689e0683dc">SetLimbs</link>(z);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01533"/>01533 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01534"/>01534 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">MontgomeryMultiplication</link>(&#32;A,&#32;&amp;U,&#32;N,&#32;mm,&#32;T&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01535"/>01535 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01536"/>01536 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01537"/>01537 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01552"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a54122d8e6604b19f34d973c59e43e8e9">01552</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a54122d8e6604b19f34d973c59e43e8e9">XMPINTEGER::SlidingWindowExponentiation</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;A,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;E,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;N,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;_RR)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01553"/>01553 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01554"/>01554 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;wbits,&#32;wsize,&#32;one&#32;=&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01555"/>01555 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;i,&#32;j,&#32;nblimbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01556"/>01556 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;bufsize,&#32;nbits;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01557"/>01557 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;ei,&#32;mm,&#32;state;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01558"/>01558 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;RR;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01559"/>01559 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;T;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01560"/>01560 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;W[2&#32;&lt;&lt;&#32;<link linkend="__x_m_p_integer_8h_1aef15426a6ade40b8720b38a6b31804fc">XMPINTEGER_WINDOWSIZE</link>];
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01561"/>01561 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;Apos;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01562"/>01562 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;neg;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01563"/>01563 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01564"/>01564 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;&lt;&#32;0&#32;||&#32;(&#32;N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1&#32;)&#32;==&#32;0&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01565"/>01565 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(E-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;&lt;&#32;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01566"/>01566 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01567"/>01567 &#32;&#32;<emphasis role="comment">//Init&#32;temps&#32;and&#32;window&#32;size</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01568"/>01568 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01569"/>01569 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a23ae81e30c8041fb0453f4ac82c78e40">MontgomeryIni</link>(&#32;&amp;mm,&#32;N&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01570"/>01570 &#32;&#32;RR.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01571"/>01571 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01572"/>01572 &#32;&#32;Apos.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01573"/>01573 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01574"/>01574 &#32;&#32;memset((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)W,&#32;0,&#32;<emphasis role="keyword">sizeof</emphasis>(W));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01575"/>01575 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01576"/>01576 &#32;&#32;i&#32;=&#32;E-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01577"/>01577 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01578"/>01578 &#32;&#32;wsize&#32;=&#32;(&#32;i&#32;&gt;&#32;671&#32;)&#32;?&#32;6&#32;:&#32;(&#32;i&#32;&gt;&#32;239&#32;)&#32;?&#32;5&#32;:
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01579"/>01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;i&#32;&gt;&#32;&#32;79&#32;)&#32;?&#32;4&#32;:&#32;(&#32;i&#32;&gt;&#32;&#32;23&#32;)&#32;?&#32;3&#32;:&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01580"/>01580 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01581"/>01581 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(wsize&#32;&gt;&#32;<link linkend="__x_m_p_integer_8h_1aef15426a6ade40b8720b38a6b31804fc">XMPINTEGER_WINDOWSIZE</link>)&#32;wsize&#32;=&#32;<link linkend="__x_m_p_integer_8h_1aef15426a6ade40b8720b38a6b31804fc">XMPINTEGER_WINDOWSIZE</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01582"/>01582 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01583"/>01583 &#32;&#32;j&#32;=&#32;N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;+&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01584"/>01584 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01585"/>01585 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(j))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01586"/>01586 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!W[1].<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(j))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01587"/>01587 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(j*2))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01588"/>01588 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01589"/>01589 &#32;&#32;<emphasis role="comment">//&#32;Compensate&#32;for&#32;negative&#32;A&#32;(and&#32;correct&#32;at&#32;the&#32;end)</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01590"/>01590 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01591"/>01591 &#32;&#32;neg&#32;=&#32;(&#32;A-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;==&#32;-1&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01592"/>01592 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(neg)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01593"/>01593 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01594"/>01594 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Apos.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(A))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01595"/>01595 &#32;&#32;&#32;&#32;&#32;&#32;Apos.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01596"/>01596 &#32;&#32;&#32;&#32;&#32;&#32;A&#32;=&#32;&amp;Apos;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01597"/>01597 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01598"/>01598 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01599"/>01599 &#32;&#32;<emphasis role="comment">//&#32;If&#32;1st&#32;call,&#32;pre-compute&#32;R^2&#32;mod&#32;N</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01600"/>01600 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01601"/>01601 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;_RR&#32;==&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;||&#32;_RR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()&#32;==&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01602"/>01602 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01603"/>01603 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!RR.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01604"/>01604 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!RR.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">LeftShift</link>(N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;*&#32;2&#32;*&#32;<link linkend="__x_m_p_integer_8h_1adb4b955e0ae0cc2a6f856a751cbfe157">XMPINTEGER_BITSINLIMB</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01605"/>01605 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!RR.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;RR,&#32;&amp;RR,&#32;N))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01606"/>01606 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;_RR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;RR);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01608"/>01608 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01609"/>01609 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_RR&#32;!=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;_RR-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;RR);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01610"/>01610 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01611"/>01611 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;RR.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(_RR);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01612"/>01612 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01613"/>01613 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;W[1]&#32;=&#32;A&#32;*&#32;R^2&#32;*&#32;R^-1&#32;mod&#32;N&#32;=&#32;A&#32;*&#32;R&#32;mod&#32;N</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01614"/>01614 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01615"/>01615 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(A-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>((*N))&#32;&gt;=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01616"/>01616 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01617"/>01617 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&#32;&amp;W[1],&#32;A,&#32;N&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01618"/>01618 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01619"/>01619 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01620"/>01620 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01621"/>01621 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!W[1].<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(A))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01622"/>01622 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01623"/>01623 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01624"/>01624 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">MontgomeryMultiplication</link>(&amp;W[1],&#32;&amp;RR,&#32;N,&#32;mm,&#32;&amp;T);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01625"/>01625 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01626"/>01626 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;X&#32;=&#32;R^2&#32;*&#32;R^-1&#32;mod&#32;N&#32;=&#32;R&#32;mod&#32;N</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01627"/>01627 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01628"/>01628 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;RR))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01629"/>01629 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8c09f142000d00ab1c7a9ebe62a84c33">MontgomeryReduction</link>(<emphasis role="keyword">this</emphasis>,&#32;N,&#32;mm,&#32;&amp;T);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01630"/>01630 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01631"/>01631 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(wsize&#32;&gt;&#32;1)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01632"/>01632 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01633"/>01633 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;W[1&#32;&lt;&lt;&#32;(wsize&#32;-&#32;1)]&#32;=&#32;W[1]&#32;^&#32;(wsize&#32;-&#32;1)</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01634"/>01634 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01635"/>01635 &#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;&#32;one&#32;&lt;&lt;&#32;(wsize&#32;-&#32;1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01636"/>01636 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01637"/>01637 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!W[j].<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;+&#32;1))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01638"/>01638 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01639"/>01639 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!W[j].<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;W[1]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01640"/>01640 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01641"/>01641 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;wsize&#32;-&#32;1;&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01642"/>01642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01643"/>01643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">MontgomeryMultiplication</link>(&#32;&amp;W[j],&#32;&amp;W[j],&#32;N,&#32;mm,&#32;&amp;T);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01644"/>01644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01645"/>01645 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01646"/>01646 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;W[i]&#32;=&#32;W[i&#32;-&#32;1]&#32;*&#32;W[1]</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01647"/>01647 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01648"/>01648 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;j&#32;+&#32;1;&#32;i&#32;&lt;&#32;(one&#32;&lt;&lt;&#32;wsize);&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01649"/>01649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01650"/>01650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!W[i].<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()&#32;+&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01651"/>01651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!W[i].<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;W[i-1]))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01652"/>01652 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01653"/>01653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">MontgomeryMultiplication</link>(&#32;&amp;W[i],&#32;&amp;W[1],&#32;N,&#32;mm,&#32;&amp;T);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01654"/>01654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01655"/>01655 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01656"/>01656 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01657"/>01657 &#32;&#32;nblimbs&#32;=&#32;E-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01658"/>01658 &#32;&#32;bufsize&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01659"/>01659 &#32;&#32;nbits&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01660"/>01660 &#32;&#32;wbits&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01661"/>01661 &#32;&#32;state&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01662"/>01662 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01663"/>01663 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(1)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01664"/>01664 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01665"/>01665 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bufsize&#32;==&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01666"/>01666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01667"/>01667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(nblimbs&#32;==&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01668"/>01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nblimbs--;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01669"/>01669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bufsize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;)&#32;&lt;&lt;&#32;3;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01670"/>01670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01671"/>01671 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01672"/>01672 &#32;&#32;&#32;&#32;&#32;&#32;bufsize--;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01673"/>01673 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01674"/>01674 &#32;&#32;&#32;&#32;&#32;&#32;ei&#32;=&#32;(E-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[nblimbs]&#32;&gt;&gt;&#32;bufsize)&#32;&amp;&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01675"/>01675 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01676"/>01676 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;leading&#32;0s</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01677"/>01677 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ei&#32;==&#32;0&#32;&amp;&amp;&#32;state&#32;==&#32;0)&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01678"/>01678 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ei&#32;==&#32;0&#32;&amp;&amp;&#32;state&#32;==&#32;1)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01679"/>01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01680"/>01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;out&#32;of&#32;window,&#32;square&#32;X</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01681"/>01681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">MontgomeryMultiplication</link>(<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">this</emphasis>,&#32;N,&#32;mm,&#32;&amp;T&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01682"/>01682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01683"/>01683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01684"/>01684 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01685"/>01685 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;add&#32;ei&#32;to&#32;current&#32;window</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01686"/>01686 &#32;&#32;&#32;&#32;&#32;&#32;state&#32;=&#32;2;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01687"/>01687 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01688"/>01688 &#32;&#32;&#32;&#32;&#32;&#32;nbits++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01689"/>01689 &#32;&#32;&#32;&#32;&#32;&#32;wbits&#32;|=&#32;(ei&#32;&lt;&lt;&#32;(wsize&#32;-&#32;nbits));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01690"/>01690 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01691"/>01691 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(nbits&#32;==&#32;wsize)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01692"/>01692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01693"/>01693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;X&#32;=&#32;X^wsize&#32;R^-1&#32;mod&#32;N</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01694"/>01694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;wsize;&#32;i++&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01695"/>01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01696"/>01696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">MontgomeryMultiplication</link>(<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">this</emphasis>,&#32;N,&#32;mm,&#32;&amp;T);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01697"/>01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01698"/>01698 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01699"/>01699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;X&#32;=&#32;X&#32;*&#32;W[wbits]&#32;R^-1&#32;mod&#32;N</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01700"/>01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">MontgomeryMultiplication</link>(<emphasis role="keyword">this</emphasis>,&#32;&amp;W[wbits],&#32;N,&#32;mm,&#32;&amp;T);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01701"/>01701 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01702"/>01702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state--;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01703"/>01703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nbits&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01704"/>01704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wbits&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01705"/>01705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01706"/>01706 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01707"/>01707 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01708"/>01708 &#32;&#32;<emphasis role="comment">//&#32;process&#32;the&#32;remaining&#32;bits</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01709"/>01709 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;nbits;&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01710"/>01710 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01711"/>01711 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">MontgomeryMultiplication</link>(<emphasis role="keyword">this</emphasis>,&#32;<emphasis role="keyword">this</emphasis>,&#32;N,&#32;mm,&#32;&amp;T);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01712"/>01712 &#32;&#32;&#32;&#32;&#32;&#32;wbits&#32;&lt;&lt;=&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01713"/>01713 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((wbits&#32;&amp;&#32;(one&#32;&lt;&lt;&#32;wsize))&#32;!=&#32;0)&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8addba3a657bfa1910056d05f6097c3d">MontgomeryMultiplication</link>(<emphasis role="keyword">this</emphasis>,&#32;&amp;W[1],&#32;N,&#32;mm,&#32;&amp;T);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01714"/>01714 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01715"/>01715 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01716"/>01716 &#32;&#32;<emphasis role="comment">//&#32;X&#32;=&#32;A^E&#32;*&#32;R&#32;*&#32;R^-1&#32;mod&#32;N&#32;=&#32;A^E&#32;mod&#32;N</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01717"/>01717 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a8c09f142000d00ab1c7a9ebe62a84c33">MontgomeryReduction</link>(<emphasis role="keyword">this</emphasis>,&#32;N,&#32;mm,&#32;&amp;T);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01718"/>01718 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01719"/>01719 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(neg)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01720"/>01720 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01721"/>01721 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(-1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01722"/>01722 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(N,&#32;<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01723"/>01723 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01724"/>01724 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01725"/>01725 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;(one&#32;&lt;&lt;&#32;(wsize&#32;-&#32;1));&#32;i&#32;&lt;&#32;(one&#32;&lt;&lt;&#32;wsize);&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01726"/>01726 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01727"/>01727 &#32;&#32;&#32;&#32;&#32;&#32;W[i].<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01728"/>01728 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01729"/>01729 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01730"/>01730 &#32;&#32;W[1].<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01731"/>01731 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01732"/>01732 &#32;&#32;Apos.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01733"/>01733 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01734"/>01734 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(_RR&#32;==&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;RR.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01735"/>01735 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01736"/>01736 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01737"/>01737 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01738"/>01738 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01739"/>01739 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01753"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a647be123d365bb1a9c8f0737dc0f1770">01753</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a647be123d365bb1a9c8f0737dc0f1770">XMPINTEGER::GreatestCommonDivisor</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;G,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;A,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;B)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01754"/>01754 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01755"/>01755 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;lz;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01756"/>01756 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;lzt;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01757"/>01757 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;TG;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01758"/>01758 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;TA;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01759"/>01759 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;TB;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01760"/>01760 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01761"/>01761 &#32;&#32;TG.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01762"/>01762 &#32;&#32;TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01763"/>01763 &#32;&#32;TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01764"/>01764 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01765"/>01765 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(A))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01766"/>01766 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(B))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01767"/>01767 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01768"/>01768 &#32;&#32;lz&#32;&#32;=&#32;TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a998e00885ae19da08d6e5df3f5184f35">GetLSB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01769"/>01769 &#32;&#32;lzt&#32;=&#32;TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a998e00885ae19da08d6e5df3f5184f35">GetLSB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01770"/>01770 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01771"/>01771 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(lzt&lt;lz)&#32;lz&#32;=&#32;lzt;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01772"/>01772 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01773"/>01773 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(lz))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01774"/>01774 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(lz))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01775"/>01775 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01776"/>01776 &#32;&#32;TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01777"/>01777 &#32;&#32;TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01778"/>01778 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01779"/>01779 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;!=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01780"/>01780 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01781"/>01781 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a998e00885ae19da08d6e5df3f5184f35">GetLSB</link>()))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01782"/>01782 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a998e00885ae19da08d6e5df3f5184f35">GetLSB</link>()))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01783"/>01783 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01784"/>01784 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(TB)&#32;&gt;=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01785"/>01785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01786"/>01786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a19b1408dabe209f42ed797491d431b82">SubtractionABS</link>(&amp;TA,&#32;&amp;TB))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01787"/>01787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01788"/>01788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01789"/>01789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01790"/>01790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01791"/>01791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a19b1408dabe209f42ed797491d431b82">SubtractionABS</link>(&amp;TB,&#32;&amp;TA))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01792"/>01792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01793"/>01793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01794"/>01794 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01795"/>01795 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01796"/>01796 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">LeftShift</link>(lz))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01797"/>01797 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!G-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;TB))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01798"/>01798 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01799"/>01799 &#32;&#32;TG.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01800"/>01800 &#32;&#32;TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01801"/>01801 &#32;&#32;TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01802"/>01802 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01803"/>01803 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01804"/>01804 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01805"/>01805 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01806"/>01806 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01820"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a60f5ce3976c38dd8058e7ece2643571e">01820</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a60f5ce3976c38dd8058e7ece2643571e">XMPINTEGER::FillRandom</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>&#32;funcrandom,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;paramrandom)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01821"/>01821 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01822"/>01822 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(<link linkend="__x_m_p_integer_8h_1adc97fd5d48aab29051378da6b5b5581b">XMPINTEGER_CHARSTOLIMBS</link>(size)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01823"/>01823 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01824"/>01824 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01825"/>01825 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!funcrandom)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01826"/>01826 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!funcrandom((<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>(),&#32;size,&#32;paramrandom))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01827"/>01827 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01828"/>01828 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01829"/>01829 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01830"/>01830 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01831"/>01831 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01844"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a2dd2b2592596abb4ad9936c198b49e89">01844</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a2dd2b2592596abb4ad9936c198b49e89">XMPINTEGER::ModularInverse</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;A,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;N)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01845"/>01845 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01846"/>01846 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;G;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01847"/>01847 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;TA;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01848"/>01848 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;TU;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01849"/>01849 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;U1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01850"/>01850 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;U2;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01851"/>01851 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;TB;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01852"/>01852 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;TV;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01853"/>01853 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;V1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01854"/>01854 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;V2;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01855"/>01855 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01856"/>01856 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(N-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;&lt;=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01857"/>01857 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01858"/>01858 &#32;&#32;TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01859"/>01859 &#32;&#32;TU.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01860"/>01860 &#32;&#32;U1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01861"/>01861 &#32;&#32;U2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01862"/>01862 &#32;&#32;G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01863"/>01863 &#32;&#32;TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01864"/>01864 &#32;&#32;TV.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01865"/>01865 &#32;&#32;V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01866"/>01866 &#32;&#32;V2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01867"/>01867 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01868"/>01868 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a647be123d365bb1a9c8f0737dc0f1770">GreatestCommonDivisor</link>(&#32;&amp;G,&#32;A,&#32;N&#32;))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01869"/>01869 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01870"/>01870 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;!=&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01871"/>01871 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01872"/>01872 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;TA,&#32;A,&#32;N))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01873"/>01873 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01874"/>01874 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TU.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;TA))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01875"/>01875 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(N))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01876"/>01876 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TV.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(N))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01877"/>01877 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01878"/>01878 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!U1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(1))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01879"/>01879 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!U2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01880"/>01880 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01881"/>01881 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(1))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01882"/>01882 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01883"/>01883 &#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;<emphasis role="keywordflow">while</emphasis>((TU.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1&#32;)&#32;==&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01884"/>01884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01885"/>01885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TU.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01886"/>01886 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01887"/>01887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((U1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1&#32;)!=&#32;0&#32;||&#32;(U2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1&#32;)&#32;!=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01888"/>01888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01889"/>01889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!U1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(&amp;U1,&#32;&amp;TB))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01890"/>01890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!U2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;U2,&#32;&amp;TA))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01891"/>01891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01892"/>01892 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01893"/>01893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!U1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01894"/>01894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!U2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01895"/>01895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01896"/>01896 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01897"/>01897 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>((TV.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1)&#32;==&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01898"/>01898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01899"/>01899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TV.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01900"/>01900 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01901"/>01901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(((V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1&#32;)&#32;!=&#32;0)&#32;||&#32;((V2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1&#32;)&#32;!=&#32;0))
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01902"/>01902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01903"/>01903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(&amp;V1,&#32;&amp;TB&#32;))&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01904"/>01904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;V2,&#32;&amp;TA&#32;))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01905"/>01905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01906"/>01906 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01907"/>01907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01908"/>01908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01909"/>01909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01910"/>01910 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01911"/>01911 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(TU.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(TV)&#32;&gt;=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01912"/>01912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01913"/>01913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TU.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;TU,&#32;&amp;TV))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01914"/>01914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!U1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;U1,&#32;&amp;V1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01915"/>01915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!U2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;U2,&#32;&amp;V2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01916"/>01916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01917"/>01917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01918"/>01918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01919"/>01919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!TV.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;TV,&#32;&amp;TU))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01920"/>01920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;V1,&#32;&amp;U1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01921"/>01921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;V2,&#32;&amp;U2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01922"/>01922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01923"/>01923 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01924"/>01924 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(TU.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;!=&#32;0);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01925"/>01925 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01926"/>01926 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;&lt;&#32;0&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01927"/>01927 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01928"/>01928 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(&amp;V1,&#32;N))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01929"/>01929 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01930"/>01930 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01931"/>01931 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>((*N))&#32;&gt;=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01932"/>01932 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01933"/>01933 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;V1,&#32;N))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01934"/>01934 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01935"/>01935 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01936"/>01936 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;V1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01937"/>01937 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01938"/>01938 &#32;&#32;TA.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01939"/>01939 &#32;&#32;TU.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01940"/>01940 &#32;&#32;U1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01941"/>01941 &#32;&#32;U2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01942"/>01942 &#32;&#32;G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01943"/>01943 &#32;&#32;TB.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01944"/>01944 &#32;&#32;TV.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01945"/>01945 &#32;&#32;V1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01946"/>01946 &#32;&#32;V2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01947"/>01947 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01948"/>01948 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01949"/>01949 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01950"/>01950 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01951"/>01951 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01961"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1afe026431a6f5b663600cd282f4b88d89">01961</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1afe026431a6f5b663600cd282f4b88d89">XMPINTEGER::CheckSmallFactors</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01962"/>01962 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01963"/>01963 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01964"/>01964 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01965"/>01965 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;ret&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01966"/>01966 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01967"/>01967 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1&#32;)&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01968"/>01968 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01969"/>01969 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;SmallPrime[i]&gt;0;&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01970"/>01970 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01971"/>01971 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(SmallPrime[i]&#32;)&#32;&lt;=&#32;0&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01972"/>01972 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01973"/>01973 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;r,&#32;<emphasis role="keyword">this</emphasis>,&#32;SmallPrime[i]))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01974"/>01974 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01975"/>01975 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(r==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01976"/>01976 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01977"/>01977 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01978"/>01978 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;ret;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01979"/>01979 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01980"/>01980 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01981"/>01981 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01995"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a68f300c9f7bf74ee01a526f3844c63f9">01995</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a68f300c9f7bf74ee01a526f3844c63f9">XMPINTEGER::MillerRabin</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;X,&#32;<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>&#32;funcrandom,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;paramrandom)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01996"/>01996 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01997"/>01997 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;W;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01998"/>01998 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;R;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l01999"/>01999 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;T;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02000"/>02000 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;A;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02001"/>02001 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;RR;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02002"/>02002 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02003"/>02003 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02004"/>02004 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02005"/>02005 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;s;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02006"/>02006 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02007"/>02007 &#32;&#32;W.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02008"/>02008 &#32;&#32;R.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02009"/>02009 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02010"/>02010 &#32;&#32;A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02011"/>02011 &#32;&#32;RR.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02012"/>02012 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02013"/>02013 &#32;&#32;<emphasis role="comment">//&#32;W&#32;=&#32;|X|&#32;-&#32;1</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02014"/>02014 &#32;&#32;<emphasis role="comment">//&#32;R&#32;=&#32;W&#32;&gt;&gt;&#32;lsb(&#32;W&#32;)</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02015"/>02015 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02016"/>02016 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!W.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(<emphasis role="keyword">this</emphasis>,&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02017"/>02017 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02018"/>02018 &#32;&#32;s&#32;=&#32;W.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a998e00885ae19da08d6e5df3f5184f35">GetLSB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02019"/>02019 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02020"/>02020 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!R.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;W))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02021"/>02021 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!R.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(s))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02022"/>02022 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02023"/>02023 &#32;&#32;i&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02024"/>02024 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02025"/>02025 &#32;&#32;<emphasis role="comment">//&#32;HAC,&#32;table&#32;4.4</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02026"/>02026 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02027"/>02027 &#32;&#32;n&#32;=&#32;(&#32;(&#32;i&#32;&gt;=&#32;1300&#32;)&#32;?&#32;&#32;2&#32;:&#32;(&#32;i&#32;&gt;=&#32;&#32;850&#32;)&#32;?&#32;&#32;3&#32;:
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02028"/>02028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;i&#32;&gt;=&#32;&#32;650&#32;)&#32;?&#32;&#32;4&#32;:&#32;(&#32;i&#32;&gt;=&#32;&#32;350&#32;)&#32;?&#32;&#32;8&#32;:
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02029"/>02029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;i&#32;&gt;=&#32;&#32;250&#32;)&#32;?&#32;12&#32;:&#32;(&#32;i&#32;&gt;=&#32;&#32;150&#32;)&#32;?&#32;18&#32;:&#32;27&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02030"/>02030 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02031"/>02031 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;n;&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02032"/>02032 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02033"/>02033 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pick&#32;a&#32;random&#32;A,&#32;1&#32;&lt;&#32;A&#32;&lt;&#32;|X|&#32;-&#32;1</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02034"/>02034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a60f5ce3976c38dd8058e7ece2643571e">FillRandom</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>()*<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>,&#32;funcrandom,&#32;paramrandom))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02035"/>02035 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02036"/>02036 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(W)&#32;&gt;=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02037"/>02037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02038"/>02038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;-&#32;W.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02039"/>02039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(j&#32;+&#32;1&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02040"/>02040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02041"/>02041 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02042"/>02042 &#32;&#32;&#32;&#32;&#32;&#32;A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;|=&#32;3;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02043"/>02043 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02044"/>02044 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;=&#32;A^R&#32;mod&#32;|X|</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02045"/>02045 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02046"/>02046 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a54122d8e6604b19f34d973c59e43e8e9">SlidingWindowExponentiation</link>(&amp;A,&#32;&amp;R,&#32;<emphasis role="keyword">this</emphasis>,&#32;&amp;RR&#32;))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02047"/>02047 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02048"/>02048 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(W)&#32;==&#32;0&#32;||&#32;A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;==&#32;0&#32;)&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02049"/>02049 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02050"/>02050 &#32;&#32;&#32;&#32;&#32;&#32;j&#32;=&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02051"/>02051 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;j&#32;&lt;&#32;s&#32;&amp;&amp;&#32;A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(W)&#32;!=&#32;0&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02052"/>02052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02053"/>02053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;=&#32;A&#32;*&#32;A&#32;mod&#32;|X|</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02054"/>02054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;A,&#32;&amp;A&#32;))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02055"/>02055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&#32;&amp;A,&#32;&amp;T,&#32;<emphasis role="keyword">this</emphasis>))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02056"/>02056 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02057"/>02057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;==&#32;0&#32;)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02058"/>02058 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02059"/>02059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02060"/>02060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02061"/>02061 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02062"/>02062 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;not&#32;prime&#32;if&#32;A&#32;!=&#32;|X|&#32;-&#32;1&#32;or&#32;A&#32;==&#32;1</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02063"/>02063 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(W)&#32;!=&#32;0&#32;||&#32;(A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;==&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02064"/>02064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02065"/>02065 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02066"/>02066 &#32;&#32;W.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02067"/>02067 &#32;&#32;R.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02068"/>02068 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02069"/>02069 &#32;&#32;A.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02070"/>02070 &#32;&#32;RR.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02071"/>02071 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02072"/>02072 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02073"/>02073 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02074"/>02074 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02075"/>02075 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02088"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a0896841dc3b024b63833aa6aa8025d28">02088</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a0896841dc3b024b63833aa6aa8025d28">XMPINTEGER::IsPrime</link>(<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>&#32;funcrandom,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;paramrandom)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02089"/>02089 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02090"/>02090 &#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;XX;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02091"/>02091 &#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02092"/>02092 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02093"/>02093 &#32;XX.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02094"/>02094 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02095"/>02095 &#32;XX.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02096"/>02096 &#32;<emphasis role="comment">//XX.SetNLimbs(GetNLimbs());</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02097"/>02097 &#32;<emphasis role="comment">//XX.SetLimbs(GetLimbs());&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;Abs(X)</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02098"/>02098 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02099"/>02099 &#32;<emphasis role="keywordflow">if</emphasis>(XX.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;==&#32;0&#32;||&#32;XX.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;==&#32;0)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02100"/>02100 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02101"/>02101 &#32;<emphasis role="keywordflow">if</emphasis>(XX.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(2)&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02102"/>02102 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02103"/>02103 &#32;<emphasis role="keywordflow">if</emphasis>((ret&#32;=&#32;XX.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1afe026431a6f5b663600cd282f4b88d89">CheckSmallFactors</link>())!=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02104"/>02104 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02105"/>02105 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ret&#32;==&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02106"/>02106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02107"/>02107 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02108"/>02108 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02109"/>02109 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a68f300c9f7bf74ee01a526f3844c63f9">MillerRabin</link>(&amp;XX,&#32;funcrandom,&#32;paramrandom)?0:-1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02110"/>02110 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02111"/>02111 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02112"/>02112 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02127"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae29bcb9b95430e57bca665999e20f873">02127</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae29bcb9b95430e57bca665999e20f873">XMPINTEGER::GeneratePrime</link>(<emphasis role="keywordtype">int</emphasis>&#32;nbits,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dhflag,&#32;<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>&#32;funcrandom,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;paramrandom)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02128"/>02128 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02129"/>02129 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02130"/>02130 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02131"/>02131 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;r;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02132"/>02132 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;Y;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02133"/>02133 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02134"/>02134 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;nbits&#32;&lt;&#32;3&#32;||&#32;nbits&#32;&gt;&#32;<link linkend="__x_m_p_integer_8h_1a3849303506d400b327ee2c3dfeb4d4a3">XMPINTEGER_MAXBITS</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02135"/>02135 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02136"/>02136 &#32;&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02137"/>02137 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02138"/>02138 &#32;&#32;n&#32;=&#32;<link linkend="__x_m_p_integer_8h_1ab5aa2dddd7dfbbf316bd3164afc35db0">XMPINTEGER_BITSTOLIMBS</link>(nbits);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02139"/>02139 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02140"/>02140 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a60f5ce3976c38dd8058e7ece2643571e">FillRandom</link>(n*<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>,&#32;funcrandom,&#32;paramrandom))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02141"/>02141 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02142"/>02142 &#32;&#32;k&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02143"/>02143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(k&lt;nbits)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02144"/>02144 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02145"/>02145 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a855c3e7fdceb5c13684ef3db3bd85e1c">LeftShift</link>(nbits-k))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02146"/>02146 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02147"/>02147 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02148"/>02148 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(k&gt;nbits)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02149"/>02149 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02150"/>02150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(k-nbits))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02151"/>02151 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02152"/>02152 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02153"/>02153 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;|=&#32;3;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02154"/>02154 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02155"/>02155 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(dhflag&#32;==&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02156"/>02156 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02157"/>02157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ret;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02158"/>02158 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02159"/>02159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>((ret=<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a0896841dc3b024b63833aa6aa8025d28">IsPrime</link>(funcrandom,&#32;paramrandom))!=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02160"/>02160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02161"/>02161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ret&#32;!=&#32;-1)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02162"/>02162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(<emphasis role="keyword">this</emphasis>,&#32;2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02163"/>02163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02164"/>02164 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02165"/>02165 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02166"/>02166 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02167"/>02167 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;An&#32;necessary&#32;condition&#32;for&#32;Y&#32;and&#32;X&#32;=&#32;2Y&#32;+&#32;1&#32;to&#32;be&#32;prime&#32;is&#32;X&#32;=&#32;2&#32;mod&#32;3&#32;(which&#32;is&#32;equivalent&#32;to&#32;Y&#32;=&#32;2&#32;mod&#32;3).</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02168"/>02168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;sure&#32;it&#32;is&#32;satisfied,&#32;while&#32;keeping&#32;X&#32;=&#32;3&#32;mod&#32;4</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02169"/>02169 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02170"/>02170 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&#32;&amp;r,&#32;<emphasis role="keyword">this</emphasis>,&#32;3))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02171"/>02171 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02172"/>02172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(r&#32;==&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02173"/>02173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02174"/>02174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(<emphasis role="keyword">this</emphasis>,&#32;8))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02175"/>02175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02176"/>02176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02177"/>02177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02178"/>02178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;r&#32;==&#32;1&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02179"/>02179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02180"/>02180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(<emphasis role="keyword">this</emphasis>,&#32;4&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02181"/>02181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02182"/>02182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02183"/>02183 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02184"/>02184 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;Y&#32;=&#32;(X-1)&#32;/&#32;2,&#32;which&#32;is&#32;X&#32;/&#32;2&#32;because&#32;X&#32;is&#32;odd</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02185"/>02185 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02186"/>02186 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1abdcdb052c0b78ecb5553967c94e1731b">RightShift</link>(1))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02187"/>02187 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02188"/>02188 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(1)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02189"/>02189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02190"/>02190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ret;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02191"/>02191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;First,&#32;check&#32;small&#32;factors&#32;for&#32;X&#32;and&#32;Y&#32;before&#32;doing&#32;Miller-Rabin&#32;on&#32;any&#32;of&#32;them</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02192"/>02192 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02193"/>02193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((ret&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1afe026431a6f5b663600cd282f4b88d89">CheckSmallFactors</link>())&#32;==&#32;0&#32;&amp;&amp;&#32;(ret&#32;=&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1afe026431a6f5b663600cd282f4b88d89">CheckSmallFactors</link>())&#32;==&#32;0&#32;&amp;&amp;&#32;&#32;(ret&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a68f300c9f7bf74ee01a526f3844c63f9">MillerRabin</link>(<emphasis role="keyword">this</emphasis>,&#32;funcrandom,&#32;paramrandom))&#32;==&#32;0&#32;&amp;&amp;&#32;(ret&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a68f300c9f7bf74ee01a526f3844c63f9">MillerRabin</link>(&amp;Y,&#32;funcrandom,&#32;paramrandom))&#32;==&#32;0)&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02194"/>02194 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02195"/>02195 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02196"/>02196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ret&#32;!=&#32;-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02197"/>02197 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02198"/>02198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next&#32;candidates.&#32;We&#32;want&#32;to&#32;preserve&#32;Y&#32;=&#32;(X-1)&#32;/&#32;2&#32;and&#32;Y&#32;=&#32;1&#32;mod&#32;2&#32;and&#32;Y&#32;=&#32;2&#32;mod&#32;3&#32;(eq&#32;X&#32;=&#32;3&#32;mod&#32;4&#32;and&#32;X&#32;=&#32;2&#32;mod&#32;3)&#32;&#32;so&#32;up&#32;Y&#32;by&#32;6&#32;and&#32;X&#32;by&#32;12.</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02199"/>02199 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02200"/>02200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(<emphasis role="keyword">this</emphasis>,&#32;12))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02201"/>02201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(&amp;Y,&#32;6))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02202"/>02202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02203"/>02203 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02204"/>02204 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02205"/>02205 &#32;&#32;Y.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02206"/>02206 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02207"/>02207 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02208"/>02208 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02209"/>02209 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02210"/>02210 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02223"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1aa84b72ebd118e7ab1e60aa6b43a831e3">02223</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1aa84b72ebd118e7ab1e60aa6b43a831e3">XMPINTEGER::SetFromString</link>(<emphasis role="keywordtype">int</emphasis>&#32;radix,&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02224"/>02224 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02225"/>02225 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02226"/>02226 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02227"/>02227 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slen;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02228"/>02228 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02229"/>02229 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;d;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02230"/>02230 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;T;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02231"/>02231 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02232"/>02232 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((radix&#32;&lt;&#32;2)&#32;||&#32;(radix&#32;&gt;&#32;16))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02233"/>02233 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02234"/>02234 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02235"/>02235 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02236"/>02236 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;_string;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02237"/>02237 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02238"/>02238 &#32;&#32;_string&#32;=&#32;string;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02239"/>02239 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02240"/>02240 &#32;&#32;slen&#32;=&#32;_string.<link linkend="_class_x_s_t_r_i_n_g_1a7c3fa0dd7b650399470c76192fbd4916">GetSize</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02241"/>02241 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02242"/>02242 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(radix&#32;==&#32;16)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02243"/>02243 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02244"/>02244 &#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;<link linkend="__x_m_p_integer_8h_1ab5aa2dddd7dfbbf316bd3164afc35db0">XMPINTEGER_BITSTOLIMBS</link>(slen&#32;&lt;&lt;&#32;2);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02245"/>02245 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02246"/>02246 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(n))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02247"/>02247 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02248"/>02248 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02249"/>02249 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=slen,&#32;j=0;&#32;i&gt;0;&#32;i--,&#32;j++&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02250"/>02250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02251"/>02251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i==1&#32;&amp;&amp;&#32;<emphasis role="keywordtype">string</emphasis>[i-1]==<link linkend="__x_string_8h_1ab483f167129a5d1941ea1d30f3df8d8a">__C</link>(<emphasis role="charliteral">&apos;-&apos;</emphasis>))
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02252"/>02252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02253"/>02253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(-1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02254"/>02254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02255"/>02255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02256"/>02256 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02257"/>02257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!GetDigit(&amp;d,&#32;radix,&#32;<emphasis role="keywordtype">string</emphasis>[i-1]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02258"/>02258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[j&#32;/&#32;(2&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>)]&#32;|=&#32;d&#32;&lt;&lt;&#32;(&#32;(j&#32;%&#32;(2&#32;*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>))&#32;&lt;&lt;&#32;2&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02259"/>02259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02260"/>02260 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02261"/>02261 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02262"/>02262 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02263"/>02263 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02264"/>02264 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02265"/>02265 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=0;&#32;i&lt;slen;&#32;i++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02266"/>02266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02267"/>02267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i==0&#32;&amp;&amp;&#32;<emphasis role="keywordtype">string</emphasis>[i]==<link linkend="__x_string_8h_1ab483f167129a5d1941ea1d30f3df8d8a">__C</link>(<emphasis role="charliteral">&apos;-&apos;</emphasis>))
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02268"/>02268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02269"/>02269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(-1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02270"/>02270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02271"/>02271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02272"/>02272 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02273"/>02273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!GetDigit(&amp;d,&#32;radix,&#32;<emphasis role="keywordtype">string</emphasis>[i]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02274"/>02274 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02275"/>02275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(<emphasis role="keyword">this</emphasis>,&#32;radix))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02276"/>02276 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02277"/>02277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()==&#32;1)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02278"/>02278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02279"/>02279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(&amp;T,&#32;d))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02280"/>02280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02281"/>02281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02282"/>02282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02283"/>02283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;T,&#32;d))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02284"/>02284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02285"/>02285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02286"/>02286 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02287"/>02287 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02288"/>02288 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02289"/>02289 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02290"/>02290 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02291"/>02291 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02292"/>02292 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02293"/>02293 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02306"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1e5f19732ce0d3c9618961a99e7edf9c">02306</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1aa84b72ebd118e7ab1e60aa6b43a831e3">XMPINTEGER::SetFromString</link>(<emphasis role="keywordtype">int</emphasis>&#32;radix,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02307"/>02307 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02308"/>02308 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1aa84b72ebd118e7ab1e60aa6b43a831e3">SetFromString</link>(radix,&#32;<emphasis role="keywordtype">string</emphasis>.Get());
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02309"/>02309 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02310"/>02310 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02311"/>02311 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02324"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a2acd6dadcd95bbd05d68bb86df4adea9">02324</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a2acd6dadcd95bbd05d68bb86df4adea9">XMPINTEGER::GetToString</link>(<emphasis role="keywordtype">int</emphasis>&#32;radix,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02325"/>02325 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02326"/>02326 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;T;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02327"/>02327 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;charshex;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02328"/>02328 <emphasis role="comment">//int&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02329"/>02329 &#32;&#32;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02330"/>02330 &#32;&#32;charshex&#32;=&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;0123456789ABCDEF&quot;</emphasis>);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02331"/>02331 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02332"/>02332 &#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02333"/>02333 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02334"/>02334 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;radix&#32;&lt;&#32;2&#32;||&#32;radix&#32;&gt;&#32;16&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02335"/>02335 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02336"/>02336 &#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02337"/>02337 <emphasis role="comment">&#32;&#32;n&#32;=&#32;GetMSB();</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02338"/>02338 <emphasis role="comment">&#32;&#32;if(&#32;radix&#32;&gt;=&#32;&#32;4&#32;)&#32;n&#32;&gt;&gt;=&#32;1;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02339"/>02339 <emphasis role="comment">&#32;&#32;if(&#32;radix&#32;&gt;=&#32;16&#32;)&#32;n&#32;&gt;&gt;=&#32;1;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02340"/>02340 <emphasis role="comment">&#32;&#32;n&#32;+=&#32;3;</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02341"/>02341 <emphasis role="comment">&#32;&#32;*/</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02342"/>02342 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02343"/>02343 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02344"/>02344 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02345"/>02345 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;==&#32;-1)&#32;<emphasis role="keywordtype">string</emphasis>.Add(<link linkend="__x_string_8h_1ab483f167129a5d1941ea1d30f3df8d8a">__C</link>(<emphasis role="charliteral">&apos;-&apos;</emphasis>));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02346"/>02346 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02347"/>02347 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(radix&#32;==&#32;16)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02348"/>02348 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02349"/>02349 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02350"/>02350 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02351"/>02351 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02352"/>02352 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;k;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02353"/>02353 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02354"/>02354 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a264334fb6432f574a6383134ecd578ed">GetNLimbs</link>(),&#32;k&#32;=&#32;0;&#32;i&#32;&gt;&#32;0;&#32;i--&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02355"/>02355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02356"/>02356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(j=<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>;&#32;j&gt;0;&#32;j--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02357"/>02357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02358"/>02358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>&#32;charhex;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02359"/>02359 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02360"/>02360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c=(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[i-1]&#32;&gt;&gt;&#32;((j-1)&#32;&lt;&lt;&#32;3))&#32;&amp;&#32;0xFF;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02361"/>02361 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02362"/>02362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(c==0&#32;&amp;&amp;&#32;k==0&#32;&amp;&amp;&#32;(i+j+3)!=&#32;0)&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02363"/>02363 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02364"/>02364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;charhex&#32;=&#32;charshex.<link linkend="_class_x_s_t_r_i_n_g_1ad1470753a96f93e2feb3ee54e6fef95f">Get</link>()[c&#32;/&#32;16];&#32;<emphasis role="keywordtype">string</emphasis>.Add(charhex);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02365"/>02365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;charhex&#32;=&#32;charshex.<link linkend="_class_x_s_t_r_i_n_g_1ad1470753a96f93e2feb3ee54e6fef95f">Get</link>()[c&#32;%&#32;16];&#32;<emphasis role="keywordtype">string</emphasis>.Add(charhex);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02366"/>02366 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02367"/>02367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;k=1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02368"/>02368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02369"/>02369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02370"/>02370 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02371"/>02371 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02372"/>02372 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02373"/>02373 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02374"/>02374 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02375"/>02375 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a4b378be515514fe97102c5dd63ffaec9">GetSign</link>()&#32;==&#32;-1)&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a43df7b0b2ba3f4d16550db90700eec20">SetSign</link>(1);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02376"/>02376 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02377"/>02377 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.SetToStringHelper(radix,&#32;<emphasis role="keywordtype">string</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02378"/>02378 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02379"/>02379 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02380"/>02380 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02381"/>02381 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02382"/>02382 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02383"/>02383 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02384"/>02384 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02385"/>02385 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02397"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2f2b711b6bca96642fa27864d10c15f">02397</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2f2b711b6bca96642fa27864d10c15f">XMPINTEGER::SetFromXBuffer</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;xbuffer)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02398"/>02398 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02399"/>02399 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02400"/>02400 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02401"/>02401 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02402"/>02402 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02403"/>02403 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(n=0;&#32;n&lt;(int)xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>();&#32;n++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02404"/>02404 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02405"/>02405 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(n)&#32;!=&#32;0)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02406"/>02406 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02407"/>02407 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02408"/>02408 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a81c3c1f07c09d4d431c2ea93a3ad1b14">Grow</link>(<link linkend="__x_m_p_integer_8h_1adc97fd5d48aab29051378da6b5b5581b">XMPINTEGER_CHARSTOLIMBS</link>(xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>()&#32;-&#32;n&#32;)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02409"/>02409 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02410"/>02410 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02411"/>02411 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>(),&#32;j=0;&#32;i&gt;n;&#32;i--,&#32;j++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02412"/>02412 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02413"/>02413 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[j&#32;/&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>]&#32;|=&#32;((<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>)xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(i-1))&#32;&lt;&lt;&#32;((j&#32;%&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>)&#32;&lt;&lt;&#32;3);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02414"/>02414 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02415"/>02415 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02416"/>02416 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02417"/>02417 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02418"/>02418 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02419"/>02419 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02432"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a53867802376ada2dd4c165a255ab8ad3">02432</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a53867802376ada2dd4c165a255ab8ad3">XMPINTEGER::GetToXBuffer</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;xbuffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02433"/>02433 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02434"/>02434 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02435"/>02435 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;j;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02436"/>02436 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;n;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02437"/>02437 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02438"/>02438 &#32;&#32;n&#32;=&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a77c2140402833bbf789bf15377d5d675">GetSize</link>();
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02439"/>02439 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02440"/>02440 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;&lt;&#32;n)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02441"/>02441 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02442"/>02442 &#32;&#32;xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1acf69e379f1d0bf812ae9c1157eac172c">Resize</link>(size);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02443"/>02443 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02444"/>02444 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=size-1,&#32;j=0;&#32;n&gt;0;&#32;i--,&#32;j++,&#32;n--)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02445"/>02445 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02446"/>02446 &#32;&#32;&#32;&#32;&#32;&#32;xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1ad9bc0fe2244df7440d31b152bd2e24fb">Set</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[j&#32;/&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>]&#32;&gt;&gt;&#32;((j&#32;%&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>)&#32;&lt;&lt;&#32;3)),&#32;i);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02447"/>02447 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02448"/>02448 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02449"/>02449 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02450"/>02450 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02451"/>02451 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02452"/>02452 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02462"/><link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">02462</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">XMPINTEGER::End</link>()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02463"/>02463 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02464"/>02464 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!limbs)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02465"/>02465 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02466"/>02466 &#32;&#32;memset(limbs,&#32;0,&#32;nlimbs*&#32;<link linkend="__x_m_p_integer_8h_1ab34ebfe54ffaa9fbbb06838a2872b279">XMPINTEGER_CHARSINLIMB</link>);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02467"/>02467 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;limbs;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02468"/>02468 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02469"/>02469 &#32;&#32;sign&#32;&#32;&#32;&#32;=&#32;1;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02470"/>02470 &#32;&#32;nlimbs&#32;&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02471"/>02471 &#32;&#32;limbs&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02472"/>02472 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02473"/>02473 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02474"/>02474 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02475"/>02475 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02476"/>02476 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02490"/>02490 <emphasis role="keywordtype">void</emphasis>&#32;XMPINTEGER::SubtractionHelper(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n,&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;*s,&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;*d)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02491"/>02491 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02492"/>02492 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;i;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02493"/>02493 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;c&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02494"/>02494 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;&#32;z;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02495"/>02495 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02496"/>02496 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i=(<emphasis role="keywordtype">int</emphasis>)c;&#32;i&lt;(int)n;&#32;i++,&#32;s++,&#32;d++)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02497"/>02497 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02498"/>02498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;z&#32;&#32;=&#32;(&#32;*d&#32;&lt;&#32;&#32;c&#32;);&#32;&#32;&#32;&#32;&#32;&#32;*d&#32;-=&#32;&#32;c;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02499"/>02499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;&#32;=&#32;(&#32;*d&#32;&lt;&#32;*s&#32;)&#32;+&#32;z;&#32;&#32;*d&#32;-=&#32;*s;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02500"/>02500 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02501"/>02501 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02502"/>02502 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;c&#32;!=&#32;0&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02503"/>02503 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02504"/>02504 &#32;&#32;&#32;&#32;&#32;&#32;z&#32;=&#32;(&#32;*d&#32;&lt;&#32;c&#32;);&#32;*d&#32;-=&#32;c;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02505"/>02505 &#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;z;&#32;i++;&#32;d++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02506"/>02506 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02507"/>02507 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02508"/>02508 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02509"/>02509 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02524"/>02524 <emphasis role="keywordtype">void</emphasis>&#32;XMPINTEGER::MultiplicationHelper(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i,&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;s,&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>*&#32;d,&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;b)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02525"/>02525 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02526"/>02526 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;c&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02527"/>02527 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;t&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02528"/>02528 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02529"/>02529 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(;&#32;i&gt;=&#32;16;&#32;i-=&#32;16)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02530"/>02530 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02531"/>02531 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1abf8257987a460d5b27adad51d8671ad4">XMPINTEGER_MULADDC_INIT</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02532"/>02532 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02533"/>02533 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02534"/>02534 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02535"/>02535 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02536"/>02536 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02537"/>02537 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02538"/>02538 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02539"/>02539 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02540"/>02540 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02541"/>02541 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02542"/>02542 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02543"/>02543 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1adba3ff7769da34d633c5addf6562cdaa">XMPINTEGER_MULADDC_STOP</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02544"/>02544 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02545"/>02545 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02546"/>02546 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;i&gt;=8;&#32;i-=8)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02547"/>02547 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02548"/>02548 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1abf8257987a460d5b27adad51d8671ad4">XMPINTEGER_MULADDC_INIT</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02549"/>02549 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02550"/>02550 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02551"/>02551 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02552"/>02552 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02553"/>02553 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02554"/>02554 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02555"/>02555 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02556"/>02556 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1adba3ff7769da34d633c5addf6562cdaa">XMPINTEGER_MULADDC_STOP</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02557"/>02557 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02558"/>02558 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02559"/>02559 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;i&#32;&gt;&#32;0;&#32;i--&#32;)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02560"/>02560 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02561"/>02561 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1abf8257987a460d5b27adad51d8671ad4">XMPINTEGER_MULADDC_INIT</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02562"/>02562 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a2ddbbf7152ac0d1bbdf29cf60f022efe">XMPINTEGER_MULADDC_CORE</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02563"/>02563 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_m_p_integer_8h_1adba3ff7769da34d633c5addf6562cdaa">XMPINTEGER_MULADDC_STOP</link>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02564"/>02564 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02565"/>02565 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02566"/>02566 &#32;&#32;t++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02567"/>02567 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02568"/>02568 &#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;&#32;(*d)&#32;+=&#32;c;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02569"/>02569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;(&#32;*d&#32;&lt;&#32;c&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02570"/>02570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;d++;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02571"/>02571 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02572"/>02572 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(&#32;c&#32;!=&#32;0&#32;);
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02573"/>02573 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02574"/>02574 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02575"/>02575 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02589"/>02589 <emphasis role="keywordtype">bool</emphasis>&#32;XMPINTEGER::GetDigit(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;data,&#32;<emphasis role="keywordtype">int</emphasis>&#32;radix,&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>&#32;character)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02590"/>02590 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02591"/>02591 &#32;&#32;(*data)&#32;=&#32;255;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02592"/>02592 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02593"/>02593 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(character&#32;&gt;=&#32;0x30&#32;&amp;&amp;&#32;character&#32;&lt;=&#32;0x39&#32;)&#32;(*data)&#32;=&#32;character&#32;-&#32;0x30;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02594"/>02594 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(character&#32;&gt;=&#32;0x41&#32;&amp;&amp;&#32;character&#32;&lt;=&#32;0x46&#32;)&#32;(*data)&#32;=&#32;character&#32;-&#32;0x37;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02595"/>02595 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(character&#32;&gt;=&#32;0x61&#32;&amp;&amp;&#32;character&#32;&lt;=&#32;0x66&#32;)&#32;(*data)&#32;=&#32;character&#32;-&#32;0x57;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02596"/>02596 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02597"/>02597 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(*data)&#32;&gt;=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)radix)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02598"/>02598 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02599"/>02599 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02600"/>02600 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02601"/>02601 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02602"/>02602 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02615"/>02615 <emphasis role="keywordtype">bool</emphasis>&#32;XMPINTEGER::SetToStringHelper(<emphasis role="keywordtype">int</emphasis>&#32;radix,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02616"/>02616 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02617"/>02617 &#32;&#32;<link linkend="__x_m_p_integer_8h_1a10f16054072b0f51e48a4932910d9725">XLIMB</link>&#32;r;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02618"/>02618 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02619"/>02619 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(radix&#32;&lt;&#32;2&#32;||&#32;radix&#32;&gt;&#32;16)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02620"/>02620 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02621"/>02621 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;r,&#32;<emphasis role="keyword">this</emphasis>,&#32;radix))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02622"/>02622 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6a235d588c815a00cfc947abf7ee5cef">Division</link>(<emphasis role="keyword">this</emphasis>,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;<emphasis role="keyword">this</emphasis>,&#32;radix))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02623"/>02623 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02624"/>02624 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)!=&#32;0)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02625"/>02625 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02626"/>02626 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!SetToStringHelper(radix,&#32;<emphasis role="keywordtype">string</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02627"/>02627 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02628"/>02628 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02629"/>02629 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(r&lt;10)
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02630"/>02630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>.Add((<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>)(r&#32;+&#32;0x30&#32;));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02631"/>02631 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>.Add((<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>)(r&#32;+&#32;0x37&#32;));
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02632"/>02632 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02633"/>02633 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02634"/>02634 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02635"/>02635 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02636"/>02636 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02647"/>02647 <emphasis role="keywordtype">void</emphasis>&#32;XMPINTEGER::Clean()
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02648"/>02648 {
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02649"/>02649 &#32;&#32;sign&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02650"/>02650 &#32;&#32;nlimbs&#32;&#32;=&#32;0;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02651"/>02651 &#32;&#32;limbs&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02652"/>02652 }
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02653"/>02653 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02654"/>02654 
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02655"/>02655 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_m_p_integer_8cpp_source_1l02656"/>02656 
</programlisting></section>
