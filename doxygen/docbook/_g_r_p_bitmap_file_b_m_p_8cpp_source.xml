<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source" xml:lang="en-US">
<title>GRPBitmapFileBMP.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Graphic/Files/Bitmap/GRPBitmapFileBMP.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00001"/>00001 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00031"/>00031 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00033"/>00033 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00035"/>00035 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00036"/>00036 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00039"/>00039 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_file_b_m_p_8h">GRPBitmapFileBMP.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00041"/>00041 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_factory_8h">GRPFactory.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_8h">GRPBitmap.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_file_b_m_p_8h">GRPBitmapFileBMP.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00045"/>00045 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00047"/>00047 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00049"/>00049 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00050"/>00050 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00051"/>00051 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00053"/>00053 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00055"/>00055 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00056"/>00056 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00057"/>00057 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00058"/>00058 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00059"/>00059 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00060"/>00060 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00061"/>00061 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_GRPBITMAPFILEBMPCOLORPALETE</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00062"/>00062 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00063"/>00063 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00073"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a0b683aa8c056804b656d682106537f14">00073</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a0b683aa8c056804b656d682106537f14">GRPBITMAPFILEBMPCOLORPALETE::GRPBITMAPFILEBMPCOLORPALETE</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00074"/>00074 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00075"/>00075 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00076"/>00076 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00077"/>00077 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00078"/>00078 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00093"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1ad48027e69921ede5ec70ce1b661c739b">00093</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a0b683aa8c056804b656d682106537f14">GRPBITMAPFILEBMPCOLORPALETE::GRPBITMAPFILEBMPCOLORPALETE</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;red,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;green,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;blue,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;alpha)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00094"/>00094 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00095"/>00095 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00096"/>00096 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00097"/>00097 &#32;&#32;this-&gt;red&#32;&#32;&#32;=&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a5b9d88dc5ad87b9627f9813a65664995">red</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00098"/>00098 &#32;&#32;this-&gt;green&#32;=&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a6dc4eb6d13482e56044af75100096cff">green</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00099"/>00099 &#32;&#32;this-&gt;blue&#32;&#32;=&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a024ead83818a0867f63923d95542b286">blue</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00100"/>00100 &#32;&#32;this-&gt;alpha&#32;=&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1af0b176e75cee01df9cbfac494d27823f">alpha</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00101"/>00101 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00102"/>00102 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00103"/>00103 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00114"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a5e39b0ebd3838db7e3c80543eb420b37">00114</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a5e39b0ebd3838db7e3c80543eb420b37">GRPBITMAPFILEBMPCOLORPALETE::~GRPBITMAPFILEBMPCOLORPALETE</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00115"/>00115 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00116"/>00116 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00117"/>00117 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00118"/>00118 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00119"/>00119 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00130"/>00130 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILEBMPCOLORPALETE::Clean()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00131"/>00131 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00132"/>00132 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a5b9d88dc5ad87b9627f9813a65664995">red</link>&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00133"/>00133 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a6dc4eb6d13482e56044af75100096cff">green</link>&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00134"/>00134 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a024ead83818a0867f63923d95542b286">blue</link>&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00135"/>00135 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1af0b176e75cee01df9cbfac494d27823f">alpha</link>&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00136"/>00136 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00137"/>00137 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00138"/>00138 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00139"/>00139 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00140"/>00140 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00141"/>00141 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00142"/>00142 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_GRPBITMAPFILEBMPHEADER</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00143"/>00143 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00144"/>00144 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00154"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a62c3305ff5991116a5c70e8216752bec">00154</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a62c3305ff5991116a5c70e8216752bec">GRPBITMAPFILEBMPHEADER::GRPBITMAPFILEBMPHEADER</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00155"/>00155 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00156"/>00156 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00157"/>00157 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00158"/>00158 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00159"/>00159 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00170"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1ab7f64d62d5b8fe711be5d85ef55432a6">00170</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1ab7f64d62d5b8fe711be5d85ef55432a6">GRPBITMAPFILEBMPHEADER::~GRPBITMAPFILEBMPHEADER</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00171"/>00171 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00172"/>00172 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00173"/>00173 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00174"/>00174 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1f6ddb6696509085676b70a005245ee8">DeleteAllPalette</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00175"/>00175 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00176"/>00176 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00177"/>00177 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00189"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1ce930899e0dbbed305bd199161ef43f">00189</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1ce930899e0dbbed305bd199161ef43f">GRPBITMAPFILEBMPHEADER::Load</link>(<link linkend="_class_x_f_i_l_e">XFILE</link>*&#32;file)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00190"/>00190 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00191"/>00191 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a44d7d88693019c426837157d9bdc584e">type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00192"/>00192 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a6090674ddcae3130c85f73e874cdceaa">size</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00193"/>00193 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ab294d3da0ab1835de2e38b7564f18d47">reserved1</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00194"/>00194 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a1b3d99eb76f84e089a819a086cccb1a6">reserved2</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00195"/>00195 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a66030db272c42fa6833eb984a81e46dc">offsetdata</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00196"/>00196 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00197"/>00197 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ae095f6349430ac7a1b9cbc8b10307856">headersize</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00198"/>00198 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1af8f28de805541deed64f792e24a7c27f">width</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00199"/>00199 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a7790169b9d2016334aac36b74453b540">height</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00200"/>00200 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a7c24ab8cbb68bdc9e725a4754c3f25d4">planes</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00201"/>00201 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac20c55d4a6d754634a4b75b7fbf7c110">bitsperpixel</link>&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)))&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00202"/>00202 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1abc14f2c0941cab96770ba51dee14b51c">compression</link>&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00203"/>00203 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac829fc50a893931afcab74facce4e468">sizebmp</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00204"/>00204 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a3e4187889033626be8bac3ea7a2e6016">xpixelspermeter</link>&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00205"/>00205 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a3403dd54588cf97b32b4db7439ca45d1">ypixelspermeter</link>&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00206"/>00206 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a502d0cfbbb4e15ed67679e002f42c95c">colorused</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00207"/>00207 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a71ca012508995c6950166fafca1215af">colorimportant</link>&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00208"/>00208 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00209"/>00209 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00210"/>00210 &#32;&#32;<emphasis role="comment">//&#32;Check:&#32;&quot;BM&quot;&#32;signature&#32;in&#32;the&#32;file&#32;for&#32;WINDOWS&#32;NO&#32;OS/2&#32;valid&#32;format.</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00211"/>00211 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a44d7d88693019c426837157d9bdc584e">type</link>!=0x4D42)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00212"/>00212 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00213"/>00213 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac20c55d4a6d754634a4b75b7fbf7c110">bitsperpixel</link>)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;8&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a9207ca848d5052d2735cc569785cc701">GRPPROPERTYMODE_08_INDEX</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00217"/>00217 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;16&#32;:&#32;{&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;maskcolor[4];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)maskcolor,&#32;16))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00220"/>00220 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((maskcolor[0]&#32;==&#32;0x00007c00)&#32;&amp;&amp;&#32;(maskcolor[1]&#32;==&#32;0x000003E0)&#32;&amp;&amp;&#32;(maskcolor[2]&#32;==&#32;0x0000001F)&#32;&amp;&amp;&#32;(maskcolor[3]&#32;==&#32;0x00008000))&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a0c0f30701d79a1221292ff87eb3b9d44">GRPPROPERTYMODE_16_RGBA_5551</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((maskcolor[0]&#32;==&#32;0x0000F800)&#32;&amp;&amp;&#32;(maskcolor[1]&#32;==&#32;0x000007E0)&#32;&amp;&amp;&#32;(maskcolor[2]&#32;==&#32;0x0000001F)&#32;&amp;&amp;&#32;(maskcolor[3]&#32;==&#32;0x00000000))&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a79643bdbeae1e79973771780d48194f1">GRPPROPERTYMODE_16_RGB_565</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00225"/>00225 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00226"/>00226 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;24&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00229"/>00229 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;32&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00233"/>00233 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00234"/>00234 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00235"/>00235 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1f6ddb6696509085676b70a005245ee8">DeleteAllPalette</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00236"/>00236 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00237"/>00237 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ncpalette&#32;=&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a502d0cfbbb4e15ed67679e002f42c95c">colorused</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00238"/>00238 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00239"/>00239 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(ncpalette)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;ncpalette;c++)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;red;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;green;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;blue;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;alpha;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00247"/>00247 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(&amp;blue&#32;&#32;,1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(&amp;green&#32;,1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(&amp;red&#32;&#32;&#32;,1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!file-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(&amp;alpha&#32;,1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00252"/>00252 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e">GRPBITMAPFILEBMPCOLORPALETE</link>*&#32;colorpalette&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e">GRPBITMAPFILEBMPCOLORPALETE</link>(red,&#32;green,&#32;blue,&#32;alpha);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(colorpalette)&#32;palette.<link linkend="_class_x_m_a_p_1a6dd238dccfceb726042b588a23107318">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)c,&#32;colorpalette);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00257"/>00257 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00258"/>00258 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00259"/>00259 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00260"/>00260 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00261"/>00261 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00275"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a2c0747ffb787b5cbe5a224e01d27593b">00275</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1ce930899e0dbbed305bd199161ef43f">GRPBITMAPFILEBMPHEADER::Load</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;indexbuffer)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00276"/>00276 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00277"/>00277 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a44d7d88693019c426837157d9bdc584e">type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00278"/>00278 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a6090674ddcae3130c85f73e874cdceaa">size</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00279"/>00279 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ab294d3da0ab1835de2e38b7564f18d47">reserved1</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00280"/>00280 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a1b3d99eb76f84e089a819a086cccb1a6">reserved2</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00281"/>00281 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a66030db272c42fa6833eb984a81e46dc">offsetdata</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00282"/>00282 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00283"/>00283 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ae095f6349430ac7a1b9cbc8b10307856">headersize</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00284"/>00284 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1af8f28de805541deed64f792e24a7c27f">width</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00285"/>00285 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a7790169b9d2016334aac36b74453b540">height</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00286"/>00286 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a7c24ab8cbb68bdc9e725a4754c3f25d4">planes</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00287"/>00287 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac20c55d4a6d754634a4b75b7fbf7c110">bitsperpixel</link>&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>));&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00288"/>00288 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1abc14f2c0941cab96770ba51dee14b51c">compression</link>&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00289"/>00289 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac829fc50a893931afcab74facce4e468">sizebmp</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00290"/>00290 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a3e4187889033626be8bac3ea7a2e6016">xpixelspermeter</link>&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00291"/>00291 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a3403dd54588cf97b32b4db7439ca45d1">ypixelspermeter</link>&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00292"/>00292 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a502d0cfbbb4e15ed67679e002f42c95c">colorused</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00293"/>00293 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a71ca012508995c6950166fafca1215af">colorimportant</link>&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer]&#32;&#32;&#32;,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>));&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00294"/>00294 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00295"/>00295 &#32;&#32;<emphasis role="comment">//&#32;Check:&#32;&quot;BM&quot;&#32;signature&#32;in&#32;the&#32;file&#32;for&#32;WINDOWS&#32;NO&#32;OS/2&#32;valid&#32;format.</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00296"/>00296 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a44d7d88693019c426837157d9bdc584e">type</link>!=0x4D42)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00297"/>00297 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00298"/>00298 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac20c55d4a6d754634a4b75b7fbf7c110">bitsperpixel</link>)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;8&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a9207ca848d5052d2735cc569785cc701">GRPPROPERTYMODE_08_INDEX</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00302"/>00302 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;16&#32;:&#32;{&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;maskcolor[4];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)maskcolor,&#32;&amp;buffer[indexbuffer],&#32;&#32;16);&#32;indexbuffer&#32;+=&#32;16;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00305"/>00305 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((maskcolor[0]&#32;==&#32;0x00007c00)&#32;&amp;&amp;&#32;(maskcolor[1]&#32;==&#32;0x000003E0)&#32;&amp;&amp;&#32;(maskcolor[2]&#32;==&#32;0x0000001F)&#32;&amp;&amp;&#32;(maskcolor[3]&#32;==&#32;0x00008000))&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a0c0f30701d79a1221292ff87eb3b9d44">GRPPROPERTYMODE_16_RGBA_5551</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((maskcolor[0]&#32;==&#32;0x0000F800)&#32;&amp;&amp;&#32;(maskcolor[1]&#32;==&#32;0x000007E0)&#32;&amp;&amp;&#32;(maskcolor[2]&#32;==&#32;0x0000001F)&#32;&amp;&amp;&#32;(maskcolor[3]&#32;==&#32;0x00000000))&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a79643bdbeae1e79973771780d48194f1">GRPPROPERTYMODE_16_RGB_565</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00310"/>00310 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00311"/>00311 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;24&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00314"/>00314 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;32&#32;:&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00318"/>00318 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00319"/>00319 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00320"/>00320 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1f6ddb6696509085676b70a005245ee8">DeleteAllPalette</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00321"/>00321 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00322"/>00322 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ncpalette&#32;=&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a502d0cfbbb4e15ed67679e002f42c95c">colorused</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00323"/>00323 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00324"/>00324 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(ncpalette)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;ncpalette;c++)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;red;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;green;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;blue;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;alpha;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00332"/>00332 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;blue&#32;&#32;,&#32;&amp;buffer[indexbuffer],&#32;1);&#32;&#32;&#32;indexbuffer++;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;green&#32;,&#32;&amp;buffer[indexbuffer],&#32;1);&#32;&#32;&#32;indexbuffer++;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;red&#32;&#32;&#32;,&#32;&amp;buffer[indexbuffer],&#32;1);&#32;&#32;&#32;indexbuffer++;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;alpha&#32;,&#32;&amp;buffer[indexbuffer],&#32;1);&#32;&#32;&#32;indexbuffer++;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00337"/>00337 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e">GRPBITMAPFILEBMPCOLORPALETE</link>*&#32;colorpalette&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e">GRPBITMAPFILEBMPCOLORPALETE</link>(red,&#32;green,&#32;blue,&#32;alpha);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(colorpalette)&#32;palette.<link linkend="_class_x_m_a_p_1a6dd238dccfceb726042b588a23107318">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)c,&#32;colorpalette);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00342"/>00342 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00343"/>00343 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00344"/>00344 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00345"/>00345 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00346"/>00346 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00356"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">00356</link> <link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILEBMPHEADERINFO</link>*&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GRPBITMAPFILEBMPHEADER::GetHeaderInfo</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00357"/>00357 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00358"/>00358 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;headerinfo;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00359"/>00359 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00360"/>00360 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00361"/>00361 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00371"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1ae638531cb5b886a68a041ba62137f681">00371</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1ae638531cb5b886a68a041ba62137f681">GRPBITMAPFILEBMPHEADER::GetWidth</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00372"/>00372 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00373"/>00373 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1af8f28de805541deed64f792e24a7c27f">width</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00374"/>00374 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00375"/>00375 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00376"/>00376 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00386"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acda61dc13607280a5a35c2096cc2add2">00386</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acda61dc13607280a5a35c2096cc2add2">GRPBITMAPFILEBMPHEADER::GetHeight</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00387"/>00387 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00388"/>00388 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a7790169b9d2016334aac36b74453b540">height</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00389"/>00389 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00390"/>00390 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00391"/>00391 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00401"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1af5cc1240f4c5196528f69fadfb0593d4">00401</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1af5cc1240f4c5196528f69fadfb0593d4">GRPBITMAPFILEBMPHEADER::GetBitsPerPixel</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00402"/>00402 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00403"/>00403 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac20c55d4a6d754634a4b75b7fbf7c110">bitsperpixel</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00404"/>00404 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00405"/>00405 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00406"/>00406 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00416"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a0540e859d39401d02fa7cfe5f370b3ce">00416</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a0540e859d39401d02fa7cfe5f370b3ce">GRPBITMAPFILEBMPHEADER::GetOffsetData</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00417"/>00417 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00418"/>00418 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;headerinfo.<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a66030db272c42fa6833eb984a81e46dc">offsetdata</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00419"/>00419 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00420"/>00420 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00421"/>00421 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00431"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a41ddca57101030522db00f6098acfee2">00431</link> <link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a41ddca57101030522db00f6098acfee2">GRPBITMAPFILEBMPHEADER::GetMode</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00432"/>00432 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00433"/>00433 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mode;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00434"/>00434 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00435"/>00435 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00436"/>00436 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00449"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a995ecc4b68532c74ceb926766b49b9d4">00449</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a995ecc4b68532c74ceb926766b49b9d4">GRPBITMAPFILEBMPHEADER::GetColorPalette</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;index,&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>&amp;&#32;color)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00450"/>00450 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00451"/>00451 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e">GRPBITMAPFILEBMPCOLORPALETE</link>*&#32;colorpalette&#32;=&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e">GRPBITMAPFILEBMPCOLORPALETE</link>*)palette.<link linkend="_class_x_m_a_p_1a7b4332f4b7696dd7da952cc17fe7c255">GetElement</link>(index);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00452"/>00452 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!colorpalette)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00453"/>00453 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00454"/>00454 &#32;&#32;color.r&#32;=&#32;colorpalette-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a5b9d88dc5ad87b9627f9813a65664995">red</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00455"/>00455 &#32;&#32;color.g&#32;=&#32;colorpalette-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a6dc4eb6d13482e56044af75100096cff">green</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00456"/>00456 &#32;&#32;color.b&#32;=&#32;colorpalette-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1a024ead83818a0867f63923d95542b286">blue</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00457"/>00457 &#32;&#32;color.a&#32;=&#32;colorpalette-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_c_o_l_o_r_p_a_l_e_t_e_1af0b176e75cee01df9cbfac494d27823f">alpha</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00458"/>00458 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00459"/>00459 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00460"/>00460 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00461"/>00461 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00462"/>00462 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00472"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1f6ddb6696509085676b70a005245ee8">00472</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1f6ddb6696509085676b70a005245ee8">GRPBITMAPFILEBMPHEADER::DeleteAllPalette</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00473"/>00473 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00474"/>00474 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(palette.<link linkend="_class_x_m_a_p_1a5167609eddf3d655a9d17c052372a70a">IsEmpty</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00475"/>00475 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00476"/>00476 &#32;&#32;palette.<link linkend="_class_x_m_a_p_1a6b45f14c95691399c7e16b65a2c043db">DeleteElementContents</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00477"/>00477 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00478"/>00478 &#32;&#32;palette.<link linkend="_class_x_m_a_p_1a02e7b8a15144553d81f2e8ec217845f6">DeleteAll</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00479"/>00479 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00480"/>00480 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00481"/>00481 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00482"/>00482 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00483"/>00483 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00494"/>00494 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILEBMPHEADER::Clean()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00495"/>00495 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00496"/>00496 &#32;&#32;mode&#32;=&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a8d8362661aa67a4abc4e66f90a1a7bfd">GRPPROPERTYMODE_XX_UNKNOWN</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00497"/>00497 &#32;&#32;memset((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;headerinfo&#32;&#32;,0&#32;&#32;,<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILEBMPHEADERINFO</link>));
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00498"/>00498 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00499"/>00499 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00500"/>00500 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00501"/>00501 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00502"/>00502 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00503"/>00503 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00504"/>00504 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_GRPBITMAPFILEBMP</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00505"/>00505 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00506"/>00506 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00516"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1a194db541c12ad137050169446c320e40">00516</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1a194db541c12ad137050169446c320e40">GRPBITMAPFILEBMP::GRPBITMAPFILEBMP</link>():&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e">GRPBITMAPFILEBASE</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00517"/>00517 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00518"/>00518 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00519"/>00519 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00520"/>00520 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00521"/>00521 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00532"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1a94fcd5c1723f0036ec50e5401427a8dd">00532</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1a94fcd5c1723f0036ec50e5401427a8dd">GRPBITMAPFILEBMP::~GRPBITMAPFILEBMP</link>()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00533"/>00533 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00534"/>00534 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00535"/>00535 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00536"/>00536 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00537"/>00537 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00550"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1a97dc37713144a1897c7f7aa99af9c0d1">00550</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1a97dc37713144a1897c7f7aa99af9c0d1">GRPBITMAPFILEBMP::CreateBitmapFromFile</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;forcemode)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00551"/>00551 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00552"/>00552 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e_1a2326531c9eef704c3960c7f44ccae526">Open</link>(xpath))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00553"/>00553 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00554"/>00554 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r">GRPBITMAPFILEBMPHEADER</link>&#32;&#32;header;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00555"/>00555 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00556"/>00556 <emphasis role="comment">//XBYTE*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;=&#32;NULL;</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00557"/>00557 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00558"/>00558 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00559"/>00559 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ReadHeaderFile(&amp;header))
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00560"/>00560 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e_1a65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00564"/>00564 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00565"/>00565 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1ae638531cb5b886a68a041ba62137f681">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00566"/>00566 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acda61dc13607280a5a35c2096cc2add2">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00567"/>00567 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;bytesppixel&#32;&#32;=&#32;(header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1af5cc1240f4c5196528f69fadfb0593d4">GetBitsPerPixel</link>()/8);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00568"/>00568 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00569"/>00569 &#32;&#32;bitmap&#32;=&#32;<link linkend="_class_g_r_p_f_a_c_t_o_r_y_1a2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_class_g_r_p_f_a_c_t_o_r_y_1a460b48b220289471646b4fe476c87006">CreateBitmap</link>(width,&#32;height,&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a41ddca57101030522db00f6098acfee2">GetMode</link>());
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00570"/>00570 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;sizebmp&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(((header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1ae638531cb5b886a68a041ba62137f681">GetWidth</link>()*bytesppixel)+3)&amp;(~3))*header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acda61dc13607280a5a35c2096cc2add2">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;&#32;databuffer&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;index&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00575"/>00575 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;databuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[sizebmp];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(databuffer)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00579"/>00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1a95d94561b38b12abc55ac65f06d66be1">file</link>-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a0540e859d39401d02fa7cfe5f370b3ce">GetOffsetData</link>());
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00580"/>00580 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1a95d94561b38b12abc55ac65f06d66be1">file</link>-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(databuffer,&#32;sizebmp))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00582"/>00582 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=height-1;&#32;y&gt;-1;&#32;y--)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;width;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>&#32;color;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00588"/>00588 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a41ddca57101030522db00f6098acfee2">GetMode</link>())
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a9207ca848d5052d2735cc569785cc701">GRPPROPERTYMODE_08_INDEX</link>&#32;&#32;&#32;&#32;&#32;:&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a995ecc4b68532c74ceb926766b49b9d4">GetColorPalette</link>(databuffer[index],&#32;color);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;255;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00595"/>00595 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a0c0f30701d79a1221292ff87eb3b9d44">GRPPROPERTYMODE_16_RGBA_5551</link>&#32;:&#32;{&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;rgb&#32;=&#32;databuffer[index+1];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb&#32;&lt;&lt;=&#32;8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb&#32;|=&#32;databuffer[index+0];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00599"/>00599 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.r&#32;=&#32;(rgb&#32;&gt;&gt;&#32;7)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;(rgb&#32;&gt;&gt;&#32;2)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;(rgb&#32;&lt;&lt;&#32;3)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;(rgb&#32;&amp;&#32;0x8000)?255:0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00604"/>00604 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a06fe93e6319ebdd2f84b419b4ae489b5">PutBlendPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color,&#32;(<emphasis role="keywordtype">int</emphasis>)color.a);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00608"/>00608 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a79643bdbeae1e79973771780d48194f1">GRPPROPERTYMODE_16_RGB_565</link>&#32;&#32;&#32;:&#32;{&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;rgb&#32;=&#32;databuffer[index+1];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb&#32;&lt;&lt;=&#32;8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb&#32;|=&#32;databuffer[index+0];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00612"/>00612 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.r&#32;=&#32;(rgb&#32;&gt;&gt;&#32;8)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;(rgb&#32;&gt;&gt;&#32;3)&#32;&amp;&#32;0xFC;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;(rgb&#32;&lt;&lt;&#32;3)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;255;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00617"/>00617 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00621"/>00621 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>&#32;&#32;&#32;:&#32;color.r&#32;=&#32;databuffer[index+2];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;databuffer[index+1];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;databuffer[index+0];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;255;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00626"/>00626 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00629"/>00629 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>&#32;:&#32;color.r&#32;=&#32;databuffer[index+2];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;databuffer[index+1];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;databuffer[index+0];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;databuffer[index+3];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00634"/>00634 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a06fe93e6319ebdd2f84b419b4ae489b5">PutBlendPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color,&#32;(int)color.a);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00639"/>00639 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;&#32;+=&#32;bytesppixel;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00643"/>00643 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00645"/>00645 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00647"/>00647 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00649"/>00649 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00650"/>00650 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00651"/>00651 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_f_a_c_t_o_r_y_1a2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_class_g_r_p_f_a_c_t_o_r_y_1ae006b37b5ec00c1066c02f4741dda631">DeleteBitmap</link>(bitmap);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00659"/>00659 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00660"/>00660 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e_1a65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00661"/>00661 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00662"/>00662 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e_1af085dd454ff8f5c9dc35f3433b0a871b">ForceModeOfBitmap</link>(forcemode,&#32;bitmap);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00663"/>00663 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00664"/>00664 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00665"/>00665 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00679"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1af578abcdc5642e8145bb48fc221e84a3">00679</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1af578abcdc5642e8145bb48fc221e84a3">GRPBITMAPFILEBMP::CreateBitmapFromBuffer</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365">GRPPROPERTYMODE</link>&#32;forcemode)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00680"/>00680 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00681"/>00681 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r">GRPBITMAPFILEBMPHEADER</link>&#32;&#32;header;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00682"/>00682 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00683"/>00683 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00684"/>00684 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00685"/>00685 &#32;&#32;indexbuffer&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00686"/>00686 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00687"/>00687 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ReadHeaderBuffer(buffer,&#32;size,&#32;&amp;header))
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00690"/>00690 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00691"/>00691 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00692"/>00692 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1ae638531cb5b886a68a041ba62137f681">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00693"/>00693 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acda61dc13607280a5a35c2096cc2add2">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00694"/>00694 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;bytesppixel&#32;&#32;=&#32;(header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1af5cc1240f4c5196528f69fadfb0593d4">GetBitsPerPixel</link>()/8);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00695"/>00695 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00696"/>00696 &#32;&#32;bitmap&#32;=&#32;<link linkend="_class_g_r_p_f_a_c_t_o_r_y_1a2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_class_g_r_p_f_a_c_t_o_r_y_1a460b48b220289471646b4fe476c87006">CreateBitmap</link>(width,&#32;height,&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a41ddca57101030522db00f6098acfee2">GetMode</link>());
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00697"/>00697 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00698"/>00698 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;sizebmp&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(((header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1ae638531cb5b886a68a041ba62137f681">GetWidth</link>()*bytesppixel)+3)&amp;(~3))*header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acda61dc13607280a5a35c2096cc2add2">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;&#32;databuffer&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;index&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00702"/>00702 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;databuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[sizebmp];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(databuffer)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(databuffer,&#32;&amp;buffer[indexbuffer],&#32;sizebmp);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00707"/>00707 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indexbuffer&#32;+=&#32;sizebmp;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00709"/>00709 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=height-1;&#32;y&gt;-1;&#32;y--)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;width;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>&#32;color;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00715"/>00715 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a41ddca57101030522db00f6098acfee2">GetMode</link>())
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a9207ca848d5052d2735cc569785cc701">GRPPROPERTYMODE_08_INDEX</link>&#32;&#32;&#32;&#32;&#32;:&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a995ecc4b68532c74ceb926766b49b9d4">GetColorPalette</link>(databuffer[index],&#32;color);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;255;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00722"/>00722 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a0c0f30701d79a1221292ff87eb3b9d44">GRPPROPERTYMODE_16_RGBA_5551</link>&#32;:&#32;{&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;rgb&#32;=&#32;databuffer[index+1];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb&#32;&lt;&lt;=&#32;8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb&#32;|=&#32;databuffer[index+0];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00726"/>00726 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.r&#32;=&#32;(rgb&#32;&gt;&gt;&#32;7)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;(rgb&#32;&gt;&gt;&#32;2)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;(rgb&#32;&lt;&lt;&#32;3)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;(rgb&#32;&amp;&#32;0x8000)?255:0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00731"/>00731 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a06fe93e6319ebdd2f84b419b4ae489b5">PutBlendPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color,&#32;(<emphasis role="keywordtype">int</emphasis>)color.a);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00735"/>00735 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a79643bdbeae1e79973771780d48194f1">GRPPROPERTYMODE_16_RGB_565</link>&#32;&#32;&#32;:&#32;{&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;rgb&#32;=&#32;databuffer[index+1];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb&#32;&lt;&lt;=&#32;8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb&#32;|=&#32;databuffer[index+0];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00739"/>00739 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.r&#32;=&#32;(rgb&#32;&gt;&gt;&#32;8)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;(rgb&#32;&gt;&gt;&#32;3)&#32;&amp;&#32;0xFC;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;(rgb&#32;&lt;&lt;&#32;3)&#32;&amp;&#32;0xF8;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;255;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00744"/>00744 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00748"/>00748 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a60fd3267c2daefaf1f73b9ef6035aac2">GRPPROPERTYMODE_24_RGB_888</link>&#32;&#32;&#32;:&#32;color.r&#32;=&#32;databuffer[index+2];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;databuffer[index+1];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;databuffer[index+0];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;255;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00753"/>00753 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a6c58e451a2266ca1d4125f578f35d9b3">PutPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00756"/>00756 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a918d7803aa136043373c38a783841377">GRPPROPERTYMODE_32_RGBA_8888</link>&#32;:&#32;color.r&#32;=&#32;databuffer[index+2];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.g&#32;=&#32;databuffer[index+1];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.b&#32;=&#32;databuffer[index+0];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color.a&#32;=&#32;databuffer[index+3];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00761"/>00761 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a06fe93e6319ebdd2f84b419b4ae489b5">PutBlendPixel</link>(x,&#32;y,&#32;(<link linkend="_class_g_r_p2_d_c_o_l_o_r">GRP2DCOLOR</link>*)&amp;color,&#32;(int)color.a);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00766"/>00766 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;&#32;+=&#32;bytesppixel;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00770"/>00770 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00772"/>00772 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00774"/>00774 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00775"/>00775 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00776"/>00776 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00777"/>00777 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00778"/>00778 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00779"/>00779 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_f_a_c_t_o_r_y_1a2f0d20d8b617a48f13592778eb476a7b">GRPFACTORY::GetInstance</link>().<link linkend="_class_g_r_p_f_a_c_t_o_r_y_1ae006b37b5ec00c1066c02f4741dda631">DeleteBitmap</link>(bitmap);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00784"/>00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00785"/>00785 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00786"/>00786 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00787"/>00787 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e_1af085dd454ff8f5c9dc35f3433b0a871b">ForceModeOfBitmap</link>(forcemode,&#32;bitmap);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00788"/>00788 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00789"/>00789 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00790"/>00790 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00804"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1ae022961d444f096cebd13c648f198cb9">00804</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_1ae022961d444f096cebd13c648f198cb9">GRPBITMAPFILEBMP::CreateFileFromBitmap</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap,&#32;<emphasis role="keywordtype">int</emphasis>&#32;quality)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00805"/>00805 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00806"/>00806 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!bitmap)&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00807"/>00807 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00808"/>00808 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e_1adbc41519652512b18c6c31dd0351e464">Create</link>(xpath))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00809"/>00809 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00810"/>00810 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r">GRPBITMAPFILEBMPHEADER</link>&#32;header;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00811"/>00811 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00812"/>00812 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a44d7d88693019c426837157d9bdc584e">type</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x4D42;&#32;&#32;<emphasis role="comment">//&#32;BM&#32;Windows</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00813"/>00813 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a6090674ddcae3130c85f73e874cdceaa">size</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00814"/>00814 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ab294d3da0ab1835de2e38b7564f18d47">reserved1</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00815"/>00815 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a1b3d99eb76f84e089a819a086cccb1a6">reserved2</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00816"/>00816 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a66030db272c42fa6833eb984a81e46dc">offsetdata</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILEBMPHEADERINFO</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00817"/>00817 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00818"/>00818 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ae095f6349430ac7a1b9cbc8b10307856">headersize</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILEBMPHEADERINFO</link>)&#32;-&#32;14;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00819"/>00819 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1af8f28de805541deed64f792e24a7c27f">width</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a5cc313280bd36df2306a440639752388">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00820"/>00820 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a7790169b9d2016334aac36b74453b540">height</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00821"/>00821 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a7c24ab8cbb68bdc9e725a4754c3f25d4">planes</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;1;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00822"/>00822 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac20c55d4a6d754634a4b75b7fbf7c110">bitsperpixel</link>&#32;&#32;&#32;&#32;=&#32;32;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00823"/>00823 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1abc14f2c0941cab96770ba51dee14b51c">compression</link>&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__g_r_p_bitmap_file_b_m_p_8h_1acfc35d5723af766f73a187db94df5803a42f50c2da53612930ddc67a99ea49eb0">GRPBITMAPFILEBMPCOMPRESSION_NOT</link>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00824"/>00824 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac829fc50a893931afcab74facce4e468">sizebmp</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00825"/>00825 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a3e4187889033626be8bac3ea7a2e6016">xpixelspermeter</link>&#32;=&#32;2835;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00826"/>00826 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a3403dd54588cf97b32b4db7439ca45d1">ypixelspermeter</link>&#32;=&#32;2835;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00827"/>00827 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a502d0cfbbb4e15ed67679e002f42c95c">colorused</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00828"/>00828 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a71ca012508995c6950166fafca1215af">colorimportant</link>&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00829"/>00829 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00830"/>00830 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a5cc313280bd36df2306a440639752388">GetWidth</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00831"/>00831 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;height&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;bitmap-&gt;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a0829efc8aa7f6e50a5c6058617aa80d8">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00832"/>00832 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;bytesppixel&#32;&#32;=&#32;(header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1af5cc1240f4c5196528f69fadfb0593d4">GetBitsPerPixel</link>()/8);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00833"/>00833 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;sizebmp&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(((header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1ae638531cb5b886a68a041ba62137f681">GetWidth</link>()*bytesppixel)+3)&amp;(~3))*header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acda61dc13607280a5a35c2096cc2add2">GetHeight</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00834"/>00834 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;index&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00835"/>00835 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00836"/>00836 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00837"/>00837 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1ac829fc50a893931afcab74facce4e468">sizebmp</link>&#32;=&#32;sizebmp;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00838"/>00838 &#32;&#32;header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>()-&gt;<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o_1a6090674ddcae3130c85f73e874cdceaa">size</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;sizebmp&#32;+&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILEBMPHEADERINFO</link>);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00839"/>00839 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00840"/>00840 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1a95d94561b38b12abc55ac65f06d66be1">file</link>-&gt;<link linkend="_class_x_f_i_l_e_1a11b53fb5e02808927df9d01236e84eb9">Write</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)header.<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1acfa0dae687fa2f584c2cd84c2f688901">GetHeaderInfo</link>(),&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_i_n_f_o">GRPBITMAPFILEBMPHEADERINFO</link>)))
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00841"/>00841 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;databuffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[sizebmp];
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(databuffer)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;y=height-1;&#32;y&gt;-1;&#32;y--)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;x=0;&#32;x&lt;width;&#32;x++)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*&#32;color&#32;=&#32;(<link linkend="__g_r_p2_d_color_8h_1adf9a39696a2b6a88d8f0721078a1b8d0">GRP2DCOLOR_RGBA8</link>*)bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a63495c593c0238080f4ec81b859d4555">GetPixel</link>(x,&#32;y);
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(color)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index+2]&#32;=&#32;color-&gt;r;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index+1]&#32;=&#32;color-&gt;g;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index+0]&#32;=&#32;color-&gt;b;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;databuffer[index+3]&#32;=&#32;color-&gt;a;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00857"/>00857 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;index&#32;&#32;+=&#32;bytesppixel;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00861"/>00861 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1a95d94561b38b12abc55ac65f06d66be1">file</link>-&gt;<link linkend="_class_x_f_i_l_e_1a11b53fb5e02808927df9d01236e84eb9">Write</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)databuffer,&#32;sizebmp))&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00863"/>00863 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;databuffer;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00865"/>00865 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00867"/>00867 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00868"/>00868 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00869"/>00869 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00870"/>00870 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_a_s_e_1a65b0ccaf50dd769a2481d39483fee3c9">Close</link>();
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00871"/>00871 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00872"/>00872 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00873"/>00873 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00874"/>00874 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00875"/>00875 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00887"/>00887 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILEBMP::ReadHeaderFile(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r">GRPBITMAPFILEBMPHEADER</link>*&#32;header)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00888"/>00888 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00889"/>00889 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!header)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00890"/>00890 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1aa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00891"/>00891 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00892"/>00892 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1ce930899e0dbbed305bd199161ef43f">Load</link>(<link linkend="_class_x_f_i_l_e_c_o_n_t_a_i_n_e_r_1aa84337f93ddde60b65dd8eaf65e3b05f">GetPrimaryFile</link>()))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00893"/>00893 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00894"/>00894 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00895"/>00895 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00896"/>00896 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00897"/>00897 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00911"/>00911 <emphasis role="keywordtype">bool</emphasis>&#32;GRPBITMAPFILEBMP::ReadHeaderBuffer(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r">GRPBITMAPFILEBMPHEADER</link>*&#32;header)
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00912"/>00912 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00913"/>00913 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!header-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_i_l_e_b_m_p_h_e_a_d_e_r_1a1ce930899e0dbbed305bd199161ef43f">Load</link>(buffer,&#32;size,&#32;indexbuffer))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00914"/>00914 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00915"/>00915 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00916"/>00916 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00917"/>00917 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00918"/>00918 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00929"/>00929 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFILEBMP::Clean()
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00930"/>00930 {
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00931"/>00931 &#32;&#32;indexbuffer&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00932"/>00932 }
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00933"/>00933 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00934"/>00934 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00935"/>00935 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00936"/>00936 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00937"/>00937 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00938"/>00938 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00939"/>00939 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00940"/>00940 
<anchor xml:id="__g_r_p_bitmap_file_b_m_p_8cpp_source_1l00941"/>00941 
</programlisting></section>
