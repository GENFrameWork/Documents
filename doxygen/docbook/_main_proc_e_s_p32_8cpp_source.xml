<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__main_proc_e_s_p32_8cpp_source" xml:lang="en-US">
<title>MainProcESP32.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/ESP32/MainProcESP32.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00001"/>00001 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00031"/>00031 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00033"/>00033 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00035"/>00035 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00036"/>00036 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00039"/>00039 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__main_proc_e_s_p32_8h">MainProcESP32.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00041"/>00041 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&lt;stddef.h&gt;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00045"/>00045 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_e_s_p32_factory_8h">XESP32Factory.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_e_s_p32_system_8h">XESP32System.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_e_s_p32_rand_8h">XESP32Rand.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_e_s_p32_sleep_8h">XESP32Sleep.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_e_s_p32_trace_8h">XESP32Trace.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_e_s_p32_e_e_p_r_o_m_memory_manager_8h">XESP32EEPROMMemoryManager.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00052"/>00052 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#ifdef&#32;DIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_e_s_p32_factory_8h">DIOESP32Factory.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00055"/>00055 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;DIO_GPIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">&#32;&#32;#include&#32;&quot;<link linkend="__d_i_o_g_p_i_o_8h">DIOGPIO.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00058"/>00058 <emphasis role="preprocessor">&#32;&#32;#include&#32;&quot;<link linkend="__d_i_o_e_s_p32_g_p_i_o_8h">DIOESP32GPIO.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00060"/>00060 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00061"/>00061 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00062"/>00062 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__version_frame_work_8h">VersionFrameWork.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00064"/>00064 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00065"/>00065 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_thread_list_non_preemptive_8h">XThreadListNonPreemptive.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00066"/>00066 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_translation___g_e_n_8h">XTranslation_GEN.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00067"/>00067 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_translation_8h">XTranslation.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00068"/>00068 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_publisher_8h">XPublisher.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00069"/>00069 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00070"/>00070 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__a_p_p_base_8h">APPBase.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00071"/>00071 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__a_p_p_main_8h">APPMain.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00072"/>00072 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00073"/>00073 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00074"/>00074 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00075"/>00075 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00076"/>00076 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00077"/>00077 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00078"/>00078 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00079"/>00079 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00080"/>00080 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00081"/>00081 <emphasis role="preprocessor">#ifdef&#32;XTRACE_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00082"/>00082 <link linkend="_class_x_e_s_p32_t_r_a_c_e">XESP32TRACE</link>&#32;&#32;&#32;&#32;&#32;&#32;ESP32trace;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00083"/>00083 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00084"/><link linkend="__main_proc_e_s_p32_8cpp_1a1598c3790b1e688e229bdc094dba4348">00084</link> <link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32">MAINPROCESP32</link>&#32;&#32;&#32;&#32;<link linkend="__main_proc_e_s_p32_8cpp_1a1598c3790b1e688e229bdc094dba4348">mainprocesp32</link>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00085"/>00085 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00086"/>00086 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00087"/>00087 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00088"/>00088 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00089"/>00089 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00090"/>00090 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00091"/>00091 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00101"/><link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1af5b9e53e042a3b0ec90ae59d3127969d">00101</link> <link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1af5b9e53e042a3b0ec90ae59d3127969d">MAINPROCESP32::MAINPROCESP32</link>()
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00102"/>00102 {
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00103"/>00103 &#32;&#32;Clean();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00104"/>00104 }
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00105"/>00105 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00106"/>00106 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00117"/><link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1aab2df037e1bc3f2192aa157ac5f7f566">00117</link> <link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1aab2df037e1bc3f2192aa157ac5f7f566">MAINPROCESP32::~MAINPROCESP32</link>()
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00118"/>00118 {
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00119"/>00119 &#32;&#32;Clean();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00120"/>00120 }
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00121"/>00121 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00122"/>00122 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00134"/><link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1af38ce0158158700947fe5f02dd7ba7c6">00134</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1af38ce0158158700947fe5f02dd7ba7c6">MAINPROCESP32::Ini</link>(<link linkend="_class_a_p_p_m_a_i_n">APPMAIN</link>*&#32;appmain)
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00135"/>00135 {
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00136"/>00136 &#32;&#32;this-&gt;appmain&#32;=&#32;<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00137"/>00137 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00138"/>00138 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Factorys_Ini())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00139"/>00139 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00140"/>00140 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;APP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00141"/>00141 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00142"/>00142 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1a7ec2ce73d999c87734b4fd2e6d40bffb">Create</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00144"/>00144 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1abcd96e0ac68d041dd307005e2496638d">Ini</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00145"/>00145 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00146"/>00146 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00147"/>00147 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00148"/>00148 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1a47d21028ecd52962c912b0d803b2ff82">Main_Proc_PlatformIni</link>)
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1a47d21028ecd52962c912b0d803b2ff82">Main_Proc_PlatformIni</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00152"/>00152 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00153"/>00153 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1a8f8ac76e1927db99e4de64dd699d9028">Main_Proc_Ini</link>)
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1a8f8ac76e1927db99e4de64dd699d9028">Main_Proc_Ini</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00157"/>00157 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00158"/>00158 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00159"/>00159 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00160"/>00160 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00161"/>00161 }
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00162"/>00162 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00163"/>00163 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00173"/><link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1a180a814ea1b38ca519fa4260cee39a98">00173</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1a180a814ea1b38ca519fa4260cee39a98">MAINPROCESP32::Update</link>()
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00174"/>00174 {
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00175"/>00175 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;APP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00176"/>00176 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>)
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1a380ae38e7fe3c02cb7a2eb0fa54cb5ce">Update</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00180"/>00180 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00181"/>00181 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1a09d103a86728395ab5143a584be890de">Main_Proc_Update</link>)
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1a09d103a86728395ab5143a584be890de">Main_Proc_Update</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00185"/>00185 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00186"/>00186 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00187"/>00187 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00188"/>00188 }
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00189"/>00189 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00190"/>00190 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00200"/><link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1a0bb7e714f447b16cd8234965171a82e2">00200</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1a0bb7e714f447b16cd8234965171a82e2">MAINPROCESP32::End</link>()
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00201"/>00201 {
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00202"/>00202 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;APP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00203"/>00203 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00204"/>00204 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>)&#32;<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1add944be5665daa45baa865d7d15214a9">End</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00205"/>00205 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00206"/>00206 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00207"/>00207 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00208"/>00208 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1a7dddfdb386e99f41661d284091ed87f3">Main_Proc_End</link>)
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1a7dddfdb386e99f41661d284091ed87f3">Main_Proc_End</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00212"/>00212 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00213"/>00213 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00214"/>00214 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00215"/>00215 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifndef&#32;MICROCONTROLLER</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00216"/>00216 &#32;&#32;<link linkend="_class_m_a_i_n_p_r_o_c_1aa2aff4e5ac767790eddc6f6707b7af51">DeleteAllExecParams</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00217"/>00217 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00218"/>00218 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00219"/>00219 &#32;&#32;Factorys_End();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00220"/>00220 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00221"/>00221 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;APP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00222"/>00222 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00223"/>00223 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>)&#32;<link linkend="_class_m_a_i_n_p_r_o_c_1a09b338a1053d25140660176f4ba8ada3">appmain</link>-&gt;<link linkend="_class_a_p_p_m_a_i_n_1a26ebe4f503149e3e1b8ae89aef286f9a">Delete</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00224"/>00224 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00225"/>00225 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00226"/>00226 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00227"/>00227 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__main_proc_8cpp_1ab80fb8685c48c9d1de7954f2508d256c">Main_Proc_PlatformEnd</link>)
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_8cpp_1ab80fb8685c48c9d1de7954f2508d256c">Main_Proc_PlatformEnd</link>(<emphasis role="keyword">this</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00231"/>00231 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00232"/>00232 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00233"/>00233 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00234"/>00234 &#32;&#32;VERSION::DelInstance();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00235"/>00235 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00236"/>00236 &#32;&#32;<link linkend="__x_file_8h_1a9e8aab286aee9488ba13769f0d741b0b">XFILE_DISPLAYNOTCLOSEFILES</link>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00237"/>00237 &#32;&#32;<link linkend="__x_memory___control_8h_1a0ec218a86bf7506dad87c644ada09800">XMEMORY_CONTROL_DISPLAYMEMORYLEAKS</link>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00238"/>00238 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00239"/>00239 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00240"/>00240 }
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00241"/>00241 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00242"/>00242 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00254"/>00254 <emphasis role="keywordtype">bool</emphasis>&#32;MAINPROCESP32::Factorys_Ini()
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00255"/>00255 {
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00256"/>00256 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_f_a_c_t_o_r_y_1ac90e09ebcf9e3742ddda46ccdfee6f23">XFACTORY::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_a_c_t_o_r_y">XESP32FACTORY</link>()))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00257"/>00257 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00258"/>00258 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XSYSTEM_ACTIVE&#32;&#32;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00259"/>00259 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_s_y_s_t_e_m_1a29189cab62d37dce2a557b9170ea3a26">XSYSTEM::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_e_s_p32_s_y_s_t_e_m">XESP32SYSTEM</link>()))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00260"/>00260 &#32;&#32;XBUFFER::SetHardwareUseLittleEndian(GEN_XSYSTEM.HardwareUseLittleEndian());
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00261"/>00261 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00262"/>00262 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00263"/>00263 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XSLEEP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00264"/>00264 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_s_l_e_e_p_1a699e30b12ab2c34a247331b6934d3e39">XSLEEP::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_e_s_p32_s_l_e_e_p">XESP32SLEEP</link>()))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00265"/>00265 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00266"/>00266 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00267"/>00267 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_r_a_n_d_1a21e6002f94625d24b3118f2097e3ce0a">XRAND::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_e_s_p32_r_a_n_d">XESP32RAND</link>()))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00268"/>00268 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00269"/>00269 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00270"/>00270 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XEEPROMMEMORYMANAGER_ACTIVE&#32;&#32;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00271"/>00271 &#32;&#32;<link linkend="_class_x_e_e_p_r_o_m_m_e_m_o_r_y_m_a_n_a_g_e_r_1aaac0cda9c8011f506601ee91bef26bc9">XEEPROMMEMORYMANAGER::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_e_s_p32_e_e_p_r_o_m_m_e_m_o_r_y_m_a_n_a_g_e_r">XESP32EEPROMMEMORYMANAGER</link>());
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00272"/>00272 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_e_e_p_r_o_m_m_e_m_o_r_y_m_a_n_a_g_e_r_1a77c663a2a190b41472f0bfb5ebb437fc">XEEPROMMEMORYMANAGER::GetIsInstanced</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00273"/>00273 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00274"/>00274 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00275"/>00275 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;DIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00276"/>00276 &#32;&#32;DIOFACTORY::SetInstance(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_i_o_e_s_p32_f_a_c_t_o_r_y">DIOESP32FACTORY</link>());
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00277"/>00277 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DIOFACTORY::GetIsInstanced())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00278"/>00278 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00279"/>00279 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;DIO_GPIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_g_p_i_o_1ae4278de9149375359ac11f20a6ca67ee">DIOGPIO::SetInstance</link>(<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_d_i_o_e_s_p32_g_p_i_o">DIOESP32GPIO</link>());
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_d_i_o_g_p_i_o_1ae0c9d6f03a9920da0405858970ed3c19">DIOGPIO::GetIsInstanced</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00282"/>00282 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_d_i_o_g_p_i_o_1a376b13e4fe398f0768cadadb7c97bda3">DIOGPIO::GetInstance</link>().<link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1af38ce0158158700947fe5f02dd7ba7c6">Ini</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00284"/>00284 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00285"/>00285 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00286"/>00286 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00287"/>00287 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00288"/>00288 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00289"/>00289 }
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00290"/>00290 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00291"/>00291 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00301"/>00301 <emphasis role="keywordtype">bool</emphasis>&#32;MAINPROCESP32::Factorys_End()
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00302"/>00302 {
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00303"/>00303 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;DIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00304"/>00304 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00305"/>00305 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifdef&#32;DIO_GPIO_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_d_i_o_g_p_i_o_1ae0c9d6f03a9920da0405858970ed3c19">DIOGPIO::GetIsInstanced</link>())
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_g_p_i_o_1a376b13e4fe398f0768cadadb7c97bda3">DIOGPIO::GetInstance</link>().<link linkend="_class_d_i_o_g_p_i_o_1a33ff07acaa5b157f48ee3b37bb40e5d5">End</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_g_p_i_o_1a3c14eb35c95d7425d5b74c9ebda781e6">DIOGPIO::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00311"/>00311 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00312"/>00312 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00313"/>00313 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(DIOFACTORY::GetIsInstanced())&#32;DIOFACTORY::DelInstance();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00314"/>00314 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00316"/>00316 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XEEPROMMEMORYMANAGER_ACTIVE&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00317"/>00317 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_e_e_p_r_o_m_m_e_m_o_r_y_m_a_n_a_g_e_r_1a77c663a2a190b41472f0bfb5ebb437fc">XEEPROMMEMORYMANAGER::GetIsInstanced</link>())&#32;<link linkend="_class_x_e_e_p_r_o_m_m_e_m_o_r_y_m_a_n_a_g_e_r_1ac10948aeb440a63d84cd1f4546eb510a">XEEPROMMEMORYMANAGER::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00318"/>00318 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00319"/>00319 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00320"/>00320 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XEEPROMMEMORYMANAGER_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00321"/>00321 &#32;&#32;<link linkend="_class_x_e_e_p_r_o_m_m_e_m_o_r_y_m_a_n_a_g_e_r_1ac10948aeb440a63d84cd1f4546eb510a">XEEPROMMEMORYMANAGER::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00322"/>00322 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00323"/>00323 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00324"/>00324 &#32;&#32;<link linkend="_class_x_p_a_t_h_s_m_a_n_a_g_e_r_1a4d3701ec70e6ee78ca90e1d6764d4b1a">XPATHSMANAGER::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00325"/>00325 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00326"/>00326 &#32;&#32;<link linkend="_class_x_t_r_a_n_s_l_a_t_i_o_n_1a9b84e09b184edef5f4e97c2165036d92">XTRANSLATION::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00327"/>00327 &#32;&#32;<link linkend="_class_x_t_r_a_n_s_l_a_t_i_o_n___g_e_n_1a2a380ecf0e37a78e5ee98676e2a070f9">XTRANSLATION_GEN::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00328"/>00328 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00329"/>00329 &#32;&#32;<link linkend="_class_x_r_a_n_d_1ab9d19784c5ff3faa03e744224c1ad2c3">XRAND::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00330"/>00330 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00331"/>00331 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XSLEEP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00332"/>00332 &#32;&#32;<link linkend="_class_x_s_l_e_e_p_1a10c10431ed188718ce23622f058f50ab">XSLEEP::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00333"/>00333 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00334"/>00334 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00335"/>00335 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XSYSTEM_ACTIVE&#32;&#32;</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00336"/>00336 &#32;&#32;<link linkend="_class_x_s_y_s_t_e_m_1aad9f77d850184c13149d7f4cd526eab3">XSYSTEM::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00337"/>00337 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00338"/>00338 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00339"/>00339 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XPUBLISHER_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00340"/>00340 &#32;&#32;<link linkend="_class_x_p_u_b_l_i_s_h_e_r_1a26edb2432d284144113240ff00caa1f4">XPUBLISHER::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00341"/>00341 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00343"/>00343 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;XTHREADCOLLECTED_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00344"/>00344 &#32;&#32;XTHREADSCOLLECTEDMANAGER::DelInstance();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00345"/>00345 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00346"/>00346 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00347"/>00347 &#32;&#32;<link linkend="_class_x_f_a_c_t_o_r_y_1af539fb1685f39758e3844098f9916ef1">XFACTORY::DelInstance</link>();
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00348"/>00348 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00349"/>00349 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00350"/>00350 }
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00351"/>00351 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00352"/>00352 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00363"/>00363 <emphasis role="keywordtype">void</emphasis>&#32;MAINPROCESP32::Clean()
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00364"/>00364 {
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00365"/>00365 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00366"/>00366 }
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00367"/>00367 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00368"/>00368 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00369"/>00369 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00370"/>00370 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00371"/>00371 <emphasis role="comment">/*----&#32;MAIN&#32;FUNCTIONS&#32;------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00372"/>00372 <emphasis role="preprocessor">#pragma&#32;region&#32;MAIN&#32;FUNCTIONS</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00373"/>00373 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00374"/>00374 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00384"/><link linkend="__main_proc_e_s_p32_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">00384</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__main_proc_e_s_p32_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00385"/>00385 {
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00386"/>00386 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;status&#32;=&#32;0;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00387"/>00387 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00388"/>00388 &#32;&#32;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00389"/>00389 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;APP_ACTIVE</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00390"/>00390 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_e_s_p32_8cpp_1a1598c3790b1e688e229bdc094dba4348">mainprocesp32</link>.<link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1af38ce0158158700947fe5f02dd7ba7c6">Ini</link>(&amp;<link linkend="__a_p_p_main_8h_1a30881accd0aa260bddea7ebc6f7be462">GEN_appmain</link>,&#32;<link linkend="__a_p_p_base_8h_1a6991af6c033a919680a6fa0b86f097f2a9a8a095c0dd9d9f15a0ef0c3861c8a5e">APPBASE_APPLICATIONMODE_TYPE_APPLICATION</link>))
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00391"/>00391 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00392"/>00392 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_e_s_p32_8cpp_1a1598c3790b1e688e229bdc094dba4348">mainprocesp32</link>.<link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1af38ce0158158700947fe5f02dd7ba7c6">Ini</link>())
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00393"/>00393 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<link linkend="__main_proc_e_s_p32_8cpp_1a1598c3790b1e688e229bdc094dba4348">mainprocesp32</link>.<link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1a180a814ea1b38ca519fa4260cee39a98">Update</link>())
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00397"/>00397 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00399"/>00399 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;1;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00401"/>00401 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00402"/>00402 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="__main_proc_e_s_p32_8cpp_1a1598c3790b1e688e229bdc094dba4348">mainprocesp32</link>.<link linkend="_class_m_a_i_n_p_r_o_c_e_s_p32_1a0bb7e714f447b16cd8234965171a82e2">End</link>())&#32;status&#32;=&#32;1;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00403"/>00403 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00404"/>00404 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00405"/>00405 }
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00406"/>00406 
<anchor xml:id="__main_proc_e_s_p32_8cpp_source_1l00407"/>00407 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
</programlisting></section>
