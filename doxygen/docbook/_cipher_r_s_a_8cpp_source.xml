<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__cipher_r_s_a_8cpp_source" xml:lang="en-US">
<title>CipherRSA.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/CipherRSA.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__cipher_r_s_a_8cpp_source_1l00001"/>00001 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00031"/>00031 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00033"/>00033 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00035"/>00035 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00036"/>00036 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00039"/>00039 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__cipher_r_s_a_8h">CipherRSA.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00041"/>00041 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00045"/>00045 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_rand_8h">XRand.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_b_e_r_8h">XBER.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00049"/>00049 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_8h">Hash.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00051"/>00051 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00053"/>00053 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00055"/>00055 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00056"/>00056 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00057"/>00057 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00058"/>00058 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00059"/>00059 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00060"/>00060 <link linkend="_class_c_i_p_h_e_r_r_s_a">CIPHERRSA</link>*&#32;CIPHERRSA::instance&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00061"/>00061 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00062"/>00062 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00063"/>00063 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00064"/>00064 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00065"/>00065 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00066"/>00066 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00067"/>00067 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00068"/>00068 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00069"/>00069 <emphasis role="preprocessor">#pragma&#32;region&#32;CIPHERKEYRSAPUBLIC</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00070"/>00070 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00071"/>00071 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00081"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1a75601f119c0e406fea595f3088cb53ee">00081</link> <link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1a75601f119c0e406fea595f3088cb53ee">CIPHERKEYRSAPUBLIC::CIPHERKEYRSAPUBLIC</link>()&#32;:&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y">CIPHERKEY</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00082"/>00082 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00083"/>00083 &#32;&#32;Clean();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00084"/>00084 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00085"/>00085 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_1ad6c501ce84700c9fb626771e635899a1">type</link>&#32;=&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a588037d02adddccad94e477ee850527e">CIPHERKEYTYPE_PUBLIC</link>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00086"/>00086 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00087"/>00087 &#32;&#32;modulus.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00088"/>00088 &#32;&#32;exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00089"/>00089 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00090"/>00090 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00091"/>00091 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00102"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1ac696f0bc55f182bfb0a0a02a7a027106">00102</link> <link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1ac696f0bc55f182bfb0a0a02a7a027106">CIPHERKEYRSAPUBLIC::~CIPHERKEYRSAPUBLIC</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00103"/>00103 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00104"/>00104 &#32;&#32;modulus.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00105"/>00105 &#32;&#32;exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00106"/>00106 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00107"/>00107 &#32;&#32;Clean();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00108"/>00108 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00109"/>00109 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00110"/>00110 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00123"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1aba51c83483e1dfd3946c14d00c221338">00123</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1aba51c83483e1dfd3946c14d00c221338">CIPHERKEYRSAPUBLIC::Get</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;modulus,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;exponent)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00124"/>00124 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00125"/>00125 &#32;&#32;modulus.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;this-&gt;modulus);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00126"/>00126 &#32;&#32;exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;this-&gt;exponent);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00127"/>00127 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00128"/>00128 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00129"/>00129 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00130"/>00130 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00131"/>00131 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00144"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1a6bf40a988bb3088a749c9a8554c58938">00144</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1a6bf40a988bb3088a749c9a8554c58938">CIPHERKEYRSAPUBLIC::Set</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;modulus,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;exponent)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00145"/>00145 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00146"/>00146 &#32;&#32;this-&gt;modulus.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;modulus);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00147"/>00147 &#32;&#32;this-&gt;exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;exponent);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00148"/>00148 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00149"/>00149 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00150"/>00150 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00151"/>00151 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00152"/>00152 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00162"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1adee7411aa68237253001539ca5ece18a">00162</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1adee7411aa68237253001539ca5ece18a">CIPHERKEYRSAPUBLIC::GetSizeInBytes</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00163"/>00163 {&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00164"/>00164 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;modulus.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a77c2140402833bbf789bf15377d5d675">GetSize</link>();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00165"/>00165 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00166"/>00166 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00167"/>00167 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00179"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1a26f5d4fc335277b1268b663752d4aa41">00179</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1a26f5d4fc335277b1268b663752d4aa41">CIPHERKEYRSAPUBLIC::CopyFrom</link>(<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c">CIPHERKEYRSAPUBLIC</link>*&#32;key)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00180"/>00180 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00181"/>00181 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00182"/>00182 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00183"/>00183 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_c_i_p_h_e_r_k_e_y_1a509e56fa1c881619edfa23d8049a1ef7">CIPHERKEY::CopyFrom</link>((<link linkend="_class_c_i_p_h_e_r_k_e_y">CIPHERKEY</link>*)key))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00184"/>00184 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00185"/>00185 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1aba51c83483e1dfd3946c14d00c221338">Get</link>(modulus,&#32;exponent);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00186"/>00186 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00187"/>00187 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00188"/>00188 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00198"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1ad0860cb70f39dbbdff1e3531a6a83754">00198</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1ad0860cb70f39dbbdff1e3531a6a83754">CIPHERKEYRSAPUBLIC::Check</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00199"/>00199 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00200"/>00200 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!modulus.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;!exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00201"/>00201 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((modulus.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1)&#32;==&#32;0&#32;||&#32;(exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1&#32;)&#32;==&#32;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00202"/>00202 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((modulus.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;&lt;&#32;128)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(modulus.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;&gt;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a3849303506d400b327ee2c3dfeb4d4a3">XMPINTEGER_MAXBITS</link>&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00203"/>00203 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;&lt;&#32;2)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;&gt;&#32;&#32;64&#32;))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00204"/>00204 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00205"/>00205 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00206"/>00206 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00207"/>00207 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00208"/>00208 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00219"/>00219 <emphasis role="keywordtype">void</emphasis>&#32;CIPHERKEYRSAPUBLIC::Clean()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00220"/>00220 {&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00221"/>00221 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00222"/>00222 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00223"/>00223 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00224"/>00224 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00225"/>00225 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00226"/>00226 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00227"/>00227 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00228"/>00228 <emphasis role="preprocessor">#pragma&#32;region&#32;CIPHERKEYRSAPRIVATE</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00229"/>00229 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00230"/>00230 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00240"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a81943986458ea97a3d7f94a2ea062b3a">00240</link> <link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a81943986458ea97a3d7f94a2ea062b3a">CIPHERKEYRSAPRIVATE::CIPHERKEYRSAPRIVATE</link>()&#32;:&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y">CIPHERKEY</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00241"/>00241 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00242"/>00242 &#32;&#32;Clean();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00243"/>00243 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00244"/>00244 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_1ad6c501ce84700c9fb626771e635899a1">type</link>&#32;=&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a502afc9251e1d0331301d5931bd75b54">CIPHERKEYTYPE_PRIVATE</link>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00245"/>00245 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00246"/>00246 &#32;&#32;prime1factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00247"/>00247 &#32;&#32;prime2factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00248"/>00248 &#32;&#32;exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00249"/>00249 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00250"/>00250 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00251"/>00251 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00262"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a1d572a3b06752abf5b260221a48a4027">00262</link> <link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a1d572a3b06752abf5b260221a48a4027">CIPHERKEYRSAPRIVATE::~CIPHERKEYRSAPRIVATE</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00263"/>00263 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00264"/>00264 &#32;&#32;prime1factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00265"/>00265 &#32;&#32;prime2factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00266"/>00266 &#32;&#32;exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00267"/>00267 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00268"/>00268 &#32;&#32;Clean();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00269"/>00269 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00270"/>00270 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00271"/>00271 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00285"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a8a2a9d88a0d56e106536d2932d58447c">00285</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a8a2a9d88a0d56e106536d2932d58447c">CIPHERKEYRSAPRIVATE::Get</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;prime1factor,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;prime2factor,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;exponent)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00286"/>00286 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00287"/>00287 &#32;&#32;prime1factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;this-&gt;prime1factor);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00288"/>00288 &#32;&#32;prime2factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;this-&gt;prime2factor);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00289"/>00289 &#32;&#32;exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;this-&gt;exponent);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00290"/>00290 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00291"/>00291 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00292"/>00292 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00293"/>00293 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00294"/>00294 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00308"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a7e756af6594566ea69f455ea10c7b996">00308</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a7e756af6594566ea69f455ea10c7b996">CIPHERKEYRSAPRIVATE::Set</link>(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;prime1factor,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;prime2factor,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&amp;&#32;exponent)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00309"/>00309 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00310"/>00310 &#32;&#32;this-&gt;prime1factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;prime1factor);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00311"/>00311 &#32;&#32;this-&gt;prime2factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;prime2factor);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00312"/>00312 &#32;&#32;this-&gt;exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;exponent);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00313"/>00313 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00314"/>00314 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00315"/>00315 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00316"/>00316 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00317"/>00317 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00327"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a915ae01eae38e195983082e5b8c6ac31">00327</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a915ae01eae38e195983082e5b8c6ac31">CIPHERKEYRSAPRIVATE::GetSizeInBytes</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00328"/>00328 {&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00329"/>00329 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a77c2140402833bbf789bf15377d5d675">GetSize</link>();&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00330"/>00330 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00331"/>00331 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00332"/>00332 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00344"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1ae7933934640ded8144c7f75cc4f7a608">00344</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1ae7933934640ded8144c7f75cc4f7a608">CIPHERKEYRSAPRIVATE::CopyFrom</link>(<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e">CIPHERKEYRSAPRIVATE</link>*&#32;key)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00345"/>00345 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00346"/>00346 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00347"/>00347 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00348"/>00348 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_c_i_p_h_e_r_k_e_y_1a509e56fa1c881619edfa23d8049a1ef7">CIPHERKEY::CopyFrom</link>((<link linkend="_class_c_i_p_h_e_r_k_e_y">CIPHERKEY</link>*)key))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00349"/>00349 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00350"/>00350 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a8a2a9d88a0d56e106536d2932d58447c">Get</link>(prime1factor,&#32;prime2factor,&#32;exponent);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00351"/>00351 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00352"/>00352 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00353"/>00353 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00365"/><link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1abbb078b161bfa7815df0a8c731a2e336">00365</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1abbb078b161bfa7815df0a8c731a2e336">CIPHERKEYRSAPRIVATE::Check</link>(<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c">CIPHERKEYRSAPUBLIC</link>&amp;&#32;publickey)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00366"/>00366 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00367"/>00367 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;PQ;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00368"/>00368 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;DE;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00369"/>00369 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;P1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00370"/>00370 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;Q1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00371"/>00371 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;H;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00372"/>00372 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;I;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00373"/>00373 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;G;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00374"/>00374 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;G2;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00375"/>00375 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;L1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00376"/>00376 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;L2;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00377"/>00377 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;publicmodulus;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00378"/>00378 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;publicexponent;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00379"/>00379 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00380"/>00380 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!publickey.<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1ad0860cb70f39dbbdff1e3531a6a83754">Check</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00381"/>00381 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00382"/>00382 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((!prime1factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>())&#32;||&#32;(!prime2factor.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>())&#32;||&#32;(!exponent.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00383"/>00383 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00384"/>00384 &#32;&#32;publickey.<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1aba51c83483e1dfd3946c14d00c221338">Get</link>(publicmodulus,&#32;publicexponent);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00385"/>00385 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00386"/>00386 &#32;&#32;PQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00387"/>00387 &#32;&#32;DE.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00388"/>00388 &#32;&#32;P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00389"/>00389 &#32;&#32;Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00390"/>00390 &#32;&#32;H.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00391"/>00391 &#32;&#32;I.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00392"/>00392 &#32;&#32;G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00393"/>00393 &#32;&#32;G2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00394"/>00394 &#32;&#32;L1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00395"/>00395 &#32;&#32;L2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00396"/>00396 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00397"/>00397 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!PQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;prime1factor,&#32;&amp;prime2factor))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00398"/>00398 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DE.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;exponent,&#32;&amp;publicexponent))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00399"/>00399 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;prime1factor,&#32;1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00400"/>00400 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;prime2factor,&#32;1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00401"/>00401 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!H.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;P1,&#32;&amp;Q1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00402"/>00402 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a647be123d365bb1a9c8f0737dc0f1770">GreatestCommonDivisor</link>(&amp;G,&#32;&amp;publicexponent,&#32;&amp;H))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00403"/>00403 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!G2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a647be123d365bb1a9c8f0737dc0f1770">GreatestCommonDivisor</link>(&amp;G2,&#32;&amp;P1,&#32;&amp;Q1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00404"/>00404 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!L1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6a235d588c815a00cfc947abf7ee5cef">Division</link>(&amp;L1,&#32;&amp;L2,&#32;&amp;H,&#32;&amp;G2&#32;))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00405"/>00405 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!I.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;I,&#32;&amp;DE,&#32;&amp;L1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00406"/>00406 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00407"/>00407 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;a&#32;valid&#32;PKCS1v2&#32;private&#32;key</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00408"/>00408 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((PQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(publicmodulus)&#32;!=&#32;0)&#32;||
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;(L2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0)&#32;||
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;(I.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0)&#32;||
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;(G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00412"/>00412 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00413"/>00413 &#32;&#32;PQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00414"/>00414 &#32;&#32;DE.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00415"/>00415 &#32;&#32;P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00416"/>00416 &#32;&#32;Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00417"/>00417 &#32;&#32;H.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00418"/>00418 &#32;&#32;I.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00419"/>00419 &#32;&#32;G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00420"/>00420 &#32;&#32;G2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00421"/>00421 &#32;&#32;L1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00422"/>00422 &#32;&#32;L2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00423"/>00423 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00424"/>00424 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00425"/>00425 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00426"/>00426 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00427"/>00427 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00438"/>00438 <emphasis role="keywordtype">void</emphasis>&#32;CIPHERKEYRSAPRIVATE::Clean()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00439"/>00439 {&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00440"/>00440 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00441"/>00441 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00442"/>00442 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00443"/>00443 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00444"/>00444 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00445"/>00445 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00446"/>00446 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00447"/>00447 <emphasis role="preprocessor">#pragma&#32;region&#32;CIPHERRSA_CONTEXT</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00448"/>00448 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00449"/>00449 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00459"/><link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a4b7379f8c7a70dac795869f441c5204f">00459</link> <link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a4b7379f8c7a70dac795869f441c5204f">CIPHERRSA_CONTEXT::CIPHERRSA_CONTEXT</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00460"/>00460 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00461"/>00461 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00462"/>00462 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa1277ae466e5c5acc9601b5310e33a1c">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00463"/>00463 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a6eeca3a06cf1ecc6bdf14110b90cc007">Clean</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00464"/>00464 };
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00465"/>00465 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00466"/>00466 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00477"/><link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1abe743ede2626ea390f18666c564648ca">00477</link> <link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1abe743ede2626ea390f18666c564648ca">CIPHERRSA_CONTEXT::~CIPHERRSA_CONTEXT</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00478"/>00478 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00479"/>00479 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa34d18b755d880e685475481514e6512">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00480"/>00480 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a6eeca3a06cf1ecc6bdf14110b90cc007">Clean</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00481"/>00481 };
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00482"/>00482 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00483"/>00483 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00493"/><link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa1277ae466e5c5acc9601b5310e33a1c">00493</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa1277ae466e5c5acc9601b5310e33a1c">CIPHERRSA_CONTEXT::Ini</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00494"/>00494 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00495"/>00495 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00496"/>00496 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00497"/>00497 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00498"/>00498 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00499"/>00499 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00500"/>00500 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a48e1133f0626a9ea2b80e93c1bc5a7ab">DP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00501"/>00501 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a508033e3cb2911a9ac4463d1bfd3b30d">DQ</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00502"/>00502 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a3eb03f583f28749d40ea06b8543452c2">QP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00503"/>00503 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a75bd767812e4923dd8c0ad6122caf300">RN</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00504"/>00504 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a6b7d1c49a5b564be9920140593bc6790">RP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00505"/>00505 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a46a7380ca6badc68229c07d2e2325ccb">RQ</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00506"/>00506 <emphasis role="preprocessor">&#32;&#32;#if&#32;!defined(CIPHERRSA_RSANOCRT)</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00507"/>00507 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00508"/>00508 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00509"/>00509 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00510"/>00510 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00511"/>00511 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00512"/>00512 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00522"/><link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa34d18b755d880e685475481514e6512">00522</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa34d18b755d880e685475481514e6512">CIPHERRSA_CONTEXT::End</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00523"/>00523 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00524"/>00524 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00525"/>00525 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00526"/>00526 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00527"/>00527 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00528"/>00528 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00529"/>00529 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a48e1133f0626a9ea2b80e93c1bc5a7ab">DP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00530"/>00530 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a508033e3cb2911a9ac4463d1bfd3b30d">DQ</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00531"/>00531 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a3eb03f583f28749d40ea06b8543452c2">QP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00532"/>00532 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a75bd767812e4923dd8c0ad6122caf300">RN</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00533"/>00533 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a6b7d1c49a5b564be9920140593bc6790">RP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00534"/>00534 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a46a7380ca6badc68229c07d2e2325ccb">RQ</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00535"/>00535 <emphasis role="preprocessor">&#32;&#32;#if&#32;!defined(CIPHERRSA_RSANOCRT)</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00536"/>00536 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00537"/>00537 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00538"/>00538 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00539"/>00539 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00540"/>00540 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00541"/>00541 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00552"/><link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a6eeca3a06cf1ecc6bdf14110b90cc007">00552</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a6eeca3a06cf1ecc6bdf14110b90cc007">CIPHERRSA_CONTEXT::Clean</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00553"/>00553 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00554"/>00554 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a6344522c49a2351509d4d3523fe5080c">len</link>&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00555"/>00555 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ac2d485238aded1f853f3eb7fd8c3d0c6">padding</link>&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00556"/>00556 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a27b4c2d5945f334a7f617ace1db3355f">hashID</link>&#32;&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00557"/>00557 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00558"/>00558 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00559"/>00559 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00560"/>00560 <emphasis role="preprocessor">#pragma&#32;endregion&#32;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00561"/>00561 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00562"/>00562 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00563"/>00563 <emphasis role="preprocessor">#pragma&#32;region&#32;CIPHERRSA</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00564"/>00564 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00565"/>00565 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00575"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1aea00d328bd88a7c421acaf10a194413f">00575</link> <link linkend="_class_c_i_p_h_e_r_r_s_a_1aea00d328bd88a7c421acaf10a194413f">CIPHERRSA::CIPHERRSA</link>()&#32;:&#32;<link linkend="_class_c_i_p_h_e_r">CIPHER</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00576"/>00576 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00577"/>00577 &#32;&#32;Clean();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00578"/>00578 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00579"/>00579 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a416572c28446389769158d381de9d24f">type</link>&#32;=&#32;<link linkend="__cipher_8h_1a52cc908e38756716669a3bcb38a61cf7aa2316192f418fd736361011e33bc2dd4">CIPHERTYPE_RSA</link>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00580"/>00580 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00581"/>00581 &#32;&#32;GEN_XFACTORY_CREATE(xrand,&#32;CreateRand())
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00582"/>00582 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00583"/>00583 &#32;&#32;CIPHERRSA::instance&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00584"/>00584 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00585"/>00585 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00586"/>00586 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00597"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1afac057aa52579225399333c6b6cc31b0">00597</link> <link linkend="_class_c_i_p_h_e_r_r_s_a_1afac057aa52579225399333c6b6cc31b0">CIPHERRSA::~CIPHERRSA</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00598"/>00598 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00599"/>00599 &#32;&#32;GEN_XFACTORY.DeleteRand(xrand);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00600"/>00600 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00601"/>00601 &#32;&#32;Clean();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00602"/>00602 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00603"/>00603 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00604"/>00604 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00617"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1a2cf3e3a3b25ac2c52470a5327ef91c78">00617</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1a2cf3e3a3b25ac2c52470a5327ef91c78">CIPHERRSA::SetKey</link>(<link linkend="_class_c_i_p_h_e_r_k_e_y">CIPHERKEY</link>*&#32;key,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;integritycheck)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00618"/>00618 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00619"/>00619 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00620"/>00620 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00621"/>00621 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_1abc3d72dff111cf700f8d1ed5a51a5e74">GetType</link>())
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a056f2d04cee58f83158540595715d079">CIPHERKEYTYPE_SYMMETRICAL</link>&#32;&#32;:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00624"/>00624 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a588037d02adddccad94e477ee850527e">CIPHERKEYTYPE_PUBLIC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c">CIPHERKEYRSAPUBLIC</link>*&#32;publickey&#32;=&#32;(<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c">CIPHERKEYRSAPUBLIC</link>*)key;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00626"/>00626 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;publickey-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1aba51c83483e1dfd3946c14d00c221338">Get</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>,&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>);&#32;<emphasis role="comment">//&#32;Assign&#32;key&#32;public&#32;to&#32;context</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00628"/>00628 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(integritycheck)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!CheckContextPublicKey())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00635"/>00635 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a502afc9251e1d0331301d5931bd75b54">CIPHERKEYTYPE_PRIVATE</link>&#32;&#32;&#32;&#32;&#32;&#32;:&#32;{&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e">CIPHERKEYRSAPRIVATE</link>*&#32;privatekey&#32;=&#32;(<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e">CIPHERKEYRSAPRIVATE</link>*)key;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;P1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Q1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00639"/>00639 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;privatekey-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a8a2a9d88a0d56e106536d2932d58447c">Get</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>,&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>,&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>);&#32;<emphasis role="comment">//&#32;Assign&#32;key&#32;public&#32;to&#32;context</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00641"/>00641 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>,&#32;1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>,&#32;1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a48e1133f0626a9ea2b80e93c1bc5a7ab">DP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a48e1133f0626a9ea2b80e93c1bc5a7ab">DP</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>,&#32;&amp;P1))&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a508033e3cb2911a9ac4463d1bfd3b30d">DQ</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a508033e3cb2911a9ac4463d1bfd3b30d">DQ</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>,&#32;&amp;Q1))&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a3eb03f583f28749d40ea06b8543452c2">QP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a2dd2b2592596abb4ad9936c198b49e89">ModularInverse</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00647"/>00647 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(integritycheck)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!CheckContextPrivateKey())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00652"/>00652 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00656"/>00656 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00658"/>00658 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00659"/>00659 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_1ae2655d45967a87437e48a437c89e2d60">CIPHER::SetKey</link>(key);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00660"/>00660 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00661"/>00661 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00662"/>00662 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00677"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1aa81e1cad545f3af1a7e059982a9cd8e1">00677</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1aa81e1cad545f3af1a7e059982a9cd8e1">CIPHERRSA::Cipher</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;keytouse,&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9">CIPHERRSAPKCS1VERSION</link>&#32;pkcs1version)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00678"/>00678 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00679"/>00679 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00680"/>00680 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00681"/>00681 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;keysize&#32;&#32;&#32;=&#32;GetKeySizeInBytes(keytouse);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00682"/>00682 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!keysize)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00683"/>00683 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00684"/>00684 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;_input;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00685"/>00685 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;output;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00686"/>00686 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;inputparcial;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00687"/>00687 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;sizeblock&#32;=&#32;(keysize-3);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00688"/>00688 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;rest&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(size%sizeblock);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00689"/>00689 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;nblocks&#32;&#32;&#32;=&#32;(size/sizeblock);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00690"/>00690 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;status&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00691"/>00691 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00692"/>00692 &#32;&#32;_input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(input,&#32;size);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00693"/>00693 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00694"/>00694 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00695"/>00695 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00696"/>00696 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;(nblocks+(rest?1:0));&#32;c++)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00697"/>00697 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dosizeblock&#32;=&#32;sizeblock;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00699"/>00699 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;inputparcial.<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;output.<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00702"/>00702 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(c==nblocks)&#32;dosizeblock&#32;=&#32;rest;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00704"/>00704 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;inputparcial.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(&amp;_input.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()[sizeblock*c],&#32;dosizeblock);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00706"/>00706 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(pkcs1version)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9a35b1274075d4839d94fc37d9428ea5d9">CIPHERRSAPKCS1VERSIONV15</link>&#32;&#32;&#32;:&#32;status&#32;=&#32;Cipher_PKCS1_V15(inputparcial.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;dosizeblock,&#32;&#32;output,&#32;keytouse,&#32;pkcs1version,&#32;GenerateRandom,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(output);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00712"/>00712 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9a698eae988d388740d68f734d32c385f3">CIPHERRSAPKCS1VERSIONV21</link>&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00715"/>00715 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00716"/>00716 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00717"/>00717 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00718"/>00718 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00719"/>00719 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00720"/>00720 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00721"/>00721 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00735"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1a0fb25c671d924ab26dffce6f0639f5b4">00735</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1aa81e1cad545f3af1a7e059982a9cd8e1">CIPHERRSA::Cipher</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;input,&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;keytouse,&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9">CIPHERRSAPKCS1VERSION</link>&#32;pkcs1version)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00736"/>00736 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00737"/>00737 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1aa81e1cad545f3af1a7e059982a9cd8e1">Cipher</link>(input.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>(),&#32;keytouse,&#32;pkcs1version);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00738"/>00738 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00739"/>00739 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00740"/>00740 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00755"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1ad2509ab18edee444c7e9099f161c743c">00755</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1ad2509ab18edee444c7e9099f161c743c">CIPHERRSA::Uncipher</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;keytouse,&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9">CIPHERRSAPKCS1VERSION</link>&#32;pkcs1version)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00756"/>00756 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00757"/>00757 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00758"/>00758 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00759"/>00759 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;keysize&#32;=&#32;GetKeySizeInBytes(keytouse);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00760"/>00760 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!keysize)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00761"/>00761 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00762"/>00762 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;_input;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00763"/>00763 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;output;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00764"/>00764 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;inputparcial;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00765"/>00765 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;sizeblock&#32;=&#32;keysize;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00766"/>00766 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;rest&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(size%sizeblock);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00767"/>00767 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;nblocks&#32;&#32;&#32;=&#32;(size/sizeblock);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00768"/>00768 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;status&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00769"/>00769 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00770"/>00770 &#32;&#32;_input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(input,&#32;size);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00771"/>00771 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00772"/>00772 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00773"/>00773 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00774"/>00774 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;(nblocks+(rest?1:0));&#32;c++)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00775"/>00775 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dosizeblock&#32;=&#32;sizeblock;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00777"/>00777 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;inputparcial.<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;output.<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00780"/>00780 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(c==nblocks)&#32;dosizeblock&#32;=&#32;rest;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00782"/>00782 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;inputparcial.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(&amp;_input.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()[sizeblock*c],&#32;dosizeblock);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00784"/>00784 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00785"/>00785 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(pkcs1version)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9a35b1274075d4839d94fc37d9428ea5d9">CIPHERRSAPKCS1VERSIONV15</link>&#32;&#32;&#32;:&#32;status&#32;=&#32;Uncipher_PKCS1_V15(inputparcial.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;dosizeblock,&#32;&#32;output,&#32;keytouse,&#32;pkcs1version,&#32;GenerateRandom,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a81d924a4beba9c1acb6bb56f3fdf181a">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(output);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00790"/>00790 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9a698eae988d388740d68f734d32c385f3">CIPHERRSAPKCS1VERSIONV21</link>&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00793"/>00793 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00794"/>00794 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00795"/>00795 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00796"/>00796 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00797"/>00797 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00798"/>00798 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00799"/>00799 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00813"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1a475b7cc4e43908ad1e9b5816f1a8d8c0">00813</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1ad2509ab18edee444c7e9099f161c743c">CIPHERRSA::Uncipher</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;input,&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;keytouse,&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9">CIPHERRSAPKCS1VERSION</link>&#32;pkcs1version)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00814"/>00814 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00815"/>00815 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1ad2509ab18edee444c7e9099f161c743c">Uncipher</link>(input.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>(),&#32;keytouse,&#32;pkcs1version);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00816"/>00816 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00817"/>00817 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00818"/>00818 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00834"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1a468e58ce24f00c2d63022770cabdb460">00834</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1a468e58ce24f00c2d63022770cabdb460">CIPHERRSA::Sign</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;keytouse,&#32;<link linkend="_class_h_a_s_h">HASH</link>*&#32;hash,&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9">CIPHERRSAPKCS1VERSION</link>&#32;pkcs1version)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00835"/>00835 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00836"/>00836 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!hash)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00837"/>00837 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00838"/>00838 &#32;&#32;<link linkend="_class_x_b_e_r">XBER</link>&#32;&#32;&#32;&#32;&#32;&#32;beroui;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00839"/>00839 &#32;&#32;<link linkend="_class_x_b_e_r">XBER</link>&#32;&#32;&#32;&#32;&#32;&#32;bernull;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00840"/>00840 &#32;&#32;<link linkend="_class_x_b_e_r">XBER</link>&#32;&#32;&#32;&#32;&#32;&#32;berhash;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00841"/>00841 &#32;&#32;<link linkend="_class_x_b_e_r">XBER</link>&#32;&#32;&#32;&#32;&#32;&#32;berseq1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00842"/>00842 &#32;&#32;<link linkend="_class_x_b_e_r">XBER</link>&#32;&#32;&#32;&#32;&#32;&#32;berseq2;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00843"/>00843 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;&#32;OUINoSignstring&#32;=&#32;hash-&gt;<link linkend="_class_h_a_s_h_1a522059dfbc865d939b75ca32dc5c8a89">GetOUINoSign</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00844"/>00844 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;sign;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00845"/>00845 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00846"/>00846 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!OUINoSignstring)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00847"/>00847 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00848"/>00848 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!OUINoSignstring-&gt;<link linkend="_class_x_s_t_r_i_n_g_1a7c3fa0dd7b650399470c76192fbd4916">GetSize</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00849"/>00849 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00850"/>00850 &#32;&#32;beroui.<link linkend="_class_x_b_e_r_1a6bffb554534d59127ed5c5ad553b45f2">SetOID</link>(OUINoSignstring-&gt;<link linkend="_class_x_s_t_r_i_n_g_1ad1470753a96f93e2feb3ee54e6fef95f">Get</link>());
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00851"/>00851 &#32;&#32;bernull.<link linkend="_class_x_b_e_r_1a2dc96e7f0eb802c9d7021f50e886b6d7">SetNULL</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00852"/>00852 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00853"/>00853 &#32;&#32;hash-&gt;<link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">Do</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)input,&#32;size);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00854"/>00854 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00855"/>00855 &#32;&#32;berhash.<link linkend="_class_x_b_e_r_1a9ceeb3393012b9bdf411a4a51d8ccb58">SetOCTETSTRING</link>((*hash-&gt;<link linkend="_class_h_a_s_h_1a4b0200f295e136f81ec538fe28913879">GetResult</link>()));
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00856"/>00856 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00857"/>00857 &#32;&#32;berseq1.<link linkend="_class_x_b_e_r_1ac58eb8e27d2d87b646c03bb2cfad39bc">Sequence_AddTo</link>(beroui);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00858"/>00858 &#32;&#32;berseq1.<link linkend="_class_x_b_e_r_1ac58eb8e27d2d87b646c03bb2cfad39bc">Sequence_AddTo</link>(bernull);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00859"/>00859 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00860"/>00860 &#32;&#32;berseq1.<link linkend="_class_x_b_e_r_1ad973f65b4a392d08b117c2c71dac9a2d">SetTagType</link>(berseq1.<link linkend="_class_x_b_e_r_1a5aabca00dbce9f5e3a277e9b73f42f38">GetTagType</link>()|(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(<link linkend="__x_b_e_r_8h_1a75ef1fd4550240b1ef16527c872cd164">XBERTYPE_ISCONSTRUCTED</link>));
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00861"/>00861 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00862"/>00862 &#32;&#32;berseq2.<link linkend="_class_x_b_e_r_1ac58eb8e27d2d87b646c03bb2cfad39bc">Sequence_AddTo</link>(berseq1);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00863"/>00863 &#32;&#32;berseq2.<link linkend="_class_x_b_e_r_1ac58eb8e27d2d87b646c03bb2cfad39bc">Sequence_AddTo</link>(berhash);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00864"/>00864 &#32;&#32;berseq2.<link linkend="_class_x_b_e_r_1ad973f65b4a392d08b117c2c71dac9a2d">SetTagType</link>(berseq2.<link linkend="_class_x_b_e_r_1a5aabca00dbce9f5e3a277e9b73f42f38">GetTagType</link>()|(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(<link linkend="__x_b_e_r_8h_1a75ef1fd4550240b1ef16527c872cd164">XBERTYPE_ISCONSTRUCTED</link>));
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00865"/>00865 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00866"/>00866 &#32;&#32;berseq2.<link linkend="_class_x_b_e_r_1ac5552a05cc42610bdc3327c516aa4e9f">GetDump</link>(sign);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00867"/>00867 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00868"/>00868 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1aa81e1cad545f3af1a7e059982a9cd8e1">Cipher</link>(sign,&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a502afc9251e1d0331301d5931bd75b54">CIPHERKEYTYPE_PRIVATE</link>,&#32;pkcs1version);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00869"/>00869 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00870"/>00870 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00871"/>00871 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00886"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1a0d45960d75743f31ed5339a5ac302900">00886</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1a468e58ce24f00c2d63022770cabdb460">CIPHERRSA::Sign</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;input,&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;keytouse,&#32;<link linkend="_class_h_a_s_h">HASH</link>*&#32;hash,&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9">CIPHERRSAPKCS1VERSION</link>&#32;pkcs1version)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00887"/>00887 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00888"/>00888 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1a468e58ce24f00c2d63022770cabdb460">Sign</link>(input.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>(),&#32;keytouse,&#32;hash,&#32;pkcs1version);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00889"/>00889 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00890"/>00890 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00891"/>00891 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00901"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1a61095ac5022f4cb99ea87375299e3203">00901</link> <link linkend="_class_c_i_p_h_e_r_r_s_a">CIPHERRSA</link>*&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1a61095ac5022f4cb99ea87375299e3203">CIPHERRSA::GetInstance</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00902"/>00902 {&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00903"/>00903 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;instance;&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00904"/>00904 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00905"/>00905 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00906"/>00906 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00916"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1a9fa65e92093e97e773792103aaeafa70">00916</link> <link linkend="_class_x_r_a_n_d">XRAND</link>*&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1a9fa65e92093e97e773792103aaeafa70">CIPHERRSA::GetXRand</link>()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00917"/>00917 {&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00918"/>00918 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;xrand;&#32;&#32;&#32;&#32;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00919"/>00919 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00920"/>00920 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00921"/>00921 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00938"/><link linkend="_class_c_i_p_h_e_r_r_s_a_1a7d63b3c4313085260ab0c7364a95d4f1">00938</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_c_i_p_h_e_r_r_s_a_1a7d63b3c4313085260ab0c7364a95d4f1">CIPHERRSA::GenerateKeys</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;nbits,&#32;<emphasis role="keywordtype">int</emphasis>&#32;exponent,&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c">CIPHERKEYRSAPUBLIC</link>&amp;&#32;publickey,&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e">CIPHERKEYRSAPRIVATE</link>&amp;&#32;privatekey,&#32;<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>&#32;funcrandom,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;paramrandom)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00939"/>00939 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00940"/>00940 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;P1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00941"/>00941 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;Q1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00942"/>00942 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;H;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00943"/>00943 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;G;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00944"/>00944 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;status;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00945"/>00945 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00946"/>00946 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(nbits&lt;128&#32;||&#32;exponent&lt;3&#32;)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00947"/>00947 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00948"/>00948 &#32;&#32;P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00949"/>00949 &#32;&#32;Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00950"/>00950 &#32;&#32;H.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00951"/>00951 &#32;&#32;G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00952"/>00952 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00953"/>00953 &#32;&#32;<emphasis role="comment">//&#32;find&#32;primes&#32;P&#32;and&#32;Q&#32;with&#32;Q&#32;&lt;&#32;P&#32;so&#32;that:&#32;GCD(&#32;E,&#32;(P-1)*(Q-1)&#32;)&#32;==&#32;1</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00954"/>00954 &#32;&#32;status&#32;=&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f197e450fc285f958c96c7e6041792b">LeftSet</link>(exponent);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00955"/>00955 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00956"/>00956 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae29bcb9b95430e57bca665999e20f873">GeneratePrime</link>((nbits+1)&gt;&gt;1,&#32;0,&#32;funcrandom?funcrandom:(<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>)GenerateRandom,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae29bcb9b95430e57bca665999e20f873">GeneratePrime</link>((nbits+1)&gt;&gt;1,&#32;0,&#32;funcrandom?funcrandom:(<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>)GenerateRandom,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00959"/>00959 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>)&#32;&lt;&#32;0)&#32;&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ad8c5d754d6b803de1c3df205430b63cd">Swap</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00961"/>00961 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>)&#32;==&#32;0)&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00963"/>00963 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00965"/>00965 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()!=nbits)&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00967"/>00967 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>,&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>,&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00970"/>00970 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00971"/>00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!H.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;P1,&#32;&amp;Q1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00972"/>00972 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00973"/>00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a647be123d365bb1a9c8f0737dc0f1770">GreatestCommonDivisor</link>(&amp;G,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>,&#32;&amp;H))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00974"/>00974 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00975"/>00975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;!=&#32;0);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00976"/>00976 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00977"/>00977 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;D&#32;&#32;=&#32;E^-1&#32;mod&#32;((P-1)*(Q-1))</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DP&#32;=&#32;D&#32;mod&#32;(P&#32;-&#32;1)</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;DQ&#32;=&#32;D&#32;mod&#32;(Q&#32;-&#32;1)</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;QP&#32;=&#32;Q^-1&#32;mod&#32;P</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00982"/>00982 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a2dd2b2592596abb4ad9936c198b49e89">ModularInverse</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>,&#32;&amp;H))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a48e1133f0626a9ea2b80e93c1bc5a7ab">DP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a48e1133f0626a9ea2b80e93c1bc5a7ab">DP</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>,&#32;&amp;P1))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a48e1133f0626a9ea2b80e93c1bc5a7ab">DP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a508033e3cb2911a9ac4463d1bfd3b30d">DQ</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>,&#32;&amp;Q1))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00986"/>00986 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a3eb03f583f28749d40ea06b8543452c2">QP</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a2dd2b2592596abb4ad9936c198b49e89">ModularInverse</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00987"/>00987 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a6344522c49a2351509d4d3523fe5080c">len</link>&#32;=&#32;(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;+&#32;7)&#32;&gt;&gt;&#32;3;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00989"/>00989 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00990"/>00990 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00991"/>00991 &#32;&#32;P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00992"/>00992 &#32;&#32;Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00993"/>00993 &#32;&#32;H.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00994"/>00994 &#32;&#32;G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00995"/>00995 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00996"/>00996 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00997"/>00997 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa34d18b755d880e685475481514e6512">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l00999"/>00999 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01000"/>01000 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01001"/>01001 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;publickey.<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_u_b_l_i_c_1a6bf40a988bb3088a749c9a8554c58938">Set</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>,&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;privatekey.<link linkend="_class_c_i_p_h_e_r_k_e_y_r_s_a_p_r_i_v_a_t_e_1a7e756af6594566ea69f455ea10c7b996">Set</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>,&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>,&#32;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01004"/>01004 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01005"/>01005 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01006"/>01006 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01007"/>01007 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01008"/>01008 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01009"/>01009 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01019"/>01019 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERRSA::CheckContextPublicKey()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01020"/>01020 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01021"/>01021 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()&#32;&#32;&#32;&#32;&#32;&#32;||&#32;!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01022"/>01022 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1)&#32;==&#32;0&#32;||&#32;(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()[0]&#32;&amp;&#32;1&#32;)&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01023"/>01023 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;&lt;&#32;128)&#32;||&#32;(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;&gt;&#32;&#32;<link linkend="__x_m_p_integer_8h_1a3849303506d400b327ee2c3dfeb4d4a3">XMPINTEGER_MAXBITS</link>&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01024"/>01024 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;&lt;&#32;2)&#32;&#32;&#32;||&#32;(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a298be227c8effa636167f68e35ce7b6c">GetMSB</link>()&#32;&gt;&#32;&#32;64&#32;))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01025"/>01025 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01026"/>01026 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01027"/>01027 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01028"/>01028 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01029"/>01029 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01039"/>01039 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERRSA::CheckContextPrivateKey()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01040"/>01040 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01041"/>01041 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;PQ;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01042"/>01042 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;DE;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01043"/>01043 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;P1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01044"/>01044 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;Q1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01045"/>01045 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;H;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01046"/>01046 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;I;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01047"/>01047 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;G;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01048"/>01048 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;G2;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01049"/>01049 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;L1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01050"/>01050 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;L2;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01051"/>01051 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;DP;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01052"/>01052 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;DQ;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01053"/>01053 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;QP;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01054"/>01054 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01055"/>01055 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!CheckContextPublicKey())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01056"/>01056 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01057"/>01057 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>())&#32;||&#32;(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>())&#32;||&#32;(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01058"/>01058 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01059"/>01059 &#32;&#32;PQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01060"/>01060 &#32;&#32;DE.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01061"/>01061 &#32;&#32;P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01062"/>01062 &#32;&#32;Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01063"/>01063 &#32;&#32;H.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01064"/>01064 &#32;&#32;I.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01065"/>01065 &#32;&#32;G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01066"/>01066 &#32;&#32;G2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01067"/>01067 &#32;&#32;L1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01068"/>01068 &#32;&#32;L2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01069"/>01069 &#32;&#32;DP.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01070"/>01070 &#32;&#32;DQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01071"/>01071 &#32;&#32;QP.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01072"/>01072 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01073"/>01073 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!PQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01074"/>01074 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DE.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01075"/>01075 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>,&#32;1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01076"/>01076 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>,&#32;1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01077"/>01077 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!H.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;P1,&#32;&amp;Q1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01078"/>01078 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a647be123d365bb1a9c8f0737dc0f1770">GreatestCommonDivisor</link>(&amp;G,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>,&#32;&amp;H))&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01079"/>01079 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!G2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a647be123d365bb1a9c8f0737dc0f1770">GreatestCommonDivisor</link>(&amp;G2,&#32;&amp;P1,&#32;&amp;Q1))&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01080"/>01080 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!L1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6a235d588c815a00cfc947abf7ee5cef">Division</link>(&amp;L1,&#32;&amp;L2,&#32;&amp;H,&#32;&amp;G2&#32;))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01081"/>01081 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!I.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;I,&#32;&amp;DE,&#32;&amp;L1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01082"/>01082 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DP.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&#32;&amp;DP,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>,&#32;&amp;P1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01083"/>01083 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!DQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;DQ,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>,&#32;&amp;Q1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01084"/>01084 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!QP.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a2dd2b2592596abb4ad9936c198b49e89">ModularInverse</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01085"/>01085 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01086"/>01086 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;for&#32;a&#32;valid&#32;PKCS1v2&#32;private&#32;key</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01087"/>01087 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01088"/>01088 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((PQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>&#32;)&#32;!=&#32;0)&#32;||&#32;(DP.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a48e1133f0626a9ea2b80e93c1bc5a7ab">DP</link>)&#32;!=&#32;0)&#32;||
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01089"/>01089 &#32;&#32;&#32;&#32;&#32;(DQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a508033e3cb2911a9ac4463d1bfd3b30d">DQ</link>)&#32;!=&#32;0)&#32;||&#32;(QP.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a3eb03f583f28749d40ea06b8543452c2">QP</link>)&#32;!=&#32;0)&#32;||
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01090"/>01090 &#32;&#32;&#32;&#32;&#32;(L2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0)&#32;||&#32;(I.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0)&#32;||
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;(G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!=&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01092"/>01092 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01093"/>01093 &#32;&#32;PQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01094"/>01094 &#32;&#32;DE.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01095"/>01095 &#32;&#32;P1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01096"/>01096 &#32;&#32;Q1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01097"/>01097 &#32;&#32;H.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01098"/>01098 &#32;&#32;I.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01099"/>01099 &#32;&#32;G.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01100"/>01100 &#32;&#32;G2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01101"/>01101 &#32;&#32;L1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01102"/>01102 &#32;&#32;L2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01103"/>01103 &#32;&#32;DP.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01104"/>01104 &#32;&#32;DQ.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01105"/>01105 &#32;&#32;QP.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01106"/>01106 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01107"/>01107 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01108"/>01108 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01109"/>01109 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01110"/>01110 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01128"/>01128 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERRSA::Cipher_PKCS1_V15(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;output,&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;keytypetouse,&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9">CIPHERRSAPKCS1VERSION</link>&#32;pkcs1version,&#32;&#32;<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>&#32;funcrandom,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;paramrandom)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01129"/>01129 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01130"/>01130 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;input;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01131"/>01131 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;nb_pad;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01132"/>01132 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;status;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01133"/>01133 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01134"/>01134 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!funcrandom)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01135"/>01135 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01136"/>01136 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;keysize&#32;=&#32;GetKeySizeInBytes(keytypetouse);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01137"/>01137 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!keysize)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01138"/>01138 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01139"/>01139 &#32;&#32;<emphasis role="comment">//if(keysize&#32;&lt;&#32;(size&#32;+&#32;11))&#32;return&#32;false;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01140"/>01140 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01141"/>01141 &#32;&#32;nb_pad&#32;=&#32;keysize&#32;-&#32;3&#32;-&#32;size;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01142"/>01142 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01143"/>01143 &#32;&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)0);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01144"/>01144 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01145"/>01145 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(keytypetouse&#32;==&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a588037d02adddccad94e477ee850527e">CIPHERKEYTYPE_PUBLIC</link>)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01146"/>01146 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01147"/>01147 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;data&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01148"/>01148 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)<link linkend="__cipher_r_s_a_8h_1a51a97c85a6c1b1b866f931e14ab64bad">CIPHERRSA_CIPHERDATA</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01150"/>01150 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(nb_pad&#32;&gt;&#32;0)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01152"/>01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(funcrandom(&amp;data,&#32;1,&#32;paramrandom))
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)data);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nb_pad--;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01157"/>01157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01158"/>01158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01159"/>01159 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01160"/>01160 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01161"/>01161 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)<link linkend="__cipher_r_s_a_8h_1ad1054a4c2ec28a5571ef69a96804f5a1">CIPHERRSA_SINGDATA</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01163"/>01163 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01164"/>01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(nb_pad--&#32;&gt;&#32;0)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01165"/>01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)0xFF);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01167"/>01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01168"/>01168 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01169"/>01169 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01170"/>01170 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01171"/>01171 &#32;&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)0);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01172"/>01172 &#32;&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(buffer,size);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01173"/>01173 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01174"/>01174 &#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01175"/>01175 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01176"/>01176 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(keytypetouse)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01177"/>01177 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01178"/>01178 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a588037d02adddccad94e477ee850527e">CIPHERKEYTYPE_PUBLIC</link>&#32;&#32;&#32;:&#32;status&#32;=&#32;DoRSAPublicOperation(input,&#32;output);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01179"/>01179 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a502afc9251e1d0331301d5931bd75b54">CIPHERKEYTYPE_PRIVATE</link>&#32;&#32;:&#32;status&#32;=&#32;DoRSAPrivateOperation(input,&#32;output,&#32;funcrandom,&#32;paramrandom);&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01180"/>01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01181"/>01181 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01182"/>01182 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01183"/>01183 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01184"/>01184 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01185"/>01185 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01186"/>01186 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01204"/>01204 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERRSA::Uncipher_PKCS1_V15(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;output,&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;keytypetouse,&#32;<link linkend="__cipher_r_s_a_8h_1a6cfaf9b2b65e822d7c5c9b3ccad599a9">CIPHERRSAPKCS1VERSION</link>&#32;pkcs1version,&#32;&#32;<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>&#32;funcrandom,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;paramrandom)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01205"/>01205 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01206"/>01206 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;input;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01207"/>01207 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;_output;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01208"/>01208 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;pad_chk;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01209"/>01209 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;pad_count&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01210"/>01210 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;pad_done&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01211"/>01211 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;status;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01212"/>01212 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01213"/>01213 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!funcrandom)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01214"/>01214 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01215"/>01215 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;keysize&#32;=&#32;GetKeySizeInBytes(keytypetouse);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01216"/>01216 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!keysize)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01217"/>01217 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01218"/>01218 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((keysize&#32;&lt;&#32;16)&#32;||&#32;(keysize&#32;&gt;&#32;<link linkend="__x_m_p_integer_8h_1a19179c980ec8dae3e46b27d8637cd710">XMPINTEGER_MAXSIZE</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01219"/>01219 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01220"/>01220 &#32;&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(buffer,&#32;size);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01221"/>01221 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01222"/>01222 &#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01223"/>01223 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01224"/>01224 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(keytypetouse)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01225"/>01225 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a588037d02adddccad94e477ee850527e">CIPHERKEYTYPE_PUBLIC</link>&#32;&#32;&#32;:&#32;status&#32;=&#32;DoRSAPublicOperation(input&#32;,&#32;_output);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01227"/>01227 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a502afc9251e1d0331301d5931bd75b54">CIPHERKEYTYPE_PRIVATE</link>&#32;&#32;:&#32;status&#32;=&#32;DoRSAPrivateOperation(input,&#32;_output,&#32;funcrandom,&#32;paramrandom);&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01228"/>01228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01229"/>01229 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01230"/>01230 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01231"/>01231 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!status)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01232"/>01232 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01233"/>01233 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01234"/>01234 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01235"/>01235 &#32;&#32;pad_chk&#32;&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01236"/>01236 &#32;&#32;pad_chk&#32;|=&#32;_output.<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(index++);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01237"/>01237 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01238"/>01238 &#32;&#32;pad_chk&#32;|=&#32;(_output.<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(index++))&#32;^&#32;&#32;((keytypetouse&#32;==&#32;<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a502afc9251e1d0331301d5931bd75b54">CIPHERKEYTYPE_PRIVATE</link>)?&#32;<link linkend="__cipher_r_s_a_8h_1a51a97c85a6c1b1b866f931e14ab64bad">CIPHERRSA_CIPHERDATA</link>&#32;:&#32;<link linkend="__cipher_r_s_a_8h_1ad1054a4c2ec28a5571ef69a96804f5a1">CIPHERRSA_SINGDATA</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01239"/>01239 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01240"/>01240 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i=0;&#32;i&lt;size-3;&#32;i++)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01241"/>01241 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01242"/>01242 &#32;&#32;&#32;&#32;&#32;&#32;pad_done&#32;&#32;|=&#32;(_output.<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(index+i)&#32;==&#32;0);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;pad_count&#32;+=&#32;(pad_done&#32;==&#32;0);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01244"/>01244 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01245"/>01245 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01246"/>01246 &#32;&#32;index&#32;+=&#32;pad_count;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01247"/>01247 &#32;&#32;pad_chk&#32;|=&#32;_output.<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(index++);&#32;<emphasis role="comment">//&#32;Must&#32;be&#32;zero</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01248"/>01248 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01249"/>01249 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01250"/>01250 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(pad_chk)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01251"/>01251 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01252"/>01252 &#32;&#32;output.<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>(&amp;_output.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()[index],&#32;(size-index));
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01253"/>01253 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01254"/>01254 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01255"/>01255 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01256"/>01256 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01257"/>01257 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01270"/>01270 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERRSA::DoRSAPublicOperation(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;input,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;output)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01271"/>01271 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01272"/>01272 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;keysize&#32;=&#32;GetKeySizeInBytes(<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a588037d02adddccad94e477ee850527e">CIPHERKEYTYPE_PUBLIC</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01273"/>01273 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!keysize)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01274"/>01274 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01275"/>01275 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;T;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01276"/>01276 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01277"/>01277 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01278"/>01278 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01279"/>01279 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2f2b711b6bca96642fa27864d10c15f">SetFromXBuffer</link>(input))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01280"/>01280 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01281"/>01281 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>)&gt;=0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01282"/>01282 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01283"/>01283 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a54122d8e6604b19f34d973c59e43e8e9">SlidingWindowExponentiation</link>(&amp;T,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a75bd767812e4923dd8c0ad6122caf300">RN</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01284"/>01284 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01285"/>01285 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a53867802376ada2dd4c165a255ab8ad3">GetToXBuffer</link>(output,&#32;keysize))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01286"/>01286 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01287"/>01287 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01288"/>01288 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01289"/>01289 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01290"/>01290 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01305"/>01305 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERRSA::DoRSAPrivateOperation(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;input,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;output,&#32;<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>&#32;funcrandom,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;paramrandom)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01306"/>01306 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01307"/>01307 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;T;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01308"/>01308 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;T1;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01309"/>01309 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>&#32;&#32;T2;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01310"/>01310 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01311"/>01311 <emphasis role="preprocessor">&#32;&#32;#if&#32;!defined(CIPHERRSA_RSANOCRT)</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01312"/>01312 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;Vi;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01313"/>01313 &#32;&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;Vf;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01314"/>01314 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01315"/>01315 &#32;&#32;Vi&#32;=&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01316"/>01316 &#32;&#32;Vf&#32;=&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01317"/>01317 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01318"/>01318 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01319"/>01319 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01320"/>01320 &#32;&#32;T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01321"/>01321 &#32;&#32;T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a9f05fbe61890e093f9ba67a1b47ea57f">Ini</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01322"/>01322 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01323"/>01323 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac2f2b711b6bca96642fa27864d10c15f">SetFromXBuffer</link>(input))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01324"/>01324 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01325"/>01325 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>)&gt;=0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01326"/>01326 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01327"/>01327 <emphasis role="preprocessor">&#32;&#32;#if&#32;defined(CIPHERRSA_RSANOCRT)</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01328"/>01328 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a54122d8e6604b19f34d973c59e43e8e9">SlidingWindowExponentiation</link>(&amp;T,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1ab71a36afbc71d46a8bdb0098fbb7007d">D</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a75bd767812e4923dd8c0ad6122caf300">RN</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01329"/>01329 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01330"/>01330 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(funcrandom&#32;!=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01331"/>01331 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01332"/>01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Blinding&#32;&#32;&#32;T&#32;=&#32;T&#32;*&#32;Vi&#32;mod&#32;N</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01333"/>01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!PrepareBlinding(Vi,&#32;Vf,&#32;funcrandom,&#32;paramrandom))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01334"/>01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;T,&#32;Vi&#32;))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&#32;&amp;T,&#32;&amp;T,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01337"/>01337 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01338"/>01338 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;faster&#32;decryption&#32;using&#32;the&#32;CRT</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01339"/>01339 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;T1&#32;=&#32;input&#32;^&#32;dP&#32;mod&#32;P</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01340"/>01340 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;T2&#32;=&#32;input&#32;^&#32;dQ&#32;mod&#32;Q</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01341"/>01341 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01342"/>01342 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a54122d8e6604b19f34d973c59e43e8e9">SlidingWindowExponentiation</link>(&amp;T,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a48e1133f0626a9ea2b80e93c1bc5a7ab">DP</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a6b7d1c49a5b564be9920140593bc6790">RP</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01343"/>01343 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a54122d8e6604b19f34d973c59e43e8e9">SlidingWindowExponentiation</link>(&amp;T,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a508033e3cb2911a9ac4463d1bfd3b30d">DQ</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a46a7380ca6badc68229c07d2e2325ccb">RQ</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01344"/>01344 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01345"/>01345 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;T&#32;=&#32;(T1&#32;-&#32;T2)&#32;*&#32;(Q^-1&#32;mod&#32;P)&#32;mod&#32;P</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01346"/>01346 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a6f3a94795898655b7df2dc879ed5e5f1">SubtractionSigned</link>(&amp;T1,&#32;&amp;T2))&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01347"/>01347 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;T,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a3eb03f583f28749d40ea06b8543452c2">QP</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01348"/>01348 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;T,&#32;&amp;T1,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1aa9a025f0e39d4ecb4fc07dddbf9aac92">P</link>))&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01349"/>01349 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01350"/>01350 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;T&#32;=&#32;T2&#32;+&#32;T&#32;*&#32;Q</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01351"/>01351 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;T,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1acd9d7eff323d82e359b51f2c4a60baeb">Q</link>&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01352"/>01352 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab1b467331ec32836bd3cc0b54bc025ac">AdditionSigned</link>(&amp;T2,&#32;&amp;T1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01353"/>01353 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01354"/>01354 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(funcrandom!=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01355"/>01355 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01356"/>01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unblind&#32;T&#32;=&#32;T&#32;*&#32;Vf&#32;mod&#32;N</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01357"/>01357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;T,&#32;Vf))&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01358"/>01358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;T,&#32;&amp;T,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01359"/>01359 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01360"/>01360 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01361"/>01361 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01362"/>01362 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;keysize&#32;=&#32;GetKeySizeInBytes(<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a502afc9251e1d0331301d5931bd75b54">CIPHERKEYTYPE_PRIVATE</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01363"/>01363 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!keysize)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01364"/>01364 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01365"/>01365 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a53867802376ada2dd4c165a255ab8ad3">GetToXBuffer</link>(output,&#32;keysize))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01366"/>01366 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01367"/>01367 &#32;&#32;T.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01368"/>01368 &#32;&#32;T1.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01369"/>01369 &#32;&#32;T2.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae6dc37bf0f0cdb413ae2e42aafc4c0b6">End</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01370"/>01370 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01371"/>01371 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01372"/>01372 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01373"/>01373 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01374"/>01374 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01375"/>01375 <emphasis role="preprocessor">#if&#32;!defined(CIPHERRSA_RSANOCRT)</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01390"/>01390 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERRSA::PrepareBlinding(<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;Vi,&#32;<link linkend="_class_x_m_p_i_n_t_e_g_e_r">XMPINTEGER</link>*&#32;Vf,&#32;<link linkend="__x_m_p_integer_8h_1ad2bb269acb31703d2fe9aac10134738f">XMPINTEGER_FUNCRANDOM</link>&#32;funcrandom,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;paramrandom)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01391"/>01391 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01392"/>01392 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01393"/>01393 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01394"/>01394 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ac3f1fbbbd1a86523e1244fbc4e89cb2b">GetLimbs</link>()!=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01395"/>01395 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01396"/>01396 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;We&#32;already&#32;have&#32;blinding&#32;values,&#32;just&#32;update&#32;them&#32;by&#32;squaring</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>))&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01399"/>01399 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ab013f91a10b9c09a211d0d0933a6986f">Multiplication</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>))&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01400"/>01400 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a238c7673e465982c059b980e61bf8fce">Module</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01401"/>01401 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01402"/>01402 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01403"/>01403 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01404"/>01404 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;keysize&#32;=&#32;GetKeySizeInBytes(<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a502afc9251e1d0331301d5931bd75b54">CIPHERKEYTYPE_PRIVATE</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!keysize)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01406"/>01406 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01407"/>01407 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Unblinding&#32;value:&#32;Vf&#32;=&#32;random&#32;number,&#32;invertible&#32;mod&#32;N</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01408"/>01408 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>++&#32;&gt;&#32;10)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01409"/>01409 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01410"/>01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a60f5ce3976c38dd8058e7ece2643571e">FillRandom</link>(keysize-1,&#32;funcrandom,&#32;paramrandom))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01411"/>01411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a647be123d365bb1a9c8f0737dc0f1770">GreatestCommonDivisor</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01412"/>01412 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01413"/>01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1ae13a55ba49009e67c6ed200e20e6038d">CompareSignedValues</link>(1)!=0);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01414"/>01414 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01415"/>01415 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Blinding&#32;value:&#32;Vi&#32;=&#32;&#32;Vf^(-e)&#32;mod&#32;N</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01416"/>01416 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a2dd2b2592596abb4ad9936c198b49e89">ModularInverse</link>(&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>.<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a54122d8e6604b19f34d973c59e43e8e9">SlidingWindowExponentiation</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a515469f0415e4ce82167b5ac8b9e2ba0">E</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a5c2923bd2ce5684d4a3effe980139af7">N</link>,&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a75bd767812e4923dd8c0ad6122caf300">RN</link>&#32;))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01418"/>01418 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01419"/>01419 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01420"/>01420 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(Vi&#32;!=&#32;&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01421"/>01421 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Vi-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a33fa3e10a85f22e261c8accc07cb4d84">Vi</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!Vf-&gt;<link linkend="_class_x_m_p_i_n_t_e_g_e_r_1a1b41ac6d5258d4e3581ffa58f25da132">CopyFrom</link>(&amp;context.<link linkend="_class_c_i_p_h_e_r_r_s_a___c_o_n_t_e_x_t_1a19255a187e35beb8c452aeb60e22431d">Vf</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01424"/>01424 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01425"/>01425 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01426"/>01426 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01427"/>01427 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01428"/>01428 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01429"/>01429 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01430"/>01430 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01442"/>01442 <emphasis role="keywordtype">int</emphasis>&#32;CIPHERRSA::GetKeySizeInBytes(<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0">CIPHERKEYTYPE</link>&#32;keytouse)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01443"/>01443 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01444"/>01444 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;keysize&#32;=&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01445"/>01445 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01446"/>01446 &#32;&#32;<link linkend="_class_c_i_p_h_e_r_k_e_y">CIPHERKEY</link>*&#32;key&#32;=&#32;&#32;<link linkend="_class_c_i_p_h_e_r_1a617de7ca065e58b8b29d54c246ab7e05">GetKey</link>(<link linkend="__cipher_key_8h_1a89ede88d7cb071f6ba999841bdb412f0a502afc9251e1d0331301d5931bd75b54">CIPHERKEYTYPE_PRIVATE</link>);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01447"/>01447 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!key)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01448"/>01448 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01449"/>01449 &#32;&#32;keysize&#32;=&#32;key-&gt;<link linkend="_class_c_i_p_h_e_r_k_e_y_1a1940b9081ce06724af45c8cd15a88b19">GetSizeInBytes</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01450"/>01450 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01451"/>01451 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;keysize;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01452"/>01452 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01453"/>01453 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01454"/>01454 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01468"/>01468 <emphasis role="keywordtype">bool</emphasis>&#32;CIPHERRSA::GenerateRandom(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;param)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01469"/>01469 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01470"/>01470 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_c_i_p_h_e_r_r_s_a_1a61095ac5022f4cb99ea87375299e3203">GetInstance</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01471"/>01471 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01472"/>01472 &#32;&#32;<link linkend="_class_x_r_a_n_d">XRAND</link>*&#32;xrand&#32;=&#32;instance-&gt;<link linkend="_class_c_i_p_h_e_r_r_s_a_1a9fa65e92093e97e773792103aaeafa70">GetXRand</link>();
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01473"/>01473 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xrand)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01474"/>01474 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01475"/>01475 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(param&#32;!=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;param&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01476"/>01476 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01477"/>01477 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;size;&#32;c++)
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01478"/>01478 &#32;&#32;&#32;&#32;{
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01479"/>01479 &#32;&#32;&#32;&#32;&#32;&#32;buffer[c]&#32;=&#32;xrand-&gt;<link linkend="_class_x_r_a_n_d_1a147136eb09d2359d7c95ec835d6406b6">Max</link>(255);
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01480"/>01480 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!buffer[c])&#32;buffer[c]++;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01481"/>01481 &#32;&#32;&#32;&#32;}
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01482"/>01482 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01483"/>01483 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01484"/>01484 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01485"/>01485 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01486"/>01486 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01497"/>01497 <emphasis role="keywordtype">void</emphasis>&#32;CIPHERRSA::Clean()
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01498"/>01498 {
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01499"/>01499 &#32;&#32;xrand&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01500"/>01500 }
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01501"/>01501 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01502"/>01502 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01503"/>01503 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01504"/>01504 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01505"/>01505 
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01506"/>01506 <emphasis role="preprocessor">#pragma&#32;endregion&#32;</emphasis>
<anchor xml:id="__cipher_r_s_a_8cpp_source_1l01507"/>01507 
</programlisting></section>
