<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_bus_pirate_8cpp_source" xml:lang="en-US">
<title>DIOBusPirate.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/DataIO/Drivers/DIOBusPirate.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00031"/>00031 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00033"/>00033 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00035"/>00035 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_bus_pirate_8h">DIOBusPirate.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00041"/>00041 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_sleep_8h">XSleep.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00046"/>00046 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_factory_8h">DIOFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_config_8h">DIOStreamConfig.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_stream_8h">DIOStream.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00050"/>00050 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00052"/>00052 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00055"/>00055 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00060"/>00060 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00061"/>00061 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00062"/>00062 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00064"/>00064 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00065"/>00065 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00077"/><link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a5b8786fbab52b4ec2eb6d7728c9905af">00077</link> <link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a5b8786fbab52b4ec2eb6d7728c9905af">DIOBUSPIRATE::DIOBUSPIRATE</link>(<link linkend="_class_d_i_o_s_t_r_e_a_m">DIOSTREAM</link>*&#32;diostream)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00078"/>00078 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00079"/>00079 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00080"/>00080 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00081"/>00081 &#32;&#32;this-&gt;diostream&#32;&#32;&#32;&#32;&#32;=&#32;diostream;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00082"/>00082 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00083"/>00083 &#32;&#32;GEN_XFACTORY_CREATE(xtimerout,&#32;CreateTimer())&#32;&#32;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00084"/>00084 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00085"/>00085 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00086"/>00086 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00097"/><link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a61dd474fa747606a63db7eb9ec718bcd">00097</link> <link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a61dd474fa747606a63db7eb9ec718bcd">DIOBUSPIRATE::~DIOBUSPIRATE</link>()
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00098"/>00098 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00099"/>00099 &#32;&#32;<link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a4ea521a800125baa2d192b9bdbd974ee">End</link>();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00100"/>00100 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00101"/>00101 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xtimerout)&#32;GEN_XFACTORY.DeleteTimer(xtimerout);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00102"/>00102 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00103"/>00103 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00104"/>00104 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00105"/>00105 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00106"/>00106 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00118"/><link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1aeca7febf440b9e124a76bd66f998581b">00118</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1aeca7febf440b9e124a76bd66f998581b">DIOBUSPIRATE::Ini</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00119"/>00119 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00120"/>00120 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00121"/>00121 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00122"/>00122 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1aabb682ec186c5290636d82b3e5fa1a5c">Open</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00123"/>00123 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1acff76db4bc54a48fe2d2ceb165835c2f">WaitToConnected</link>(<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00124"/>00124 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00125"/>00125 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!WriteCommand(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;&quot;</emphasis>),&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>))&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00126"/>00126 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!WriteCommand(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;m&quot;</emphasis>),&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>))&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00127"/>00127 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!WriteCommand(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;1&quot;</emphasis>)&#32;,&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>))&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00128"/>00128 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00129"/>00129 &#32;&#32;GEN_XSLEEP.Seconds(1);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00130"/>00130 &#32;&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1aa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a3c14ba0ca9dfbf20b5127c87b275cb93">Empty</link>();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00131"/>00131 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00132"/>00132 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a58194045ce55ec760b5894872971e6e6">GetActualProtocol</link>()&#32;==&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4dab2ea3d654cc1e44bd77542e093a8aef3">DIOBUSPIRATETYPEPROCOTOL_HIZ</link>);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00133"/>00133 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00134"/>00134 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00135"/>00135 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00147"/><link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a58194045ce55ec760b5894872971e6e6">00147</link> <link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4d">DIOBUSPIRATETYPEPROCOTOL</link>&#32;<link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a58194045ce55ec760b5894872971e6e6">DIOBUSPIRATE::GetActualProtocol</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00148"/>00148 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00149"/>00149 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4dabc3e42d26f7c0f7fc902d0d878c6dd72">DIOBUSPIRATETYPEPROCOTOL_UNKNOWN</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00150"/>00150 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a076ead754b614eb3ba77ccb3a9e45455">GetConnectStatus</link>()&#32;!=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa264f9a9556afb61979d377ba92266a76">DIOSTREAMSTATUS_CONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4dabc3e42d26f7c0f7fc902d0d878c6dd72">DIOBUSPIRATETYPEPROCOTOL_UNKNOWN</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00151"/>00151 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00152"/>00152 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;promptstatus;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00153"/>00153 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00154"/>00154 &#32;&#32;WriteCommand(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;&quot;</emphasis>),&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00155"/>00155 &#32;&#32;ReadPromptStatus(promptstatus,&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00156"/>00156 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00157"/>00157 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(promptstatus.<link linkend="_class_x_s_t_r_i_n_g_1aa5d59b7b88102beb4def8fe054449653">Find</link>(<link linkend="__d_i_o_bus_pirate_8h_1ab977a4498fb712870f70bf76eb40ac2d">DIOBUSPIRATE_COMMANDMENU_PROTOCOL_HIZ</link>,&#32;<emphasis role="keyword">false</emphasis>)&#32;!=&#32;<link linkend="__x_string_8h_1aee1ccda748b3ca0a483afb84276e3fc6">XSTRING_NOTFOUND</link>)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4dab2ea3d654cc1e44bd77542e093a8aef3">DIOBUSPIRATETYPEPROCOTOL_HIZ</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(promptstatus.<link linkend="_class_x_s_t_r_i_n_g_1aa5d59b7b88102beb4def8fe054449653">Find</link>(<link linkend="__d_i_o_bus_pirate_8h_1a718407478b066df2473d4a6d51452cd8">DIOBUSPIRATE_COMMANDMENU_PROTOCOL_1WIRE</link>,&#32;<emphasis role="keyword">false</emphasis>)&#32;!=&#32;<link linkend="__x_string_8h_1aee1ccda748b3ca0a483afb84276e3fc6">XSTRING_NOTFOUND</link>)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4daa0bb533b1f7fa91ac493cd01293e72ea">DIOBUSPIRATETYPEPROCOTOL_1WIRE</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(promptstatus.<link linkend="_class_x_s_t_r_i_n_g_1aa5d59b7b88102beb4def8fe054449653">Find</link>(<link linkend="__d_i_o_bus_pirate_8h_1a6e42e8cbd3f62d2a0a32631d5305a903">DIOBUSPIRATE_COMMANDMENU_PROTOCOL_UART</link>,&#32;<emphasis role="keyword">false</emphasis>)&#32;!=&#32;<link linkend="__x_string_8h_1aee1ccda748b3ca0a483afb84276e3fc6">XSTRING_NOTFOUND</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4dada3e212579fae9fb073fd8031f988c25">DIOBUSPIRATETYPEPROCOTOL_UART</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(promptstatus.<link linkend="_class_x_s_t_r_i_n_g_1aa5d59b7b88102beb4def8fe054449653">Find</link>(<link linkend="__d_i_o_bus_pirate_8h_1a17ead04699306d5af50be476d2ab60a1">DIOBUSPIRATE_COMMANDMENU_PROTOCOL_I2C</link>,&#32;<emphasis role="keyword">false</emphasis>)&#32;!=&#32;<link linkend="__x_string_8h_1aee1ccda748b3ca0a483afb84276e3fc6">XSTRING_NOTFOUND</link>)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4dadb0d5a53017253bda4abda5e2ecc871d">DIOBUSPIRATETYPEPROCOTOL_I2C</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(promptstatus.<link linkend="_class_x_s_t_r_i_n_g_1aa5d59b7b88102beb4def8fe054449653">Find</link>(<link linkend="__d_i_o_bus_pirate_8h_1ab108f614225a6813ddb427b9c1bb67c2">DIOBUSPIRATE_COMMANDMENU_PROTOCOL_SPI</link>,&#32;<emphasis role="keyword">false</emphasis>)&#32;!=&#32;<link linkend="__x_string_8h_1aee1ccda748b3ca0a483afb84276e3fc6">XSTRING_NOTFOUND</link>)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4da7f5bef6e601aab1ffe61b027f42ef11d">DIOBUSPIRATETYPEPROCOTOL_SPI</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(promptstatus.<link linkend="_class_x_s_t_r_i_n_g_1aa5d59b7b88102beb4def8fe054449653">Find</link>(<link linkend="__d_i_o_bus_pirate_8h_1a0ac2123b5fecedcbf1b5beb32a4b7110">DIOBUSPIRATE_COMMANDMENU_PROTOCOL_2WIRE</link>,&#32;<emphasis role="keyword">false</emphasis>)&#32;!=&#32;<link linkend="__x_string_8h_1aee1ccda748b3ca0a483afb84276e3fc6">XSTRING_NOTFOUND</link>)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4da8f3ede293355efc7831a8edf0899077a">DIOBUSPIRATETYPEPROCOTOL_2WIRE</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(promptstatus.<link linkend="_class_x_s_t_r_i_n_g_1aa5d59b7b88102beb4def8fe054449653">Find</link>(<link linkend="__d_i_o_bus_pirate_8h_1af9f4b01be4b0418823406de44dd767dd">DIOBUSPIRATE_COMMANDMENU_PROTOCOL_3WIRE</link>,&#32;<emphasis role="keyword">false</emphasis>)&#32;!=&#32;<link linkend="__x_string_8h_1aee1ccda748b3ca0a483afb84276e3fc6">XSTRING_NOTFOUND</link>)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4da76251f2ff6203d81530a5e1bbac44ee8">DIOBUSPIRATETYPEPROCOTOL_3WIRE</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00164"/>00164 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00165"/>00165 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4dabc3e42d26f7c0f7fc902d0d878c6dd72">DIOBUSPIRATETYPEPROCOTOL_UNKNOWN</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00166"/>00166 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00167"/>00167 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00168"/>00168 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00184"/><link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a0e2121f0d5e4643ca17e8b0463e9be7f">00184</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a0e2121f0d5e4643ca17e8b0463e9be7f">DIOBUSPIRATE::SetMode</link>(<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4d">DIOBUSPIRATETYPEPROCOTOL</link>&#32;protocol,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;issoftware,&#32;<emphasis role="keywordtype">int</emphasis>&#32;speed,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;issniffer,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00185"/>00185 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00186"/>00186 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xtimerout)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00187"/>00187 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00188"/>00188 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a076ead754b614eb3ba77ccb3a9e45455">GetConnectStatus</link>()&#32;!=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa264f9a9556afb61979d377ba92266a76">DIOSTREAMSTATUS_CONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00189"/>00189 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00190"/>00190 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;option;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00191"/>00191 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00192"/>00192 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00193"/>00193 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>(protocol)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__d_i_o_bus_pirate_8h_1a9e2a53af92a434db9c5920e6b7c97d4dadb0d5a53017253bda4abda5e2ecc871d">DIOBUSPIRATETYPEPROCOTOL_I2C</link>&#32;:&#32;<emphasis role="keywordflow">if</emphasis>(WriteCommand(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;m&quot;</emphasis>),&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>))
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;option.<link linkend="_class_x_s_t_r_i_n_g_1a2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%d&quot;</emphasis>),&#32;protocol);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(WriteCommand(option,&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>))
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;option.<link linkend="_class_x_s_t_r_i_n_g_1a2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%d&quot;</emphasis>),&#32;issoftware?1:2);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(WriteCommand(option,&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>))
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;option.<link linkend="_class_x_s_t_r_i_n_g_1a2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%d&quot;</emphasis>),&#32;speed);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(WriteCommand(option,&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>))
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(issniffer)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;option.<link linkend="_class_x_s_t_r_i_n_g_1a2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;(2)&quot;</emphasis>),&#32;speed);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;WriteCommand(option,&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00210"/>00210 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00216"/>00216 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GEN_XSLEEP.Seconds(1);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1aa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a3c14ba0ca9dfbf20b5127c87b275cb93">Empty</link>();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00220"/>00220 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;&#32;:&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00222"/>00222 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00224"/>00224 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00225"/>00225 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00226"/>00226 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00227"/>00227 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00228"/>00228 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00241"/><link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a4b8d9e626b23f0bcdba6829fa0fb8db8">00241</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a4b8d9e626b23f0bcdba6829fa0fb8db8">DIOBUSPIRATE::ReadI2CSnifferCommand</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;in,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;out)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00242"/>00242 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00243"/>00243 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;xbuffer;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00244"/>00244 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;foundend&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00245"/>00245 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;stringsize&#32;&#32;=&#32;0;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00246"/>00246 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00247"/>00247 &#32;&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1aa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a7f7fefde5619da5cfb66dc34f4cd4b08">SetBlocked</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00248"/>00248 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;(int)diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1aa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>();c++)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1aa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(c)&#32;==&#32;<emphasis role="charliteral">&apos;]&apos;</emphasis>)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stringsize++;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foundend&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00255"/>00255 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;stringsize++;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00258"/>00258 &#32;&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1aa48e892d5c3e70987015f1858d4df326">GetInXBuffer</link>()-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a7f7fefde5619da5cfb66dc34f4cd4b08">SetBlocked</link>(<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00259"/>00259 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00260"/>00260 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!foundend)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00261"/>00261 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00262"/>00262 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;string;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00263"/>00263 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00264"/>00264 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>[stringsize+1];
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00265"/>00265 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!buffer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00266"/>00266 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00267"/>00267 &#32;&#32;memset(buffer,&#32;0,&#32;stringsize+1);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00268"/>00268 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00269"/>00269 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;br&#32;=&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a20cd6c3635818f96468dee8bc601aec1">Read</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)buffer,&#32;stringsize);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00270"/>00270 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(br&#32;!=&#32;stringsize)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00271"/>00271 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00272"/>00272 &#32;&#32;<emphasis role="keywordtype">string</emphasis>.Empty();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00273"/>00273 &#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>*)buffer;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00274"/>00274 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00275"/>00275 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;[]&#32;buffer;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00276"/>00276 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00277"/>00277 &#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(1,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%s&quot;</emphasis>),&#32;<emphasis role="keywordtype">string</emphasis>.Get());
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00278"/>00278 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00279"/>00279 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00280"/>00280 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00281"/>00281 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00282"/>00282 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00292"/><link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a4ea521a800125baa2d192b9bdbd974ee">00292</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_b_u_s_p_i_r_a_t_e_1a4ea521a800125baa2d192b9bdbd974ee">DIOBUSPIRATE::End</link>()
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00293"/>00293 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00294"/>00294 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream)&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1ac96f340bb4dde0df51163901fd5cb617">Close</link>();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00295"/>00295 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00296"/>00296 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00297"/>00297 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00298"/>00298 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00299"/>00299 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00312"/>00312 <emphasis role="keywordtype">bool</emphasis>&#32;DIOBUSPIRATE::ReadPromptStatus(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;promptstatus,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00313"/>00313 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00314"/>00314 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00315"/>00315 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a076ead754b614eb3ba77ccb3a9e45455">GetConnectStatus</link>()&#32;!=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa264f9a9556afb61979d377ba92266a76">DIOSTREAMSTATUS_CONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00316"/>00316 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00317"/>00317 &#32;&#32;promptstatus.<link linkend="_class_x_s_t_r_i_n_g_1a9275997c1605fa79646c301e63a77d06">Empty</link>();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00318"/>00318 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00319"/>00319 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xtimerout)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00320"/>00320 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00321"/>00321 &#32;&#32;xtimerout-&gt;<link linkend="_class_x_t_i_m_e_r_1a461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00322"/>00322 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00323"/>00323 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(1)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a6e20f03ff391343123fda221a5c2ed85">WaitToFilledReadingBuffer</link>(1,&#32;1))
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;data;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a20cd6c3635818f96468dee8bc601aec1">Read</link>(&amp;data,&#32;1))
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(data&#32;!=&#32;<emphasis role="charliteral">&apos;&gt;&apos;</emphasis>)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;promptstatus.<link linkend="_class_x_s_t_r_i_n_g_1ae19f84471c20a914d10a8ac757cacb9a">Add</link>(data);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00335"/>00335 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xtimerout-&gt;<link linkend="_class_x_t_i_m_e_r_1a461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00339"/>00339 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((<emphasis role="keywordtype">int</emphasis>)xtimerout-&gt;<link linkend="_class_x_t_i_m_e_r_1a02ae3c82df51ec1ed16288fe102d9d8b">GetMeasureSeconds</link>()&#32;&gt;=&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00342"/>00342 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00343"/>00343 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00344"/>00344 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00345"/>00345 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00346"/>00346 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00359"/>00359 <emphasis role="keywordtype">bool</emphasis>&#32;DIOBUSPIRATE::WriteCommand(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;command,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>)
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00360"/>00360 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00361"/>00361 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diostream)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00362"/>00362 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a076ead754b614eb3ba77ccb3a9e45455">GetConnectStatus</link>()&#32;!=&#32;<link linkend="__d_i_o_stream_8h_1ad10214ba9a07bd0f22017499f6f59a0fa264f9a9556afb61979d377ba92266a76">DIOSTREAMSTATUS_CONNECTED</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00363"/>00363 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00364"/>00364 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;_command;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00365"/>00365 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;status;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00366"/>00366 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00367"/>00367 &#32;&#32;_command&#32;&#32;=&#32;command;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00368"/>00368 &#32;&#32;_command&#32;+=&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;\r&quot;</emphasis>);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00369"/>00369 &#32;&#32;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00370"/>00370 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;charstr;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00371"/>00371 &#32;&#32;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00372"/>00372 &#32;&#32;_command.<link linkend="_class_x_s_t_r_i_n_g_1acdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(charstr);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00373"/>00373 &#32;&#32;status&#32;=&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1ac04f4ad8ff28b97128a876063103dd50">Write</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)charstr.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;_command.<link linkend="_class_x_s_t_r_i_n_g_1a7c3fa0dd7b650399470c76192fbd4916">GetSize</link>())?<emphasis role="keyword">true</emphasis>:<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00374"/>00374 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)&#32;&#32;status&#32;=&#32;diostream-&gt;<link linkend="_class_d_i_o_s_t_r_e_a_m_1a59dc380e213dd083940c80663667dae7">WaitToFlushOutXBuffer</link>(<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>);
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00375"/>00375 &#32;&#32;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00376"/>00376 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00377"/>00377 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00378"/>00378 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00379"/>00379 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00390"/>00390 <emphasis role="keywordtype">void</emphasis>&#32;DIOBUSPIRATE::Clean()
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00391"/>00391 {
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00392"/>00392 &#32;&#32;diostream&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00393"/>00393 &#32;&#32;xtimerout&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00394"/>00394 }
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00395"/>00395 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00396"/>00396 
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00397"/>00397 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_bus_pirate_8cpp_source_1l00398"/>00398 
</programlisting></section>
