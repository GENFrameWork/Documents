<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g_r_p_bitmap_sequence_8cpp_source" xml:lang="en-US">
<title>GRPBitmapSequence.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Graphic/GRPBitmapSequence.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00001"/>00001 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00031"/>00031 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00033"/>00033 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00035"/>00035 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00036"/>00036 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00039"/>00039 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_sequence_8h">GRPBitmapSequence.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00041"/>00041 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_timer_8h">XTimer.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00044"/>00044 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_rect_8h">GRPRect.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_bitmap_8h">GRPBitmap.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00047"/>00047 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00049"/>00049 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00051"/>00051 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00052"/>00052 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00053"/>00053 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00055"/>00055 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00057"/>00057 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00058"/>00058 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00059"/>00059 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00060"/>00060 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00061"/>00061 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00062"/>00062 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_BITMAPFRAME</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00064"/>00064 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00065"/>00065 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00075"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1af02a7bf5def787ab738d5d9854d28ce4">00075</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1af02a7bf5def787ab738d5d9854d28ce4">GRPBITMAPFRAME::GRPBITMAPFRAME</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00076"/>00076 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00077"/>00077 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00078"/>00078 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00079"/>00079 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00080"/>00080 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00091"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a1d69636944508d4a4e403c0ea91c6a82">00091</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a1d69636944508d4a4e403c0ea91c6a82">GRPBITMAPFRAME::~GRPBITMAPFRAME</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00092"/>00092 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00093"/>00093 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;bitmap;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00094"/>00094 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00095"/>00095 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00096"/>00096 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00097"/>00097 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00107"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a540cb18d0bbf50644f63e4a0d731e299">00107</link> <link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a540cb18d0bbf50644f63e4a0d731e299">GRPBITMAPFRAME::GetBitmap</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00108"/>00108 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00109"/>00109 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bitmap;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00110"/>00110 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00111"/>00111 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00112"/>00112 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00122"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a509e8a4059d3b4309f0e68eaa824bc6b">00122</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a509e8a4059d3b4309f0e68eaa824bc6b">GRPBITMAPFRAME::GetAjustX</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00123"/>00123 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00124"/>00124 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ajustx;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00125"/>00125 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00126"/>00126 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00127"/>00127 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00137"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a4d28920b548b649ec86932ee08972c83">00137</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a4d28920b548b649ec86932ee08972c83">GRPBITMAPFRAME::GetAjustY</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00138"/>00138 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00139"/>00139 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ajusty;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00140"/>00140 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00141"/>00141 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00142"/>00142 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00154"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1af0e7edb4c5df1c6f9f51112509b7f9c2">00154</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1af0e7edb4c5df1c6f9f51112509b7f9c2">GRPBITMAPFRAME::SetBitmap</link>(<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00155"/>00155 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00156"/>00156 &#32;&#32;this-&gt;bitmap&#32;=&#32;bitmap;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00157"/>00157 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00158"/>00158 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00159"/>00159 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00171"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1aac11fb2c54c4d3ebb11f09e853f13860">00171</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1aac11fb2c54c4d3ebb11f09e853f13860">GRPBITMAPFRAME::SetAjustX</link>(<emphasis role="keywordtype">int</emphasis>&#32;ajustx)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00172"/>00172 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00173"/>00173 &#32;&#32;this-&gt;ajustx&#32;=&#32;ajustx;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00174"/>00174 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00175"/>00175 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00176"/>00176 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00188"/><link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a97a498e972836221cf2e6b2ee061fc37">00188</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a97a498e972836221cf2e6b2ee061fc37">GRPBITMAPFRAME::SetAjustY</link>(<emphasis role="keywordtype">int</emphasis>&#32;ajusty)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00189"/>00189 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00190"/>00190 &#32;&#32;this-&gt;ajusty&#32;=&#32;ajusty;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00191"/>00191 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00192"/>00192 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00193"/>00193 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00204"/>00204 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPFRAME::Clean()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00205"/>00205 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00206"/>00206 &#32;&#32;bitmap&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00207"/>00207 &#32;&#32;ajustx&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00208"/>00208 &#32;&#32;ajusty&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00209"/>00209 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00210"/>00210 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00211"/>00211 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00212"/>00212 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00213"/>00213 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00214"/>00214 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00215"/>00215 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_GRPBITMAPSEQUENCE</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00216"/>00216 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00217"/>00217 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00227"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a26e05c1da2cb020576413a5a5901edd8">00227</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a26e05c1da2cb020576413a5a5901edd8">GRPBITMAPSEQUENCE::GRPBITMAPSEQUENCE</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00228"/>00228 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00229"/>00229 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00230"/>00230 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00231"/>00231 &#32;&#32;GEN_XFACTORY_CREATE(timer,&#32;CreateTimer())
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00232"/>00232 &#32;&#32;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00233"/>00233 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a278b17fb213236c19a423e879d5eeb10">AjustTime</link>(<link linkend="__g_r_p_bitmap_sequence_8h_1a6ca0338dba77f09bb08ede05ae912a24">GRPBITMAPSEQUENCE_FRAMESSECOND</link>);&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00234"/>00234 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00235"/>00235 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00236"/>00236 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00247"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a635dc6e2da1b4a12ec79bab792cac454">00247</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a635dc6e2da1b4a12ec79bab792cac454">GRPBITMAPSEQUENCE::~GRPBITMAPSEQUENCE</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00248"/>00248 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00249"/>00249 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(timer)&#32;GEN_XFACTORY.DeleteTimer(timer);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00250"/>00250 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00251"/>00251 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1ae398d73842117d3ff7711685510ac7eb">DelAllSequence</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00252"/>00252 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00253"/>00253 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00254"/>00254 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00255"/>00255 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00256"/>00256 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00270"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a92c924c1e5e3beb73e3d5d4f48c8fd49">00270</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a92c924c1e5e3beb73e3d5d4f48c8fd49">GRPBITMAPSEQUENCE::AddFrame</link>(<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ajustx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ajusty)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00271"/>00271 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00272"/>00272 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;frame&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00273"/>00273 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!frame)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00274"/>00274 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00275"/>00275 &#32;&#32;frame-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1af0e7edb4c5df1c6f9f51112509b7f9c2">SetBitmap</link>(bitmap);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00276"/>00276 &#32;&#32;frame-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1aac11fb2c54c4d3ebb11f09e853f13860">SetAjustX</link>(ajustx);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00277"/>00277 &#32;&#32;frame-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a97a498e972836221cf2e6b2ee061fc37">SetAjustY</link>(ajusty);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00278"/>00278 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00279"/>00279 &#32;&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1a51a790aac8efd4603aee608ddcc83423">Add</link>(frame);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00280"/>00280 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00281"/>00281 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00282"/>00282 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00283"/>00283 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00284"/>00284 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00296"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1ae398d73842117d3ff7711685510ac7eb">00296</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1ae398d73842117d3ff7711685510ac7eb">GRPBITMAPSEQUENCE::DelAllSequence</link>(<emphasis role="keywordtype">bool</emphasis>&#32;full)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00297"/>00297 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00298"/>00298 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00299"/>00299 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00300"/>00300 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(full)&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1abae5097402824f18f274e21e18b23bea">DeleteContents</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00301"/>00301 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00302"/>00302 &#32;&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1a57c72ab04fd14c60d1026e0a7b4a1887">DeleteAll</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00303"/>00303 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00304"/>00304 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00305"/>00305 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00306"/>00306 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00307"/>00307 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00317"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a307bde46b6b4af9217f846e24613c38b">00317</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a307bde46b6b4af9217f846e24613c38b">GRPBITMAPSEQUENCE::GetActualFrame</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00318"/>00318 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00319"/>00319 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(frameindex);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00320"/>00320 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00321"/>00321 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00322"/>00322 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00332"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1ae4bcdd975ae89f184413137de9b31f47">00332</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1ae4bcdd975ae89f184413137de9b31f47">GRPBITMAPSEQUENCE::GetActualFrameIndex</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00333"/>00333 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00334"/>00334 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frameindex;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00335"/>00335 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00336"/>00336 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00337"/>00337 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00349"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a02d9e85884ffb461e45c0042f2e88ea6">00349</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a02d9e85884ffb461e45c0042f2e88ea6">GRPBITMAPSEQUENCE::GetFrame</link>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;nframe)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00350"/>00350 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00351"/>00351 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(nframe&gt;=(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00352"/>00352 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(nframe);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00353"/>00353 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00354"/>00354 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00355"/>00355 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00365"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a22b3a4afcf5edb63b9dba3483d7e74b7">00365</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a22b3a4afcf5edb63b9dba3483d7e74b7">GRPBITMAPSEQUENCE::GetNFrames</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00366"/>00366 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00367"/>00367 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00368"/>00368 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00369"/>00369 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00370"/>00370 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00380"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a6d0627d644760bd0e174234acbeead4e">00380</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a6d0627d644760bd0e174234acbeead4e">GRPBITMAPSEQUENCE::GetNLoops</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00381"/>00381 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00382"/>00382 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nloops;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00383"/>00383 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00384"/>00384 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00385"/>00385 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00395"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1af215682659fed92fb2585e49d251dd69">00395</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1af215682659fed92fb2585e49d251dd69">GRPBITMAPSEQUENCE::GetNLoopsMade</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00396"/>00396 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00397"/>00397 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nloopsmade;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00398"/>00398 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00399"/>00399 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00400"/>00400 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00412"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a63d3f1f85f6d228b98a72881296ee8b2">00412</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a63d3f1f85f6d228b98a72881296ee8b2">GRPBITMAPSEQUENCE::SetNLoops</link>(<emphasis role="keywordtype">int</emphasis>&#32;nloops)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00413"/>00413 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00414"/>00414 &#32;&#32;this-&gt;nloops&#32;=&#32;nloops;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00415"/>00415 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00416"/>00416 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00417"/>00417 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00418"/>00418 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00419"/>00419 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00431"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1aea99d42bbea9d455a96ae33579817652">00431</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1aea99d42bbea9d455a96ae33579817652">GRPBITMAPSEQUENCE::SetNLoopsMade</link>(<emphasis role="keywordtype">int</emphasis>&#32;nloopsmade)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00432"/>00432 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00433"/>00433 &#32;&#32;this-&gt;nloopsmade&#32;=&#32;nloopsmade;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00434"/>00434 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00435"/>00435 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00436"/>00436 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00437"/>00437 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00438"/>00438 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00451"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a099415d2d5603fae5adc32c4dc73d6b6">00451</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a099415d2d5603fae5adc32c4dc73d6b6">GRPBITMAPSEQUENCE::AjustAllSequence</link>(<emphasis role="keywordtype">int</emphasis>&#32;ajustx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ajusty)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00452"/>00452 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00453"/>00453 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00454"/>00454 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00455"/>00455 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;c&lt;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();c++)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;frame&#32;=&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frame)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1aac11fb2c54c4d3ebb11f09e853f13860">SetAjustX</link>(ajustx);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frame-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a97a498e972836221cf2e6b2ee061fc37">SetAjustY</link>(ajusty);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00464"/>00464 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00465"/>00465 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00466"/>00466 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00467"/>00467 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00468"/>00468 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00469"/>00469 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00483"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1aaa10e288b09d72160990b1831dd26ebf">00483</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1aaa10e288b09d72160990b1831dd26ebf">GRPBITMAPSEQUENCE::Play</link>(<emphasis role="keywordtype">int</emphasis>&#32;nloops,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;ajusttimeauto,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;reverse)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00484"/>00484 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00485"/>00485 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status==<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00486"/>00486 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00487"/>00487 &#32;&#32;this-&gt;nloops&#32;=&#32;nloops;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00488"/>00488 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00489"/>00489 &#32;&#32;status&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00490"/>00490 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00491"/>00491 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(ajusttimeauto)&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a278b17fb213236c19a423e879d5eeb10">AjustTime</link>(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>());
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00492"/>00492 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00493"/>00493 &#32;&#32;this-&gt;reverse&#32;=&#32;reverse;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00494"/>00494 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00495"/>00495 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!reverse)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameindex&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;frameindex&#32;=&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()-1;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00498"/>00498 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00499"/>00499 &#32;&#32;nloopsmade&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00500"/>00500 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00501"/>00501 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(frameindex);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00502"/>00502 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00503"/>00503 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00504"/>00504 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00514"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a1f5a499bbdd86b3d32e795d627d56986">00514</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a1f5a499bbdd86b3d32e795d627d56986">GRPBITMAPSEQUENCE::Stop</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00515"/>00515 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00516"/>00516 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00517"/>00517 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status==<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a9707259dfd4398ed8fbac6f4b2ce89ff">GRPBITMAPSEQUENCESTATUS_NONE</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00518"/>00518 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00519"/>00519 &#32;&#32;status&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978ae05db71a2bc7718312b0353bd817fe51">GRPBITMAPSEQUENCESTATUS_STOP</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00520"/>00520 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00521"/>00521 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!reverse)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameindex&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00523"/>00523 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;frameindex&#32;=&#32;(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()-1);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00524"/>00524 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00525"/>00525 &#32;&#32;nloopsmade&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00526"/>00526 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00527"/>00527 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00528"/>00528 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00529"/>00529 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00530"/>00530 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00540"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1ae6ad37994810c3026d4980405fdb4544">00540</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1ae6ad37994810c3026d4980405fdb4544">GRPBITMAPSEQUENCE::Pause</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00541"/>00541 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00542"/>00542 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00543"/>00543 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status!=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00544"/>00544 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00545"/>00545 &#32;&#32;status&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a8e1370376f0f1a34e6375f3def8ba15d">GRPBITMAPSEQUENCESTATUS_PAUSE</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00546"/>00546 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00547"/>00547 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00548"/>00548 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00549"/>00549 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00550"/>00550 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00560"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a1fd7b6d7c006fee5c3a0fa9927b5b2db">00560</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a1fd7b6d7c006fee5c3a0fa9927b5b2db">GRPBITMAPSEQUENCE::Finished</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00561"/>00561 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00562"/>00562 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00563"/>00563 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status!=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00564"/>00564 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00565"/>00565 &#32;&#32;status&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a635685fb5f2891c743b336a9228579a1">GRPBITMAPSEQUENCESTATUS_END</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00566"/>00566 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00567"/>00567 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00568"/>00568 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00569"/>00569 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00570"/>00570 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00580"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a7c3c18671c73cfcc7711b3d8a4a75dd9">00580</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a7c3c18671c73cfcc7711b3d8a4a75dd9">GRPBITMAPSEQUENCE::IsPlaying</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00581"/>00581 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00582"/>00582 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status==<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00583"/>00583 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00584"/>00584 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00585"/>00585 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00586"/>00586 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00587"/>00587 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00597"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a4ae7d656acad62ccf506427d2ed26fdc">00597</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a4ae7d656acad62ccf506427d2ed26fdc">GRPBITMAPSEQUENCE::IsEndSequence</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00598"/>00598 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00599"/>00599 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status==<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a635685fb5f2891c743b336a9228579a1">GRPBITMAPSEQUENCESTATUS_END</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00600"/>00600 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00601"/>00601 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00602"/>00602 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00603"/>00603 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00604"/>00604 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00614"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a79c598216c4e2112405df3e19f1307e1">00614</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a79c598216c4e2112405df3e19f1307e1">GRPBITMAPSEQUENCE::Update</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00615"/>00615 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00616"/>00616 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!timer)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00617"/>00617 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00618"/>00618 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status!=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978aaf96bdfea6aed67fb943d3dbe2d78e20">GRPBITMAPSEQUENCESTATUS_PLAY</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00619"/>00619 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00620"/>00620 &#32;&#32;<emphasis role="comment">//if(timer-&gt;GetMeasureMilliSeconds()&lt;timebyframe)&#32;&#32;return&#32;NULL;</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00621"/>00621 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00622"/>00622 &#32;&#32;timer-&gt;<link linkend="_class_x_t_i_m_e_r_1a461fee3826d400d29bc47f58f2c5d898">Reset</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00623"/>00623 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00624"/>00624 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!reverse)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()!=1)&#32;frameindex++;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00627"/>00627 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frameindex&#32;==&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>())
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameindex&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nloopsmade++;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((nloops)&amp;&amp;(nloops==nloopsmade))&#32;status=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a635685fb5f2891c743b336a9228579a1">GRPBITMAPSEQUENCESTATUS_END</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()!=1)&#32;frameindex--;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00638"/>00638 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frameindex&lt;0)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameindex&#32;=&#32;(frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>()-1);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00642"/>00642 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nloopsmade++;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((nloops)&amp;&amp;(nloops==nloopsmade))&#32;status=<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a635685fb5f2891c743b336a9228579a1">GRPBITMAPSEQUENCESTATUS_END</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00647"/>00647 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00648"/>00648 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*)frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(frameindex);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00649"/>00649 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00650"/>00650 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00651"/>00651 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00663"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a278b17fb213236c19a423e879d5eeb10">00663</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a278b17fb213236c19a423e879d5eeb10">GRPBITMAPSEQUENCE::AjustTime</link>(<emphasis role="keywordtype">int</emphasis>&#32;framebysec)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00664"/>00664 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00665"/>00665 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!timer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00666"/>00666 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00667"/>00667 &#32;&#32;this-&gt;framebysec&#32;&#32;=&#32;framebysec;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00668"/>00668 &#32;&#32;timebyframe&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;((float)1000/(<emphasis role="keywordtype">float</emphasis>)framebysec);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00669"/>00669 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00670"/>00670 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00671"/>00671 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00672"/>00672 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00673"/>00673 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00683"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a69a789902caa15f988420990aa4f2ff3">00683</link> <link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e">GRPBITMAPSEQUENCE</link>*&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a69a789902caa15f988420990aa4f2ff3">GRPBITMAPSEQUENCE::Copy</link>()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00684"/>00684 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00685"/>00685 &#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e">GRPBITMAPSEQUENCE</link>*&#32;sequence&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a26e05c1da2cb020576413a5a5901edd8">GRPBITMAPSEQUENCE</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00686"/>00686 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!sequence)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00687"/>00687 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00690"/>00690 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00691"/>00691 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();&#32;c++)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00692"/>00692 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;frame&#32;=&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frame)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap&#32;=&#32;frame-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a540cb18d0bbf50644f63e4a0d731e299">GetBitmap</link>()-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a9adfa8c890144c2fdd4c298874883e74">Clone</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sequence-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a92c924c1e5e3beb73e3d5d4f48c8fd49">AddFrame</link>(bitmap,&#32;frame-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a509e8a4059d3b4309f0e68eaa824bc6b">GetAjustX</link>(),&#32;frame-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a4d28920b548b649ec86932ee08972c83">GetAjustY</link>());
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00702"/>00702 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00703"/>00703 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00704"/>00704 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sequence;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00705"/>00705 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00706"/>00706 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00707"/>00707 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00719"/><link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a2aeb65d79cecf3f84d1038024613587b">00719</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_s_e_q_u_e_n_c_e_1a2aeb65d79cecf3f84d1038024613587b">GRPBITMAPSEQUENCE::Flip</link>(<emphasis role="keywordtype">bool</emphasis>&#32;horizontal)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00720"/>00720 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00721"/>00721 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00722"/>00722 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00723"/>00723 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;frames.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();&#32;c++)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00724"/>00724 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e">GRPBITMAPFRAME</link>*&#32;frame&#32;=&#32;frames.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(frame)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_b_i_t_m_a_p">GRPBITMAP</link>*&#32;bitmap&#32;=&#32;frame-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_f_r_a_m_e_1a540cb18d0bbf50644f63e4a0d731e299">GetBitmap</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(bitmap)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(horizontal)
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1a0b94844ccf11a9b2b16ac1aa47faaf40">FlipHorizontal</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bitmap-&gt;<link linkend="_class_g_r_p_b_i_t_m_a_p_1aaa84c8262833b01b0a8a8f84b7a01d3c">FlipVertical</link>();
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00741"/>00741 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00742"/>00742 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00743"/>00743 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00744"/>00744 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00745"/>00745 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00746"/>00746 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00757"/>00757 <emphasis role="keywordtype">void</emphasis>&#32;GRPBITMAPSEQUENCE::Clean()
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00758"/>00758 {
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00759"/>00759 &#32;&#32;framebysec&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00760"/>00760 &#32;&#32;timebyframe&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00761"/>00761 &#32;&#32;timer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00762"/>00762 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00763"/>00763 &#32;&#32;repeat&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00764"/>00764 &#32;&#32;status&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__g_r_p_bitmap_sequence_8h_1aa8d326add302803efd874f92eb85b978a9707259dfd4398ed8fbac6f4b2ce89ff">GRPBITMAPSEQUENCESTATUS_NONE</link>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00765"/>00765 &#32;&#32;frameindex&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00766"/>00766 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00767"/>00767 &#32;&#32;nloops&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00768"/>00768 &#32;&#32;nloopsmade&#32;&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00769"/>00769 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00770"/>00770 &#32;&#32;reverse&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00771"/>00771 }
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00772"/>00772 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00773"/>00773 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00774"/>00774 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00775"/>00775 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00776"/>00776 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00777"/>00777 
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00778"/>00778 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_bitmap_sequence_8cpp_source_1l00779"/>00779 
</programlisting></section>
