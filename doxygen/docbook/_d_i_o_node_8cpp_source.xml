<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_node_8cpp_source" xml:lang="en-US">
<title>DIONode.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/DataIO/Nodes/DIONode.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_node_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00031"/>00031 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00033"/>00033 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00035"/>00035 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00039"/>00039 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_node_8h">DIONode.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00041"/>00041 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_node_item_8h">DIONodeItem.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00043"/>00043 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00045"/>00045 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00047"/>00047 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00048"/>00048 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00049"/>00049 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00051"/>00051 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00053"/>00053 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00055"/>00055 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00057"/>00057 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00068"/><link linkend="_class_d_i_o_n_o_d_e_1ae1bfdf520d548b0fc1a14ef7e3fe8be9">00068</link> <link linkend="_class_d_i_o_n_o_d_e_1ae1bfdf520d548b0fc1a14ef7e3fe8be9">DIONODE::DIONODE</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00069"/>00069 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00070"/>00070 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00071"/>00071 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00072"/>00072 &#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00073"/>00073 &#32;&#32;UUID.<link linkend="_class_x_u_u_i_d_1ae135d799e0e0c720af11adb6face6dc8">GenerateRandom</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00074"/>00074 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00075"/>00075 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00076"/>00076 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00087"/><link linkend="_class_d_i_o_n_o_d_e_1aa7612136a4beb64bedeb06b221f9a56b">00087</link> <link linkend="_class_d_i_o_n_o_d_e_1aa7612136a4beb64bedeb06b221f9a56b">DIONODE::~DIONODE</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00088"/>00088 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00089"/>00089 &#32;&#32;items.<link linkend="_class_x_v_e_c_t_o_r_1abae5097402824f18f274e21e18b23bea">DeleteContents</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00090"/>00090 &#32;&#32;items.<link linkend="_class_x_v_e_c_t_o_r_1a57c72ab04fd14c60d1026e0a7b4a1887">DeleteAll</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00091"/>00091 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00092"/>00092 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00093"/>00093 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00094"/>00094 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00095"/>00095 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00105"/><link linkend="_class_d_i_o_n_o_d_e_1a5c9c31069743b8c928a7fbdf44ba6d9e">00105</link> <link linkend="_class_x_u_u_i_d">XUUID</link>&amp;&#32;<link linkend="_class_d_i_o_n_o_d_e_1a5c9c31069743b8c928a7fbdf44ba6d9e">DIONODE::GetID</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00106"/>00106 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00107"/>00107 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;UUID;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00108"/>00108 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00109"/>00109 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00110"/>00110 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00122"/><link linkend="_class_d_i_o_n_o_d_e_1aeedbc062dcf1b1b8d3d1b8c0821bf44a">00122</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_d_i_o_n_o_d_e_1aeedbc062dcf1b1b8d3d1b8c0821bf44a">DIONODE::SetID</link>(<link linkend="_class_x_u_u_i_d">XUUID</link>&amp;&#32;UUID)
<anchor xml:id="__d_i_o_node_8cpp_source_1l00123"/>00123 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00124"/>00124 &#32;&#32;this-&gt;UUID.<link linkend="_class_x_u_u_i_d_1a620b7572fae2e76b9c9e2f56021924d7">CopyFrom</link>(UUID);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00125"/>00125 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00126"/>00126 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00127"/>00127 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00137"/><link linkend="_class_d_i_o_n_o_d_e_1a4ce53c21db5f995638fcf5ff77a4bbba">00137</link> <link linkend="_class_x_v_e_c_t_o_r">XVECTOR&lt;DIONODEITEM*&gt;</link>*&#32;<link linkend="_class_d_i_o_n_o_d_e_1a4ce53c21db5f995638fcf5ff77a4bbba">DIONODE::GetItems</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00138"/>00138 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00139"/>00139 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;items;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00140"/>00140 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00141"/>00141 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00142"/>00142 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00152"/><link linkend="_class_d_i_o_n_o_d_e_1a42cad406d99c8c6d6e3b62a78a322857">00152</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_n_o_d_e_1a42cad406d99c8c6d6e3b62a78a322857">DIONODE::IsLocal</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00153"/>00153 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00154"/>00154 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;islocal;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00155"/>00155 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00156"/>00156 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00157"/>00157 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00169"/><link linkend="_class_d_i_o_n_o_d_e_1ace52f4f6c6cef03ef43350d0b49d986f">00169</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_d_i_o_n_o_d_e_1ace52f4f6c6cef03ef43350d0b49d986f">DIONODE::SetIsLocal</link>(<emphasis role="keywordtype">bool</emphasis>&#32;islocal)
<anchor xml:id="__d_i_o_node_8cpp_source_1l00170"/>00170 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00171"/>00171 &#32;&#32;this-&gt;islocal&#32;=&#32;islocal;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00172"/>00172 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00173"/>00173 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00174"/>00174 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00184"/><link linkend="_class_d_i_o_n_o_d_e_1a7d713f091fccaada858969f1b6366822">00184</link> <link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;<link linkend="_class_d_i_o_n_o_d_e_1a7d713f091fccaada858969f1b6366822">DIONODE::GetGroup</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00185"/>00185 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00186"/>00186 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;group;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00187"/>00187 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00188"/>00188 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00189"/>00189 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00201"/><link linkend="_class_d_i_o_n_o_d_e_1aacc53bd720018ec39089f2621146a3b7">00201</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_n_o_d_e_1aacc53bd720018ec39089f2621146a3b7">DIONODE::GetSubGroups</link>(<link linkend="_class_x_v_e_c_t_o_r">XVECTOR&lt;XSTRING*&gt;</link>&amp;&#32;listsubgroups)
<anchor xml:id="__d_i_o_node_8cpp_source_1l00202"/>00202 {&#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00203"/>00203 &#32;&#32;<link linkend="_class_x_p_a_t_h">XPATH</link>&#32;pathgroup;&#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00204"/>00204 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00205"/>00205 &#32;&#32;pathgroup&#32;=&#32;group.<link linkend="_class_x_s_t_r_i_n_g_1ad1470753a96f93e2feb3ee54e6fef95f">Get</link>();&#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00206"/>00206 &#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00207"/>00207 &#32;&#32;pathgroup.<link linkend="_class_x_p_a_t_h_1ab4492049ce4293834ec2c54957bf22eb">Slash_Delete</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00208"/>00208 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00209"/>00209 &#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;_subgroup&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_subgroup)
<anchor xml:id="__d_i_o_node_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pathgroup.<link linkend="_class_x_p_a_t_h_1adcdd1f3f310af756a40f015071e0453e">GetNamefileExt</link>(*_subgroup);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pathgroup.<link linkend="_class_x_p_a_t_h_1ae9ed747e63752d54280149aca4f57667">GetPath</link>(pathgroup);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00214"/>00214 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_subgroup-&gt;<link linkend="_class_x_s_t_r_i_n_g_1aa41b9d6abe3eca02494d6eb043ed50c2">Compare</link>(pathgroup,&#32;<emphasis role="keyword">true</emphasis>))
<anchor xml:id="__d_i_o_node_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listsubgroups.<link linkend="_class_x_v_e_c_t_o_r_1a1c702a879a649dd76fbc8d3c594771bf">Insert</link>(0,&#32;_subgroup);&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_node_8cpp_source_1l00220"/>00220 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pathgroup.<link linkend="_class_x_p_a_t_h_1ab4492049ce4293834ec2c54957bf22eb">Slash_Delete</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00222"/>00222 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_subgroup-&gt;<link linkend="_class_x_s_t_r_i_n_g_1ad26690161f8c1e2722771322b7370005">IsEmpty</link>())
<anchor xml:id="__d_i_o_node_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;_subgroup;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_node_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listsubgroups.<link linkend="_class_x_v_e_c_t_o_r_1a1c702a879a649dd76fbc8d3c594771bf">Insert</link>(0,&#32;_subgroup);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_node_8cpp_source_1l00237"/>00237 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(1);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00239"/>00239 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00240"/>00240 &#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00241"/>00241 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;listsubgroups.<link linkend="_class_x_v_e_c_t_o_r_1acfb28e72022a067c3a4635f0c14734fb">IsEmpty</link>()?<emphasis role="keyword">false</emphasis>:<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00242"/>00242 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00243"/>00243 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00244"/>00244 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00257"/><link linkend="_class_d_i_o_n_o_d_e_1a43510339c9de728d0309eacef2b1610c">00257</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_n_o_d_e_1a43510339c9de728d0309eacef2b1610c">DIONODE::GetSubGroup</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;level,&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;subgroup)
<anchor xml:id="__d_i_o_node_8cpp_source_1l00258"/>00258 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00259"/>00259 &#32;&#32;subgroup.<link linkend="_class_x_s_t_r_i_n_g_1a9275997c1605fa79646c301e63a77d06">Empty</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00260"/>00260 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00261"/>00261 &#32;&#32;<link linkend="_class_x_v_e_c_t_o_r">XVECTOR&lt;XSTRING*&gt;</link>&#32;listsubgroups;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00262"/>00262 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status;&#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00263"/>00263 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00264"/>00264 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_d_i_o_n_o_d_e_1aacc53bd720018ec39089f2621146a3b7">GetSubGroups</link>(listsubgroups))
<anchor xml:id="__d_i_o_node_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_node_8cpp_source_1l00268"/>00268 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00269"/>00269 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(level&#32;&lt;&#32;listsubgroups.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>())
<anchor xml:id="__d_i_o_node_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;subgroup&#32;=&#32;listsubgroups.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(level)-&gt;Get();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_node_8cpp_source_1l00274"/>00274 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00275"/>00275 &#32;&#32;listsubgroups.<link linkend="_class_x_v_e_c_t_o_r_1abae5097402824f18f274e21e18b23bea">DeleteContents</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00276"/>00276 &#32;&#32;listsubgroups.<link linkend="_class_x_v_e_c_t_o_r_1a57c72ab04fd14c60d1026e0a7b4a1887">DeleteAll</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00277"/>00277 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00278"/>00278 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00279"/>00279 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00280"/>00280 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00281"/>00281 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00291"/><link linkend="_class_d_i_o_n_o_d_e_1a43308c15804988844cda62f1991c4c2c">00291</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_n_o_d_e_1a43308c15804988844cda62f1991c4c2c">DIONODE::Update</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00292"/>00292 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00293"/>00293 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;items.<link linkend="_class_x_v_e_c_t_o_r_1ab9cec1d9ae7a1f5699f9dde55ccde2bf">GetSize</link>();&#32;c++)
<anchor xml:id="__d_i_o_node_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_d_i_o_n_o_d_e_i_t_e_m">DIONODEITEM</link>*&#32;item&#32;=&#32;items.<link linkend="_class_x_v_e_c_t_o_r_1a2af4855d7fe0bc28201f6967110d064e">Get</link>(c);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(item)
<anchor xml:id="__d_i_o_node_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;item-&gt;<link linkend="_class_d_i_o_n_o_d_e_i_t_e_m_1a4973a5a248d33e0ffa7aee36371ffd66">Update</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_node_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_node_8cpp_source_1l00301"/>00301 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00302"/>00302 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00303"/>00303 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00304"/>00304 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00305"/>00305 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00315"/><link linkend="_class_d_i_o_n_o_d_e_1a615d4f88eb2a0f645497bd1c7146a89b">00315</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_n_o_d_e_1a615d4f88eb2a0f645497bd1c7146a89b">DIONODE::CreateJSONSerialization</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00316"/>00316 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00317"/>00317 &#32;&#32;<link linkend="_class_x_f_i_l_e_j_s_o_n">XFILEJSON</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;xfileJSON;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00318"/>00318 &#32;&#32;<link linkend="_class_x_s_e_r_i_a_l_i_z_a_t_i_o_n_m_e_t_h_o_d">XSERIALIZATIONMETHOD</link>*&#32;serializationmethod;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00319"/>00319 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;string;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00320"/>00320 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00321"/>00321 &#32;&#32;serializationmethod&#32;=&#32;XSERIALIZABLE::CreateInstance(xfileJSON);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00322"/>00322 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!serializationmethod)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00323"/>00323 &#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00324"/>00324 &#32;&#32;<link linkend="_class_x_s_e_r_i_a_l_i_z_a_b_l_e_1a6e211010aa15bf51b5b038420ff41f2b">InitSerialize</link>(serializationmethod);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00325"/>00325 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00326"/>00326 &#32;&#32;<link linkend="_class_x_p_a_t_h">XPATH</link>&#32;path;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00327"/>00327 &#32;&#32;GEN_XPATHSMANAGER.GetPathOfSection(<link linkend="__x_paths_manager_8h_1a574bf1ebb371f804090c20183c9ff7dda88a87711c3fd397f03e75c5a6867fc28">XPATHSMANAGERSECTIONTYPE_ROOT</link>,&#32;path);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00328"/>00328 &#32;&#32;path&#32;+=&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;test.json&quot;</emphasis>);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00329"/>00329 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00330"/>00330 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xfileJSON.<link linkend="_class_x_f_i_l_e_t_x_t_1a2487ddeffced69e5f799aa480a58b1ce">Create</link>(path))
<anchor xml:id="__d_i_o_node_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_node_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;xfileJSON.<link linkend="_class_x_f_i_l_e_j_s_o_n_1a90b5bbb15d78bd3205b04a1441b6bd1c">WriteAndEncodeAllLines</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;xfileJSON.<link linkend="_class_x_f_i_l_e_t_x_t_1a4111cffe51475f0aa3e9060889a9d3ff">Close</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_node_8cpp_source_1l00335"/>00335 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00336"/>00336 &#32;&#32;xfileJSON.<link linkend="_class_x_f_i_l_e_j_s_o_n_1a89d1db282f0f58b94fe99e69f2e70daa">EncodeAllLines</link>();
<anchor xml:id="__d_i_o_node_8cpp_source_1l00337"/>00337 &#32;&#32;xfileJSON.<link linkend="_class_x_f_i_l_e_t_x_t_1a22d8f50d12a2504835956d22576bfb9e">GetAllInOneLine</link>(<emphasis role="keywordtype">string</emphasis>,&#32;<link linkend="__x_file_t_x_t_8h_1a8b0d26592dd9795c54cdac8f43e2cfb8">XFILETXTTYPELF_DEFAULT</link>);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00338"/>00338 &#32;&#32;xfileJSON.<link linkend="_class_x_f_i_l_e_j_s_o_n_1a37d42eff083dfe6fd5da3c2f3ba14918">ShowTraceJSON</link>(<link linkend="__x_trace_8h_1aa1f99c23bc0af79572a9685f5519002e">XTRACE_COLOR_PURPLE</link>);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00339"/>00339 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00340"/>00340 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;serializationmethod;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00341"/>00341 &#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00342"/>00342 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00343"/>00343 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00344"/>00344 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00345"/>00345 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00355"/><link linkend="_class_d_i_o_n_o_d_e_1a14980a47792d08610192de2aac768b12">00355</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_n_o_d_e_1a14980a47792d08610192de2aac768b12">DIONODE::Serialize</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00356"/>00356 {&#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00357"/>00357 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;ID;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00358"/>00358 &#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00359"/>00359 &#32;&#32;UUID.<link linkend="_class_x_u_u_i_d_1af5fdd5d094a22d2ed69614a4544e2618">GetToString</link>(ID);&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00360"/>00360 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00361"/>00361 &#32;&#32;Primitive_Add&lt;XSTRING*&gt;(&amp;ID,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;ID&quot;</emphasis>));
<anchor xml:id="__d_i_o_node_8cpp_source_1l00362"/>00362 &#32;&#32;Primitive_Add&lt;XSTRING*&gt;(&amp;group,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;group&quot;</emphasis>));
<anchor xml:id="__d_i_o_node_8cpp_source_1l00363"/>00363 &#32;&#32;XVectorClass_Add&lt;DIONODEITEM&gt;(&amp;items,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;items&quot;</emphasis>),&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;item&quot;</emphasis>));
<anchor xml:id="__d_i_o_node_8cpp_source_1l00364"/>00364 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00365"/>00365 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00366"/>00366 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00367"/>00367 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00368"/>00368 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00378"/><link linkend="_class_d_i_o_n_o_d_e_1a6afa1e126f5605123c8ff4e8a0f3d4a1">00378</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_d_i_o_n_o_d_e_1a6afa1e126f5605123c8ff4e8a0f3d4a1">DIONODE::Deserialize</link>()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00379"/>00379 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00380"/>00380 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;ID;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00381"/>00381 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00382"/>00382 &#32;&#32;Primitive_Extract&lt;XSTRING*&gt;(&amp;ID,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;ID&quot;</emphasis>));
<anchor xml:id="__d_i_o_node_8cpp_source_1l00383"/>00383 &#32;&#32;Primitive_Extract&lt;XSTRING*&gt;(&amp;group,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;group&quot;</emphasis>));
<anchor xml:id="__d_i_o_node_8cpp_source_1l00384"/>00384 &#32;&#32;XVectorClass_Extract&lt;DIONODEITEM&gt;(&amp;items,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;items&quot;</emphasis>),&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;item&quot;</emphasis>));
<anchor xml:id="__d_i_o_node_8cpp_source_1l00385"/>00385 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00386"/>00386 &#32;&#32;UUID.<link linkend="_class_x_u_u_i_d_1a5e6c2352b3e86bfb8995f43b295f2646">SetFromString</link>(ID);
<anchor xml:id="__d_i_o_node_8cpp_source_1l00387"/>00387 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00388"/>00388 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00389"/>00389 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00390"/>00390 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00391"/>00391 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00402"/>00402 <emphasis role="keywordtype">void</emphasis>&#32;DIONODE::Clean()
<anchor xml:id="__d_i_o_node_8cpp_source_1l00403"/>00403 {
<anchor xml:id="__d_i_o_node_8cpp_source_1l00404"/>00404 &#32;&#32;islocal&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00405"/>00405 &#32;&#32;
<anchor xml:id="__d_i_o_node_8cpp_source_1l00406"/>00406 }
<anchor xml:id="__d_i_o_node_8cpp_source_1l00407"/>00407 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00408"/>00408 
<anchor xml:id="__d_i_o_node_8cpp_source_1l00409"/>00409 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_node_8cpp_source_1l00410"/>00410 
</programlisting></section>
