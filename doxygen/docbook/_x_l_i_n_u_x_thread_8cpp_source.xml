<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_l_i_n_u_x_thread_8cpp_source" xml:lang="en-US">
<title>XLINUXThread.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Linux/XLINUXThread.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_l_i_n_u_x_thread_8h">XLINUXThread.h</link>&quot;</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&lt;malloc.h&gt;</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&lt;errno.h&gt;</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&lt;pthread.h&gt;</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00047"/>00047 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00049"/>00049 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00053"/>00053 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00054"/>00054 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00055"/>00055 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00057"/>00057 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00058"/>00058 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00059"/>00059 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00060"/>00060 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00061"/>00061 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00062"/>00062 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00063"/>00063 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00064"/>00064 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00065"/>00065 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_XLINUXMUTEX</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00066"/>00066 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00067"/>00067 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00077"/><link linkend="_class_x_l_i_n_u_x_m_u_t_e_x_1a904fdc371f95038cc8c165eb154a75f3">00077</link> <link linkend="_class_x_l_i_n_u_x_m_u_t_e_x_1a904fdc371f95038cc8c165eb154a75f3">XLINUXMUTEX::XLINUXMUTEX</link>()
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00078"/>00078 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00079"/>00079 &#32;&#32;Clean();
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00080"/>00080 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00081"/>00081 &#32;&#32;pthread_mutexattr_init(&amp;attr);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00082"/>00082 &#32;&#32;pthread_mutexattr_settype(&amp;attr,&#32;PTHREAD_MUTEX_RECURSIVE);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00083"/>00083 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00084"/>00084 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!pthread_mutex_init(&amp;mutex,&#32;&amp;attr))&#32;init&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00085"/>00085 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00086"/>00086 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00087"/>00087 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00098"/><link linkend="_class_x_l_i_n_u_x_m_u_t_e_x_1aeb6c2b3b8fc5c4c81d93679224a710d4">00098</link> <link linkend="_class_x_l_i_n_u_x_m_u_t_e_x_1aeb6c2b3b8fc5c4c81d93679224a710d4">XLINUXMUTEX::~XLINUXMUTEX</link>()
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00099"/>00099 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00100"/>00100 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(init)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;pthread_mutex_destroy(&amp;mutex);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;init&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00105"/>00105 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00106"/>00106 &#32;&#32;Clean();
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00107"/>00107 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00108"/>00108 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00109"/>00109 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00119"/><link linkend="_class_x_l_i_n_u_x_m_u_t_e_x_1a15262437e17772ab18c8b1e09c6c7b31">00119</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_n_u_x_m_u_t_e_x_1a15262437e17772ab18c8b1e09c6c7b31">XLINUXMUTEX::Lock</link>()
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00120"/>00120 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00121"/>00121 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!init)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00122"/>00122 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00123"/>00123 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(pthread_mutex_lock(&amp;mutex))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00124"/>00124 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00125"/>00125 &#32;&#32;<link linkend="_class_x_m_u_t_e_x_1a784c2288217c31d8d78bf60f90ff8338">islock</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00126"/>00126 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00127"/>00127 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00128"/>00128 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00129"/>00129 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00130"/>00130 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00140"/><link linkend="_class_x_l_i_n_u_x_m_u_t_e_x_1a9968fada143e8a453c8099ba71b3c0a7">00140</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_n_u_x_m_u_t_e_x_1a9968fada143e8a453c8099ba71b3c0a7">XLINUXMUTEX::UnLock</link>()
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00141"/>00141 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00142"/>00142 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!init)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(pthread_mutex_unlock(&amp;mutex))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00144"/>00144 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00145"/>00145 &#32;&#32;<link linkend="_class_x_m_u_t_e_x_1a784c2288217c31d8d78bf60f90ff8338">islock</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00146"/>00146 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00147"/>00147 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00148"/>00148 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00149"/>00149 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00150"/>00150 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00161"/>00161 <emphasis role="keywordtype">void</emphasis>&#32;XLINUXMUTEX::Clean()
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00162"/>00162 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00163"/>00163 &#32;&#32;init&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00164"/>00164 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00165"/>00165 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00166"/>00166 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00167"/>00167 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00168"/>00168 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00169"/>00169 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00170"/>00170 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_XLINUXTHREAD</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00171"/>00171 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00172"/>00172 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00187"/><link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1acb441a6ab1e385e75d9b27db5661f2e1">00187</link> <link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1acb441a6ab1e385e75d9b27db5661f2e1">XLINUXTHREAD::XLINUXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6">XTHREADGROUPID</link>&#32;groupID,&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;ID,&#32;<link linkend="__x_thread_8h_1a75cd5e654ca0f2255ae2473172af98d6">XTHREADFUNCTION</link>&#32;function,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;param):&#32;<link linkend="_class_x_t_h_r_e_a_d">XTHREAD</link>(groupID,&#32;ID,&#32;function,&#32;param)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00188"/>00188 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00189"/>00189 &#32;&#32;Clean();
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00190"/>00190 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00191"/>00191 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00192"/>00192 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00203"/><link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1a415d0e07b7fa9e6c136954760abca6a8">00203</link> <link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1a415d0e07b7fa9e6c136954760abca6a8">XLINUXTHREAD::~XLINUXTHREAD</link>()
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00204"/>00204 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00205"/>00205 &#32;&#32;<link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1ac753099f285b182d71e45fb609e7cb1f">End</link>();
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00206"/>00206 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00207"/>00207 &#32;&#32;Clean();
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00208"/>00208 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00209"/>00209 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00210"/>00210 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00222"/><link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1a27c219f9c08d6a379cdef4f26c67c92d">00222</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1a27c219f9c08d6a379cdef4f26c67c92d">XLINUXTHREAD::Ini</link>(<emphasis role="keywordtype">bool</emphasis>&#32;run)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00223"/>00223 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00224"/>00224 &#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1ab906a8f23382bdc51d83df77f02ea13d">statusfunc</link>&#32;=&#32;<link linkend="__x_thread_8h_1a366a30be55b44789bcfebf624c8cb927a38a37e3fa13a372c1389ecbfa4b8af62">XTHREADSTATUS_STOP</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00225"/>00225 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00226"/>00226 &#32;&#32;pthread_attr_t&#32;attr;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00227"/>00227 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00228"/>00228 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_t_h_r_e_a_d_1a11d4a874bd0b510414899e5595f3651a">stacksize</link>)&#32;<link linkend="_class_x_t_h_r_e_a_d_1a6b7800d57e31566fe1497ce811a51dd6">SetStackSize</link>(1024*1024);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00229"/>00229 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00230"/>00230 &#32;&#32;pthread_attr_init(&amp;attr);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00231"/>00231 &#32;&#32;pthread_attr_setstacksize(&amp;attr,&#32;<link linkend="_class_x_t_h_r_e_a_d_1a11d4a874bd0b510414899e5595f3651a">stacksize</link>);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00232"/>00232 &#32;&#32;pthread_attr_setdetachstate(&amp;attr,&#32;PTHREAD_CREATE_JOINABLE);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00233"/>00233 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00234"/>00234 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;_status&#32;=&#32;pthread_create(&amp;thhandle,&#32;&amp;attr,&#32;Callback,&#32;<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00235"/>00235 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!_status)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;charstr;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1a104828763e0e4d0664d4ad9d2d0716d0">ID</link>.<link linkend="_class_x_s_t_r_i_n_g_1acdbd12d83c920cfa06ac0ac1770adc29">ConvertToASCII</link>(charstr);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;pthread_setname_np(thhandle,&#32;charstr.GetPtrChar());</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(run)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_t_h_r_e_a_d_1a777dc032596d071d63fc47d55b8e6b04">Run</link>(<emphasis role="keyword">true</emphasis>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1ab906a8f23382bdc51d83df77f02ea13d">statusfunc</link>&#32;=&#32;<link linkend="__x_thread_8h_1a366a30be55b44789bcfebf624c8cb927a38a37e3fa13a372c1389ecbfa4b8af62">XTHREADSTATUS_STOP</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00251"/>00251 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;pthread_attr_destroy(&amp;attr);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;thhandle&#32;=&#32;0;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;pthread_create()&#32;fails,&#32;no&#32;new&#32;thread&#32;is&#32;created&#32;and&#32;the&#32;contents&#32;of&#32;the&#32;location&#32;referenced&#32;by&#32;thread&#32;are&#32;UNDEFINED.</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00259"/>00259 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00260"/>00260 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(!_status)?<emphasis role="keyword">true</emphasis>:<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00261"/>00261 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00262"/>00262 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00263"/>00263 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00275"/><link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1a4c8b67c6801f8b500408eb0a3881e977">00275</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1a4c8b67c6801f8b500408eb0a3881e977">XLINUXTHREAD::Wait</link>(<emphasis role="keywordtype">int</emphasis>&#32;miliseconds)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00276"/>00276 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00277"/>00277 &#32;&#32;usleep(1000*(miliseconds?miliseconds:1));
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00278"/>00278 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00279"/>00279 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00280"/>00280 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00281"/>00281 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00282"/>00282 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00292"/><link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1ac753099f285b182d71e45fb609e7cb1f">00292</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d_1ac753099f285b182d71e45fb609e7cb1f">XLINUXTHREAD::End</link>()
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00293"/>00293 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00294"/>00294 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_t_h_r_e_a_d_1ab906a8f23382bdc51d83df77f02ea13d">statusfunc</link>&#32;==&#32;<link linkend="__x_thread_8h_1a366a30be55b44789bcfebf624c8cb927a0810d58d25021355fa8ae7bf348ed610">XTHREADSTATUS_END</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00295"/>00295 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00296"/>00296 &#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1ab906a8f23382bdc51d83df77f02ea13d">statusfunc</link>&#32;=&#32;<link linkend="__x_thread_8h_1a366a30be55b44789bcfebf624c8cb927a93f78a60f2a85c943ec7559ae1893aec">XTHREADSTATUS_EXIT</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00297"/>00297 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00298"/>00298 &#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1a38395bbcf7e7e218b5ccbbc4effe8436">WaitToEnd</link>();
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00299"/>00299 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00300"/>00300 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(thhandle)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;pthread_join(thhandle,&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;thhandle&#32;=&#32;0;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00305"/>00305 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00306"/>00306 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00307"/>00307 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00308"/>00308 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00309"/>00309 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00321"/>00321 <emphasis role="keywordtype">void</emphasis>*&#32;XLINUXTHREAD::Callback(<emphasis role="keywordtype">void</emphasis>*&#32;thread)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00322"/>00322 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00323"/>00323 &#32;&#32;<link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d">XLINUXTHREAD</link>*&#32;&#32;&#32;&#32;th&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00324"/>00324 &#32;&#32;<link linkend="__x_thread_8h_1a75cd5e654ca0f2255ae2473172af98d6">XTHREADFUNCTION</link>&#32;&#32;func&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00325"/>00325 &#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1a8e5f2f10e8f84de407a65ee8626457c3">param</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00326"/>00326 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00327"/>00327 &#32;&#32;th&#32;=&#32;(<link linkend="_class_x_l_i_n_u_x_t_h_r_e_a_d">XLINUXTHREAD</link>*)thread;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00328"/>00328 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!th)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00329"/>00329 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00330"/>00330 &#32;&#32;func&#32;=&#32;(<link linkend="__x_thread_8h_1a75cd5e654ca0f2255ae2473172af98d6">XTHREADFUNCTION</link>)th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1a23bbfb3d1904683d000192f8be0ee3f1">GetFunction</link>();
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00331"/>00331 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!func)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00332"/>00332 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00333"/>00333 &#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1a8e5f2f10e8f84de407a65ee8626457c3">param</link>&#32;=&#32;th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1a41ddb65bd9de824483bb032895ecdffd">GetParam</link>();
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00334"/>00334 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00335"/>00335 &#32;&#32;th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1addc44031d547803150017da4f8e793e4">gotofunction</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00336"/>00336 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00337"/>00337 &#32;&#32;<emphasis role="keywordflow">if</emphasis>((th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1abd9891cac51c7c68874927aa5bb36fce">priority</link>&#32;!=&#32;<link linkend="__x_thread_8h_1a9082e176800b19a3e755ff93b5678735adc950499a79db57aa66cdb3ab7a1e96e">XTHREADPRIORITY_UNKNOWN</link>)&#32;&amp;&amp;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;(th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1abd9891cac51c7c68874927aa5bb36fce">priority</link>&#32;!=&#32;<link linkend="__x_thread_8h_1a9082e176800b19a3e755ff93b5678735a605f4241cfdb73515520cebc8180e98f">XTHREADPRIORITY_NORMAL</link>))
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>sched_param&#32;<link linkend="_class_x_t_h_r_e_a_d_1a8e5f2f10e8f84de407a65ee8626457c3">param</link>;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;scheduling&#32;priority</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00341"/>00341 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;policy&#32;=&#32;SCHED_FIFO;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;scheduling&#32;policy</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00343"/>00343 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1abd9891cac51c7c68874927aa5bb36fce">priority</link>)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00346"/>00346 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#ifdef&#32;SCHED_IDLE</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_thread_8h_1a9082e176800b19a3e755ff93b5678735af28d665289407c0c92f929114b63d5c4">XTHREADPRIORITY_LOW</link>&#32;&#32;&#32;&#32;&#32;&#32;:&#32;policy&#32;=&#32;SCHED_IDLE;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1a8e5f2f10e8f84de407a65ee8626457c3">param</link>.sched_priority&#32;=&#32;sched_get_priority_min(policy);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00350"/>00350 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00351"/>00351 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_thread_8h_1a9082e176800b19a3e755ff93b5678735a4b42faec7b757dfc7b060562531707c7">XTHREADPRIORITY_HIGH</link>&#32;&#32;&#32;&#32;&#32;:&#32;policy&#32;=&#32;SCHED_FIFO;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1a8e5f2f10e8f84de407a65ee8626457c3">param</link>.sched_priority&#32;=&#32;sched_get_priority_max(policy)/2;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00355"/>00355 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__x_thread_8h_1a9082e176800b19a3e755ff93b5678735ac166335498b818e4f352c1233c5cd0e4">XTHREADPRIORITY_REALTIME</link>&#32;:&#32;policy&#32;=&#32;SCHED_FIFO;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_t_h_r_e_a_d_1a8e5f2f10e8f84de407a65ee8626457c3">param</link>.sched_priority&#32;=&#32;sched_get_priority_max(policy);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00359"/>00359 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;&#32;&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00362"/>00362 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;pthread_setschedparam(th-&gt;thhandle,&#32;policy,&#32;&amp;<link linkend="_class_x_t_h_r_e_a_d_1a8e5f2f10e8f84de407a65ee8626457c3">param</link>);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00365"/>00365 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00366"/>00366 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(1)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!th)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00369"/>00369 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1ab906a8f23382bdc51d83df77f02ea13d">statusfunc</link>&#32;==&#32;<link linkend="__x_thread_8h_1a366a30be55b44789bcfebf624c8cb927a93f78a60f2a85c943ec7559ae1893aec">XTHREADSTATUS_EXIT</link>)&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1ab906a8f23382bdc51d83df77f02ea13d">statusfunc</link>&#32;==&#32;<link linkend="__x_thread_8h_1a366a30be55b44789bcfebf624c8cb927a0810d58d25021355fa8ae7bf348ed610">XTHREADSTATUS_END</link>)&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00372"/>00372 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1ab906a8f23382bdc51d83df77f02ea13d">statusfunc</link>&#32;==&#32;<link linkend="__x_thread_8h_1a366a30be55b44789bcfebf624c8cb927a4e8ecb23b264abef1f4f9bee700b5513">XTHREADSTATUS_RUN</link>)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(func)
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1aa8740fa78cb4b725cca5f2c69c34824b">isinfunction</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;func(<link linkend="_class_x_t_h_r_e_a_d_1a8e5f2f10e8f84de407a65ee8626457c3">param</link>);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1aa8740fa78cb4b725cca5f2c69c34824b">isinfunction</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00380"/>00380 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00383"/>00383 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!th)&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00385"/>00385 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1ac8ae8840dd2f7f78caf7c45e83ad7ffe">waityield</link>)&#32;usleep(th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1ac8ae8840dd2f7f78caf7c45e83ad7ffe">waityield</link>*1000);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00388"/>00388 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00389"/>00389 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(th)&#32;th-&gt;<link linkend="_class_x_t_h_r_e_a_d_1ab906a8f23382bdc51d83df77f02ea13d">statusfunc</link>&#32;=&#32;<link linkend="__x_thread_8h_1a366a30be55b44789bcfebf624c8cb927a0810d58d25021355fa8ae7bf348ed610">XTHREADSTATUS_END</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00390"/>00390 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00391"/>00391 &#32;&#32;pthread_exit(0);
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00392"/>00392 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00393"/>00393 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00394"/>00394 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00395"/>00395 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00396"/>00396 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00407"/>00407 <emphasis role="keywordtype">void</emphasis>&#32;XLINUXTHREAD::Clean()
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00408"/>00408 {
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00409"/>00409 &#32;&#32;thhandle&#32;=&#32;0;
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00410"/>00410 }
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00411"/>00411 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00412"/>00412 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00413"/>00413 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00414"/>00414 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00415"/>00415 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00416"/>00416 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00417"/>00417 
<anchor xml:id="__x_l_i_n_u_x_thread_8cpp_source_1l00418"/>00418 
</programlisting></section>
