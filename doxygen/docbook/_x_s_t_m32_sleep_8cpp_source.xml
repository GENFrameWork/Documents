<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_s_t_m32_sleep_8cpp_source" xml:lang="en-US">
<title>XSTM32Sleep.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/XSTM32Sleep.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;CONTROL&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00030"/>00030 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00032"/>00032 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00034"/>00034 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32___h_a_l_8h">XSTM32_HAL.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00037"/>00037 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32_sleep_8h">XSTM32Sleep.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00042"/>00042 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00044"/>00044 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00046"/>00046 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00056"/><link linkend="_class_x_s_t_m32_s_l_e_e_p_1af361074dbbfa2926a9e53f4350e934a6">00056</link> <link linkend="_class_x_s_t_m32_s_l_e_e_p_1af361074dbbfa2926a9e53f4350e934a6">XSTM32SLEEP::XSTM32SLEEP</link>()
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00057"/>00057 {
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00059"/>00059 }
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00060"/>00060 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00061"/>00061 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00062"/>00062 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00073"/><link linkend="_class_x_s_t_m32_s_l_e_e_p_1ac72a43d1c2e71a4916127aaf6f5c9de5">00073</link> <link linkend="_class_x_s_t_m32_s_l_e_e_p_1ac72a43d1c2e71a4916127aaf6f5c9de5">XSTM32SLEEP::~XSTM32SLEEP</link>()
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00074"/>00074 {
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00075"/>00075 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00076"/>00076 }
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00077"/>00077 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00078"/>00078 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00079"/>00079 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00091"/><link linkend="_class_x_s_t_m32_s_l_e_e_p_1a173a023c7360893157e6e1277a52ed7a">00091</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_s_t_m32_s_l_e_e_p_1a173a023c7360893157e6e1277a52ed7a">XSTM32SLEEP::Seconds</link>(<emphasis role="keywordtype">int</emphasis>&#32;seconds)
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00092"/>00092 {
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00093"/>00093 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;&#32;c&lt;seconds;&#32;c++)
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;HAL_Delay(1000);
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00097"/>00097 }
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00098"/>00098 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00099"/>00099 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00100"/>00100 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00112"/><link linkend="_class_x_s_t_m32_s_l_e_e_p_1a1faf43d23b5e80c2bd53126ee4f0cb09">00112</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_s_t_m32_s_l_e_e_p_1a1faf43d23b5e80c2bd53126ee4f0cb09">XSTM32SLEEP::MilliSeconds</link>(<emphasis role="keywordtype">int</emphasis>&#32;milliseconds)
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00113"/>00113 {
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00114"/>00114 &#32;&#32;HAL_Delay(milliseconds);
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00115"/>00115 }
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00116"/>00116 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00117"/>00117 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00118"/>00118 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00130"/><link linkend="_class_x_s_t_m32_s_l_e_e_p_1a6feeae8382defe7636d295af0ce0b68b">00130</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_s_t_m32_s_l_e_e_p_1a6feeae8382defe7636d295af0ce0b68b">XSTM32SLEEP::MicroSeconds</link>(<emphasis role="keywordtype">int</emphasis>&#32;microseconds)
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00131"/>00131 {
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00132"/>00132 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00133"/>00133 }
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00134"/>00134 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00135"/>00135 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00136"/>00136 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00148"/><link linkend="_class_x_s_t_m32_s_l_e_e_p_1ad427a039cec22790bd48bd9431128bb3">00148</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_s_t_m32_s_l_e_e_p_1ad427a039cec22790bd48bd9431128bb3">XSTM32SLEEP::NanoSeconds</link>(<emphasis role="keywordtype">int</emphasis>&#32;nanoseconds)
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00149"/>00149 {
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00150"/>00150 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00151"/>00151 }
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00152"/>00152 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00153"/>00153 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00154"/>00154 
<anchor xml:id="__x_s_t_m32_sleep_8cpp_source_1l00155"/>00155 
</programlisting></section>
