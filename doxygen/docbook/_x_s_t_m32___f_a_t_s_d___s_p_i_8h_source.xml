<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source" xml:lang="en-US">
<title>XSTM32_FATSD_SPI.h</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/STM32/XSTM32_FATSD_SPI.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00001"/>00001 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00029"/>00029 <emphasis role="preprocessor">#ifndef&#32;_XSTM32_FATSD_SPI_H_</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00030"/>00030 <emphasis role="preprocessor">#define&#32;_XSTM32_FATSD_SPI_H_</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00031"/>00031 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00032"/>00032 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00033"/>00033 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00034"/>00034 <emphasis role="preprocessor">#include&#32;&quot;diskio.h&quot;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00035"/>00035 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_s_t_m32___h_a_l_8h">XSTM32_HAL.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00037"/>00037 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_g_p_i_o_8h">DIOGPIO.h</link>&quot;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00039"/>00039 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;DEFINES&#32;&amp;&#32;ENUMS&#32;&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00041"/>00041 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00042"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1a97d3dca6debeb237a3df49fab7f9dec3">00042</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_DEFAULT_TIMEOUT&#32;&#32;1000</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00043"/>00043 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00044"/>00044 <emphasis role="comment">//&#32;Definitions&#32;for&#32;MMC/SDC&#32;command&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00045"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1aafaa9f000d0fc2a3720d8d3f15a10fc1">00045</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD0&#32;&#32;&#32;&#32;&#32;(0x40&#32;+&#32;&#32;0)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;GO_IDLE_STATE&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00046"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1abd62f15996b505d5d0c492154f59dea9">00046</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD1&#32;&#32;&#32;&#32;&#32;(0x40&#32;+&#32;&#32;1)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;SEND_OP_COND&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00047"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1ac8ffb2f5bfe8bc93a06fb491931a7f83">00047</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD8&#32;&#32;&#32;&#32;&#32;(0x40&#32;+&#32;&#32;8)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;SEND_IF_COND&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00048"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1ab433dca76abe358286a843f1e944213b">00048</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD9&#32;&#32;&#32;&#32;&#32;(0x40&#32;+&#32;&#32;9)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;SEND_CSD&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00049"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1ac19a5745a78ce4ca6abdac9fd8d32106">00049</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD10&#32;&#32;&#32;&#32;(0x40&#32;+&#32;10)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;SEND_CID&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00050"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1adc77e4da2349826e383adae5d2e4a470">00050</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD12&#32;&#32;&#32;&#32;(0x40&#32;+&#32;12)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;STOP_TRANSMISSION&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00051"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1a25125ae37bd37bad1ad604acf1939c24">00051</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD16&#32;&#32;&#32;&#32;(0x40&#32;+&#32;16)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;SET_BLOCKLEN&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00052"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1ab4dd7db0cfd814a99d5287b14745f5e6">00052</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD17&#32;&#32;&#32;&#32;(0x40&#32;+&#32;17)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;READ_SINGLE_BLOCK&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00053"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1ac167d8024c4703a2e4fb97349e500e65">00053</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD18&#32;&#32;&#32;&#32;(0x40&#32;+&#32;18)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;READ_MULTIPLE_BLOCK&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00054"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1a6f721e2ebd6df0fec2927a9e282438b9">00054</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD23&#32;&#32;&#32;&#32;(0x40&#32;+&#32;23)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;SET_BLOCK_COUNT&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00055"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1a0edcf2963865e47006e28ac1e23f2bd2">00055</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD24&#32;&#32;&#32;&#32;(0x40&#32;+&#32;24)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;WRITE_BLOCK&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00056"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1a796d039969a5d8d26a092c24a8d33c27">00056</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD25&#32;&#32;&#32;&#32;(0x40&#32;+&#32;25)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;WRITE_MULTIPLE_BLOCK&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00057"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1aeeb02cecc6925708aeb25a7afd98415b">00057</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD41&#32;&#32;&#32;&#32;(0x40&#32;+&#32;41)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;SEND_OP_COND&#32;(ACMD)&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00058"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1a6fa5eb81b6e5d8e32de4b523fb824d16">00058</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD55&#32;&#32;&#32;&#32;(0x40&#32;+&#32;55)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;APP_CMD&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00059"/><link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1a83200676164221b35b4de8184310c48f">00059</link> <emphasis role="preprocessor">#define&#32;XSTM32_FATSD_SPI_CMD58&#32;&#32;&#32;&#32;(0x40&#32;+&#32;58)&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;READ_OCR&#32;</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00060"/>00060 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00061"/>00061 <emphasis role="comment">/*----&#32;CLASS&#32;---------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00062"/>00062 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00063"/>00063 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00064"/>00064 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00065"/><link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i">00065</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i">XSTM32_FATSD_SPI</link>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00066"/>00066 {
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00067"/>00067 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a57facf92de109e2ab005a9a595bd8035">XSTM32_FATSD_SPI</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1ade10692466872bd7bf1c5ff8781ee2d9">~XSTM32_FATSD_SPI</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00070"/>00070 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a757f5f80503ed3efa19b5322a0dfc8d7">Ini</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(SPI_HandleTypeDef*&#32;handleSPI,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIOentryID_CS,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIOentryID_switch&#32;=&#32;<link linkend="__d_i_o_g_p_i_o_8h_1a488a85f4fab8868ca6503c2f0112744a">DIOGPIO_ID_NOTDEFINED</link>,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;timeout&#32;=&#32;<link linkend="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_1a97d3dca6debeb237a3df49fab7f9dec3">XSTM32_FATSD_SPI_DEFAULT_TIMEOUT</link>);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00072"/>00072 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a8c12f0d99a4098167353bc21b917018c">GetGPIOEntryID_CS</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1aee284e69090a86a9c5a1b84676ccd2d4">SetGPIOEntryID_CS</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIOentryID);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00075"/>00075 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1aa6de702f982209643f50fd87e12c0693">GetGPIOEntryID_Switch</link>&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a51e995b5e983ba159bdcd0fd1a640338">SetGPIOEntryID_Switch</link>&#32;&#32;&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;GPIOentryID);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00078"/>00078 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00079"/>00079 &#32;&#32;&#32;&#32;SPI_HandleTypeDef*&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1ad9a86e5abe645d9723f4944f398dd44c">GetHandleSPI</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();&#32;&#32;&#32;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a51066f29afe40b1de444b7b85f3f2d54">SetHandleSPI</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(SPI_HandleTypeDef*&#32;handleSPI);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00081"/>00081 &#32;&#32;&#32;&#32;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a4624eb00eea320602ab12c5a2b938a8d">Disk_IsInserted</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00083"/>00083 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00084"/>00084 &#32;&#32;&#32;&#32;DSTATUS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a3d8b1467193885f3e017eacbb4046026">Disk_Initialize</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;drive);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00085"/>00085 &#32;&#32;&#32;&#32;DSTATUS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a33f7b623d82602e71d843e14815dd975">Disk_Status</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;drive);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00086"/>00086 &#32;&#32;&#32;&#32;DRESULT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a3dbd408bc29e23a8b79e2f67b0433fa5">Disk_Read</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;pdrive,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;sector,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00087"/>00087 &#32;&#32;&#32;&#32;DRESULT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1a97629e76cc36206b196bd22a69318df3">Disk_Write</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;pdrive,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;sector,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__d_i_o_w_i_n_d_o_w_s_notifications_manager_8h_1a6651a982e902850154af16d890039253">count</link>);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00088"/>00088 &#32;&#32;&#32;&#32;DRESULT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1aa80b5f2b076ab7672dfbd10dcde56f11">Disk_IOTCL</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;drive,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;ctrl,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;buffer);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00089"/>00089 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_m32___f_a_t_s_d___s_p_i_1af6ec241464f65cd9442d103502f76308">End</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();&#32;&#32;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00091"/>00091 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00092"/>00092 &#32;&#32;&#32;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00093"/>00093 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00094"/>00094 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00095"/>00095 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS_Select&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CS_Deselect&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00098"/>00098 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SPI_ReadByte&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SPI_WriteByte&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;data);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SPI_ReadBytePtr&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00102"/>00102 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SD_ReadyWait&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SD_PowerOn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SD_PowerOff&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SD_CheckPower&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SD_ReadDataBlock&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;btr);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SD_WriteDataBlock&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;token);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SD_SendCmd&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;cmd,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;arg);
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00110"/>00110 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00111"/>00111 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Clean&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00113"/>00113 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIOentryID_CS;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GPIOentryID_switch;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00116"/>00116 &#32;&#32;&#32;&#32;SPI_HandleTypeDef*&#32;&#32;&#32;&#32;&#32;&#32;handleSPI;&#32;&#32;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00117"/>00117 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timeout;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timer1;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;timer2;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00121"/>00121 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00122"/>00122 &#32;&#32;&#32;&#32;DSTATUS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;powerflag;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00124"/>00124 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cardtype;&#32;
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00125"/>00125 };
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00126"/>00126 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00127"/>00127 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00128"/>00128 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00129"/>00129 <emphasis role="comment">/*----&#32;INLINE&#32;FUNCTIONS&#32;+&#32;PROTOTYPES&#32;---------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00130"/>00130 
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00131"/>00131 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__x_s_t_m32___f_a_t_s_d___s_p_i_8h_source_1l00132"/>00132 
</programlisting></section>
