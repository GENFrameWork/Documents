<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_f_string_8cpp_source" xml:lang="en-US">
<title>XFString.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XFString.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_f_string_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_f_string_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_f_string_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_f_string_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_f_string_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_f_string_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_f_string_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_f_string_8h">XFString.h</link>&quot;</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_f_string_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_f_string_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_f_string_8cpp_source_1l00046"/>00046 
<anchor xml:id="__x_f_string_8cpp_source_1l00047"/>00047 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00049"/>00049 
<anchor xml:id="__x_f_string_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_f_string_8cpp_source_1l00052"/>00052 
<anchor xml:id="__x_f_string_8cpp_source_1l00053"/>00053 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00055"/>00055 
<anchor xml:id="__x_f_string_8cpp_source_1l00056"/>00056 
<anchor xml:id="__x_f_string_8cpp_source_1l00066"/><link linkend="_class_x_f_s_t_r_i_n_g_1aafb5ac50b63de84156a8a8ad20554c75">00066</link> <link linkend="_class_x_f_s_t_r_i_n_g_1aafb5ac50b63de84156a8a8ad20554c75">XFSTRING::XFSTRING</link>():&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>()
<anchor xml:id="__x_f_string_8cpp_source_1l00067"/>00067 {
<anchor xml:id="__x_f_string_8cpp_source_1l00068"/>00068 
<anchor xml:id="__x_f_string_8cpp_source_1l00069"/>00069 }
<anchor xml:id="__x_f_string_8cpp_source_1l00070"/>00070 
<anchor xml:id="__x_f_string_8cpp_source_1l00071"/>00071 
<anchor xml:id="__x_f_string_8cpp_source_1l00083"/><link linkend="_class_x_f_s_t_r_i_n_g_1aae7a406bd4ffe509035964f9a3d20fa5">00083</link> <link linkend="_class_x_f_s_t_r_i_n_g_1aafb5ac50b63de84156a8a8ad20554c75">XFSTRING::XFSTRING</link>(<emphasis role="keywordtype">int</emphasis>&#32;n)&#32;:&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>(n)
<anchor xml:id="__x_f_string_8cpp_source_1l00084"/>00084 {
<anchor xml:id="__x_f_string_8cpp_source_1l00085"/>00085 
<anchor xml:id="__x_f_string_8cpp_source_1l00086"/>00086 }
<anchor xml:id="__x_f_string_8cpp_source_1l00087"/>00087 
<anchor xml:id="__x_f_string_8cpp_source_1l00088"/>00088 
<anchor xml:id="__x_f_string_8cpp_source_1l00100"/><link linkend="_class_x_f_s_t_r_i_n_g_1ad9d259dd79576fa21f84759501f4c606">00100</link> <link linkend="_class_x_f_s_t_r_i_n_g_1aafb5ac50b63de84156a8a8ad20554c75">XFSTRING::XFSTRING</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;<emphasis role="keywordtype">string</emphasis>)&#32;:&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>(string)
<anchor xml:id="__x_f_string_8cpp_source_1l00101"/>00101 {
<anchor xml:id="__x_f_string_8cpp_source_1l00102"/>00102 
<anchor xml:id="__x_f_string_8cpp_source_1l00103"/>00103 }
<anchor xml:id="__x_f_string_8cpp_source_1l00104"/>00104 
<anchor xml:id="__x_f_string_8cpp_source_1l00105"/>00105 
<anchor xml:id="__x_f_string_8cpp_source_1l00117"/><link linkend="_class_x_f_s_t_r_i_n_g_1a16024a620229d9db402c4f6080989da7">00117</link> <link linkend="_class_x_f_s_t_r_i_n_g_1aafb5ac50b63de84156a8a8ad20554c75">XFSTRING::XFSTRING</link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;<emphasis role="keywordtype">string</emphasis>)&#32;:&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>(string)
<anchor xml:id="__x_f_string_8cpp_source_1l00118"/>00118 {
<anchor xml:id="__x_f_string_8cpp_source_1l00119"/>00119 
<anchor xml:id="__x_f_string_8cpp_source_1l00120"/>00120 }
<anchor xml:id="__x_f_string_8cpp_source_1l00121"/>00121 
<anchor xml:id="__x_f_string_8cpp_source_1l00122"/>00122 
<anchor xml:id="__x_f_string_8cpp_source_1l00134"/><link linkend="_class_x_f_s_t_r_i_n_g_1aff74b6b266beeb29b26f97db7ed9c418">00134</link> <link linkend="_class_x_f_s_t_r_i_n_g_1aafb5ac50b63de84156a8a8ad20554c75">XFSTRING::XFSTRING</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<emphasis role="keywordtype">string</emphasis>)&#32;:&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>(string)
<anchor xml:id="__x_f_string_8cpp_source_1l00135"/>00135 {
<anchor xml:id="__x_f_string_8cpp_source_1l00136"/>00136 
<anchor xml:id="__x_f_string_8cpp_source_1l00137"/>00137 }
<anchor xml:id="__x_f_string_8cpp_source_1l00138"/>00138 
<anchor xml:id="__x_f_string_8cpp_source_1l00139"/>00139 
<anchor xml:id="__x_f_string_8cpp_source_1l00151"/><link linkend="_class_x_f_s_t_r_i_n_g_1abfda99d4ef3292103190faaf4524e957">00151</link> <link linkend="_class_x_f_s_t_r_i_n_g_1aafb5ac50b63de84156a8a8ad20554c75">XFSTRING::XFSTRING</link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)&#32;:&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>(string)
<anchor xml:id="__x_f_string_8cpp_source_1l00152"/>00152 {
<anchor xml:id="__x_f_string_8cpp_source_1l00153"/>00153 
<anchor xml:id="__x_f_string_8cpp_source_1l00154"/>00154 }
<anchor xml:id="__x_f_string_8cpp_source_1l00155"/>00155 
<anchor xml:id="__x_f_string_8cpp_source_1l00156"/>00156 
<anchor xml:id="__x_f_string_8cpp_source_1l00168"/><link linkend="_class_x_f_s_t_r_i_n_g_1a94dd21990f0f3709ff5c760bfec3ca4a">00168</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a94dd21990f0f3709ff5c760bfec3ca4a">XFSTRING::Fast_ConvertToInt</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__x_f_string_8cpp_source_1l00169"/>00169 {
<anchor xml:id="__x_f_string_8cpp_source_1l00170"/>00170 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;result&#32;=&#32;0;
<anchor xml:id="__x_f_string_8cpp_source_1l00171"/>00171 
<anchor xml:id="__x_f_string_8cpp_source_1l00172"/>00172 &#32;&#32;swscanf(&amp;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>[index],&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%d&quot;</emphasis>),&#32;&amp;result);
<anchor xml:id="__x_f_string_8cpp_source_1l00173"/>00173 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__x_f_string_8cpp_source_1l00174"/>00174 }
<anchor xml:id="__x_f_string_8cpp_source_1l00175"/>00175 
<anchor xml:id="__x_f_string_8cpp_source_1l00176"/>00176 
<anchor xml:id="__x_f_string_8cpp_source_1l00188"/><link linkend="_class_x_f_s_t_r_i_n_g_1a388d1129cb59dbe1788b634d55a2619c">00188</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a388d1129cb59dbe1788b634d55a2619c">XFSTRING::Fast_ConvertToDWord</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__x_f_string_8cpp_source_1l00189"/>00189 {
<anchor xml:id="__x_f_string_8cpp_source_1l00190"/>00190 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;result&#32;=&#32;0;
<anchor xml:id="__x_f_string_8cpp_source_1l00191"/>00191 
<anchor xml:id="__x_f_string_8cpp_source_1l00192"/>00192 &#32;&#32;swscanf(&amp;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>[index],&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%u&quot;</emphasis>),&#32;&amp;result);
<anchor xml:id="__x_f_string_8cpp_source_1l00193"/>00193 
<anchor xml:id="__x_f_string_8cpp_source_1l00194"/>00194 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__x_f_string_8cpp_source_1l00195"/>00195 }
<anchor xml:id="__x_f_string_8cpp_source_1l00196"/>00196 
<anchor xml:id="__x_f_string_8cpp_source_1l00197"/>00197 
<anchor xml:id="__x_f_string_8cpp_source_1l00209"/><link linkend="_class_x_f_s_t_r_i_n_g_1a838b44eef837f9692842bd95d24aed98">00209</link> <link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a838b44eef837f9692842bd95d24aed98">XFSTRING::Fast_ConvertToQWord</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__x_f_string_8cpp_source_1l00210"/>00210 {
<anchor xml:id="__x_f_string_8cpp_source_1l00211"/>00211 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;result&#32;=&#32;0;
<anchor xml:id="__x_f_string_8cpp_source_1l00212"/>00212 
<anchor xml:id="__x_f_string_8cpp_source_1l00213"/>00213 &#32;&#32;swscanf(&amp;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>[index],&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%lld&quot;</emphasis>),&#32;&amp;result);
<anchor xml:id="__x_f_string_8cpp_source_1l00214"/>00214 
<anchor xml:id="__x_f_string_8cpp_source_1l00215"/>00215 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__x_f_string_8cpp_source_1l00216"/>00216 }
<anchor xml:id="__x_f_string_8cpp_source_1l00217"/>00217 
<anchor xml:id="__x_f_string_8cpp_source_1l00218"/>00218 
<anchor xml:id="__x_f_string_8cpp_source_1l00230"/><link linkend="_class_x_f_s_t_r_i_n_g_1a3c4141c25e71a4d941f62d63bd10a8c4">00230</link> <link linkend="__x_base_8h_1a0afbffdfb038fa7953779f6d954863cd">XQWORDSIG</link>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a3c4141c25e71a4d941f62d63bd10a8c4">XFSTRING::Fast_ConvertToSQWord</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__x_f_string_8cpp_source_1l00231"/>00231 {
<anchor xml:id="__x_f_string_8cpp_source_1l00232"/>00232 &#32;&#32;<link linkend="__x_base_8h_1a0afbffdfb038fa7953779f6d954863cd">XQWORDSIG</link>&#32;result&#32;=&#32;0;
<anchor xml:id="__x_f_string_8cpp_source_1l00233"/>00233 
<anchor xml:id="__x_f_string_8cpp_source_1l00234"/>00234 &#32;&#32;swscanf(&amp;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>[index],&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%lld&quot;</emphasis>),&#32;&amp;result);
<anchor xml:id="__x_f_string_8cpp_source_1l00235"/>00235 
<anchor xml:id="__x_f_string_8cpp_source_1l00236"/>00236 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__x_f_string_8cpp_source_1l00237"/>00237 }
<anchor xml:id="__x_f_string_8cpp_source_1l00238"/>00238 
<anchor xml:id="__x_f_string_8cpp_source_1l00239"/>00239 
<anchor xml:id="__x_f_string_8cpp_source_1l00251"/><link linkend="_class_x_f_s_t_r_i_n_g_1a88b8ba620171a229b9d137e9c7ae25b1">00251</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a88b8ba620171a229b9d137e9c7ae25b1">XFSTRING::Fast_ConvertToFloat</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__x_f_string_8cpp_source_1l00252"/>00252 {
<anchor xml:id="__x_f_string_8cpp_source_1l00253"/>00253 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;result&#32;=&#32;0;
<anchor xml:id="__x_f_string_8cpp_source_1l00254"/>00254 
<anchor xml:id="__x_f_string_8cpp_source_1l00255"/>00255 &#32;&#32;swscanf(&amp;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>[index],&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%f&quot;</emphasis>),&#32;&amp;result);
<anchor xml:id="__x_f_string_8cpp_source_1l00256"/>00256 
<anchor xml:id="__x_f_string_8cpp_source_1l00257"/>00257 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__x_f_string_8cpp_source_1l00258"/>00258 }
<anchor xml:id="__x_f_string_8cpp_source_1l00259"/>00259 
<anchor xml:id="__x_f_string_8cpp_source_1l00260"/>00260 
<anchor xml:id="__x_f_string_8cpp_source_1l00272"/><link linkend="_class_x_f_s_t_r_i_n_g_1a8224b1bdb8f3fab8ee91b2e981782ead">00272</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a8224b1bdb8f3fab8ee91b2e981782ead">XFSTRING::Fast_ConvertToDouble</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__x_f_string_8cpp_source_1l00273"/>00273 {
<anchor xml:id="__x_f_string_8cpp_source_1l00274"/>00274 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;result&#32;=&#32;0;
<anchor xml:id="__x_f_string_8cpp_source_1l00275"/>00275 
<anchor xml:id="__x_f_string_8cpp_source_1l00276"/>00276 &#32;&#32;swscanf(&amp;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>[index],&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%lf&quot;</emphasis>),&#32;&amp;result);
<anchor xml:id="__x_f_string_8cpp_source_1l00277"/>00277 
<anchor xml:id="__x_f_string_8cpp_source_1l00278"/>00278 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__x_f_string_8cpp_source_1l00279"/>00279 }
<anchor xml:id="__x_f_string_8cpp_source_1l00280"/>00280 
<anchor xml:id="__x_f_string_8cpp_source_1l00281"/>00281 
<anchor xml:id="__x_f_string_8cpp_source_1l00293"/><link linkend="_class_x_f_s_t_r_i_n_g_1a0c46e92ba05f2cb67ac842448051126a">00293</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a0c46e92ba05f2cb67ac842448051126a">XFSTRING::Fast_AddCharacter</link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>&#32;character)
<anchor xml:id="__x_f_string_8cpp_source_1l00294"/>00294 {
<anchor xml:id="__x_f_string_8cpp_source_1l00295"/>00295 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_x_s_t_r_i_n_g_1afafdad1777fa61df07ccfe7835d3c769">ReAllocBuffer</link>(<link linkend="_class_x_s_t_r_i_n_g_1aa08b502d3d75209825ff1da361fa3fb3">size</link>&#32;+&#32;1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_string_8cpp_source_1l00296"/>00296 
<anchor xml:id="__x_f_string_8cpp_source_1l00297"/>00297 &#32;&#32;memcpy(&amp;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>[<link linkend="_class_x_s_t_r_i_n_g_1aa08b502d3d75209825ff1da361fa3fb3">size</link>&#32;-&#32;1],&#32;&amp;character,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>));
<anchor xml:id="__x_f_string_8cpp_source_1l00298"/>00298 
<anchor xml:id="__x_f_string_8cpp_source_1l00299"/>00299 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_string_8cpp_source_1l00300"/>00300 }
<anchor xml:id="__x_f_string_8cpp_source_1l00301"/>00301 
<anchor xml:id="__x_f_string_8cpp_source_1l00302"/>00302 
<anchor xml:id="__x_f_string_8cpp_source_1l00312"/><link linkend="_class_x_f_s_t_r_i_n_g_1a4125845eb3aa211e28d06ff297ed78f4">00312</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a4125845eb3aa211e28d06ff297ed78f4">XFSTRING::Fast_Empty</link>()
<anchor xml:id="__x_f_string_8cpp_source_1l00313"/>00313 {
<anchor xml:id="__x_f_string_8cpp_source_1l00314"/>00314 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_s_t_r_i_n_g_1aa08b502d3d75209825ff1da361fa3fb3">size</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_string_8cpp_source_1l00315"/>00315 
<anchor xml:id="__x_f_string_8cpp_source_1l00316"/>00316 &#32;&#32;memset(&amp;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>[0],&#32;0,&#32;<link linkend="_class_x_s_t_r_i_n_g_1aa08b502d3d75209825ff1da361fa3fb3">size</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>));
<anchor xml:id="__x_f_string_8cpp_source_1l00317"/>00317 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1aa08b502d3d75209825ff1da361fa3fb3">size</link>&#32;=&#32;0;
<anchor xml:id="__x_f_string_8cpp_source_1l00318"/>00318 
<anchor xml:id="__x_f_string_8cpp_source_1l00319"/>00319 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_string_8cpp_source_1l00320"/>00320 }
<anchor xml:id="__x_f_string_8cpp_source_1l00321"/>00321 
<anchor xml:id="__x_f_string_8cpp_source_1l00322"/>00322 
<anchor xml:id="__x_f_string_8cpp_source_1l00334"/><link linkend="_class_x_f_s_t_r_i_n_g_1a055a8f90bce24e988132656ca1d29c4c">00334</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a055a8f90bce24e988132656ca1d29c4c">XFSTRING::operator =  </link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00335"/>00335 {
<anchor xml:id="__x_f_string_8cpp_source_1l00336"/>00336 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1a4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__x_f_string_8cpp_source_1l00337"/>00337 }
<anchor xml:id="__x_f_string_8cpp_source_1l00338"/>00338 
<anchor xml:id="__x_f_string_8cpp_source_1l00339"/>00339 
<anchor xml:id="__x_f_string_8cpp_source_1l00351"/><link linkend="_class_x_f_s_t_r_i_n_g_1ad245ef3ad217e4d495bf58df30159993">00351</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a055a8f90bce24e988132656ca1d29c4c">XFSTRING::operator =  </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00352"/>00352 {
<anchor xml:id="__x_f_string_8cpp_source_1l00353"/>00353 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1a4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__x_f_string_8cpp_source_1l00354"/>00354 }
<anchor xml:id="__x_f_string_8cpp_source_1l00355"/>00355 
<anchor xml:id="__x_f_string_8cpp_source_1l00356"/>00356 
<anchor xml:id="__x_f_string_8cpp_source_1l00368"/><link linkend="_class_x_f_s_t_r_i_n_g_1a38e0725679744033be446f909c364477">00368</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a055a8f90bce24e988132656ca1d29c4c">XFSTRING::operator =  </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00369"/>00369 {
<anchor xml:id="__x_f_string_8cpp_source_1l00370"/>00370 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1a4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__x_f_string_8cpp_source_1l00371"/>00371 }
<anchor xml:id="__x_f_string_8cpp_source_1l00372"/>00372 
<anchor xml:id="__x_f_string_8cpp_source_1l00373"/>00373 
<anchor xml:id="__x_f_string_8cpp_source_1l00385"/><link linkend="_class_x_f_s_t_r_i_n_g_1a9c8c21bec37ea7e118d821a94d8395c1">00385</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a055a8f90bce24e988132656ca1d29c4c">XFSTRING::operator =  </link>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>*&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00386"/>00386 {
<anchor xml:id="__x_f_string_8cpp_source_1l00387"/>00387 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1a4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__x_f_string_8cpp_source_1l00388"/>00388 }
<anchor xml:id="__x_f_string_8cpp_source_1l00389"/>00389 
<anchor xml:id="__x_f_string_8cpp_source_1l00390"/>00390 
<anchor xml:id="__x_f_string_8cpp_source_1l00402"/><link linkend="_class_x_f_s_t_r_i_n_g_1a6c9c3816f7bf3e021f77d1dc4e906381">00402</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a055a8f90bce24e988132656ca1d29c4c">XFSTRING::operator =  </link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00403"/>00403 {
<anchor xml:id="__x_f_string_8cpp_source_1l00404"/>00404 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1a4e97e075650e9bc8cfb7deb28e4c9ce4">Set</link>(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__x_f_string_8cpp_source_1l00405"/>00405 }
<anchor xml:id="__x_f_string_8cpp_source_1l00406"/>00406 
<anchor xml:id="__x_f_string_8cpp_source_1l00407"/>00407 
<anchor xml:id="__x_f_string_8cpp_source_1l00419"/><link linkend="_class_x_f_s_t_r_i_n_g_1ac4380db6e66f18d897d526d81f590621">00419</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1ac4380db6e66f18d897d526d81f590621">XFSTRING::operator += </link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00420"/>00420 {
<anchor xml:id="__x_f_string_8cpp_source_1l00421"/>00421 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1ae19f84471c20a914d10a8ac757cacb9a">Add</link>(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__x_f_string_8cpp_source_1l00422"/>00422 }
<anchor xml:id="__x_f_string_8cpp_source_1l00423"/>00423 
<anchor xml:id="__x_f_string_8cpp_source_1l00424"/>00424 
<anchor xml:id="__x_f_string_8cpp_source_1l00436"/><link linkend="_class_x_f_s_t_r_i_n_g_1a62cfaf7569c1e566a8eb833fb25ae269">00436</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1ac4380db6e66f18d897d526d81f590621">XFSTRING::operator += </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00437"/>00437 {
<anchor xml:id="__x_f_string_8cpp_source_1l00438"/>00438 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1ae19f84471c20a914d10a8ac757cacb9a">Add</link>(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__x_f_string_8cpp_source_1l00439"/>00439 }
<anchor xml:id="__x_f_string_8cpp_source_1l00440"/>00440 
<anchor xml:id="__x_f_string_8cpp_source_1l00441"/>00441 
<anchor xml:id="__x_f_string_8cpp_source_1l00453"/><link linkend="_class_x_f_s_t_r_i_n_g_1a5d23ce2463cfb665e41b3bf411fe123c">00453</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1ac4380db6e66f18d897d526d81f590621">XFSTRING::operator += </link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00454"/>00454 {
<anchor xml:id="__x_f_string_8cpp_source_1l00455"/>00455 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1ae19f84471c20a914d10a8ac757cacb9a">Add</link>(<emphasis role="keywordtype">string</emphasis>);
<anchor xml:id="__x_f_string_8cpp_source_1l00456"/>00456 }
<anchor xml:id="__x_f_string_8cpp_source_1l00457"/>00457 
<anchor xml:id="__x_f_string_8cpp_source_1l00458"/>00458 
<anchor xml:id="__x_f_string_8cpp_source_1l00470"/><link linkend="_class_x_f_s_t_r_i_n_g_1a6c57963b66b0adff13e88bd482ba2379">00470</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1ac4380db6e66f18d897d526d81f590621">XFSTRING::operator += </link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>&#32;character)
<anchor xml:id="__x_f_string_8cpp_source_1l00471"/>00471 {
<anchor xml:id="__x_f_string_8cpp_source_1l00472"/>00472 &#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1ae19f84471c20a914d10a8ac757cacb9a">Add</link>(character);
<anchor xml:id="__x_f_string_8cpp_source_1l00473"/>00473 }
<anchor xml:id="__x_f_string_8cpp_source_1l00474"/>00474 
<anchor xml:id="__x_f_string_8cpp_source_1l00475"/>00475 
<anchor xml:id="__x_f_string_8cpp_source_1l00487"/><link linkend="_class_x_f_s_t_r_i_n_g_1aa8d1f7cdab409fb545bcdc7235366b68">00487</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1aa8d1f7cdab409fb545bcdc7235366b68">XFSTRING::operator &lt;  </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00488"/>00488 <emphasis role="keyword"></emphasis>{
<anchor xml:id="__x_f_string_8cpp_source_1l00489"/>00489 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">bool</emphasis>)(<link linkend="_class_x_s_t_r_i_n_g_1aa41b9d6abe3eca02494d6eb043ed50c2">Compare</link>(<emphasis role="keywordtype">string</emphasis>)&#32;==&#32;-1);
<anchor xml:id="__x_f_string_8cpp_source_1l00490"/>00490 }
<anchor xml:id="__x_f_string_8cpp_source_1l00491"/>00491 
<anchor xml:id="__x_f_string_8cpp_source_1l00492"/>00492 
<anchor xml:id="__x_f_string_8cpp_source_1l00504"/><link linkend="_class_x_f_s_t_r_i_n_g_1a2bb874b95d3c969bd4a3c51d5a873cfd">00504</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a2bb874b95d3c969bd4a3c51d5a873cfd">XFSTRING::operator &gt;  </link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00505"/>00505 {
<anchor xml:id="__x_f_string_8cpp_source_1l00506"/>00506 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">bool</emphasis>)(<link linkend="_class_x_s_t_r_i_n_g_1aa41b9d6abe3eca02494d6eb043ed50c2">Compare</link>(<emphasis role="keywordtype">string</emphasis>)&#32;==&#32;1);
<anchor xml:id="__x_f_string_8cpp_source_1l00507"/>00507 }
<anchor xml:id="__x_f_string_8cpp_source_1l00508"/>00508 
<anchor xml:id="__x_f_string_8cpp_source_1l00509"/>00509 
<anchor xml:id="__x_f_string_8cpp_source_1l00521"/><link linkend="_class_x_f_s_t_r_i_n_g_1aba504b59d6150097fe85db7497c19be5">00521</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1aba504b59d6150097fe85db7497c19be5">XFSTRING::operator &lt;= </link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00522"/>00522 {
<anchor xml:id="__x_f_string_8cpp_source_1l00523"/>00523 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">bool</emphasis>)(<link linkend="_class_x_s_t_r_i_n_g_1aa41b9d6abe3eca02494d6eb043ed50c2">Compare</link>(<emphasis role="keywordtype">string</emphasis>)&#32;!=&#32;1);
<anchor xml:id="__x_f_string_8cpp_source_1l00524"/>00524 }
<anchor xml:id="__x_f_string_8cpp_source_1l00525"/>00525 
<anchor xml:id="__x_f_string_8cpp_source_1l00526"/>00526 
<anchor xml:id="__x_f_string_8cpp_source_1l00538"/><link linkend="_class_x_f_s_t_r_i_n_g_1a74e4d44ec055289f9101c17eabfc3f66">00538</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a74e4d44ec055289f9101c17eabfc3f66">XFSTRING::operator &gt;= </link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00539"/>00539 {
<anchor xml:id="__x_f_string_8cpp_source_1l00540"/>00540 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">bool</emphasis>)(<link linkend="_class_x_s_t_r_i_n_g_1aa41b9d6abe3eca02494d6eb043ed50c2">Compare</link>(<emphasis role="keywordtype">string</emphasis>)&#32;!=&#32;-1);
<anchor xml:id="__x_f_string_8cpp_source_1l00541"/>00541 }
<anchor xml:id="__x_f_string_8cpp_source_1l00542"/>00542 
<anchor xml:id="__x_f_string_8cpp_source_1l00543"/>00543 
<anchor xml:id="__x_f_string_8cpp_source_1l00555"/><link linkend="_class_x_f_s_t_r_i_n_g_1aa4b4c9161094257feb976c2d7dc4474a">00555</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1aa4b4c9161094257feb976c2d7dc4474a">XFSTRING::operator == </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00556"/>00556 <emphasis role="keyword"></emphasis>{
<anchor xml:id="__x_f_string_8cpp_source_1l00557"/>00557 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">bool</emphasis>)(<link linkend="_class_x_s_t_r_i_n_g_1aa41b9d6abe3eca02494d6eb043ed50c2">Compare</link>(<emphasis role="keywordtype">string</emphasis>)&#32;==&#32;0);
<anchor xml:id="__x_f_string_8cpp_source_1l00558"/>00558 }
<anchor xml:id="__x_f_string_8cpp_source_1l00559"/>00559 
<anchor xml:id="__x_f_string_8cpp_source_1l00560"/>00560 
<anchor xml:id="__x_f_string_8cpp_source_1l00572"/><link linkend="_class_x_f_s_t_r_i_n_g_1a236d26d83eb102e23726ae2bfd5c93ca">00572</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a236d26d83eb102e23726ae2bfd5c93ca">XFSTRING::operator != </link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;<emphasis role="keywordtype">string</emphasis>)
<anchor xml:id="__x_f_string_8cpp_source_1l00573"/>00573 {
<anchor xml:id="__x_f_string_8cpp_source_1l00574"/>00574 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">bool</emphasis>)(<link linkend="_class_x_s_t_r_i_n_g_1aa41b9d6abe3eca02494d6eb043ed50c2">Compare</link>(<emphasis role="keywordtype">string</emphasis>)&#32;!=&#32;0);
<anchor xml:id="__x_f_string_8cpp_source_1l00575"/>00575 }
<anchor xml:id="__x_f_string_8cpp_source_1l00576"/>00576 
<anchor xml:id="__x_f_string_8cpp_source_1l00577"/>00577 
<anchor xml:id="__x_f_string_8cpp_source_1l00589"/><link linkend="_class_x_f_s_t_r_i_n_g_1af9beec778314b362e9f77ba738f5b1ae">00589</link> <link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1af9beec778314b362e9f77ba738f5b1ae">XFSTRING::operator [] </link>(<emphasis role="keywordtype">int</emphasis>&#32;position)
<anchor xml:id="__x_f_string_8cpp_source_1l00590"/>00590 {
<anchor xml:id="__x_f_string_8cpp_source_1l00591"/>00591 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>[position];
<anchor xml:id="__x_f_string_8cpp_source_1l00592"/>00592 }
<anchor xml:id="__x_f_string_8cpp_source_1l00593"/>00593 
<anchor xml:id="__x_f_string_8cpp_source_1l00594"/>00594 
<anchor xml:id="__x_f_string_8cpp_source_1l00607"/><link linkend="_class_x_f_s_t_r_i_n_g_1a42bcaf34054bccca4a5a8725f32edc4a">00607</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a42bcaf34054bccca4a5a8725f32edc4a">XFSTRING::Scan</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;mask,&#32;...)
<anchor xml:id="__x_f_string_8cpp_source_1l00608"/>00608 {
<anchor xml:id="__x_f_string_8cpp_source_1l00609"/>00609 &#32;&#32;va_list&#32;ap;
<anchor xml:id="__x_f_string_8cpp_source_1l00610"/>00610 
<anchor xml:id="__x_f_string_8cpp_source_1l00611"/>00611 &#32;&#32;va_start(ap,&#32;mask);
<anchor xml:id="__x_f_string_8cpp_source_1l00612"/>00612 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;vswscanf(this-&gt;<link linkend="_class_x_s_t_r_i_n_g_1a7a18d12544a13ec2bf9c7f1ee60e9d71">text</link>,&#32;mask,&#32;ap);
<anchor xml:id="__x_f_string_8cpp_source_1l00613"/>00613 &#32;&#32;va_end(ap);
<anchor xml:id="__x_f_string_8cpp_source_1l00614"/>00614 
<anchor xml:id="__x_f_string_8cpp_source_1l00615"/>00615 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;n;
<anchor xml:id="__x_f_string_8cpp_source_1l00616"/>00616 }
<anchor xml:id="__x_f_string_8cpp_source_1l00617"/>00617 
<anchor xml:id="__x_f_string_8cpp_source_1l00618"/>00618 
<anchor xml:id="__x_f_string_8cpp_source_1l00631"/><link linkend="_class_x_f_s_t_r_i_n_g_1a3e2dea3eb3085f6bfc39810f1e74372f">00631</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1a3e2dea3eb3085f6bfc39810f1e74372f">XFSTRING::Explode</link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>&#32;token,&#32;<link linkend="_class_x_v_e_c_t_o_r">XVECTOR&lt;XFSTRING*&gt;</link>*&#32;receive)
<anchor xml:id="__x_f_string_8cpp_source_1l00632"/>00632 {
<anchor xml:id="__x_f_string_8cpp_source_1l00633"/>00633 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;start&#32;=&#32;0;
<anchor xml:id="__x_f_string_8cpp_source_1l00634"/>00634 
<anchor xml:id="__x_f_string_8cpp_source_1l00635"/>00635 &#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;<emphasis role="keywordtype">int</emphasis>&#32;end&#32;=&#32;this-&gt;<link linkend="_class_x_s_t_r_i_n_g_1a7948e15ace8f476ea8a5e6e84dfa7976">FindCharacter</link>(token,&#32;start);
<anchor xml:id="__x_f_string_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(end&#32;==&#32;<link linkend="__x_base_8h_1ad96490cc68537c8d1797ed2a62489836">NOTFOUND</link>)&#32;end&#32;=&#32;<link linkend="_class_x_s_t_r_i_n_g_1aa08b502d3d75209825ff1da361fa3fb3">size</link>;
<anchor xml:id="__x_f_string_8cpp_source_1l00637"/>00637 
<anchor xml:id="__x_f_string_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((end&#32;-&#32;start)&#32;&gt;&#32;0)
<anchor xml:id="__x_f_string_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_string_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_f_s_t_r_i_n_g">XFSTRING</link>*&#32;tok&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_f_s_t_r_i_n_g_1aafb5ac50b63de84156a8a8ad20554c75">XFSTRING</link>();
<anchor xml:id="__x_f_string_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!tok)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_string_8cpp_source_1l00642"/>00642 
<anchor xml:id="__x_f_string_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g_1a4fb725176450b2fed84aaa0dfbcdbe13">Copy</link>(start,&#32;end,&#32;(*tok));
<anchor xml:id="__x_f_string_8cpp_source_1l00644"/>00644 
<anchor xml:id="__x_f_string_8cpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!receive-&gt;<link linkend="_class_x_v_e_c_t_o_r_1a51a790aac8efd4603aee608ddcc83423">Add</link>(tok))
<anchor xml:id="__x_f_string_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_f_string_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>(tok);
<anchor xml:id="__x_f_string_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_f_string_8cpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_string_8cpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_f_string_8cpp_source_1l00651"/>00651 
<anchor xml:id="__x_f_string_8cpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end&#32;+&#32;1;
<anchor xml:id="__x_f_string_8cpp_source_1l00653"/>00653 
<anchor xml:id="__x_f_string_8cpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(start&#32;&lt;&#32;(<emphasis role="keywordtype">int</emphasis>)<link linkend="_class_x_s_t_r_i_n_g_1aa08b502d3d75209825ff1da361fa3fb3">size</link>);
<anchor xml:id="__x_f_string_8cpp_source_1l00655"/>00655 
<anchor xml:id="__x_f_string_8cpp_source_1l00656"/>00656 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_f_string_8cpp_source_1l00657"/>00657 }
<anchor xml:id="__x_f_string_8cpp_source_1l00658"/>00658 
<anchor xml:id="__x_f_string_8cpp_source_1l00659"/>00659 
<anchor xml:id="__x_f_string_8cpp_source_1l00660"/>00660 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_f_string_8cpp_source_1l00661"/>00661 
</programlisting></section>
