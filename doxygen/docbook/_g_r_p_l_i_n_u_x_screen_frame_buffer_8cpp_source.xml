<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source" xml:lang="en-US">
<title>GRPLINUXScreenFrameBuffer.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Linux/GRPLINUXScreenFrameBuffer.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00001"/>00001 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00031"/>00031 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00033"/>00033 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00035"/>00035 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00036"/>00036 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00039"/>00039 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00040"/>00040 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00041"/>00041 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_l_i_n_u_x_screen_frame_buffer_8h">GRPLINUXScreenFrameBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00042"/>00042 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&lt;fcntl.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&lt;linux/fb.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&lt;sys/mman.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#include&#32;&lt;sys/ioctl.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&lt;linux/input.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#include&#32;&lt;linux/kd.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#include&#32;&lt;errno.h&gt;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00054"/>00054 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00055"/>00055 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00056"/>00056 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_r_p_canvas_8h">GRPCanvas.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00058"/>00058 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00060"/>00060 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00061"/>00061 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00062"/>00062 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00063"/>00063 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00064"/>00064 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00065"/>00065 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00066"/>00066 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00067"/>00067 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00068"/>00068 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00069"/>00069 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00070"/>00070 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00071"/>00071 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00072"/>00072 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00073"/>00073 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00074"/>00074 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00084"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a8ce41feb8bfb3013c83a15d35c9e3bd9">00084</link> <link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a8ce41feb8bfb3013c83a15d35c9e3bd9">GRPLINUXSCREENFRAMEBUFFER::GRPLINUXSCREENFRAMEBUFFER</link>():&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n">GRPSCREEN</link>()
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00085"/>00085 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00086"/>00086 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00087"/>00087 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00088"/>00088 &#32;&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1a320be061d00813c4ebca6c51b8866417">type</link>&#32;=&#32;<link linkend="__g_r_p_screen_8h_1a13ec223f83fb0f13672bfa7b4f0abcb2ad62d8882fcb0af42f8a0f4e6af95b40b">GRPSCREENTYPE_LINUX_FRAMEBUFFER</link>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00089"/>00089 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00090"/>00090 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>fb_var_screeninfo&#32;varinfo;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00091"/>00091 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>fb_fix_screeninfo&#32;fixinfo;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00092"/>00092 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00093"/>00093 &#32;&#32;handlefb&#32;=&#32;open(<link linkend="__g_r_p_l_i_n_u_x_screen_frame_buffer_8h_1a7bd36e7d3e7c62cc9852da27a81cc027">GRPLINUXSCREENFRAMEBUFFER_DEVICE</link>,&#32;O_RDWR);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00094"/>00094 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handlefb&#32;!=-1)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ioctl(handlefb,&#32;FBIOGET_VSCREENINFO,&#32;&amp;varinfo)&#32;!=&#32;-1)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a9230f541a690015a7aa087a61d68ed7a">SetWidth</link>(varinfo.xres);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a2b39330d27e80bb2e363267ca8a162da">SetHeight</link>(varinfo.yres);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00100"/>00100 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1ac1339369c17c3d26d0c0d31b23f992e7">SetSize</link>(varinfo.xres,&#32;varinfo.yres);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a6513570887d1b4d4c2441abf92e6f160">SetMaxSize</link>(varinfo.xres,&#32;varinfo.yres);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00103"/>00103 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1ade81e1905d604ef7eb03d194ba1332d4">XTRACE_COLOR_BLUE</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;[Frame&#32;Buffer]&#32;Screen&#32;[%d&#32;x&#32;%d]&#32;&#32;%d&#32;bits&quot;</emphasis>),&#32;varinfo.xres,&#32;varinfo.yres,&#32;varinfo.bits_per_pixel);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00105"/>00105 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(varinfo.bits_per_pixel)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;&#32;8&#32;:&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a628a2e4a3a24a680eb16b789bd16dd00">SetMode</link>(<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a9207ca848d5052d2735cc569785cc701">GRPPROPERTYMODE_08_INDEX</link>);&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;16&#32;:&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a628a2e4a3a24a680eb16b789bd16dd00">SetMode</link>(<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a79643bdbeae1e79973771780d48194f1">GRPPROPERTYMODE_16_RGB_565</link>);&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;24&#32;:&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a628a2e4a3a24a680eb16b789bd16dd00">SetMode</link>(<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365afd21f0dc81224177cb44aec0fc7fc324">GRPPROPERTYMODE_24_BGR_888</link>);&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;&#32;32&#32;:&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a628a2e4a3a24a680eb16b789bd16dd00">SetMode</link>(<link linkend="__g_r_p_properties_8h_1af987094c3c6c0910d472c6c95a548365a745e53fb66eed25ca4ee68167c68a48d">GRPPROPERTYMODE_32_BGRA_8888</link>);&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00113"/>00113 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a7e2d694c4573fac76cd366b68ca779a4">SetIsBufferInverse</link>(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00115"/>00115 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00118"/>00118 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00119"/>00119 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handlefb!=-1)&#32;&#32;close(handlefb);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00120"/>00120 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00121"/>00121 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00122"/>00122 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00133"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1ac237fa66284e0e1fa340f8dea4ad158a">00133</link> <link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1ac237fa66284e0e1fa340f8dea4ad158a">GRPLINUXSCREENFRAMEBUFFER::~GRPLINUXSCREENFRAMEBUFFER</link>()
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00134"/>00134 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00135"/>00135 &#32;&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a27842a05b5b58c03b19194afc2de9865">Delete</link>();
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00136"/>00136 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00137"/>00137 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00138"/>00138 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00139"/>00139 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00140"/>00140 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00152"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a79d261eaa1e45a8604c7031368c370e6">00152</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a79d261eaa1e45a8604c7031368c370e6">GRPLINUXSCREENFRAMEBUFFER::Create</link>(<emphasis role="keywordtype">bool</emphasis>&#32;show)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00153"/>00153 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00154"/>00154 &#32;&#32;Clean();
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00155"/>00155 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00156"/>00156 &#32;&#32;handlefb&#32;=&#32;open(<link linkend="__g_r_p_l_i_n_u_x_screen_frame_buffer_8h_1a7bd36e7d3e7c62cc9852da27a81cc027">GRPLINUXSCREENFRAMEBUFFER_DEVICE</link>,&#32;O_RDWR);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00157"/>00157 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handlefb!=-1)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;consoletty&#32;=&#32;open(<emphasis role="stringliteral">&quot;/dev/tty1&quot;</emphasis>,&#32;O_RDWR);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ioctl(consoletty,&#32;KDSETMODE,&#32;KD_GRAPHICS)&#32;!=&#32;-1)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!ScreenResolution(<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a2ff017a4a306c64388b4748cff2ef1f0">width</link>,&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1af56534d12004917f8655bfd96d81aa63">height</link>))
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;ERROR!&#32;Change&#32;screen&#32;mode:&#32;error[%d]&quot;</emphasis>),&#32;errno);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00166"/>00166 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1a3d685c554ddf2628bf89b0300e1c25c8">CreateBuffers</link>();
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00168"/>00168 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//XTRACE_PRINTCOLOR(XTRACE_COLOR_BLUE,&#32;__L(&quot;X:&#32;%d,&#32;Y:&#32;%d&#32;&#32;mode:&#32;%d&quot;),&#32;width,&#32;height,&#32;GetMode());</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00170"/>00170 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;zero&#32;=&#32;0;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(ioctl(handlefb,&#32;FBIO_WAITFORVSYNC,&#32;&amp;zero)&#32;==&#32;-1)&#32;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;errorstr;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorstr&#32;=&#32;strerror(errno);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(<link linkend="__x_trace_8h_1a435ffc0233bcfc5e0e15d9965a071c52">XTRACE_COLOR_RED</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;Frame&#32;Buffer&#32;VSYNC:&#32;%s&quot;</emphasis>),&#32;errorstr.<link linkend="_class_x_s_t_r_i_n_g_1ad1470753a96f93e2feb3ee54e6fef95f">Get</link>());
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00179"/>00179 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1a6fa475c9228a35f6e835dfcd759eafbb">GRPSCREEN::Create</link>(show);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00183"/>00183 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00184"/>00184 &#32;&#32;<link linkend="__x_trace_8h_1ad3489a73cc8c0aa8e64f91a03735e525">XTRACE_PRINTCOLOR</link>(4,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;ERROR!&#32;open&#32;device&#32;screen:&#32;%d&quot;</emphasis>),&#32;errno);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00185"/>00185 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00186"/>00186 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00187"/>00187 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00188"/>00188 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00189"/>00189 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00199"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a81522ad5e4c413f706b2c1b22f589688">00199</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a81522ad5e4c413f706b2c1b22f589688">GRPLINUXSCREENFRAMEBUFFER::Update</link>()
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00200"/>00200 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00201"/>00201 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00202"/>00202 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00203"/>00203 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00204"/>00204 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00216"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1aea072475ec78ac0a93ee2c8d93be456e">00216</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a81522ad5e4c413f706b2c1b22f589688">GRPLINUXSCREENFRAMEBUFFER::Update</link>(<link linkend="_class_g_r_p_c_a_n_v_a_s">GRPCANVAS</link>*&#32;canvas)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00217"/>00217 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00218"/>00218 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handlefb&#32;==&#32;-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00219"/>00219 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_g_r_p_s_c_r_e_e_n_1ab425deeaa3ba8e5a87cb459565ba4583">buffersize</link>)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00220"/>00220 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00221"/>00221 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00222"/>00222 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(ioctl(handlefb,&#32;FBIO_WAITFORVSYNC,&#32;0))&#32;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//printf(&quot;VSync&#32;failed.\n&quot;);</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00226"/>00226 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00227"/>00227 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;fbp&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)mmap(0,&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1ab425deeaa3ba8e5a87cb459565ba4583">buffersize</link>,&#32;PROT_READ&#32;|&#32;PROT_WRITE,&#32;MAP_SHARED,&#32;handlefb,&#32;0);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00228"/>00228 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(fbp&#32;==&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)-1)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00229"/>00229 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00230"/>00230 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1af0c140b4c72a493645dad4f292a51977">IsEqualSizeTo</link>(canvas)&#32;==&#32;<link linkend="__x_base_8h_1a146f6c83bfa09e308b1f8e423085c8d4">ISEQUAL</link>)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(fbp,&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)canvas-&gt;<link linkend="_class_g_r_p_c_a_n_v_a_s_1a17c51ff97e0d74bc3510b2eff0dd9abf">GetBuffer</link>(),&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1ab425deeaa3ba8e5a87cb459565ba4583">buffersize</link>);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//canvas-&gt;CopyBufferRenderToScreen(this);</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//memcpy(fbp,(XBYTE*)buffer,&#32;buffersize);</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00238"/>00238 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;canvas-&gt;<link linkend="_class_g_r_p_c_a_n_v_a_s_1ae516ed5eb91b97743bf8766d886ad5d5">CopyBufferRenderToBufferScreen</link>((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)(fbp),&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a2ff017a4a306c64388b4748cff2ef1f0">width</link>,&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1af56534d12004917f8655bfd96d81aa63">height</link>,&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a82cd5418db903f5a5fb8c56aceff6319">isbufferinverse</link>);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00241"/>00241 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00242"/>00242 &#32;&#32;munmap((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)fbp,&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1ab425deeaa3ba8e5a87cb459565ba4583">buffersize</link>);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00243"/>00243 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00244"/>00244 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00245"/>00245 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00246"/>00246 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00247"/>00247 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00257"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a27842a05b5b58c03b19194afc2de9865">00257</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a27842a05b5b58c03b19194afc2de9865">GRPLINUXSCREENFRAMEBUFFER::Delete</link>()
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00258"/>00258 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00259"/>00259 &#32;&#32;ClearScreen();
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00260"/>00260 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00261"/>00261 &#32;&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1acbb80c7944530feda6f4460521386f17">DeleteBuffers</link>();
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00262"/>00262 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00263"/>00263 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;consoletty&#32;=&#32;open(<emphasis role="stringliteral">&quot;/dev/tty1&quot;</emphasis>,&#32;O_RDWR);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00264"/>00264 &#32;&#32;ioctl(consoletty,&#32;KDSETMODE,&#32;KD_TEXT);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00265"/>00265 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00266"/>00266 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handlefb!=-1)&#32;&#32;close(handlefb);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00267"/>00267 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00268"/>00268 &#32;&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1a2a1e33048af19accbf67ed8c7fd89d70">isactive</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00269"/>00269 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00270"/>00270 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00271"/>00271 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00272"/>00272 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00273"/>00273 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00286"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1aa8a9d6fbec61230c33945db4b8804fdb">00286</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1aa8a9d6fbec61230c33945db4b8804fdb">GRPLINUXSCREENFRAMEBUFFER::Resize</link>(<emphasis role="keywordtype">int</emphasis>&#32;width,&#32;<emphasis role="keywordtype">int</emphasis>&#32;height)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00287"/>00287 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00288"/>00288 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00289"/>00289 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00290"/>00290 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00291"/>00291 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00303"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a7d70df099125264e0a3cd86fb84fd7d3">00303</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a7d70df099125264e0a3cd86fb84fd7d3">GRPLINUXSCREENFRAMEBUFFER::Show</link>(<emphasis role="keywordtype">bool</emphasis>&#32;active)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00304"/>00304 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00305"/>00305 &#32;&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1a01e8961d8394e40d236546c96bee5af2">isshow</link>&#32;&#32;=&#32;active;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00306"/>00306 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00307"/>00307 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00308"/>00308 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00309"/>00309 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00310"/>00310 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00322"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1ab047b2c3ffbb998e55c0c156418a9410">00322</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1ab047b2c3ffbb998e55c0c156418a9410">GRPLINUXSCREENFRAMEBUFFER::ShowCursor</link>(<emphasis role="keywordtype">bool</emphasis>&#32;active)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00323"/>00323 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00324"/>00324 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00325"/>00325 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00326"/>00326 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00327"/>00327 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00337"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a49a5c5ee1b0d689bb2c8bc6643837468">00337</link> <emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1a49a5c5ee1b0d689bb2c8bc6643837468">GRPLINUXSCREENFRAMEBUFFER::GetHandle</link>()
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00338"/>00338 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00339"/>00339 &#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;ptr&#32;=&#32;0;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00340"/>00340 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00341"/>00341 &#32;&#32;memcpy((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;ptr,&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)&amp;handlefb,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">int</emphasis>));
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00342"/>00342 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00343"/>00343 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ptr;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00344"/>00344 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00345"/>00345 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00346"/>00346 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00356"/><link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1aeb6b1e4cc97e585b4ed7fad41ff83bc9">00356</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_g_r_p_l_i_n_u_x_s_c_r_e_e_n_f_r_a_m_e_b_u_f_f_e_r_1aeb6b1e4cc97e585b4ed7fad41ff83bc9">GRPLINUXSCREENFRAMEBUFFER::GetHandleFB</link>()
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00357"/>00357 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00358"/>00358 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;handlefb;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00359"/>00359 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00360"/>00360 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00361"/>00361 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00374"/>00374 <emphasis role="keywordtype">bool</emphasis>&#32;GRPLINUXSCREENFRAMEBUFFER::ScreenResolution(<emphasis role="keywordtype">int</emphasis>&#32;width,&#32;<emphasis role="keywordtype">int</emphasis>&#32;height)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00375"/>00375 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00376"/>00376 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handlefb&#32;==&#32;-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00377"/>00377 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00378"/>00378 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>fb_fix_screeninfo&#32;fixed_info;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00379"/>00379 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>fb_var_screeninfo&#32;variable_info;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00380"/>00380 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;screen_width;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00381"/>00381 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;screen_height;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00382"/>00382 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00383"/>00383 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(ioctl(handlefb,&#32;FBIOGET_VSCREENINFO,&#32;&amp;variable_info)&#32;==&#32;-1)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00387"/>00387 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00388"/>00388 &#32;&#32;screen_width&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;variable_info.xres;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00389"/>00389 &#32;&#32;screen_height&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;variable_info.yres;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00390"/>00390 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00391"/>00391 &#32;&#32;variable_info.xres&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a2ff017a4a306c64388b4748cff2ef1f0">width</link>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00392"/>00392 &#32;&#32;variable_info.yres&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1af56534d12004917f8655bfd96d81aa63">height</link>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00393"/>00393 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00394"/>00394 &#32;&#32;variable_info.xres_virtual&#32;=&#32;variable_info.xres;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00395"/>00395 &#32;&#32;variable_info.yres_virtual&#32;=&#32;variable_info.yres;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00396"/>00396 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00397"/>00397 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(ioctl(handlefb,&#32;FBIOPUT_VSCREENINFO,&#32;&amp;variable_info)&#32;==&#32;-1)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;ioctl(handlefb,&#32;FBIOGET_VSCREENINFO,&#32;&amp;variable_info);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00400"/>00400 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a9230f541a690015a7aa087a61d68ed7a">SetWidth</link>(screen_width);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_g_r_p_p_r_o_p_e_r_t_i_e_s_1a2b39330d27e80bb2e363267ca8a162da">SetHeight</link>(screen_height);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00403"/>00403 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00406"/>00406 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00407"/>00407 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(ioctl(handlefb,&#32;FBIOGET_FSCREENINFO,&#32;&amp;fixed_info)&#32;==&#32;-1)
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;{
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00411"/>00411 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00412"/>00412 &#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00413"/>00413 <emphasis role="comment">&#32;&#32;variable_info.xres&#32;=&#32;width;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00414"/>00414 <emphasis role="comment">&#32;&#32;variable_info.yres&#32;=&#32;height;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00415"/>00415 <emphasis role="comment"></emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00416"/>00416 <emphasis role="comment">&#32;&#32;if(ioctl(handlefb,&#32;FBIOPAN_DISPLAY&#32;&#32;&#32;&#32;,&#32;&amp;variable_info)&#32;==&#32;-1)</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00417"/>00417 <emphasis role="comment">&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00418"/>00418 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;XTRACE_PRINTCOLOR(4,&#32;__L(&quot;ERROR!&#32;4&quot;));</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00419"/>00419 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00420"/>00420 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00421"/>00421 <emphasis role="comment">&#32;&#32;*/</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00422"/>00422 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00423"/>00423 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00424"/>00424 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00425"/>00425 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00426"/>00426 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00437"/>00437 <emphasis role="keywordtype">bool</emphasis>&#32;GRPLINUXSCREENFRAMEBUFFER::ClearScreen()
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00438"/>00438 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00439"/>00439 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handlefb&#32;==&#32;-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00440"/>00440 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_g_r_p_s_c_r_e_e_n_1ab425deeaa3ba8e5a87cb459565ba4583">buffersize</link>)&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00441"/>00441 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00442"/>00442 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;fbp&#32;=&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;*)mmap(0,&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1ab425deeaa3ba8e5a87cb459565ba4583">buffersize</link>,&#32;PROT_READ&#32;|&#32;PROT_WRITE,&#32;MAP_SHARED,&#32;handlefb,&#32;0);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00443"/>00443 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(fbp&#32;==&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)-1)&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00444"/>00444 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00445"/>00445 &#32;&#32;memset(fbp,&#32;0,&#32;<link linkend="_class_g_r_p_s_c_r_e_e_n_1ab425deeaa3ba8e5a87cb459565ba4583">buffersize</link>);
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00446"/>00446 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00447"/>00447 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00448"/>00448 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00449"/>00449 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00450"/>00450 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00461"/>00461 <emphasis role="keywordtype">void</emphasis>&#32;GRPLINUXSCREENFRAMEBUFFER::Clean()
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00462"/>00462 {
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00463"/>00463 &#32;&#32;handlefb&#32;&#32;=&#32;-1;
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00464"/>00464 }
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00465"/>00465 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00466"/>00466 
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00467"/>00467 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__g_r_p_l_i_n_u_x_screen_frame_buffer_8cpp_source_1l00468"/>00468 
</programlisting></section>
