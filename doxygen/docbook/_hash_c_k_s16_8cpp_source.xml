<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__hash_c_k_s16_8cpp_source" xml:lang="en-US">
<title>HashCKS16.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/HashCKS16.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__hash_c_k_s16_8cpp_source_1l00001"/>00001 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00031"/>00031 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00033"/>00033 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00035"/>00035 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00036"/>00036 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00039"/>00039 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_c_k_s16_8h">HashCKS16.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00041"/>00041 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00044"/>00044 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00046"/>00046 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00048"/>00048 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00049"/>00049 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00050"/>00050 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00052"/>00052 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00054"/>00054 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00055"/>00055 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00058"/>00058 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00059"/>00059 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00069"/><link linkend="_class_h_a_s_h_c_k_s16_1a752909139a14c902372ede9a1de48bc6">00069</link> <link linkend="_class_h_a_s_h_c_k_s16_1a752909139a14c902372ede9a1de48bc6">HASHCKS16::HASHCKS16</link>()&#32;:&#32;<link linkend="_class_h_a_s_h">HASH</link>()
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00070"/>00070 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00071"/>00071 &#32;&#32;Clean();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00072"/>00072 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00073"/>00073 &#32;&#32;<link linkend="_class_h_a_s_h_1ad5af89903501908c4dcda95b37a5a785">type</link>&#32;=&#32;<link linkend="__hash_8h_1acf4dd3cf891bcd5c364340e2828a7ec9aadafad7370fee9d3865da78c2dbc5010">HASHTYPE_CKS16</link>;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00074"/>00074 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00075"/>00075 &#32;&#32;resulttmp&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00076"/>00076 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00077"/>00077 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;value&#32;=&#32;0x0000;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00078"/>00078 &#32;&#32;resulttmp-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)value);
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00079"/>00079 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00080"/>00080 &#32;&#32;Ini();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00081"/>00081 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00082"/>00082 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00083"/>00083 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00094"/><link linkend="_class_h_a_s_h_c_k_s16_1a841d2535c393842b19a6185cb65ee484">00094</link> <link linkend="_class_h_a_s_h_c_k_s16_1a841d2535c393842b19a6185cb65ee484">HASHCKS16::~HASHCKS16</link>()
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00095"/>00095 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00096"/>00096 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(resulttmp)
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;resulttmp;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;resulttmp&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00101"/>00101 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00102"/>00102 &#32;&#32;Clean();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00103"/>00103 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00104"/>00104 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00105"/>00105 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00118"/><link linkend="_class_h_a_s_h_c_k_s16_1a74fed69a3d2a5bdf583138ab277cb12f">00118</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_a_s_h_c_k_s16_1a74fed69a3d2a5bdf583138ab277cb12f">HASHCKS16::Do</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size)
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00119"/>00119 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00120"/>00120 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!size)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00121"/>00121 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00122"/>00122 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;value&#32;=&#32;0;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00123"/>00123 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00124"/>00124 &#32;&#32;resulttmp-&gt;<link linkend="_class_x_b_u_f_f_e_r_1aa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(value);
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00125"/>00125 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00126"/>00126 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;&#32;c&lt;size;&#32;c++)
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;Update(value,&#32;(*(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>*)input));
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;input&#32;=&#32;input&#32;+&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);&#32;<emphasis role="comment">//&#32;need&#32;to&#32;offset&#32;the&#32;input&#32;by&#32;16&#32;bits,&#32;as&#32;we&#32;are&#32;adding&#32;16&#32;by&#32;16</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00131"/>00131 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00132"/>00132 &#32;&#32;value&#32;=&#32;~value;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00133"/>00133 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00134"/>00134 &#32;&#32;resulttmp-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)value);
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00135"/>00135 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00136"/>00136 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00137"/>00137 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00138"/>00138 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00139"/>00139 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00149"/><link linkend="_class_h_a_s_h_c_k_s16_1aa41c29814aef657deeee1a6a58c6bd3c">00149</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_a_s_h_c_k_s16_1aa41c29814aef657deeee1a6a58c6bd3c">HASHCKS16::ResetResult</link>()
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00150"/>00150 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00151"/>00151 &#32;&#32;<link linkend="_class_h_a_s_h_1a6844bc505aecfe2b878ef45f9d905e3e">HASH::ResetResult</link>();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00152"/>00152 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00153"/>00153 &#32;&#32;resulttmp-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00154"/>00154 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00155"/>00155 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;value&#32;=&#32;0x0000;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00156"/>00156 &#32;&#32;resulttmp-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)value);
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00157"/>00157 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00158"/>00158 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00159"/>00159 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00160"/>00160 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00161"/>00161 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00171"/><link linkend="_class_h_a_s_h_c_k_s16_1abc962938e2b83b28cbac9cb0726053ee">00171</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_h_a_s_h_c_k_s16_1abc962938e2b83b28cbac9cb0726053ee">HASHCKS16::GetDefaultSize</link>()
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00172"/>00172 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00173"/>00173 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>);
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00174"/>00174 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00175"/>00175 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00176"/>00176 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00186"/><link linkend="_class_h_a_s_h_c_k_s16_1a459faf4c581154e58cb7a7e963442214">00186</link> <link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;<link linkend="_class_h_a_s_h_c_k_s16_1a459faf4c581154e58cb7a7e963442214">HASHCKS16::GetResult</link>()
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00187"/>00187 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00188"/>00188 &#32;&#32;<link linkend="_class_h_a_s_h_c_k_s16_1a58ad31a0f21ff2597f8308d21e712d8e">GetResultCKS16</link>();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00189"/>00189 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00190"/>00190 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00191"/>00191 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00192"/>00192 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00193"/>00193 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00205"/><link linkend="_class_h_a_s_h_c_k_s16_1a960726efdbb096895eb76981bb1c5daa">00205</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;<link linkend="_class_h_a_s_h_c_k_s16_1a459faf4c581154e58cb7a7e963442214">HASHCKS16::GetResult</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;resultsize)
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00206"/>00206 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00207"/>00207 &#32;&#32;<link linkend="_class_h_a_s_h_c_k_s16_1a58ad31a0f21ff2597f8308d21e712d8e">GetResultCKS16</link>();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00208"/>00208 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00209"/>00209 &#32;&#32;resultsize&#32;=&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00210"/>00210 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00211"/>00211 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00212"/>00212 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00213"/>00213 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00214"/>00214 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00224"/><link linkend="_class_h_a_s_h_c_k_s16_1a58ad31a0f21ff2597f8308d21e712d8e">00224</link> <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;<link linkend="_class_h_a_s_h_c_k_s16_1a58ad31a0f21ff2597f8308d21e712d8e">HASHCKS16::GetResultCKS16</link>()
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00225"/>00225 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00226"/>00226 &#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;value&#32;=&#32;0;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00227"/>00227 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00228"/>00228 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00229"/>00229 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00230"/>00230 &#32;&#32;resulttmp-&gt;<link linkend="_class_x_b_u_f_f_e_r_1aa18ae97bc16eca76dad45de57c4dd08c">Extract</link>(value);
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00231"/>00231 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00232"/>00232 &#32;&#32;value&#32;^=&#32;0x0000;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00233"/>00233 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00234"/>00234 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a03212e4f31a9d07995ac4f72db1dd0cf">Add</link>((<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)value);
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00235"/>00235 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00236"/>00236 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;value;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00237"/>00237 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00238"/>00238 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00239"/>00239 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00251"/>00251 <emphasis role="keywordtype">void</emphasis>&#32;HASHCKS16::Ini(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00252"/>00252 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00253"/>00253 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00254"/>00254 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00255"/>00255 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00256"/>00256 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00269"/>00269 <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;HASHCKS16::Update(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;CKS16,&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;c)
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00270"/>00270 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00271"/>00271 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;tmp&#32;=&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)CKS16&#32;+&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)c;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00272"/>00272 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00273"/>00273 &#32;&#32;<emphasis role="comment">//&#32;loop&#32;while&#32;we&#32;have&#32;a&#32;carry</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00274"/>00274 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(tmp&#32;&gt;&#32;0xFFFF)
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;carry&#32;=&#32;(tmp&#32;&gt;&gt;&#32;16)&#32;&amp;&#32;(0xFFFF);
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp&#32;+&#32;carry;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00279"/>00279 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00280"/>00280 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)tmp;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00281"/>00281 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00282"/>00282 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00283"/>00283 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00294"/>00294 <emphasis role="keywordtype">void</emphasis>&#32;HASHCKS16::Clean()
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00295"/>00295 {
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00296"/>00296 &#32;&#32;resulttmp&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00297"/>00297 }
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00298"/>00298 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00299"/>00299 
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00300"/>00300 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_k_s16_8cpp_source_1l00301"/>00301 
</programlisting></section>
