<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source" xml:lang="en-US">
<title>DIOWINDOWSPCap.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Windows/DIOWINDOWSPCap.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00001"/>00001 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00031"/>00031 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00033"/>00033 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00035"/>00035 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00036"/>00036 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00037"/>00037 <emphasis role="preprocessor">#ifdef&#32;DIO_PCAP_ACTIVE</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00039"/>00039 <emphasis role="preprocessor">#pragma&#32;comment(lib,&quot;wpcap.lib&quot;)</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00040"/>00040 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00041"/>00041 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00043"/>00043 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__d_i_o_w_i_n_d_o_w_s_p_cap_8h">DIOWINDOWSPCap.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00045"/>00045 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_string_8h">XString.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_thread_collected_8h">XThreadCollected.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00050"/>00050 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00052"/>00052 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00054"/>00054 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00055"/>00055 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00058"/>00058 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00059"/>00059 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00060"/>00060 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00061"/>00061 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00062"/>00062 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00064"/>00064 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00065"/>00065 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00075"/>00075 DIOWINDOWSPCAP::DIOWINDOWSPCAP()&#32;:&#32;<link linkend="_class_d_i_o_p_c_a_p">DIOPCAP</link>()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00076"/>00076 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00077"/>00077 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00078"/>00078 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00079"/>00079 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00080"/>00080 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00091"/>00091 DIOWINDOWSPCAP::~DIOWINDOWSPCAP()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00092"/>00092 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00093"/>00093 &#32;&#32;End();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00094"/>00094 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00095"/>00095 &#32;&#32;Clean();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00096"/>00096 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00097"/>00097 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00098"/>00098 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00112"/>00112 <emphasis role="keywordtype">bool</emphasis>&#32;DIOWINDOWSPCAP::Capture_Start(DIOPCAPNETINTERFACE*&#32;netinterface,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;promiscuousmode,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00113"/>00113 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00114"/>00114 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!netinterface)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00115"/>00115 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00116"/>00116 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;errbuf[PCAP_ERRBUF_SIZE];
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00117"/>00117 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00118"/>00118 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;charstr;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00119"/>00119 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00120"/>00120 &#32;&#32;netinterfaceselected&#32;=&#32;netinterface;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00121"/>00121 &#32;&#32;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00122"/>00122 &#32;&#32;(*netinterface-&gt;GetName()).ConvertToASCII(charstr);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00123"/>00123 &#32;&#32;handle=&#32;pcap_open_live(charstr.<link linkend="_class_x_b_u_f_f_e_r_1a66e2dbd897e717ce38e395d6ad87b754">GetPtrChar</link>()&#32;&#32;&#32;&#32;,&#32;<emphasis role="comment">//&#32;name&#32;of&#32;the&#32;device</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;65536&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="comment">//&#32;portion&#32;of&#32;the&#32;packet&#32;to&#32;capture.&#32;&#32;65536&#32;grants&#32;that&#32;the&#32;whole&#32;packet&#32;will&#32;be&#32;captured&#32;on&#32;all&#32;the&#32;MACs.</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;promiscuousmode?1:0&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="comment">//&#32;promiscuous&#32;mode&#32;(nonzero&#32;means&#32;promiscuous)</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_l_i_n_u_x_system_8cpp_1a493b57f443cc38b3d3df9c1e584d9d82">timeout</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;<emphasis role="comment">//&#32;read&#32;timeout</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errbuf);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;error&#32;buffer</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00128"/>00128 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle&#32;==&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00129"/>00129 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00130"/>00130 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00131"/>00131 &#32;&#32;threadcapture&#32;=&#32;<link linkend="__x_thread_collected_8h_1aad503e3655b9ff78d3ac660d1f1f5534">CREATEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a8571eded63180e29f70d8a9764c2f27c">XTHREADGROUPID_DIOPCAP</link>,&#32;<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;DIOWINDOWSPCAP::Capture_Start&quot;</emphasis>),&#32;ThreadCapture,&#32;(<emphasis role="keywordtype">void</emphasis>*)<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00132"/>00132 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!threadcapture)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00133"/>00133 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00134"/>00134 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;threadcapture-&gt;Ini();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00135"/>00135 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00136"/>00136 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00137"/>00137 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00147"/>00147 <emphasis role="keywordtype">bool</emphasis>&#32;DIOWINDOWSPCAP::Capture_End()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00148"/>00148 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00149"/>00149 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle)&#32;pcap_breakloop(handle);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00150"/>00150 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00151"/>00151 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(threadcapture)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;threadcapture-&gt;End();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_thread_collected_8h_1a18fb843f5fbad51464b68d705ed29b8a">DELETEXTHREAD</link>(<link linkend="__x_thread_8h_1a32ad650cdcf0656f543da04bc3ac68a6a8571eded63180e29f70d8a9764c2f27c">XTHREADGROUPID_DIOPCAP</link>,&#32;threadcapture);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;threadcapture&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00157"/>00157 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00158"/>00158 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(handle)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;pcap_close(handle);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;handle&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00163"/>00163 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00164"/>00164 &#32;&#32;netinterfaceselected&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00165"/>00165 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00166"/>00166 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00167"/>00167 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00168"/>00168 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00169"/>00169 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00180"/>00180 <emphasis role="keywordtype">void</emphasis>&#32;DIOWINDOWSPCAP::Clean()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00181"/>00181 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00182"/>00182 &#32;&#32;handle&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00183"/>00183 &#32;&#32;threadcapture&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00184"/>00184 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00185"/>00185 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00186"/>00186 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00196"/>00196 <emphasis role="keywordtype">bool</emphasis>&#32;DIOWINDOWSPCAP::CreateListNetInterfaces()
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00197"/>00197 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00198"/>00198 &#32;&#32;pcap_if_t*&#32;allnetinterfaces;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00199"/>00199 &#32;&#32;pcap_if_t*&#32;netinterface;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00200"/>00200 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;errbuf[PCAP_ERRBUF_SIZE];
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00201"/>00201 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00202"/>00202 &#32;&#32;<emphasis role="comment">//&#32;Retrieve&#32;the&#32;device&#32;list</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00203"/>00203 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(pcap_findalldevs(&amp;allnetinterfaces,&#32;errbuf)&#32;==&#32;-1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00204"/>00204 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00205"/>00205 &#32;&#32;<emphasis role="comment">//&#32;Create&#32;list</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00206"/>00206 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(netinterface=allnetinterfaces;&#32;netinterface;&#32;netinterface=netinterface-&gt;next)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;DIOPCAPNETINTERFACE*&#32;_netinterface&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;DIOPCAPNETINTERFACE();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_netinterface)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_netinterface-&gt;GetName()-&gt;Set(netinterface-&gt;name);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_netinterface-&gt;GetDescription()-&gt;Set(netinterface-&gt;description);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00213"/>00213 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(netinterface-&gt;flags&#32;&amp;&#32;PCAP_IF_UP)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_netinterface-&gt;SetIsUp(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00218"/>00218 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(netinterface-&gt;flags&#32;&amp;&#32;PCAP_IF_RUNNING)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_netinterface-&gt;SetIsRunning(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00223"/>00223 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(netinterface-&gt;flags&#32;&amp;&#32;PCAP_IF_WIRELESS)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_netinterface-&gt;SetIsWireless(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00228"/>00228 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(netinterface-&gt;flags&#32;&amp;&#32;PCAP_IF_LOOPBACK)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_netinterface-&gt;SetIsLoopBack(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;netinterfaces.Add(_netinterface);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00237"/>00237 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00238"/>00238 &#32;&#32;pcap_freealldevs(allnetinterfaces);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00239"/>00239 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00240"/>00240 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00241"/>00241 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00242"/>00242 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00243"/>00243 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00255"/>00255 <emphasis role="keywordtype">void</emphasis>&#32;DIOWINDOWSPCAP::ThreadCapture(<emphasis role="keywordtype">void</emphasis>*&#32;data)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00256"/>00256 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00257"/>00257 &#32;&#32;<link linkend="_class_d_i_o_w_i_n_d_o_w_s_p_c_a_p">DIOWINDOWSPCAP</link>*&#32;diopcap&#32;=&#32;(<link linkend="_class_d_i_o_w_i_n_d_o_w_s_p_c_a_p">DIOWINDOWSPCAP</link>*)data;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00258"/>00258 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diopcap)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00259"/>00259 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00260"/>00260 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diopcap-&gt;handle)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;error&#32;=&#32;pcap_loop(diopcap-&gt;handle,&#32;1,&#32;PacketHandler,&#32;(u_char*)diopcap);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(error)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00265"/>00265 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00268"/>00268 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00269"/>00269 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00270"/>00270 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00284"/>00284 <emphasis role="keywordtype">void</emphasis>&#32;DIOWINDOWSPCAP::PacketHandler(u_char*&#32;param,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct</emphasis>&#32;pcap_pkthdr*&#32;header,&#32;<emphasis role="keyword">const</emphasis>&#32;u_char*&#32;data)
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00285"/>00285 {
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00286"/>00286 &#32;&#32;<link linkend="_class_d_i_o_w_i_n_d_o_w_s_p_c_a_p">DIOWINDOWSPCAP</link>*&#32;diopcap&#32;=&#32;(<link linkend="_class_d_i_o_w_i_n_d_o_w_s_p_c_a_p">DIOWINDOWSPCAP</link>*)param;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00287"/>00287 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!diopcap)&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00288"/>00288 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00289"/>00289 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isloopback&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00290"/>00290 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(diopcap-&gt;GetNetInterfaceSelected())
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;{
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;isloopback&#32;=&#32;diopcap-&gt;GetNetInterfaceSelected()-&gt;IsLoopBack();
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;}
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00294"/>00294 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00295"/>00295 &#32;&#32;diopcap-&gt;Frames_Add((<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*)data,&#32;header-&gt;len,&#32;isloopback);
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00296"/>00296 }
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00297"/>00297 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00298"/>00298 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00299"/>00299 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00300"/>00300 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00301"/>00301 
<anchor xml:id="__d_i_o_w_i_n_d_o_w_s_p_cap_8cpp_source_1l00302"/>00302 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
