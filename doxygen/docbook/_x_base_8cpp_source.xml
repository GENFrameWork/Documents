<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_base_8cpp_source" xml:lang="en-US">
<title>XBase.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XBase.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_base_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_base_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_base_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_base_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_base_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_base_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_base_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_base_8h">XBase.h</link>&quot;</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_base_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_base_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_base_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00047"/>00047 
<anchor xml:id="__x_base_8cpp_source_1l00048"/>00048 
<anchor xml:id="__x_base_8cpp_source_1l00049"/>00049 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_base_8cpp_source_1l00052"/>00052 
<anchor xml:id="__x_base_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00054"/>00054 
<anchor xml:id="__x_base_8cpp_source_1l00055"/>00055 
<anchor xml:id="__x_base_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_base_8cpp_source_1l00059"/>00059 
<anchor xml:id="__x_base_8cpp_source_1l00069"/><link linkend="_class_x_b_a_s_e_1a6fb64564e028856784d271b02d29d45e">00069</link> <link linkend="_class_x_b_a_s_e_1a6fb64564e028856784d271b02d29d45e">XBASE::XBASE</link>()
<anchor xml:id="__x_base_8cpp_source_1l00070"/>00070 {
<anchor xml:id="__x_base_8cpp_source_1l00071"/>00071 &#32;&#32;Clean();
<anchor xml:id="__x_base_8cpp_source_1l00072"/>00072 }
<anchor xml:id="__x_base_8cpp_source_1l00073"/>00073 
<anchor xml:id="__x_base_8cpp_source_1l00074"/>00074 
<anchor xml:id="__x_base_8cpp_source_1l00085"/><link linkend="_class_x_b_a_s_e_1a5f3ca4fc5f15ab3af437af6147c5ca67">00085</link> <link linkend="_class_x_b_a_s_e_1a5f3ca4fc5f15ab3af437af6147c5ca67">XBASE::~XBASE</link>()
<anchor xml:id="__x_base_8cpp_source_1l00086"/>00086 {
<anchor xml:id="__x_base_8cpp_source_1l00087"/>00087 &#32;&#32;Clean();
<anchor xml:id="__x_base_8cpp_source_1l00088"/>00088 }
<anchor xml:id="__x_base_8cpp_source_1l00089"/>00089 
<anchor xml:id="__x_base_8cpp_source_1l00090"/>00090 
<anchor xml:id="__x_base_8cpp_source_1l00101"/>00101 <emphasis role="keywordtype">void</emphasis>&#32;XBASE::Clean()
<anchor xml:id="__x_base_8cpp_source_1l00102"/>00102 {
<anchor xml:id="__x_base_8cpp_source_1l00103"/>00103 
<anchor xml:id="__x_base_8cpp_source_1l00104"/>00104 }
<anchor xml:id="__x_base_8cpp_source_1l00105"/>00105 
<anchor xml:id="__x_base_8cpp_source_1l00106"/>00106 
<anchor xml:id="__x_base_8cpp_source_1l00118"/><link linkend="__x_base_8cpp_1a21ecb6c60f0e1b4b6d53f1d4c85a8610">00118</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__x_base_8cpp_1a21ecb6c60f0e1b4b6d53f1d4c85a8610">Truncate</link>(<emphasis role="keywordtype">double</emphasis>&#32;value)
<anchor xml:id="__x_base_8cpp_source_1l00119"/>00119 {
<anchor xml:id="__x_base_8cpp_source_1l00120"/>00120 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;truncate&#32;=&#32;0;
<anchor xml:id="__x_base_8cpp_source_1l00121"/>00121 
<anchor xml:id="__x_base_8cpp_source_1l00122"/>00122 &#32;&#32;modf(value,&#32;&amp;truncate);
<anchor xml:id="__x_base_8cpp_source_1l00123"/>00123 
<anchor xml:id="__x_base_8cpp_source_1l00124"/>00124 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;truncate;
<anchor xml:id="__x_base_8cpp_source_1l00125"/>00125 }
<anchor xml:id="__x_base_8cpp_source_1l00126"/>00126 
<anchor xml:id="__x_base_8cpp_source_1l00127"/>00127 
<anchor xml:id="__x_base_8cpp_source_1l00139"/><link linkend="__x_base_8cpp_1a1e8c9a80193adf0dd340ee3508b9889f">00139</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__x_base_8cpp_1a1e8c9a80193adf0dd340ee3508b9889f">Fraction</link>(<emphasis role="keywordtype">double</emphasis>&#32;value)
<anchor xml:id="__x_base_8cpp_source_1l00140"/>00140 {
<anchor xml:id="__x_base_8cpp_source_1l00141"/>00141 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;truncate&#32;=&#32;0;
<anchor xml:id="__x_base_8cpp_source_1l00142"/>00142 
<anchor xml:id="__x_base_8cpp_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;modf(value,&#32;&amp;truncate);
<anchor xml:id="__x_base_8cpp_source_1l00144"/>00144 }
<anchor xml:id="__x_base_8cpp_source_1l00145"/>00145 
<anchor xml:id="__x_base_8cpp_source_1l00146"/>00146 
<anchor xml:id="__x_base_8cpp_source_1l00159"/><link linkend="__x_base_8cpp_1a146e7682be9f853069a01842a0d2583d">00159</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__x_base_8cpp_1a146e7682be9f853069a01842a0d2583d">RoundOff</link>(<emphasis role="keywordtype">float</emphasis>&#32;value,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;prec)
<anchor xml:id="__x_base_8cpp_source_1l00160"/>00160 {
<anchor xml:id="__x_base_8cpp_source_1l00161"/>00161 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;BUILDER</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00162"/>00162 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0f;
<anchor xml:id="__x_base_8cpp_source_1l00163"/>00163 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00164"/>00164 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;pow_10&#32;=&#32;pow(10.0f,&#32;(<emphasis role="keywordtype">double</emphasis>)prec);
<anchor xml:id="__x_base_8cpp_source_1l00165"/>00165 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">float</emphasis>)(round(value&#32;*&#32;pow_10)&#32;/&#32;pow_10);
<anchor xml:id="__x_base_8cpp_source_1l00166"/>00166 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00167"/>00167 }
<anchor xml:id="__x_base_8cpp_source_1l00168"/>00168 
<anchor xml:id="__x_base_8cpp_source_1l00169"/>00169 
<anchor xml:id="__x_base_8cpp_source_1l00182"/><link linkend="__x_base_8cpp_1a9a58704393614ca320f7f8ba0c695ee2">00182</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__x_base_8cpp_1a146e7682be9f853069a01842a0d2583d">RoundOff</link>(<emphasis role="keywordtype">double</emphasis>&#32;value,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;prec)
<anchor xml:id="__x_base_8cpp_source_1l00183"/>00183 {
<anchor xml:id="__x_base_8cpp_source_1l00184"/>00184 <emphasis role="preprocessor">&#32;&#32;#ifdef&#32;BUILDER</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00185"/>00185 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0f;
<anchor xml:id="__x_base_8cpp_source_1l00186"/>00186 <emphasis role="preprocessor">&#32;&#32;#else</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00187"/>00187 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;pow_10&#32;=&#32;pow(10.0f,&#32;(<emphasis role="keywordtype">float</emphasis>)prec);
<anchor xml:id="__x_base_8cpp_source_1l00188"/>00188 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;round(value&#32;*&#32;pow_10)&#32;/&#32;pow_10;
<anchor xml:id="__x_base_8cpp_source_1l00189"/>00189 <emphasis role="preprocessor">&#32;&#32;#endif</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00190"/>00190 }
<anchor xml:id="__x_base_8cpp_source_1l00191"/>00191 
<anchor xml:id="__x_base_8cpp_source_1l00192"/>00192 
<anchor xml:id="__x_base_8cpp_source_1l00204"/><link linkend="__x_base_8cpp_1a8c6720cc79460977a1880f7a7ef50b23">00204</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__x_base_8cpp_1a8c6720cc79460977a1880f7a7ef50b23">RoundFloat</link>(<emphasis role="keywordtype">float</emphasis>&#32;x)
<anchor xml:id="__x_base_8cpp_source_1l00205"/>00205 {
<anchor xml:id="__x_base_8cpp_source_1l00206"/>00206 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;float(x&#32;&gt;=&#32;0.0f&#32;?&#32;floor(x&#32;+&#32;0.5f)&#32;:&#32;ceil(x&#32;-&#32;0.5f));
<anchor xml:id="__x_base_8cpp_source_1l00207"/>00207 }
<anchor xml:id="__x_base_8cpp_source_1l00208"/>00208 
<anchor xml:id="__x_base_8cpp_source_1l00209"/>00209 
<anchor xml:id="__x_base_8cpp_source_1l00222"/><link linkend="__x_base_8cpp_1a935282594c57ece8181590e72e6e2ea5">00222</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__x_base_8cpp_1a935282594c57ece8181590e72e6e2ea5">AdjustFloat</link>(<emphasis role="keywordtype">float</emphasis>&#32;valor,&#32;<emphasis role="keywordtype">int</emphasis>&#32;decimals)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00223"/>00223 {
<anchor xml:id="__x_base_8cpp_source_1l00224"/>00224 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;factor&#32;=&#32;1.0f;
<anchor xml:id="__x_base_8cpp_source_1l00225"/>00225 &#32;&#32;
<anchor xml:id="__x_base_8cpp_source_1l00226"/>00226 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;decimals;&#32;++i)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_base_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;factor&#32;*=&#32;10.0f;
<anchor xml:id="__x_base_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_base_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;
<anchor xml:id="__x_base_8cpp_source_1l00231"/>00231 &#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;valorAjustado&#32;=&#32;(float)floor(valor&#32;*&#32;factor&#32;+&#32;0.5f)&#32;/&#32;factor;
<anchor xml:id="__x_base_8cpp_source_1l00232"/>00232 &#32;&#32;
<anchor xml:id="__x_base_8cpp_source_1l00233"/>00233 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;valorAjustado;
<anchor xml:id="__x_base_8cpp_source_1l00234"/>00234 }
<anchor xml:id="__x_base_8cpp_source_1l00235"/>00235 
<anchor xml:id="__x_base_8cpp_source_1l00236"/>00236 
<anchor xml:id="__x_base_8cpp_source_1l00249"/><link linkend="__x_base_8cpp_1a70cf67d0fe96e86e59ede009bb080adf">00249</link> <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="__x_base_8cpp_1a70cf67d0fe96e86e59ede009bb080adf">AdjustDouble</link>(<emphasis role="keywordtype">double</emphasis>&#32;valor,&#32;<emphasis role="keywordtype">int</emphasis>&#32;decimals)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00250"/>00250 {
<anchor xml:id="__x_base_8cpp_source_1l00251"/>00251 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor&#32;=&#32;1.0;
<anchor xml:id="__x_base_8cpp_source_1l00252"/>00252 
<anchor xml:id="__x_base_8cpp_source_1l00253"/>00253 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;decimals;&#32;++i)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_base_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;factor&#32;*=&#32;10.0;
<anchor xml:id="__x_base_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_base_8cpp_source_1l00257"/>00257 
<anchor xml:id="__x_base_8cpp_source_1l00258"/>00258 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;valorAjustado&#32;=&#32;floor(valor&#32;*&#32;factor&#32;+&#32;0.5)&#32;/&#32;factor;
<anchor xml:id="__x_base_8cpp_source_1l00259"/>00259 
<anchor xml:id="__x_base_8cpp_source_1l00260"/>00260 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;valorAjustado;
<anchor xml:id="__x_base_8cpp_source_1l00261"/>00261 }
<anchor xml:id="__x_base_8cpp_source_1l00262"/>00262 
<anchor xml:id="__x_base_8cpp_source_1l00263"/>00263 
<anchor xml:id="__x_base_8cpp_source_1l00275"/><link linkend="__x_base_8cpp_1a23d88e3333ad7d631f867c45dced3378">00275</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1a23d88e3333ad7d631f867c45dced3378">HighWORD</link>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00276"/>00276 {
<anchor xml:id="__x_base_8cpp_source_1l00277"/>00277 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((data&#32;&amp;&#32;0xFF00)&#32;&gt;&gt;&#32;8);
<anchor xml:id="__x_base_8cpp_source_1l00278"/>00278 }
<anchor xml:id="__x_base_8cpp_source_1l00279"/>00279 
<anchor xml:id="__x_base_8cpp_source_1l00280"/>00280 
<anchor xml:id="__x_base_8cpp_source_1l00292"/><link linkend="__x_base_8cpp_1ad7661023cb78f8b19678e5b69a8b769e">00292</link> <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;<link linkend="__x_base_8cpp_1ad7661023cb78f8b19678e5b69a8b769e">HighDWORD</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00293"/>00293 {
<anchor xml:id="__x_base_8cpp_source_1l00294"/>00294 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((data&#32;&amp;&#32;0xFFFF0000)&#32;&gt;&gt;&#32;16);
<anchor xml:id="__x_base_8cpp_source_1l00295"/>00295 }
<anchor xml:id="__x_base_8cpp_source_1l00296"/>00296 
<anchor xml:id="__x_base_8cpp_source_1l00297"/>00297 
<anchor xml:id="__x_base_8cpp_source_1l00309"/><link linkend="__x_base_8cpp_1ac11736a39c04a21fe2ff69c40e4521a2">00309</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__x_base_8cpp_1ac11736a39c04a21fe2ff69c40e4521a2">HighQWORD</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00310"/>00310 {
<anchor xml:id="__x_base_8cpp_source_1l00311"/>00311 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((data&#32;&amp;&#32;0xFFFFFFFF00000000)&#32;&gt;&gt;&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00312"/>00312 }
<anchor xml:id="__x_base_8cpp_source_1l00313"/>00313 
<anchor xml:id="__x_base_8cpp_source_1l00314"/>00314 
<anchor xml:id="__x_base_8cpp_source_1l00326"/><link linkend="__x_base_8cpp_1a15b7e37f5cc36ca070e667bedfb68507">00326</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1a15b7e37f5cc36ca070e667bedfb68507">LowWORD</link>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00327"/>00327 {
<anchor xml:id="__x_base_8cpp_source_1l00328"/>00328 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>)(data&#32;&amp;&#32;0x00FF);
<anchor xml:id="__x_base_8cpp_source_1l00329"/>00329 }
<anchor xml:id="__x_base_8cpp_source_1l00330"/>00330 
<anchor xml:id="__x_base_8cpp_source_1l00331"/>00331 
<anchor xml:id="__x_base_8cpp_source_1l00343"/><link linkend="__x_base_8cpp_1a65b5e0136e533d7346156c43aba9ce62">00343</link> <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;<link linkend="__x_base_8cpp_1a65b5e0136e533d7346156c43aba9ce62">LowDWORD</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00344"/>00344 {
<anchor xml:id="__x_base_8cpp_source_1l00345"/>00345 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)(data&#32;&amp;&#32;0x0000FFFF);
<anchor xml:id="__x_base_8cpp_source_1l00346"/>00346 }
<anchor xml:id="__x_base_8cpp_source_1l00347"/>00347 
<anchor xml:id="__x_base_8cpp_source_1l00348"/>00348 
<anchor xml:id="__x_base_8cpp_source_1l00360"/><link linkend="__x_base_8cpp_1a4885ae02c3b2e1eeaabb37f89ed1dcb3">00360</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__x_base_8cpp_1a4885ae02c3b2e1eeaabb37f89ed1dcb3">LowQWORD</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00361"/>00361 {
<anchor xml:id="__x_base_8cpp_source_1l00362"/>00362 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(data&#32;&amp;&#32;0x00000000FFFFFFFF);
<anchor xml:id="__x_base_8cpp_source_1l00363"/>00363 }
<anchor xml:id="__x_base_8cpp_source_1l00364"/>00364 
<anchor xml:id="__x_base_8cpp_source_1l00365"/>00365 
<anchor xml:id="__x_base_8cpp_source_1l00377"/><link linkend="__x_base_8cpp_1a4194dc6953f7f2e754c0ee59c30f500d">00377</link> <link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;<link linkend="__x_base_8cpp_1a4194dc6953f7f2e754c0ee59c30f500d">SwapWORD</link>(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00378"/>00378 {
<anchor xml:id="__x_base_8cpp_source_1l00379"/>00379 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;hi&#32;=&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)((data&amp;0xFF00)&gt;&gt;8);
<anchor xml:id="__x_base_8cpp_source_1l00380"/>00380 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>&#32;lo&#32;=&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)((data&amp;0x00FF)&lt;&lt;8);
<anchor xml:id="__x_base_8cpp_source_1l00381"/>00381 
<anchor xml:id="__x_base_8cpp_source_1l00382"/>00382 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a3f1fe1487089bc987e3d549a9064e653">XWORD</link>)(hi|lo);
<anchor xml:id="__x_base_8cpp_source_1l00383"/>00383 }
<anchor xml:id="__x_base_8cpp_source_1l00384"/>00384 
<anchor xml:id="__x_base_8cpp_source_1l00385"/>00385 
<anchor xml:id="__x_base_8cpp_source_1l00397"/><link linkend="__x_base_8cpp_1a4d1da17fcb47e6bff9f2dbc0e680d593">00397</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__x_base_8cpp_1a4d1da17fcb47e6bff9f2dbc0e680d593">SwapDWORD</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00398"/>00398 {
<anchor xml:id="__x_base_8cpp_source_1l00399"/>00399 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;hi1&#32;=&#32;(data&amp;0xFF000000)&gt;&gt;24;
<anchor xml:id="__x_base_8cpp_source_1l00400"/>00400 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;lo1&#32;=&#32;(data&amp;0x00FF0000)&gt;&gt;8;
<anchor xml:id="__x_base_8cpp_source_1l00401"/>00401 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;hi2&#32;=&#32;(data&amp;0x0000FF00)&lt;&lt;8;
<anchor xml:id="__x_base_8cpp_source_1l00402"/>00402 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;lo2&#32;=&#32;(data&amp;0x000000FF)&lt;&lt;24;
<anchor xml:id="__x_base_8cpp_source_1l00403"/>00403 
<anchor xml:id="__x_base_8cpp_source_1l00404"/>00404 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(hi1|lo1|hi2|lo2);
<anchor xml:id="__x_base_8cpp_source_1l00405"/>00405 }
<anchor xml:id="__x_base_8cpp_source_1l00406"/>00406 
<anchor xml:id="__x_base_8cpp_source_1l00407"/>00407 
<anchor xml:id="__x_base_8cpp_source_1l00419"/><link linkend="__x_base_8cpp_1a51d327cd1dc2f2ae08c70596880dd85f">00419</link> <link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;<link linkend="__x_base_8cpp_1a51d327cd1dc2f2ae08c70596880dd85f">SwapQWORD</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;data)
<anchor xml:id="__x_base_8cpp_source_1l00420"/>00420 {
<anchor xml:id="__x_base_8cpp_source_1l00421"/>00421 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;hi1&#32;=&#32;(data&amp;0xFF00000000000000ULL)&#32;&gt;&gt;&#32;(24&#32;+&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00422"/>00422 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;lo1&#32;=&#32;(data&amp;0x00FF000000000000ULL)&#32;&gt;&gt;&#32;(&#32;8&#32;+&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00423"/>00423 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;hi2&#32;=&#32;(data&amp;0x0000FF0000000000ULL)&#32;&gt;&gt;&#32;(&#32;&#32;&#32;&#32;&#32;24);
<anchor xml:id="__x_base_8cpp_source_1l00424"/>00424 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;lo2&#32;=&#32;(data&amp;0x000000FF00000000ULL)&#32;&gt;&gt;&#32;(&#32;&#32;&#32;&#32;&#32;&#32;8);
<anchor xml:id="__x_base_8cpp_source_1l00425"/>00425 
<anchor xml:id="__x_base_8cpp_source_1l00426"/>00426 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;hi3&#32;=&#32;(data&amp;0x00000000FF000000ULL)&#32;&lt;&lt;&#32;(&#32;&#32;&#32;&#32;&#32;&#32;8);
<anchor xml:id="__x_base_8cpp_source_1l00427"/>00427 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;lo3&#32;=&#32;(data&amp;0x0000000000FF0000ULL)&#32;&lt;&lt;&#32;(&#32;&#32;&#32;&#32;&#32;24);
<anchor xml:id="__x_base_8cpp_source_1l00428"/>00428 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;hi4&#32;=&#32;(data&amp;0x000000000000FF00ULL)&#32;&lt;&lt;&#32;(&#32;8&#32;+&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00429"/>00429 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;lo4&#32;=&#32;(data&amp;0x00000000000000FFULL)&#32;&lt;&lt;&#32;(24&#32;+&#32;32);
<anchor xml:id="__x_base_8cpp_source_1l00430"/>00430 
<anchor xml:id="__x_base_8cpp_source_1l00431"/>00431 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(hi1|lo1|hi2|lo2|hi3|lo3|hi4|lo4);
<anchor xml:id="__x_base_8cpp_source_1l00432"/>00432 }
<anchor xml:id="__x_base_8cpp_source_1l00433"/>00433 
<anchor xml:id="__x_base_8cpp_source_1l00434"/>00434 
<anchor xml:id="__x_base_8cpp_source_1l00446"/><link linkend="__x_base_8cpp_1a787b44cf0777f3c366cec5815d032f80">00446</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__x_base_8cpp_1a787b44cf0777f3c366cec5815d032f80">InvertSign</link>(<emphasis role="keywordtype">int</emphasis>&#32;number)&#32;
<anchor xml:id="__x_base_8cpp_source_1l00447"/>00447 {
<anchor xml:id="__x_base_8cpp_source_1l00448"/>00448 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-number;
<anchor xml:id="__x_base_8cpp_source_1l00449"/>00449 }
<anchor xml:id="__x_base_8cpp_source_1l00450"/>00450 
<anchor xml:id="__x_base_8cpp_source_1l00451"/>00451 
<anchor xml:id="__x_base_8cpp_source_1l00463"/><link linkend="__x_base_8cpp_1a1025936b2f2fe4b550959e9c5efdd215">00463</link> <link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;<link linkend="__x_base_8cpp_1a1025936b2f2fe4b550959e9c5efdd215">DWORDToBCD</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;dword)
<anchor xml:id="__x_base_8cpp_source_1l00464"/>00464 {
<anchor xml:id="__x_base_8cpp_source_1l00465"/>00465 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;shift&#32;&#32;=&#32;16;
<anchor xml:id="__x_base_8cpp_source_1l00466"/>00466 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;result&#32;=&#32;(dword&#32;%&#32;10);
<anchor xml:id="__x_base_8cpp_source_1l00467"/>00467 
<anchor xml:id="__x_base_8cpp_source_1l00468"/>00468 &#32;&#32;<emphasis role="keywordflow">while</emphasis>((dword&#32;=&#32;(dword/10)))
<anchor xml:id="__x_base_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_base_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;result&#32;+=&#32;(dword&#32;%&#32;10)&#32;*&#32;shift;
<anchor xml:id="__x_base_8cpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;shift&#32;*=&#32;16;&#32;<emphasis role="comment">//&#32;weirdly,&#32;it&apos;s&#32;not&#32;possible&#32;to&#32;left&#32;shift&#32;more&#32;than&#32;32&#32;bits</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_base_8cpp_source_1l00473"/>00473 
<anchor xml:id="__x_base_8cpp_source_1l00474"/>00474 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__x_base_8cpp_source_1l00475"/>00475 }
<anchor xml:id="__x_base_8cpp_source_1l00476"/>00476 
<anchor xml:id="__x_base_8cpp_source_1l00477"/>00477 
<anchor xml:id="__x_base_8cpp_source_1l00489"/><link linkend="__x_base_8cpp_1a0753543168ac34a96fde804e0c16e028">00489</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="__x_base_8cpp_1a0753543168ac34a96fde804e0c16e028">BCDToDWORD</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;bcd)
<anchor xml:id="__x_base_8cpp_source_1l00490"/>00490 {
<anchor xml:id="__x_base_8cpp_source_1l00491"/>00491 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;mask&#32;=&#32;0x000f;
<anchor xml:id="__x_base_8cpp_source_1l00492"/>00492 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;pwr&#32;&#32;=&#32;1;
<anchor xml:id="__x_base_8cpp_source_1l00493"/>00493 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;i&#32;&#32;&#32;&#32;=&#32;(bcd&#32;&amp;&#32;mask);
<anchor xml:id="__x_base_8cpp_source_1l00494"/>00494 
<anchor xml:id="__x_base_8cpp_source_1l00495"/>00495 &#32;&#32;<emphasis role="keywordflow">while</emphasis>((bcd&#32;=&#32;(bcd&#32;&gt;&gt;&#32;4)))
<anchor xml:id="__x_base_8cpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_base_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;pwr&#32;*=&#32;10;
<anchor xml:id="__x_base_8cpp_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;i&#32;+=&#32;(bcd&#32;&amp;&#32;mask)&#32;*&#32;pwr;
<anchor xml:id="__x_base_8cpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_base_8cpp_source_1l00500"/>00500 
<anchor xml:id="__x_base_8cpp_source_1l00501"/>00501 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)i;
<anchor xml:id="__x_base_8cpp_source_1l00502"/>00502 }
<anchor xml:id="__x_base_8cpp_source_1l00503"/>00503 
<anchor xml:id="__x_base_8cpp_source_1l00504"/>00504 
<anchor xml:id="__x_base_8cpp_source_1l00516"/><link linkend="__x_base_8cpp_1af51d424a2bede3b7c2d3c2d32f85f727">00516</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1af51d424a2bede3b7c2d3c2d32f85f727">RotateBitLeft</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<emphasis role="keywordtype">byte</emphasis>)
<anchor xml:id="__x_base_8cpp_source_1l00517"/>00517 {
<anchor xml:id="__x_base_8cpp_source_1l00518"/>00518 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&lt;&lt;&#32;1)&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&gt;&gt;&#32;7);
<anchor xml:id="__x_base_8cpp_source_1l00519"/>00519 }
<anchor xml:id="__x_base_8cpp_source_1l00520"/>00520 
<anchor xml:id="__x_base_8cpp_source_1l00521"/>00521 
<anchor xml:id="__x_base_8cpp_source_1l00533"/><link linkend="__x_base_8cpp_1a57c5321ef9a5b1a0684d9db13a483968">00533</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1a57c5321ef9a5b1a0684d9db13a483968">RotateBitRight</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<emphasis role="keywordtype">byte</emphasis>)
<anchor xml:id="__x_base_8cpp_source_1l00534"/>00534 {
<anchor xml:id="__x_base_8cpp_source_1l00535"/>00535 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&gt;&gt;&#32;1)&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&lt;&lt;&#32;7);
<anchor xml:id="__x_base_8cpp_source_1l00536"/>00536 }
<anchor xml:id="__x_base_8cpp_source_1l00537"/>00537 
<anchor xml:id="__x_base_8cpp_source_1l00538"/>00538 
<anchor xml:id="__x_base_8cpp_source_1l00550"/><link linkend="__x_base_8cpp_1ac3f6d41c295a645e22b168a1beded217">00550</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<link linkend="__x_base_8cpp_1ac3f6d41c295a645e22b168a1beded217">RotateBitReverse</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;<emphasis role="keywordtype">byte</emphasis>)
<anchor xml:id="__x_base_8cpp_source_1l00551"/>00551 {
<anchor xml:id="__x_base_8cpp_source_1l00552"/>00552 &#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0xF0)&#32;&gt;&gt;&#32;4&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0x0F)&#32;&lt;&lt;&#32;4;
<anchor xml:id="__x_base_8cpp_source_1l00553"/>00553 &#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0xCC)&#32;&gt;&gt;&#32;2&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0x33)&#32;&lt;&lt;&#32;2;
<anchor xml:id="__x_base_8cpp_source_1l00554"/>00554 &#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;=&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0xAA)&#32;&gt;&gt;&#32;1&#32;|&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;0x55)&#32;&lt;&lt;&#32;1;
<anchor xml:id="__x_base_8cpp_source_1l00555"/>00555 
<anchor xml:id="__x_base_8cpp_source_1l00556"/>00556 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;byte;
<anchor xml:id="__x_base_8cpp_source_1l00557"/>00557 }
<anchor xml:id="__x_base_8cpp_source_1l00558"/>00558 
<anchor xml:id="__x_base_8cpp_source_1l00559"/>00559 
<anchor xml:id="__x_base_8cpp_source_1l00560"/>00560 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_base_8cpp_source_1l00561"/>00561 
</programlisting></section>
