<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__hash_8cpp_source" xml:lang="en-US">
<title>Hash.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/Hash.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__hash_8cpp_source_1l00001"/>00001 
<anchor xml:id="__hash_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00031"/>00031 
<anchor xml:id="__hash_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00033"/>00033 
<anchor xml:id="__hash_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00035"/>00035 
<anchor xml:id="__hash_8cpp_source_1l00036"/>00036 
<anchor xml:id="__hash_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00039"/>00039 
<anchor xml:id="__hash_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_8h">Hash.h</link>&quot;</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00041"/>00041 
<anchor xml:id="__hash_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_factory_8h">XFactory.h</link>&quot;</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_file_8h">XFile.h</link>&quot;</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00044"/>00044 
<anchor xml:id="__hash_8cpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00046"/>00046 
<anchor xml:id="__hash_8cpp_source_1l00047"/>00047 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00048"/>00048 
<anchor xml:id="__hash_8cpp_source_1l00049"/>00049 
<anchor xml:id="__hash_8cpp_source_1l00050"/>00050 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00051"/>00051 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00052"/>00052 
<anchor xml:id="__hash_8cpp_source_1l00053"/>00053 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00054"/>00054 
<anchor xml:id="__hash_8cpp_source_1l00055"/>00055 
<anchor xml:id="__hash_8cpp_source_1l00056"/>00056 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00057"/>00057 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00058"/>00058 
<anchor xml:id="__hash_8cpp_source_1l00059"/>00059 
<anchor xml:id="__hash_8cpp_source_1l00069"/><link linkend="_class_h_a_s_h_1ad95e14d4b7ed8455064dc89d996a55f6">00069</link> <link linkend="_class_h_a_s_h_1ad95e14d4b7ed8455064dc89d996a55f6">HASH::HASH</link>()
<anchor xml:id="__hash_8cpp_source_1l00070"/>00070 {
<anchor xml:id="__hash_8cpp_source_1l00071"/>00071 &#32;&#32;Clean();
<anchor xml:id="__hash_8cpp_source_1l00072"/>00072 
<anchor xml:id="__hash_8cpp_source_1l00073"/>00073 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>();
<anchor xml:id="__hash_8cpp_source_1l00074"/>00074 }
<anchor xml:id="__hash_8cpp_source_1l00075"/>00075 
<anchor xml:id="__hash_8cpp_source_1l00076"/>00076 
<anchor xml:id="__hash_8cpp_source_1l00087"/><link linkend="_class_h_a_s_h_c_k_s16_1a1ce8654a3a7637e238a43ce0d40a1747">00087</link> <link linkend="_class_h_a_s_h_1a7e26818f315fcb30d7888228fdc36d46">HASH::~HASH</link>()
<anchor xml:id="__hash_8cpp_source_1l00088"/><link linkend="_class_h_a_s_h_c_k_s16_1a639510a6612c90d89e8b12cc4d29b5be">00088</link> {
<anchor xml:id="__hash_8cpp_source_1l00089"/>00089 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>;
<anchor xml:id="__hash_8cpp_source_1l00090"/>00090 
<anchor xml:id="__hash_8cpp_source_1l00091"/>00091 &#32;&#32;Clean();
<anchor xml:id="__hash_8cpp_source_1l00092"/>00092 }
<anchor xml:id="__hash_8cpp_source_1l00093"/>00093 
<anchor xml:id="__hash_8cpp_source_1l00094"/>00094 
<anchor xml:id="__hash_8cpp_source_1l00104"/><link linkend="_class_h_a_s_h_1a96a01a7f3d31438ac4f27739ac929554">00104</link> <link linkend="__hash_8h_1acf4dd3cf891bcd5c364340e2828a7ec9">HASHTYPE</link>&#32;<link linkend="_class_h_a_s_h_1a96a01a7f3d31438ac4f27739ac929554">HASH::GetType</link>()
<anchor xml:id="__hash_8cpp_source_1l00105"/>00105 {&#32;
<anchor xml:id="__hash_8cpp_source_1l00106"/>00106 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1ad5af89903501908c4dcda95b37a5a785">type</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__hash_8cpp_source_1l00107"/>00107 }
<anchor xml:id="__hash_8cpp_source_1l00108"/>00108 
<anchor xml:id="__hash_8cpp_source_1l00109"/>00109 
<anchor xml:id="__hash_8cpp_source_1l00119"/><link linkend="_class_h_a_s_h_1a522059dfbc865d939b75ca32dc5c8a89">00119</link> <link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>*&#32;<link linkend="_class_h_a_s_h_1a522059dfbc865d939b75ca32dc5c8a89">HASH::GetOUINoSign</link>()
<anchor xml:id="__hash_8cpp_source_1l00120"/>00120 {&#32;
<anchor xml:id="__hash_8cpp_source_1l00121"/>00121 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;<link linkend="_class_h_a_s_h_1a30d0a9a090d968527f3bfa25b168c8da">OUInosignstring</link>;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__hash_8cpp_source_1l00122"/>00122 }
<anchor xml:id="__hash_8cpp_source_1l00123"/>00123 
<anchor xml:id="__hash_8cpp_source_1l00124"/>00124 
<anchor xml:id="__hash_8cpp_source_1l00137"/><link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">00137</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">HASH::Do</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size)
<anchor xml:id="__hash_8cpp_source_1l00138"/>00138 {
<anchor xml:id="__hash_8cpp_source_1l00139"/>00139 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00140"/>00140 }
<anchor xml:id="__hash_8cpp_source_1l00141"/>00141 
<anchor xml:id="__hash_8cpp_source_1l00142"/>00142 
<anchor xml:id="__hash_8cpp_source_1l00154"/><link linkend="_class_h_a_s_h_1a450ce73a72941528aa60efc6320aa194">00154</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">HASH::Do</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;input)
<anchor xml:id="__hash_8cpp_source_1l00155"/>00155 {
<anchor xml:id="__hash_8cpp_source_1l00156"/>00156 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">Do</link>(input.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;input.<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>());
<anchor xml:id="__hash_8cpp_source_1l00157"/>00157 }
<anchor xml:id="__hash_8cpp_source_1l00158"/>00158 
<anchor xml:id="__hash_8cpp_source_1l00159"/>00159 
<anchor xml:id="__hash_8cpp_source_1l00173"/><link linkend="_class_h_a_s_h_1a1ce8654a3a7637e238a43ce0d40a1747">00173</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">HASH::Do</link>(<link linkend="_class_x_p_a_t_h">XPATH</link>&amp;&#32;xpath,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;pos)
<anchor xml:id="__hash_8cpp_source_1l00174"/>00174 {
<anchor xml:id="__hash_8cpp_source_1l00175"/>00175 &#32;&#32;<link linkend="_class_x_f_i_l_e">XFILE</link>*&#32;xfile;
<anchor xml:id="__hash_8cpp_source_1l00176"/>00176 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00177"/>00177 
<anchor xml:id="__hash_8cpp_source_1l00178"/>00178 &#32;&#32;GEN_XFACTORY_CREATE(xfile,&#32;Create_File())
<anchor xml:id="__hash_8cpp_source_1l00179"/>00179 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xfile)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00180"/>00180 
<anchor xml:id="__hash_8cpp_source_1l00181"/>00181 &#32;&#32;<link linkend="_class_h_a_s_h_1a6844bc505aecfe2b878ef45f9d905e3e">ResetResult</link>();
<anchor xml:id="__hash_8cpp_source_1l00182"/>00182 
<anchor xml:id="__hash_8cpp_source_1l00183"/>00183 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xfile-&gt;<link linkend="_class_x_f_i_l_e_1a43349ac3160e391c95164fe83825fdfc">Open</link>(xpath,&#32;<emphasis role="keyword">true</emphasis>))
<anchor xml:id="__hash_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;_size;
<anchor xml:id="__hash_8cpp_source_1l00186"/>00186 
<anchor xml:id="__hash_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;==&#32;<link linkend="__hash_8h_1a2da67d60d728a474bcfabb40bb964156">HASHALLFILESIZE</link>)&#32;_size&#32;=&#32;xfile-&gt;<link linkend="_class_x_f_i_l_e_1a3d5b9c0020c23ffb0ded5aeb105a6fb1">GetSize</link>();&#32;<emphasis role="keywordflow">else</emphasis>&#32;_size&#32;=&#32;size;
<anchor xml:id="__hash_8cpp_source_1l00188"/>00188 
<anchor xml:id="__hash_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">Do</link>(xfile,&#32;_size,&#32;pos);
<anchor xml:id="__hash_8cpp_source_1l00190"/>00190 
<anchor xml:id="__hash_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;xfile-&gt;<link linkend="_class_x_f_i_l_e_1af7d78f174cb8eeb52cafe94524d3885b">Close</link>();
<anchor xml:id="__hash_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00193"/>00193 
<anchor xml:id="__hash_8cpp_source_1l00194"/>00194 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(xfile)&#32;GEN_XFACTORY.Delete_File(xfile);
<anchor xml:id="__hash_8cpp_source_1l00195"/>00195 
<anchor xml:id="__hash_8cpp_source_1l00196"/>00196 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__hash_8cpp_source_1l00197"/>00197 }
<anchor xml:id="__hash_8cpp_source_1l00198"/>00198 
<anchor xml:id="__hash_8cpp_source_1l00199"/>00199 
<anchor xml:id="__hash_8cpp_source_1l00213"/><link linkend="_class_h_a_s_h_1a639510a6612c90d89e8b12cc4d29b5be">00213</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">HASH::Do</link>(<link linkend="_class_x_f_i_l_e">XFILE</link>*&#32;xfile,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;pos)
<anchor xml:id="__hash_8cpp_source_1l00214"/>00214 {
<anchor xml:id="__hash_8cpp_source_1l00215"/>00215 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xfile)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00216"/>00216 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xfile-&gt;<link linkend="_class_x_f_i_l_e_1a20d1c37c3a66f2b5044c340293cbf8ec">IsOpen</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00217"/>00217 
<anchor xml:id="__hash_8cpp_source_1l00218"/>00218 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&#32;&#32;&#32;xbuffer;
<anchor xml:id="__hash_8cpp_source_1l00219"/>00219 &#32;&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;&#32;&#32;&#32;block&#32;&#32;&#32;=&#32;(((size==<link linkend="__hash_8h_1a2da67d60d728a474bcfabb40bb964156">HASHALLFILESIZE</link>)?xfile-&gt;<link linkend="_class_x_f_i_l_e_1a3d5b9c0020c23ffb0ded5aeb105a6fb1">GetSize</link>():size)&#32;/&#32;<link linkend="__hash_8h_1a0006415916cc5cd69fac71a904ae30c2">HASHMAXFILESIZEBUFFER</link>);
<anchor xml:id="__hash_8cpp_source_1l00220"/>00220 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;&#32;&#32;&#32;mod&#32;&#32;&#32;&#32;&#32;=&#32;(((size==<link linkend="__hash_8h_1a2da67d60d728a474bcfabb40bb964156">HASHALLFILESIZE</link>)?xfile-&gt;<link linkend="_class_x_f_i_l_e_1a3d5b9c0020c23ffb0ded5aeb105a6fb1">GetSize</link>():size)&#32;%&#32;<link linkend="__hash_8h_1a0006415916cc5cd69fac71a904ae30c2">HASHMAXFILESIZEBUFFER</link>);
<anchor xml:id="__hash_8cpp_source_1l00221"/>00221 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;status&#32;&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00222"/>00222 
<anchor xml:id="__hash_8cpp_source_1l00223"/>00223 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xfile-&gt;<link linkend="_class_x_f_i_l_e_1aa1eb97dcf7209887546fc32d69db5dcd">SetPosition</link>(pos))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00224"/>00224 
<anchor xml:id="__hash_8cpp_source_1l00225"/>00225 &#32;&#32;xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1acf69e379f1d0bf812ae9c1157eac172c">Resize</link>((<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)<link linkend="__hash_8h_1a0006415916cc5cd69fac71a904ae30c2">HASHMAXFILESIZEBUFFER</link>);
<anchor xml:id="__hash_8cpp_source_1l00226"/>00226 
<anchor xml:id="__hash_8cpp_source_1l00227"/>00227 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;c=0;c&lt;block;c++)
<anchor xml:id="__hash_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xfile-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),&#32;<link linkend="__hash_8h_1a0006415916cc5cd69fac71a904ae30c2">HASHMAXFILESIZEBUFFER</link>))
<anchor xml:id="__hash_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">Do</link>(xbuffer))
<anchor xml:id="__hash_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00243"/>00243 
<anchor xml:id="__hash_8cpp_source_1l00244"/>00244 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(status)
<anchor xml:id="__hash_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1acf69e379f1d0bf812ae9c1157eac172c">Resize</link>(mod);
<anchor xml:id="__hash_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(xfile-&gt;<link linkend="_class_x_f_i_l_e_1ae316e4ea22c9f1fb9a2965f21d0dac4a">Read</link>(xbuffer.<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>(),mod))
<anchor xml:id="__hash_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">Do</link>(xbuffer))
<anchor xml:id="__hash_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__hash_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00259"/>00259 
<anchor xml:id="__hash_8cpp_source_1l00260"/>00260 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__hash_8cpp_source_1l00261"/>00261 }
<anchor xml:id="__hash_8cpp_source_1l00262"/>00262 
<anchor xml:id="__hash_8cpp_source_1l00263"/>00263 
<anchor xml:id="__hash_8cpp_source_1l00273"/><link linkend="_class_h_a_s_h_1a6844bc505aecfe2b878ef45f9d905e3e">00273</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_a_s_h_1a6844bc505aecfe2b878ef45f9d905e3e">HASH::ResetResult</link>()
<anchor xml:id="__hash_8cpp_source_1l00274"/>00274 {
<anchor xml:id="__hash_8cpp_source_1l00275"/>00275 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00276"/>00276 
<anchor xml:id="__hash_8cpp_source_1l00277"/>00277 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a0395231705663a2aeeee3b4be9d292bb">Delete</link>();
<anchor xml:id="__hash_8cpp_source_1l00278"/>00278 
<anchor xml:id="__hash_8cpp_source_1l00279"/>00279 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00280"/>00280 }
<anchor xml:id="__hash_8cpp_source_1l00281"/>00281 
<anchor xml:id="__hash_8cpp_source_1l00282"/>00282 
<anchor xml:id="__hash_8cpp_source_1l00292"/><link linkend="_class_h_a_s_h_1a8966b781f2fd36442e2fb33208c7b422">00292</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_h_a_s_h_1a8966b781f2fd36442e2fb33208c7b422">HASH::GetDefaultSize</link>()
<anchor xml:id="__hash_8cpp_source_1l00293"/>00293 {
<anchor xml:id="__hash_8cpp_source_1l00294"/>00294 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__hash_8cpp_source_1l00295"/>00295 }
<anchor xml:id="__hash_8cpp_source_1l00296"/>00296 
<anchor xml:id="__hash_8cpp_source_1l00297"/>00297 
<anchor xml:id="__hash_8cpp_source_1l00307"/><link linkend="_class_h_a_s_h_1a4b0200f295e136f81ec538fe28913879">00307</link> <link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;<link linkend="_class_h_a_s_h_1a4b0200f295e136f81ec538fe28913879">HASH::GetResult</link>()
<anchor xml:id="__hash_8cpp_source_1l00308"/>00308 {
<anchor xml:id="__hash_8cpp_source_1l00309"/>00309 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>;
<anchor xml:id="__hash_8cpp_source_1l00310"/>00310 }
<anchor xml:id="__hash_8cpp_source_1l00311"/>00311 
<anchor xml:id="__hash_8cpp_source_1l00312"/>00312 
<anchor xml:id="__hash_8cpp_source_1l00324"/><link linkend="_class_h_a_s_h_1a7c77042ea68fbed775ce0c8d58744539">00324</link> <link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;<link linkend="_class_h_a_s_h_1a4b0200f295e136f81ec538fe28913879">HASH::GetResult</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&amp;&#32;resultsize)
<anchor xml:id="__hash_8cpp_source_1l00325"/>00325 {
<anchor xml:id="__hash_8cpp_source_1l00326"/>00326 &#32;&#32;resultsize&#32;=&#32;0;
<anchor xml:id="__hash_8cpp_source_1l00327"/>00327 
<anchor xml:id="__hash_8cpp_source_1l00328"/>00328 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__hash_8cpp_source_1l00329"/>00329 
<anchor xml:id="__hash_8cpp_source_1l00330"/>00330 &#32;&#32;resultsize&#32;&#32;=&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>();
<anchor xml:id="__hash_8cpp_source_1l00331"/>00331 
<anchor xml:id="__hash_8cpp_source_1l00332"/>00332 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>();
<anchor xml:id="__hash_8cpp_source_1l00333"/>00333 }
<anchor xml:id="__hash_8cpp_source_1l00334"/>00334 
<anchor xml:id="__hash_8cpp_source_1l00335"/>00335 
<anchor xml:id="__hash_8cpp_source_1l00347"/><link linkend="_class_h_a_s_h_1a43bc1645666ed5088ab10f402d17ad0d">00347</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_h_a_s_h_1a43bc1645666ed5088ab10f402d17ad0d">HASH::GetResultString</link>(<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&amp;&#32;stringhex)
<anchor xml:id="__hash_8cpp_source_1l00348"/>00348 {
<anchor xml:id="__hash_8cpp_source_1l00349"/>00349 &#32;&#32;stringhex.<link linkend="_class_x_s_t_r_i_n_g_1a9275997c1605fa79646c301e63a77d06">Empty</link>();
<anchor xml:id="__hash_8cpp_source_1l00350"/>00350 
<anchor xml:id="__hash_8cpp_source_1l00351"/>00351 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;xbuffer&#32;=&#32;<link linkend="_class_h_a_s_h_1a4b0200f295e136f81ec538fe28913879">GetResult</link>();
<anchor xml:id="__hash_8cpp_source_1l00352"/>00352 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xbuffer)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00353"/>00353 
<anchor xml:id="__hash_8cpp_source_1l00354"/>00354 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!xbuffer-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00355"/>00355 
<anchor xml:id="__hash_8cpp_source_1l00356"/>00356 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;c=0;c&lt;(int)xbuffer-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>();c++)
<anchor xml:id="__hash_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;{
<anchor xml:id="__hash_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_s_t_r_i_n_g">XSTRING</link>&#32;strbyte;
<anchor xml:id="__hash_8cpp_source_1l00359"/>00359 
<anchor xml:id="__hash_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;strbyte.<link linkend="_class_x_s_t_r_i_n_g_1a2177bf8a150174dfd155c7fe1b7b2af9">Format</link>(<link linkend="__x_string_8h_1a2cbff438813b72648c18c8af875f47c9">__L</link>(<emphasis role="stringliteral">&quot;%02x&quot;</emphasis>),&#32;xbuffer-&gt;<link linkend="_class_x_b_u_f_f_e_r_1abfaf967d136d37f0c5dcf4ded0296dac">GetByte</link>(c));
<anchor xml:id="__hash_8cpp_source_1l00361"/>00361 
<anchor xml:id="__hash_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;stringhex&#32;+=&#32;strbyte;
<anchor xml:id="__hash_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;}
<anchor xml:id="__hash_8cpp_source_1l00364"/>00364 
<anchor xml:id="__hash_8cpp_source_1l00365"/>00365 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__hash_8cpp_source_1l00366"/>00366 }
<anchor xml:id="__hash_8cpp_source_1l00367"/>00367 
<anchor xml:id="__hash_8cpp_source_1l00368"/>00368 
<anchor xml:id="__hash_8cpp_source_1l00379"/>00379 <emphasis role="keywordtype">void</emphasis>&#32;HASH::Clean()
<anchor xml:id="__hash_8cpp_source_1l00380"/>00380 {
<anchor xml:id="__hash_8cpp_source_1l00381"/>00381 &#32;&#32;<link linkend="_class_h_a_s_h_1ad5af89903501908c4dcda95b37a5a785">type</link>&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__hash_8h_1acf4dd3cf891bcd5c364340e2828a7ec9a9c6a2d9f4624b48d24b4b1f22476b286">HASHTYPE_NONE</link>;
<anchor xml:id="__hash_8cpp_source_1l00382"/>00382 &#32;&#32;<link linkend="_class_h_a_s_h_1ae0e98c634df2385915a73f5226864094">result</link>&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__hash_8cpp_source_1l00383"/>00383 }
<anchor xml:id="__hash_8cpp_source_1l00384"/>00384 
<anchor xml:id="__hash_8cpp_source_1l00385"/>00385 
<anchor xml:id="__hash_8cpp_source_1l00386"/>00386 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
</programlisting></section>
