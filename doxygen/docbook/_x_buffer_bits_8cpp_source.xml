<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_buffer_bits_8cpp_source" xml:lang="en-US">
<title>XBufferBits.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/XUtils/XBufferBits.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_buffer_bits_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_bits_8h">XBufferBits.h</link>&quot;</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_buffer_8h">XBuffer.h</link>&quot;</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00043"/>00043 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00047"/>00047 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00048"/>00048 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00049"/>00049 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00052"/>00052 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00053"/>00053 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00054"/>00054 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00055"/>00055 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00057"/>00057 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00070"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a3ae96f1266d06b596065c439877eadfe">00070</link> <link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a3ae96f1266d06b596065c439877eadfe">XBUFFERBITS::XBUFFERBITS</link>(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>*&#32;xbuffer)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00071"/>00071 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00072"/>00072 &#32;&#32;Clean();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00073"/>00073 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00074"/>00074 &#32;&#32;this-&gt;xbuffer&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00075"/>00075 &#32;&#32;this-&gt;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;=&#32;xbuffer-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00076"/>00076 &#32;&#32;this-&gt;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00077"/>00077 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00078"/>00078 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00079"/>00079 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00090"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1af0c040d21fcdd70debac708950885133">00090</link> <link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1af0c040d21fcdd70debac708950885133">XBUFFERBITS::~XBUFFERBITS</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00091"/>00091 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00092"/>00092 &#32;&#32;Clean();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00093"/>00093 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00094"/>00094 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00095"/>00095 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00105"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1ad54cb85478208a797b1fa9833129b48a">00105</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1ad54cb85478208a797b1fa9833129b48a">XBUFFERBITS::IsByteAligned</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00106"/>00106 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00107"/>00107 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;==&#32;8);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00108"/>00108 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00109"/>00109 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00110"/>00110 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00120"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a4a871a7fd2855666a415a9fc217de578">00120</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a4a871a7fd2855666a415a9fc217de578">XBUFFERBITS::IsEOF</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00121"/>00121 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00122"/>00122 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;&gt;=&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()+<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>());
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00123"/>00123 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00124"/>00124 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00125"/>00125 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00135"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a28b83349f26f1a675bc6d9a921e619a4">00135</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a28b83349f26f1a675bc6d9a921e619a4">XBUFFERBITS::IsOverrun</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00136"/>00136 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00137"/>00137 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;&gt;=&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()+<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a726a6143d8a9293a199f8033c8198a0a">GetSize</link>()))&#32;&amp;&amp;&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;&lt;&#32;8);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00138"/>00138 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00139"/>00139 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00140"/>00140 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00150"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a061f3b3e2941faf0f485ecaf6bc75e6f">00150</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a061f3b3e2941faf0f485ecaf6bc75e6f">XBUFFERBITS::GetBytePosition</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00151"/>00151 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00152"/>00152 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>)(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()&#32;-&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00153"/>00153 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00154"/>00154 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00155"/>00155 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00165"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a17cc0adc3f3d5e606e2da00375f173bb">00165</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a17cc0adc3f3d5e606e2da00375f173bb">XBUFFERBITS::GetBitPosition</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00166"/>00166 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00167"/>00167 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;8&#32;-&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00168"/>00168 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00169"/>00169 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00170"/>00170 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00183"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a93a5dc3ae5ae6bb8b3a3e1278d671546">00183</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a93a5dc3ae5ae6bb8b3a3e1278d671546">XBUFFERBITS::SetPosition</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;index,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;bitindex)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00184"/>00184 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00185"/>00185 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>-&gt;<link linkend="_class_x_b_u_f_f_e_r_1a59d2c2b8d1c32098920f5d3eba0a5971">Get</link>()&#32;+&#32;index;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00186"/>00186 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8&#32;-&#32;((bitindex&#32;&gt;=&#32;8)&#32;?&#32;7&#32;:&#32;0);&#32;<emphasis role="comment">//&#32;zero&#32;base&#32;index,&#32;can&apos;t&#32;be&#32;8</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00187"/>00187 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00188"/>00188 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00189"/>00189 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00199"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1ae513ab29a98abd29ebe7d9b428438ee9">00199</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1ae513ab29a98abd29ebe7d9b428438ee9">XBUFFERBITS::SkipU1</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00200"/>00200 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00201"/>00201 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>--;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00202"/>00202 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00203"/>00203 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;==&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00208"/>00208 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00209"/>00209 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00210"/>00210 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00220"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a8d8feeb57956801c0675f4eb866f04d3">00220</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a8d8feeb57956801c0675f4eb866f04d3">XBUFFERBITS::PeekU1</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00221"/>00221 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00222"/>00222 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00223"/>00223 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00224"/>00224 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a4a871a7fd2855666a415a9fc217de578">IsEOF</link>())
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;((*(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>))&#32;&gt;&gt;&#32;(&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;-&#32;1&#32;))&#32;&amp;&#32;0x01;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00228"/>00228 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00229"/>00229 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00230"/>00230 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00231"/>00231 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00232"/>00232 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00242"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a447e99a38908718923815f98e5d80251">00242</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a447e99a38908718923815f98e5d80251">XBUFFERBITS::ReadU1</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00243"/>00243 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00244"/>00244 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00245"/>00245 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00246"/>00246 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>--;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00247"/>00247 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00248"/>00248 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a4a871a7fd2855666a415a9fc217de578">IsEOF</link>())
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;((*(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>))&#32;&gt;&gt;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>)&#32;&amp;&#32;0x01;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00252"/>00252 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00253"/>00253 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;==&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00258"/>00258 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00259"/>00259 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00260"/>00260 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00261"/>00261 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00262"/>00262 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00274"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aca76492778b6bc379490354f7551203e">00274</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aca76492778b6bc379490354f7551203e">XBUFFERBITS::SkipU</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00275"/>00275 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00276"/>00276 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00277"/>00277 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1ae513ab29a98abd29ebe7d9b428438ee9">SkipU1</link>();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00281"/>00281 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00282"/>00282 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00283"/>00283 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00295"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a68a58c8dc62eca1c48d28cc6c0d2edc2">00295</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a68a58c8dc62eca1c48d28cc6c0d2edc2">XBUFFERBITS::PeekU</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00296"/>00296 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00297"/>00297 &#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;orig_byte&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00298"/>00298 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;origin_bits_left&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00299"/>00299 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00300"/>00300 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00301"/>00301 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00302"/>00302 &#32;&#32;r&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a7a44bc85f6fb2f41d5e9be8453ca705b">ReadU</link>(n);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00303"/>00303 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00304"/>00304 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;=&#32;orig_byte;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00305"/>00305 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;origin_bits_left;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00306"/>00306 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00307"/>00307 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00308"/>00308 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00309"/>00309 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00310"/>00310 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00322"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a7a44bc85f6fb2f41d5e9be8453ca705b">00322</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a7a44bc85f6fb2f41d5e9be8453ca705b">XBUFFERBITS::ReadU</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00323"/>00323 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00324"/>00324 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00325"/>00325 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00326"/>00326 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;|=&#32;(&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a447e99a38908718923815f98e5d80251">ReadU1</link>()&#32;&lt;&lt;&#32;(&#32;n&#32;-&#32;i&#32;-&#32;1&#32;)&#32;);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00330"/>00330 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00331"/>00331 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00332"/>00332 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00333"/>00333 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00334"/>00334 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00344"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a349241970b9151e47749c6b9764aecc9">00344</link> <link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a349241970b9151e47749c6b9764aecc9">XBUFFERBITS::ReadUE</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00345"/>00345 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00346"/>00346 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;r&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00347"/>00347 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00348"/>00348 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00349"/>00349 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a447e99a38908718923815f98e5d80251">ReadU1</link>()&#32;==&#32;0)&#32;&amp;&amp;&#32;(i&#32;&lt;&#32;32)&#32;&amp;&amp;&#32;(!<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a4a871a7fd2855666a415a9fc217de578">IsEOF</link>())&#32;)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;i++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00353"/>00353 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00354"/>00354 &#32;&#32;r&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a7a44bc85f6fb2f41d5e9be8453ca705b">ReadU</link>(i);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00355"/>00355 &#32;&#32;r&#32;+=&#32;(1&#32;&lt;&lt;&#32;i)&#32;-&#32;1;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00356"/>00356 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00357"/>00357 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00358"/>00358 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00359"/>00359 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00360"/>00360 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00370"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a867ae7fead4415e9dde34c04c8d4ca5b">00370</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a867ae7fead4415e9dde34c04c8d4ca5b">XBUFFERBITS::ReadSE</link>()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00371"/>00371 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00372"/>00372 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;r&#32;=&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a349241970b9151e47749c6b9764aecc9">ReadUE</link>();
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00373"/>00373 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;&amp;&#32;0x01)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;(r+1)/2;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00377"/>00377 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;-(r/2);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00381"/>00381 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00382"/>00382 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00383"/>00383 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00384"/>00384 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00385"/>00385 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00397"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a0e11b8763a66f0463a345882c4c447dd">00397</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a0e11b8763a66f0463a345882c4c447dd">XBUFFERBITS::WriteU1</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;v)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00398"/>00398 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00399"/>00399 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>--;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00400"/>00400 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00401"/>00401 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(!&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a4a871a7fd2855666a415a9fc217de578">IsEOF</link>())
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;FIXME&#32;this&#32;is&#32;slow,&#32;but&#32;we&#32;must&#32;clear&#32;bit&#32;first</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;is&#32;it&#32;better&#32;to&#32;memset(0)&#32;the&#32;whole&#32;buffer&#32;during&#32;bs_init()&#32;instead?</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;we&#32;don&apos;t&#32;do&#32;either,&#32;we&#32;introduce&#32;pretty&#32;nasty&#32;bugs</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;(*(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>))&#32;&amp;=&#32;~(0x01&#32;&lt;&lt;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;(*(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>))&#32;|=&#32;((v&#32;&amp;&#32;0x01)&#32;&lt;&lt;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00409"/>00409 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00410"/>00410 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;==&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;=&#32;8;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00415"/>00415 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00416"/>00416 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00417"/>00417 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00430"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a953be4b787cc815eb3068820b12080da">00430</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a953be4b787cc815eb3068820b12080da">XBUFFERBITS::WriteU</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;n,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;v)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00431"/>00431 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00432"/>00432 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;i;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00433"/>00433 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a0e11b8763a66f0463a345882c4c447dd">WriteU1</link>((v&#32;&gt;&gt;&#32;(&#32;n&#32;-&#32;i&#32;-&#32;1&#32;))&amp;0x01);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00437"/>00437 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00438"/>00438 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00439"/>00439 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00451"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1ad63ab59115d043fb5617502e550d9d36">00451</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1ad63ab59115d043fb5617502e550d9d36">XBUFFERBITS::WriteUE</link>(<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;v)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00452"/>00452 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00453"/>00453 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;len_table[256]&#32;=
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00454"/>00454 &#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;1,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;1,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;2,2,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;3,3,3,3,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;4,4,4,4,4,4,4,4,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00475"/>00475 &#32;&#32;};
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00476"/>00476 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00477"/>00477 &#32;&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;len;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00478"/>00478 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00479"/>00479 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;==&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a0e11b8763a66f0463a345882c4c447dd">WriteU1</link>(1);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00483"/>00483 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;v++;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00486"/>00486 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;&gt;=&#32;0x01000000)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len&#32;=&#32;24&#32;+&#32;len_table[&#32;v&#32;&gt;&gt;&#32;24&#32;];
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(v&#32;&gt;=&#32;0x00010000)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len&#32;=&#32;16&#32;+&#32;len_table[&#32;v&#32;&gt;&gt;&#32;16&#32;];
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(v&#32;&gt;=&#32;0x00000100)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len&#32;=&#32;&#32;8&#32;+&#32;len_table[&#32;v&#32;&gt;&gt;&#32;&#32;8&#32;];
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;len&#32;=&#32;len_table[&#32;v&#32;];
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00503"/>00503 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a953be4b787cc815eb3068820b12080da">WriteU</link>(2*len-1,&#32;v);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00506"/>00506 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00507"/>00507 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00508"/>00508 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00520"/><link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aa7ee776c27109bf69dbb147ff9229a0d">00520</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aa7ee776c27109bf69dbb147ff9229a0d">XBUFFERBITS::WriteSE</link>(<emphasis role="keywordtype">int</emphasis>&#32;v)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00521"/>00521 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00522"/>00522 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;&lt;=&#32;0)
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00523"/>00523 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1ad63ab59115d043fb5617502e550d9d36">WriteUE</link>(-v*2);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00525"/>00525 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00526"/>00526 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00527"/>00527 &#32;&#32;&#32;&#32;{
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1ad63ab59115d043fb5617502e550d9d36">WriteUE</link>(v*2&#32;-&#32;1);
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;}
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00530"/>00530 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00531"/>00531 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00532"/>00532 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00543"/>00543 <emphasis role="keywordtype">void</emphasis>&#32;XBUFFERBITS::Clean()
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00544"/>00544 {
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00545"/>00545 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a1958e1e07fe98ec8d6d73f9440e47401">xbuffer</link>&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00546"/>00546 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1a79b684ec55eb51f42d26e8e7b1a04671">p</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00547"/>00547 &#32;&#32;<link linkend="_class_x_b_u_f_f_e_r_b_i_t_s_1aadb4490022d608e3a5e58d8cf04c6bf1">bits_left</link>&#32;&#32;&#32;=&#32;0;
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00548"/>00548 }
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00549"/>00549 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00550"/>00550 
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00551"/>00551 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_buffer_bits_8cpp_source_1l00552"/>00552 
</programlisting></section>
