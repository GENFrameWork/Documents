<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__x_e_s_p32_file_8cpp_source" xml:lang="en-US">
<title>XESP32File.cpp</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Platforms/Microcontrollers/ESP32/XESP32File.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00001"/>00001 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00029"/>00029 <emphasis role="comment">/*----&#32;PRECOMPILATION&#32;INCLUDES&#32;----------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;region&#32;PRECOMPILATION_INCLUDES</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00031"/>00031 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__g_e_n___defines_8h">GEN_Defines.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00033"/>00033 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00034"/>00034 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00035"/>00035 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00036"/>00036 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00037"/>00037 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00038"/>00038 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00039"/>00039 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_e_s_p32_file_8h">XESP32File.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00041"/>00041 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00042"/>00042 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_path_8h">XPath.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_string_8h">XString.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_trace_8h">XTrace.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00045"/>00045 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__cipher_8h">Cipher.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00047"/>00047 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__x_memory___control_8h">XMemory_Control.h</link>&quot;</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00049"/>00049 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00051"/>00051 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00052"/>00052 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00053"/>00053 <emphasis role="comment">/*----&#32;GENERAL&#32;VARIABLE&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;region&#32;GENERAL_VARIABLE</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00055"/>00055 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00056"/>00056 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00057"/>00057 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00058"/>00058 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00059"/>00059 <emphasis role="comment">/*----&#32;CLASS&#32;MEMBERS&#32;-------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00060"/>00060 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS_MEMBERS</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00061"/>00061 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00062"/>00062 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00072"/><link linkend="_class_x_e_s_p32_f_i_l_e_1a06510dc6b540a3284e6f2f123b3e52de">00072</link> <link linkend="_class_x_e_s_p32_f_i_l_e_1a06510dc6b540a3284e6f2f123b3e52de">XESP32FILE::XESP32FILE</link>():&#32;<link linkend="_class_x_f_i_l_e">XFILE</link>()
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00073"/>00073 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00074"/>00074 &#32;&#32;Clean();
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00075"/>00075 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00076"/>00076 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00077"/>00077 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00088"/><link linkend="_class_x_e_s_p32_f_i_l_e_1ab1a3389db5665223d0ece5e7e2f8c299">00088</link> <link linkend="_class_x_e_s_p32_f_i_l_e_1ab1a3389db5665223d0ece5e7e2f8c299">XESP32FILE::~XESP32FILE</link>()
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00089"/>00089 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00090"/>00090 &#32;&#32;Clean();
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00091"/>00091 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00092"/>00092 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00093"/>00093 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00105"/><link linkend="_class_x_e_s_p32_f_i_l_e_1adc106e46d3b8cd50c9feb8a346ae999e">00105</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1adc106e46d3b8cd50c9feb8a346ae999e">XESP32FILE::Exist</link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;path)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00106"/>00106 {&#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00107"/>00107 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00108"/>00108 &#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00109"/>00109 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00110"/>00110 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00111"/>00111 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00112"/>00112 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00125"/><link linkend="_class_x_e_s_p32_f_i_l_e_1a67a9adb9bf1515dac35a7b2e4b06591b">00125</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1a67a9adb9bf1515dac35a7b2e4b06591b">XESP32FILE::Open</link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;path,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isreadonly)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00126"/>00126 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00127"/>00127 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00128"/>00128 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00129"/>00129 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00130"/>00130 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00131"/>00131 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00132"/>00132 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00144"/><link linkend="_class_x_e_s_p32_f_i_l_e_1a4c7bf373396f9787a38ecf5f7328deee">00144</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1a4c7bf373396f9787a38ecf5f7328deee">XESP32FILE::Create</link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;path)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00145"/>00145 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00146"/>00146 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00147"/>00147 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00148"/>00148 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00149"/>00149 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00150"/>00150 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00151"/>00151 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00163"/><link linkend="_class_x_e_s_p32_f_i_l_e_1ae79d965410704a6d3db8535acd16f4b4">00163</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1ae79d965410704a6d3db8535acd16f4b4">XESP32FILE::SetSize</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00164"/>00164 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00165"/>00165 &#32;&#32;size&#32;=&#32;0;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00166"/>00166 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00167"/>00167 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00168"/>00168 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00169"/>00169 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00170"/>00170 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00182"/><link linkend="_class_x_e_s_p32_f_i_l_e_1ac82e0ce652910149bbfe66d97555f7d2">00182</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1ac82e0ce652910149bbfe66d97555f7d2">XESP32FILE::GetPosition</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&amp;&#32;position)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00183"/>00183 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00184"/>00184 &#32;&#32;position&#32;=&#32;0;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00185"/>00185 &#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00186"/>00186 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00187"/>00187 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00188"/>00188 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00189"/>00189 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00201"/><link linkend="_class_x_e_s_p32_f_i_l_e_1ac49beb1be74b5a90472026126ef35ab8">00201</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1ac49beb1be74b5a90472026126ef35ab8">XESP32FILE::SetPosition</link>(<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;position)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00202"/>00202 {&#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00203"/>00203 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00204"/>00204 &#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00205"/>00205 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00206"/>00206 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00207"/>00207 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00208"/>00208 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00222"/><link linkend="_class_x_e_s_p32_f_i_l_e_1afdad02d67d2691e4a8c682047cf30185">00222</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1afdad02d67d2691e4a8c682047cf30185">XESP32FILE::Read</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="_class_c_i_p_h_e_r">CIPHER</link>*&#32;cipher)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00223"/>00223 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00224"/>00224 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00225"/>00225 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00226"/>00226 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00227"/>00227 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00228"/>00228 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00229"/>00229 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00243"/><link linkend="_class_x_e_s_p32_f_i_l_e_1a4958d3d7b66663c66b52e8ee1a8ff1bf">00243</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1afdad02d67d2691e4a8c682047cf30185">XESP32FILE::Read</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>*&#32;size,&#32;<link linkend="_class_c_i_p_h_e_r">CIPHER</link>*&#32;cipher)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00244"/>00244 {&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00245"/>00245 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00247"/>00247 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00248"/>00248 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00249"/>00249 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00250"/>00250 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00264"/><link linkend="_class_x_e_s_p32_f_i_l_e_1af39d5f1ef1ce76501fb0e5f3755b58c5">00264</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1af39d5f1ef1ce76501fb0e5f3755b58c5">XESP32FILE::Write</link>(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;buffer,&#32;<link linkend="__x_base_8h_1a0e5b572e67f127f1afb599e257c539cf">XDWORD</link>&#32;size,&#32;<link linkend="_class_c_i_p_h_e_r">CIPHER</link>*&#32;cipher)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00265"/>00265 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00266"/>00266 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00268"/>00268 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00269"/>00269 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00270"/>00270 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00271"/>00271 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00281"/><link linkend="_class_x_e_s_p32_f_i_l_e_1ae5b17648db09d141e205120fe3737e8d">00281</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1ae5b17648db09d141e205120fe3737e8d">XESP32FILE::Flush</link>()
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00282"/>00282 {&#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00283"/>00283 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00284"/>00284 &#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00285"/>00285 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00286"/>00286 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00287"/>00287 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00288"/>00288 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00298"/><link linkend="_class_x_e_s_p32_f_i_l_e_1aae4ddea11542e3b6af5e2f6bc36bc2de">00298</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1aae4ddea11542e3b6af5e2f6bc36bc2de">XESP32FILE::Close</link>()
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00299"/>00299 {&#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00300"/>00300 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00301"/>00301 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00302"/>00302 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00303"/>00303 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00316"/><link linkend="_class_x_e_s_p32_f_i_l_e_1ac247ca0dd69aba6a003fa6d16a259eda">00316</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1ac247ca0dd69aba6a003fa6d16a259eda">XESP32FILE::Erase</link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;path,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;overwrite)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00317"/>00317 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00318"/>00318 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00319"/>00319 &#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00320"/>00320 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00321"/>00321 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00322"/>00322 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00323"/>00323 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00324"/>00324 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00337"/><link linkend="_class_x_e_s_p32_f_i_l_e_1a17f5061e851db9f17e81e0c8f680acd5">00337</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1a17f5061e851db9f17e81e0c8f680acd5">XESP32FILE::Rename</link>(<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;pathold,&#32;<link linkend="__x_string_8h_1a03209152a681f02e4ba73b6681dd4968">XCHAR</link>*&#32;pathnew)
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00338"/>00338 {&#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00339"/>00339 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;status&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00341"/>00341 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00342"/>00342 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00343"/>00343 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00344"/>00344 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00354"/><link linkend="_class_x_e_s_p32_f_i_l_e_1a75f9cb139064a69a14df423ae14f2622">00354</link> FILE*&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1a75f9cb139064a69a14df423ae14f2622">XESP32FILE::CreateStructHandle</link>()
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00355"/>00355 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00356"/>00356 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__x_base_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00357"/>00357 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00358"/>00358 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00359"/>00359 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00369"/><link linkend="_class_x_e_s_p32_f_i_l_e_1ad9a3300d27d9bccf191cc7a1f5c95031">00369</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1ad9a3300d27d9bccf191cc7a1f5c95031">XESP32FILE::DeleteStructHandle</link>()
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00370"/>00370 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00371"/>00371 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00372"/>00372 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00373"/>00373 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00374"/>00374 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00375"/>00375 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00385"/><link linkend="_class_x_e_s_p32_f_i_l_e_1aa6dbe492bf46cadf680f771f0ec978ff">00385</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1aa6dbe492bf46cadf680f771f0ec978ff">XESP32FILE::ActualizeSize</link>()
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00386"/>00386 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00387"/>00387 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_x_e_s_p32_f_i_l_e_1adc106e46d3b8cd50c9feb8a346ae999e">Exist</link>(<link linkend="_class_x_f_i_l_e_1a294add2df94973ab032c4b42c00ccc0b">xpathnamefile</link>.<link linkend="_class_x_s_t_r_i_n_g_1ad1470753a96f93e2feb3ee54e6fef95f">Get</link>());
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00388"/>00388 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00389"/>00389 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00390"/>00390 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00401"/>00401 <emphasis role="keywordtype">void</emphasis>&#32;XESP32FILE::Clean()
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00402"/>00402 {
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00403"/>00403 &#32;&#32;
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00404"/>00404 }
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00405"/>00405 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00406"/>00406 
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00407"/>00407 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__x_e_s_p32_file_8cpp_source_1l00408"/>00408 
</programlisting></section>
