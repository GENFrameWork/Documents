<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__hash_c_o_m_p128v1_8h_source" xml:lang="en-US">
<title>HashCOMP128v1.h</title>
<indexterm><primary>D:/Projects/GENFrameWork/GEN/Cipher/HashCOMP128v1.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00001"/>00001 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00029"/>00029 <emphasis role="preprocessor">#ifndef&#32;_HASHCOMP128V1_H_</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00030"/>00030 <emphasis role="preprocessor">#define&#32;_HASHCOMP128V1_H_</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00031"/>00031 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00032"/>00032 <emphasis role="comment">/*----&#32;INCLUDES&#32;------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00033"/>00033 <emphasis role="preprocessor">#pragma&#32;region&#32;INCLUDES</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00034"/>00034 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00035"/>00035 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__hash_8h">Hash.h</link>&quot;</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00036"/>00036 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00037"/>00037 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00038"/>00038 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00039"/>00039 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00040"/>00040 <emphasis role="comment">/*----&#32;DEFINES&#32;&amp;&#32;ENUMS&#32;&#32;----------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00041"/>00041 <emphasis role="preprocessor">#pragma&#32;region&#32;DEFINES_ENUMS</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00042"/>00042 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00043"/><link linkend="__hash_c_o_m_p128v1_8h_1ad85c10479a056838f8dda446ae552038">00043</link> <emphasis role="preprocessor">#define&#32;HASHCOMP128V1_RAND_SIZE&#32;&#32;&#32;&#32;&#32;16</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00044"/><link linkend="__hash_c_o_m_p128v1_8h_1a0a16213316efef931b754d3a92cc2135">00044</link> <emphasis role="preprocessor">#define&#32;HASHCOMP128V1_KI_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;16</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00045"/>00045 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00046"/><link linkend="__hash_c_o_m_p128v1_8h_1aaa6e083ad87b7e4ee2467df90e345562">00046</link> <emphasis role="preprocessor">#define&#32;HASHCOMP128V1_SRES_SIZE&#32;&#32;&#32;&#32;&#32;4</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00047"/><link linkend="__hash_c_o_m_p128v1_8h_1ae68bc5df0d91596a375523fb889e321d">00047</link> <emphasis role="preprocessor">#define&#32;HASHCOMP128V1_KC_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;8</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00048"/><link linkend="__hash_c_o_m_p128v1_8h_1acadaeef87521bb81f8ae591f8e6b6740">00048</link> <emphasis role="preprocessor">#define&#32;HASHCOMP128V1_RESULT_SIZE&#32;&#32;&#32;(HASHCOMP128V1_SRES_SIZE&#32;+&#32;HASHCOMP128V1_KC_SIZE)</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00049"/>00049 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00050"/>00050 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00051"/>00051 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00052"/>00052 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00053"/>00053 <emphasis role="comment">/*----&#32;CLASS&#32;---------------------------------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00054"/>00054 <emphasis role="preprocessor">#pragma&#32;region&#32;CLASS</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00055"/>00055 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00056"/><link linkend="_class_h_a_s_h_c_o_m_p128_v1">00056</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_h_a_s_h_c_o_m_p128_v1">HASHCOMP128V1</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_h_a_s_h">HASH</link>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00057"/>00057 {
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00058"/>00058 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_h_a_s_h_c_o_m_p128_v1_1add7b39763f9d5e6a6b2aa5a7b8513f25">HASHCOMP128V1</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_h_a_s_h_c_o_m_p128_v1_1a9873e920835bc0fd53a787b0327f8bf4">~HASHCOMP128V1</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00061"/>00061 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_h_a_s_h_c_o_m_p128_v1_1ac3f70bbc1544c85b77ac5761319b5578">SetInput</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;rand,&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;ki,&#32;<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;xbuffer);
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00063"/>00063 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_class_h_a_s_h_1a0b3c86622d87071fed01cfd73533315c">HASH::Do</link>;
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_h_a_s_h_c_o_m_p128_v1_1ad5e64b9ce0b06a0fc05cfbf4bcde7669">Do</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input,&#32;<link linkend="__x_base_8h_1a86128ef639d896f7b12288868ddb7ad5">XQWORD</link>&#32;size);
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00066"/>00066 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_h_a_s_h_c_o_m_p128_v1_1a6e2a1d70cdd3f5b0f27270302af5abfe">GetDefaultSize</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00068"/>00068 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_h_a_s_h_c_o_m_p128_v1_1a0010b3486ba56ddfd525f8bdd7eaa9c4">GetSRES</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;SRES);
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_h_a_s_h_c_o_m_p128_v1_1a21d55798e91021d1a36cfeec554b09a3">GetKc</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_class_x_b_u_f_f_e_r">XBUFFER</link>&amp;&#32;Kc);
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00071"/>00071 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00072"/>00072 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00073"/>00073 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00074"/>00074 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Clean&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;();
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00076"/>00076 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Make&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;input);
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00078"/>00078 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;table0[512];
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;table1[256];
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;table2[128];
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;table3[64];
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;table4[32];
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>*&#32;&#32;&#32;table[5];
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00085"/>00085 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<link linkend="__x_base_8h_1a7ba3d378cab4450418bec78e604d47da">XBYTE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digest[<link linkend="__hash_c_o_m_p128v1_8h_1acadaeef87521bb81f8ae591f8e6b6740">HASHCOMP128V1_RESULT_SIZE</link>];
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00087"/>00087 };
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00088"/>00088 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00089"/>00089 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00090"/>00090 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00091"/>00091 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00092"/>00092 <emphasis role="comment">/*----&#32;INLINE&#32;FUNCTIONS&#32;+&#32;PROTOTYPES&#32;---------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00093"/>00093 <emphasis role="preprocessor">#pragma&#32;region&#32;FUNCTIONS_PROTOTYPES</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00094"/>00094 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00095"/>00095 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00096"/>00096 <emphasis role="preprocessor">#pragma&#32;endregion</emphasis>
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00097"/>00097 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00098"/>00098 
<anchor xml:id="__hash_c_o_m_p128v1_8h_source_1l00099"/>00099 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
